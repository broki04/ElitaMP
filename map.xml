<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///C|/Users/mateu/Desktop/Elita-MP/ElitaMP/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="map.lib">
	<assembly>
		<name>map.lib</name>
	</assembly>

	<!-- general -->
	<general>
		<library name="a_samp" summary="SA-MP Functions.">  <license>  (c) Copyright 2005-2017, SA-MP Team  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="a_vehicles" summary="SA-MP Vehicle Functions.">  <license>  (c) Copyright 2005-2012, SA-MP Team  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/> <p/> <p/> <library name="a_players" summary="SA-MP Player Functions.">  <license>  (c) Copyright 2005-2017, SA-MP Team  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="a_objects" summary="SA-MP Object Functions.">  <license>  (c) Copyright 2005-2015, SA-MP Team  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="a_actor" summary="SA-MP Actor Functions.">  <license>  (c) Copyright 2015, SA-MP Team  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="a_sampdb" summary="SA-MP Native SQLite Database Functions.">  <license>  (c) Copyright 2015, SA-MP Team  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="a_http" summary="SA-MP threaded HTTP/1.0 client for pawn.">  <license>  (c) Copyright 2010, SA-MP Team  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p /><p/> <p/> <p/> MySQL plugin R41-4 <p/> <library  name="y_utils"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="Unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="RawMemCpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="MemSet">Set all of an array to a value.</symbol>  <symbol name="RawMemSet">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="IsNull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="IsOdd">Checks if a number is odd.</symbol>  <symbol name="IsEven">Checks if a number is even.</symbol>  <symbol name="StrCpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/> <p/> <library  name="y_version"  version="0.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Checks online to see if there is a newer version of YSI available."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Hooks  </section><ul>  <symbol name="OnGameModeInit">Initialises things.</symbol>  </ul>  </library> <p/> <param name="expr"><code>var : Iterator</code></param>  <remarks>  </remarks> <p/> <remarks>  An iterator with an associated array of information.  </remarks> <p/> <library  name="y_iterate"  version="0.4"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  <p>  Provides efficient looping through sparse data sets, such as connected  players.  Significantly improved from the original version to be a generic  loop system, rather then purely a player loop system.  When used for  players this has constant time O(n) for number of connected players (n),  unlike standard player loops which are O(MAX_PLAYERS), regardless of the  actual number of connected players.  Even when n is MAX_PLAYERS this is  still faster.  </p>  <p>  For extensive documentation on writing and using iterators, see  <a href="http://forum.sa-mp.com/showthread.php?t=481877">this topic</a>  </p>  </remarks>  <section>  Functions  </section>  <subsection>  Public  </subsection><ul>  <symbol name="OnPlayerDisconnect">Called when a player leaves to remove them.</symbol>  <symbol name="OnPlayerConnect">Called when a player connects to add them.</symbol>  </ul><subsection>  Stock  </subsection><ul>  <symbol name="Iter_ShowArray">Displays the contents of the array.</symbol>  <symbol name="Iter_AddInternal">Add a value to an iterator.</symbol>  <symbol name="Iter_RemoveInternal">Remove a value from an iterator.</symbol>  <symbol name="Iter_RandomInternal">Get a random item from an iterator.</symbol>  <symbol name="Iter_FreeInternal">Gets the first free slot in the iterator.</symbol>  <symbol name="Iter_InitInternal">Initialises a multi-dimensional iterator.</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="Iter_Create">Create a new iterator value set.</symbol>  <symbol name="Iter_Add">Wraps Iter_AddInternal.</symbol>  <symbol name="Iter_Remove">Wraps Iter_RemoveInternal.</symbol>  <symbol name="Iter_Random">Wraps Iter_RandomInternal.</symbol>  <symbol name="Iter_Count">Gets the number of items in an iterator.</symbol>  <symbol name="Iter_Debug">Wraps around Iter_ShowArray.</symbol>  <symbol name="Iter_Free">Wraps around Iter_FreeInternal.</symbol>  <symbol name="Iter_Create2">Create a new iterator array value set.</symbol>  <symbol name="Iter_Add2">Wraps Iter_AddInternal for arrays.</symbol>  <symbol name="Iter_Remove2">Wraps Iter_RemoveInternal for arrays.</symbol>  <symbol name="Iter_Random2">Wraps Iter_RandomInternal for arrays.</symbol>  <symbol name="Iter_Count2">Gets the number of items in an iterator array.</symbol>  <symbol name="Iter_Debug2">Wraps around Iter_ShowArray for arrays.</symbol>  <symbol name="Iter_Free2">Wraps around Iter_FreeInternal for arrays.</symbol>  </ul><section>  Hooks  </section><ul>  <symbol name="Iter_OnPlayerConnect">Hook for the OnPlayerConnect callback.</symbol>  <symbol name="Iter_OnPlayerDisconnect">Hook for the OnPlayerDisconnect callback.</symbol>  <symbol name="Iter_OnGameModeInit">Only exists to make the code compile correctly...</symbol>  </ul><section>  Keywords  </section><ul>  <symbol name="foreach">Command to loop an iterator.</symbol>  <symbol name="foreachex">Like foreach but without a new variable.</symbol>  <symbol name="foreach2">Command to loop through an iterator array.</symbol>  <symbol name="foreachex">Like foreach2 but without a new variable.</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Iterator">Declare an iterator.</symbol>  </ul><section>  Variables  </section>  <subsection>  Static  </subsection><ul>  <symbol name="YSI_g_OPC">Records wether Iter_OnPlayerConnect exists for speed.</symbol>  <symbol name="YSI_g_OPDC">Records wether Iter_OnPlayerDisconnect exists for speed.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="YSI_ITTER_NO_SORT">Removed.</symbol>  <symbol name="FOREACH_NO_BOTS">Remove the bot iterators for smaller code.</symbol>  <symbol name="FOREACH_NO_PLAYERS">Remove all default code for player itteration.</symbol>  </ul><section>  Iterators  </section><ul>  <symbol name="Player">List of all players connected.</symbol>  <symbol name="Bot">List of all bots (npcs) connected.</symbol>  <symbol name="NPC">Alias of Bot.</symbol>  <symbol name="Character">All players and bots.</symbol>  </ul><section>  Examples  </section>  <subsection>Basic Iterators</subsection>  <p>  Basic iterators are simply collections of numbers - little more than an array.  A number is either in the array, or not in the array, <em>y_iterate</em> loops  through only the <em>in</em> numbers.</p>  <p><em>Players</em><br /><br />  This code will loop through every player connected to the server.  <code>  foreach (new i : Player)																				<br />  {																				<br /><indent />  printf("player %d is connected", i);																				<br />  }  </code>  </p>  <p><em>Vehicles</em><br /><br />  This code will loop through all the created vehicles on the server (including  those made in other running scripts).  <code>  foreach (new vid : Vehicle)																				<br />  {																				<br /><indent />  printf("vehicleid %d has been created", vid);																				<br />  }  </code>  </p>  <p><em>Create An Iterator</em><br /><br />  To create your own iterator, first declare it, then add things to it, then loop  over it:  <code>  new																				<br /><indent />  Iterator:MyIter&lt;100&gt;; // First declare it (this has room for 100 items numbered 0-99).									 											<br />  // Then add things to it.																				<br />  Iter_Add(MyIter, 0);  // Fine.																				<br />  Iter_Add(MyIter, 55); // Fine.																				<br />  Iter_Add(MyIter, 100); // Will fail.																				<br />  // Then loop over it.																				<br />  foreach (new i : MyIter)																				<br />  {																				<br /><indent />  printf("%d", i); // Will print "0" then "55".																				<br />  }  </code>  </p>  <subsection>Special Iterators</subsection>  </library> <p/> <library  name="y_iterate"  version="0.4"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  <p>  Provides efficient looping through sparse data sets, such as connected  players.  Significantly improved from the original version to be a generic  loop system, rather then purely a player loop system.  When used for  players this has constant time O(n) for number of connected players (n),  unlike standard player loops which are O(MAX_PLAYERS), regardless of the  actual number of connected players.  Even when n is MAX_PLAYERS this is  still faster.  </p>  <p>  For extensive documentation on writing and using iterators, see  <a href="http://forum.sa-mp.com/showthread.php?t=481877">this topic</a>  </p>  </remarks>  <section>  Functions  </section>  <subsection>  Public  </subsection><ul>  <symbol name="OnPlayerDisconnect">Called when a player leaves to remove them.</symbol>  <symbol name="OnPlayerConnect">Called when a player connects to add them.</symbol>  </ul><subsection>  Stock  </subsection><ul>  <symbol name="Iter_ShowArray">Displays the contents of the array.</symbol>  <symbol name="Iter_AddInternal">Add a value to an iterator.</symbol>  <symbol name="Iter_RemoveInternal">Remove a value from an iterator.</symbol>  <symbol name="Iter_RandomInternal">Get a random item from an iterator.</symbol>  <symbol name="Iter_FreeInternal">Gets the first free slot in the iterator.</symbol>  <symbol name="Iter_InitInternal">Initialises a multi-dimensional iterator.</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="Iter_Create">Create a new iterator value set.</symbol>  <symbol name="Iter_Add">Wraps Iter_AddInternal.</symbol>  <symbol name="Iter_Remove">Wraps Iter_RemoveInternal.</symbol>  <symbol name="Iter_Random">Wraps Iter_RandomInternal.</symbol>  <symbol name="Iter_Count">Gets the number of items in an iterator.</symbol>  <symbol name="Iter_Debug">Wraps around Iter_ShowArray.</symbol>  <symbol name="Iter_Free">Wraps around Iter_FreeInternal.</symbol>  <symbol name="Iter_Create2">Create a new iterator array value set.</symbol>  <symbol name="Iter_Add2">Wraps Iter_AddInternal for arrays.</symbol>  <symbol name="Iter_Remove2">Wraps Iter_RemoveInternal for arrays.</symbol>  <symbol name="Iter_Random2">Wraps Iter_RandomInternal for arrays.</symbol>  <symbol name="Iter_Count2">Gets the number of items in an iterator array.</symbol>  <symbol name="Iter_Debug2">Wraps around Iter_ShowArray for arrays.</symbol>  <symbol name="Iter_Free2">Wraps around Iter_FreeInternal for arrays.</symbol>  </ul><section>  Hooks  </section><ul>  <symbol name="Iter_OnPlayerConnect">Hook for the OnPlayerConnect callback.</symbol>  <symbol name="Iter_OnPlayerDisconnect">Hook for the OnPlayerDisconnect callback.</symbol>  <symbol name="Iter_OnGameModeInit">Only exists to make the code compile correctly...</symbol>  </ul><section>  Keywords  </section><ul>  <symbol name="foreach">Command to loop an iterator.</symbol>  <symbol name="foreachex">Like foreach but without a new variable.</symbol>  <symbol name="foreach2">Command to loop through an iterator array.</symbol>  <symbol name="foreachex">Like foreach2 but without a new variable.</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Iterator">Declare an iterator.</symbol>  </ul><section>  Variables  </section>  <subsection>  Static  </subsection><ul>  <symbol name="YSI_g_OPC">Records wether Iter_OnPlayerConnect exists for speed.</symbol>  <symbol name="YSI_g_OPDC">Records wether Iter_OnPlayerDisconnect exists for speed.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="YSI_ITTER_NO_SORT">Removed.</symbol>  <symbol name="FOREACH_NO_BOTS">Remove the bot iterators for smaller code.</symbol>  <symbol name="FOREACH_NO_PLAYERS">Remove all default code for player itteration.</symbol>  </ul><section>  Iterators  </section><ul>  <symbol name="Player">List of all players connected.</symbol>  <symbol name="Bot">List of all bots (npcs) connected.</symbol>  <symbol name="NPC">Alias of Bot.</symbol>  <symbol name="Character">All players and bots.</symbol>  </ul><section>  Examples  </section>  <subsection>Basic Iterators</subsection>  <p>  Basic iterators are simply collections of numbers - little more than an array.  A number is either in the array, or not in the array, <em>y_iterate</em> loops  through only the <em>in</em> numbers.</p>  <p><em>Players</em><br /><br />  This code will loop through every player connected to the server.  <code>  foreach (new i : Player)																				<br />  {																				<br /><indent />  printf("player %d is connected", i);																				<br />  }  </code>  </p>  <p><em>Vehicles</em><br /><br />  This code will loop through all the created vehicles on the server (including  those made in other running scripts).  <code>  foreach (new vid : Vehicle)																				<br />  {																				<br /><indent />  printf("vehicleid %d has been created", vid);																				<br />  }  </code>  </p>  <p><em>Create An Iterator</em><br /><br />  To create your own iterator, first declare it, then add things to it, then loop  over it:  <code>  new																				<br /><indent />  Iterator:MyIter&lt;100&gt;; // First declare it (this has room for 100 items numbered 0-99).									 											<br />  // Then add things to it.																				<br />  Iter_Add(MyIter, 0);  // Fine.																				<br />  Iter_Add(MyIter, 55); // Fine.																				<br />  Iter_Add(MyIter, 100); // Will fail.																				<br />  // Then loop over it.																				<br />  foreach (new i : MyIter)																				<br />  {																				<br /><indent />  printf("%d", i); // Will print "0" then "55".																				<br />  }  </code>  </p>  <subsection>Special Iterators</subsection>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_unique"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Defines a symbol differently every time it is included."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_utils"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="Unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="RawMemCpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="MemSet">Set all of an array to a value.</symbol>  <symbol name="RawMemSet">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="IsNull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="IsOdd">Checks if a number is odd.</symbol>  <symbol name="IsEven">Checks if a number is even.</symbol>  <symbol name="StrCpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <library name="amx_assembly addressof" summary="AMX Assembly Library: `addressof` function address lookup.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly frame_info" summary="AMX Assembly; Function call frame information.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly amx_header" summary="AMX Assembly Library: AMX file header access.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly amx_memory" summary="AMX Assembly Library: AMX data segment manipulation.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library>amx_assembly amx_header</library><p/> <p/><p/> <library>amx_assembly amx_header</library><p/> <library name="amx_assembly amx_base" summary="AMX Assembly Library: Script load address determination.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly opcode" summary="AMX Assembly Library: Information on all PAWN opcodes.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library>amx_assembly opcode</library> <remarks> Separate the macro opcodes for `-O2`. </remarks><p/> <library name="amx_assembly disasm" summary="AMX Assembly Library: Disassemble compiled code.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library>amx_assembly disasm</library><p/> <p/><p/> <library>amx_assembly disasm</library><p/> <library name="amx_assembly addressof_jit" summary="AMX Assembly Library: `addressof` JIT code.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  ///   <remarks>  ///     <c>addressof</c> works by reading data directly out of the stack to get  ///     a return address, then reading information from that location in memory  ///     to get the next <c>CALL</c> OpCode.  This fails with the JIT because the  ///     return address is in the JITed code, not in the original p-code.  ///     Instead, when the JIT is in use, use <em>codescan</em> to convert  ///     runtime <c>addressof</c> calls to startup-time resolutions.  Actually,  ///     there's no reason why this should be restricted to JIT only.  ///   </remarks>  </library> <p/> <p/><p/> <library name="amx_assembly codescan" summary="AMX Assembly Library: Compiled code scanning and pattern  matching.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly asm" summary="AMX Assembly Library: Assembly code generation.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly asm_macros" summary="AMX Assembly Library: `@emit` macros.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly dynamic_call" summary="AMX Assembly; Call arbitrary functions by name.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly amx_jit" summary="AMX Assembly Library: JIT plugin address relocations.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <library>amx_assembly codescan</library> <summary> All the information for scanning through an AMX and extracting lots of nice information about it. </summary><p/> <p/><p/> <library>amx_assembly codescan</library><p/> <library name="amx_assembly amx" summary="AMX Assembly Library: `AMX*` struct pointer determination.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly phys_memory" summary="AMX Assembly Library: Read and write real server addresses.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly shellcode" summary="AMX Assembly Library: Execute arbitrary x86 assembly.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly heap_alloc" summary="AMX Assembly Library: Allocate space in the heap.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="code-parse"  summary="Compile-time code analysis and generation"  license="Copyright (c) 2022 Alex &quot;Y_Less&quot; Cole.  Licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This include provides a handy set of macros for advanced compile-time  code analysis and generation.  With this, one can do things like analyse  the parameter types for a function, auto-generate call specifiers, and  otherwise create code-dependent macros.  </remarks>  </library> <p/> <library  name="indirection"  summary="Function pointers and code redirection."  license="Copyright (c) 2022 Alex &quot;Y_Less&quot; Cole.  Licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  Indirection is a system for calling function pointers in a generic and  type-safe way.  Instead of <c>CallLocalFunction</c>, <c>Call</c>,  <c>defer</c>, <c>Callback_Call</c>, or any other method, this gives one  common interface which can be extended by library authors; utilising tags  for compile-time parameters.  </remarks>  </library> <p/> <library  name="y_va"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This library currently provides two functions - va_printf and va_format  which perform printf and format using variable arguments passed to another  function.  This is bsed on the variable parameter passing method based on code by Zeex.  See page 15 of the code optimisations topic.  </remarks>  </library> <p/> <library  name="y_utils"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="Unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="RawMemCpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="MemSet">Set all of an array to a value.</symbol>  <symbol name="RawMemSet">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="IsNull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="IsOdd">Checks if a number is odd.</symbol>  <symbol name="IsEven">Checks if a number is even.</symbol>  <symbol name="StrCpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <library  name="y_dialog"  version="0.1"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Provides functions for dealing with dialogs, without needing to worry about IDs or huge <c>OnDialogResponse</c>  callbacks."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_utils"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="Unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="RawMemCpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="MemSet">Set all of an array to a value.</symbol>  <symbol name="RawMemSet">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="IsNull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="IsOdd">Checks if a number is odd.</symbol>  <symbol name="IsEven">Checks if a number is even.</symbol>  <symbol name="StrCpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <library  name="y_bit"  version="0.2"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  <p>  Provides functions for bit manipulation and bit arrays greater than 32bits.  The arrays are usually bigger than required due to cell boundaries but this  shouldn't cause a major problem (bit tests on the 101st bit of a 100 bit  array won't return 0 for out of bounds, but the 129th will).  </p>  <p>  Note that y_commands has a few optimisations which bypass the code in here  so any modifications to bit array layouts will need to be reflected there.  </p>  </remarks>  <section>  Functions  </section>  <subsection>  Stock  </subsection><ul>  <symbol name="Bit_Set">Sets a slot to the given value.</symbol>  <symbol name="Bit_Get">Gets a slot state.</symbol>  <symbol name="Bit_SetAll">Sets all the slots in an array to the same thing.</symbol>  <symbol name="Bit_GetCount">Gets the number of 1s in a bit array.</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="Bit_Bits">Gets the number of cells required for a bit array.</symbol>  <symbol name="Bit_Let">Sets a slot to 1.</symbol>  <symbol name="Bit_Vet">Sets a slot to 0.</symbol>  <symbol name="Bit_GetBits">Gets the bit at a slot unsafely.</symbol>  </ul><section>  Definitions  </section><ul>  <symbol name="CELLSHIFT">Number of bits that can hold "cellbits"</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Bit">Bit array type.</symbol>  </ul>  </library> <p/> <library  name="y_utils"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="Unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="RawMemCpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="MemSet">Set all of an array to a value.</symbol>  <symbol name="RawMemSet">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="IsNull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="IsOdd">Checks if a number is odd.</symbol>  <symbol name="IsEven">Checks if a number is even.</symbol>  <symbol name="StrCpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <library  name="y_remote"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Wrapper for `__CallRemoteFunction`.  Enforces some features like no returns and arrays being  followed by their length."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Macros  </section><ul>  <symbol name="remotefunc">Define a function to be called remotely (use like "stock").</symbol>  <symbol name="broadcastfunc">Call the function, but in all scripts.</symbol>  <symbol name="localfunc">Call the function by name, not address, in the current script.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="YSI_NO_MASTER">Disable all knowledge of other scripts.</symbol>  </ul>  </library> <p/> <library  name="y_utils"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="Unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="RawMemCpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="MemSet">Set all of an array to a value.</symbol>  <symbol name="RawMemSet">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="IsNull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="IsOdd">Checks if a number is odd.</symbol>  <symbol name="IsEven">Checks if a number is even.</symbol>  <symbol name="StrCpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <library  name="y_inline"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This library allows a user to write inline functions in their script.  It  first detects all inline functions and generates data on them, such as  parameter counts and addresses.  When an inline function is passed in  code its current context data is stored.  Finally, when an inline  function is found to be called at some point its current local stack is  stored in global memory.  When the function actually is called, the stack  is restored, and additional parameters which are the inline function  parameters, are passed.  </remarks>  </library> <p/> <library  name="y_va"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This library currently provides two functions - va_printf and va_format  which perform printf and format using variable arguments passed to another  function.  This is bsed on the variable parameter passing method based on code by Zeex.  See page 15 of the code optimisations topic.  </remarks>  </library> <p/> <library  name="y_malloc"  version="0.1"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Functions for using malloc/calloc/free type functions in PAWN."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>  Stock  </subsection><ul>  <symbol name="malloc">Allocate a block of memory (may be inline).</symbol>  <symbol name="calloc">Allocate a block of memory and blank.</symbol>  <symbol name="free">Free an allocated block of memory (may be inline).</symbol>  <symbol name="Malloc_Set">Set a value in an allocated array (may be inline).</symbol>  <symbol name="Malloc_Get">Get a value in an allocated array (may be inline).</symbol>  <symbol name="Malloc_SetS">Set a string in an allocated array.</symbol>  <symbol name="Malloc_GetS">Get a string in an allocated array.</symbol>  <symbol name="Malloc_Allocate">Do the memory allocation (may be static).</symbol>  <symbol name="Malloc_Free">Do the memory freeing (may be static).</symbol>  <symbol name="Malloc_SlotSize">Get the size of an allocated block (may be inline).</symbol>  <symbol name="Malloc_NewS">Allocate for and store a given string.</symbol>  </ul><subsection>  Static  </subsection><ul>  <symbol name="Malloc_Allocate">Do the memory allocation (may be stock).</symbol>  <symbol name="Malloc_Free">Do the memory freeing (may be stock).</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="mget">Get data from an allocation unit.</symbol>  <symbol name="mset">Set data in an allocation unit.</symbol>  <symbol name="mgets">Get a string from an allocation unit.</symbol>  <symbol name="msets">Set a string in an allocation unit.</symbol>  <symbol name="malloc">Allocate a block of memory (may be stock).</symbol>  <symbol name="free">Free an allocated block of memory (may be stock).</symbol>  <symbol name="Malloc_Set">Set a value in an allocated array (may be stock).</symbol>  <symbol name="Malloc_Get">Get a value in an allocated array (may be stock).</symbol>  <symbol name="Malloc_NextSlot">Get the next free data block.</symbol>  <symbol name="Malloc_GetSlotSize">Get the size of a slot.</symbol>  <symbol name="Malloc_SetSlotSize">Set the size of a block.</symbol>  <symbol name="Malloc_GetData">Direct data access getter.</symbol>  <symbol name="Malloc_SetData">Direct data access setter.</symbol>  <symbol name="Malloc_SlotSize">Get the size of an allocated block (may be stock).</symbol>  </ul><section>  Definitions  </section><ul>  <symbol name="MALLOC_KB_TO_CELL">Multiplication value to convert kb to cells.</symbol>  <symbol name="NO_ALLOC">A failed allocation (NULL, but YSI already has NULL).</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Alloc">An allocated block handle variable.</symbol>  </ul><section>  Variables  </section>  <subsection>  Global  </subsection><ul>  <symbol name="YSI_gMallocMemory">Stores the data (may be static).</symbol>  </ul><subsection>  Static  </subsection><ul>  <symbol name="YSI_gMallocMemory">Stores the data (may be global).</symbol>  <symbol name="_YSI_g_sUnusedStart">Start of free memory.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="MALLOC_MEMORY">Number of cells to reserve.</symbol>  <symbol name="MALLOC_MEMORY_KB">Number of killobytes to reserve.</symbol>  <symbol name="MALLOC_MEMORY_B">Number of bytes to reserve.</symbol>  <symbol name="MALLOC_MEMORY_MB">Number of megabytes to reserve.</symbol>  <symbol name="YSI_MALLOC_SECURE">Use enhanced bounds checking.</symbol>  <symbol name="YSI_MALLOC_NO_SHORT">Avoid conflicts with mget/mset.</symbol>  </ul>  </library> <p/> <library  name="y_utils"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="Unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="RawMemCpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="MemSet">Set all of an array to a value.</symbol>  <symbol name="RawMemSet">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="IsNull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="IsOdd">Checks if a number is odd.</symbol>  <symbol name="IsEven">Checks if a number is even.</symbol>  <symbol name="StrCpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_timers"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  Sets up repeating timers without requiring any SetTimers and arranges them  so that they will be very unlikely to meet (at least for a long time) using  scheduling algorithms to get timers with the same period to be offset.  Also  fixes arrays and strings in timers so they can be passed properly.  </remarks>  </library> <p/> <library  name="y_utils"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="Unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="RawMemCpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="MemSet">Set all of an array to a value.</symbol>  <symbol name="RawMemSet">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="IsNull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="IsOdd">Checks if a number is odd.</symbol>  <symbol name="IsEven">Checks if a number is even.</symbol>  <symbol name="StrCpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <library  name="y_malloc"  version="0.1"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Functions for using malloc/calloc/free type functions in PAWN."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <section>  Functions  </section>  <subsection>  Stock  </subsection><ul>  <symbol name="malloc">Allocate a block of memory (may be inline).</symbol>  <symbol name="calloc">Allocate a block of memory and blank.</symbol>  <symbol name="free">Free an allocated block of memory (may be inline).</symbol>  <symbol name="Malloc_Set">Set a value in an allocated array (may be inline).</symbol>  <symbol name="Malloc_Get">Get a value in an allocated array (may be inline).</symbol>  <symbol name="Malloc_SetS">Set a string in an allocated array.</symbol>  <symbol name="Malloc_GetS">Get a string in an allocated array.</symbol>  <symbol name="Malloc_Allocate">Do the memory allocation (may be static).</symbol>  <symbol name="Malloc_Free">Do the memory freeing (may be static).</symbol>  <symbol name="Malloc_SlotSize">Get the size of an allocated block (may be inline).</symbol>  <symbol name="Malloc_NewS">Allocate for and store a given string.</symbol>  </ul><subsection>  Static  </subsection><ul>  <symbol name="Malloc_Allocate">Do the memory allocation (may be stock).</symbol>  <symbol name="Malloc_Free">Do the memory freeing (may be stock).</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="mget">Get data from an allocation unit.</symbol>  <symbol name="mset">Set data in an allocation unit.</symbol>  <symbol name="mgets">Get a string from an allocation unit.</symbol>  <symbol name="msets">Set a string in an allocation unit.</symbol>  <symbol name="malloc">Allocate a block of memory (may be stock).</symbol>  <symbol name="free">Free an allocated block of memory (may be stock).</symbol>  <symbol name="Malloc_Set">Set a value in an allocated array (may be stock).</symbol>  <symbol name="Malloc_Get">Get a value in an allocated array (may be stock).</symbol>  <symbol name="Malloc_NextSlot">Get the next free data block.</symbol>  <symbol name="Malloc_GetSlotSize">Get the size of a slot.</symbol>  <symbol name="Malloc_SetSlotSize">Set the size of a block.</symbol>  <symbol name="Malloc_GetData">Direct data access getter.</symbol>  <symbol name="Malloc_SetData">Direct data access setter.</symbol>  <symbol name="Malloc_SlotSize">Get the size of an allocated block (may be stock).</symbol>  </ul><section>  Definitions  </section><ul>  <symbol name="MALLOC_KB_TO_CELL">Multiplication value to convert kb to cells.</symbol>  <symbol name="NO_ALLOC">A failed allocation (NULL, but YSI already has NULL).</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Alloc">An allocated block handle variable.</symbol>  </ul><section>  Variables  </section>  <subsection>  Global  </subsection><ul>  <symbol name="YSI_gMallocMemory">Stores the data (may be static).</symbol>  </ul><subsection>  Static  </subsection><ul>  <symbol name="YSI_gMallocMemory">Stores the data (may be global).</symbol>  <symbol name="_YSI_g_sUnusedStart">Start of free memory.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="MALLOC_MEMORY">Number of cells to reserve.</symbol>  <symbol name="MALLOC_MEMORY_KB">Number of killobytes to reserve.</symbol>  <symbol name="MALLOC_MEMORY_B">Number of bytes to reserve.</symbol>  <symbol name="MALLOC_MEMORY_MB">Number of megabytes to reserve.</symbol>  <symbol name="YSI_MALLOC_SECURE">Use enhanced bounds checking.</symbol>  <symbol name="YSI_MALLOC_NO_SHORT">Avoid conflicts with mget/mset.</symbol>  </ul>  </library> <p/> <library  name="y_iterate"  version="0.4"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  <p>  Provides efficient looping through sparse data sets, such as connected  players.  Significantly improved from the original version to be a generic  loop system, rather then purely a player loop system.  When used for  players this has constant time O(n) for number of connected players (n),  unlike standard player loops which are O(MAX_PLAYERS), regardless of the  actual number of connected players.  Even when n is MAX_PLAYERS this is  still faster.  </p>  <p>  For extensive documentation on writing and using iterators, see  <a href="http://forum.sa-mp.com/showthread.php?t=481877">this topic</a>  </p>  </remarks>  <section>  Functions  </section>  <subsection>  Public  </subsection><ul>  <symbol name="OnPlayerDisconnect">Called when a player leaves to remove them.</symbol>  <symbol name="OnPlayerConnect">Called when a player connects to add them.</symbol>  </ul><subsection>  Stock  </subsection><ul>  <symbol name="Iter_ShowArray">Displays the contents of the array.</symbol>  <symbol name="Iter_AddInternal">Add a value to an iterator.</symbol>  <symbol name="Iter_RemoveInternal">Remove a value from an iterator.</symbol>  <symbol name="Iter_RandomInternal">Get a random item from an iterator.</symbol>  <symbol name="Iter_FreeInternal">Gets the first free slot in the iterator.</symbol>  <symbol name="Iter_InitInternal">Initialises a multi-dimensional iterator.</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="Iter_Create">Create a new iterator value set.</symbol>  <symbol name="Iter_Add">Wraps Iter_AddInternal.</symbol>  <symbol name="Iter_Remove">Wraps Iter_RemoveInternal.</symbol>  <symbol name="Iter_Random">Wraps Iter_RandomInternal.</symbol>  <symbol name="Iter_Count">Gets the number of items in an iterator.</symbol>  <symbol name="Iter_Debug">Wraps around Iter_ShowArray.</symbol>  <symbol name="Iter_Free">Wraps around Iter_FreeInternal.</symbol>  <symbol name="Iter_Create2">Create a new iterator array value set.</symbol>  <symbol name="Iter_Add2">Wraps Iter_AddInternal for arrays.</symbol>  <symbol name="Iter_Remove2">Wraps Iter_RemoveInternal for arrays.</symbol>  <symbol name="Iter_Random2">Wraps Iter_RandomInternal for arrays.</symbol>  <symbol name="Iter_Count2">Gets the number of items in an iterator array.</symbol>  <symbol name="Iter_Debug2">Wraps around Iter_ShowArray for arrays.</symbol>  <symbol name="Iter_Free2">Wraps around Iter_FreeInternal for arrays.</symbol>  </ul><section>  Hooks  </section><ul>  <symbol name="Iter_OnPlayerConnect">Hook for the OnPlayerConnect callback.</symbol>  <symbol name="Iter_OnPlayerDisconnect">Hook for the OnPlayerDisconnect callback.</symbol>  <symbol name="Iter_OnGameModeInit">Only exists to make the code compile correctly...</symbol>  </ul><section>  Keywords  </section><ul>  <symbol name="foreach">Command to loop an iterator.</symbol>  <symbol name="foreachex">Like foreach but without a new variable.</symbol>  <symbol name="foreach2">Command to loop through an iterator array.</symbol>  <symbol name="foreachex">Like foreach2 but without a new variable.</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Iterator">Declare an iterator.</symbol>  </ul><section>  Variables  </section>  <subsection>  Static  </subsection><ul>  <symbol name="YSI_g_OPC">Records wether Iter_OnPlayerConnect exists for speed.</symbol>  <symbol name="YSI_g_OPDC">Records wether Iter_OnPlayerDisconnect exists for speed.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="YSI_ITTER_NO_SORT">Removed.</symbol>  <symbol name="FOREACH_NO_BOTS">Remove the bot iterators for smaller code.</symbol>  <symbol name="FOREACH_NO_PLAYERS">Remove all default code for player itteration.</symbol>  </ul><section>  Iterators  </section><ul>  <symbol name="Player">List of all players connected.</symbol>  <symbol name="Bot">List of all bots (npcs) connected.</symbol>  <symbol name="NPC">Alias of Bot.</symbol>  <symbol name="Character">All players and bots.</symbol>  </ul><section>  Examples  </section>  <subsection>Basic Iterators</subsection>  <p>  Basic iterators are simply collections of numbers - little more than an array.  A number is either in the array, or not in the array, <em>y_iterate</em> loops  through only the <em>in</em> numbers.</p>  <p><em>Players</em><br /><br />  This code will loop through every player connected to the server.  <code>  foreach (new i : Player)																				<br />  {																				<br /><indent />  printf("player %d is connected", i);																				<br />  }  </code>  </p>  <p><em>Vehicles</em><br /><br />  This code will loop through all the created vehicles on the server (including  those made in other running scripts).  <code>  foreach (new vid : Vehicle)																				<br />  {																				<br /><indent />  printf("vehicleid %d has been created", vid);																				<br />  }  </code>  </p>  <p><em>Create An Iterator</em><br /><br />  To create your own iterator, first declare it, then add things to it, then loop  over it:  <code>  new																				<br /><indent />  Iterator:MyIter&lt;100&gt;; // First declare it (this has room for 100 items numbered 0-99).									 											<br />  // Then add things to it.																				<br />  Iter_Add(MyIter, 0);  // Fine.																				<br />  Iter_Add(MyIter, 55); // Fine.																				<br />  Iter_Add(MyIter, 100); // Will fail.																				<br />  // Then loop over it.																				<br />  foreach (new i : MyIter)																				<br />  {																				<br /><indent />  printf("%d", i); // Will print "0" then "55".																				<br />  }  </code>  </p>  <subsection>Special Iterators</subsection>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_va"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This library currently provides two functions - va_printf and va_format  which perform printf and format using variable arguments passed to another  function.  This is bsed on the variable parameter passing method based on code by Zeex.  See page 15 of the code optimisations topic.  </remarks>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_hooks"  version="2.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Automatically hooks any callbacks with a very simple syntax."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> 
	</general>

	<members>

		<!-- enumerations -->
		<member name="T:AMX_FUNCSTUBNT" value="2">
			<tagname value="AMX_FUNCSTUBNT"/>
			<member name="C:AMX_FUNCSTUBNT_ADDRESS" value="0">
			</member>
			<member name="C:AMX_FUNCSTUBNT_NAMEOFS" value="1">
			</member>
			<referrer name="PrintAmxNameTable"/>
			<referrer name="GetPublicAddressFromIndex"/>
			<referrer name="GetPublicNameFromIndex"/>
			<referrer name="GetNativeAddressFromIndex"/>
			<referrer name="GetNativeNameFromIndex"/>
			<referrer name="GetPubVarAddressFromIndex"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<referrer name="GetTagIDFromIndex"/>
			<referrer name="GetTagNameFromIndex"/>
			<referrer name="IsTagIndexStrong"/>
			<referrer name="IsTagIndexWeak"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="T:AMX_HDR" value="17">
			<tagname value="AMX_HDR"/>
			<member name="C:AMX_HDR_SIZE" value="0">
			</member>
			<member name="C:AMX_HDR_MAGIC" value="1">
			</member>
			<member name="C:AMX_HDR_FILE_VERSION" value="2">
			</member>
			<member name="C:AMX_HDR_AMX_VERSION" value="3">
			</member>
			<member name="C:AMX_HDR_FLAGS" value="4">
			</member>
			<member name="C:AMX_HDR_DEFSIZE" value="5">
			</member>
			<member name="C:AMX_HDR_COD" value="6">
			</member>
			<member name="C:AMX_HDR_DAT" value="7">
			</member>
			<member name="C:AMX_HDR_HEA" value="8">
			</member>
			<member name="C:AMX_HDR_STP" value="9">
			</member>
			<member name="C:AMX_HDR_CIP" value="10">
			</member>
			<member name="C:AMX_HDR_PUBLICS" value="11">
			</member>
			<member name="C:AMX_HDR_NATIVES" value="12">
			</member>
			<member name="C:AMX_HDR_LIBRARIES" value="13">
			</member>
			<member name="C:AMX_HDR_PUBVARS" value="14">
			</member>
			<member name="C:AMX_HDR_TAGS" value="15">
			</member>
			<member name="C:AMX_HDR_NAMETABLE" value="16">
			</member>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmInit"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteData"/>
			<referrer name="AsmGetJumpAddressFromOffset"/>
			<referrer name="AsmGetCode"/>
			<referrer name="AsmEmitCallAbs"/>
			<referrer name="AddressofResolveFoundStart"/>
			<referrer name="Indirect_Init"/>
			<referrer name="DumpAMX_WriteAMXData"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="DumpAMX_Write"/>
			<referrer name="CGen_OnCodeInit"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="T:AsmContext" value="21">
			<tagname value="AsmContext"/>
			<member name="C:AsmContext_buffer" value="0">
			</member>
			<member name="C:AsmContext_buffer_size" value="1">
			</member>
			<member name="C:AsmContext_buffer_offset" value="2">
			</member>
			<member name="C:AsmContext_error" value="3">
			</member>
			<member name="C:AsmContext_error_handler" value="4">
			</member>
			<member name="C:AsmContext_label_names" value="5">
				<size value="8"/>
			</member>
			<member name="C:AsmContext_labels" value="13">
				<size value="8"/>
			</member>
			<referrer name="AddressofResolveFoundStart"/>
			<referrer name="AddressofResolveFoundEnd"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Inline_FoundUsingInline"/>
			<referrer name="Inline_FoundDestructor"/>
			<referrer name="Inline_Found@return"/>
			<referrer name="Inline_DoCodeGen"/>
			<library>amx_assembly asm</library>
		</member>
		<member name="T:AsmError" value="6">
			<tagname value="AsmError"/>
			<member name="C:ASM_ERROR_NONE" value="0">
			</member>
			<member name="C:ASM_ERROR_OPCODE" value="1">
			</member>
			<member name="C:ASM_ERROR_OPERAND" value="2">
			</member>
			<member name="C:ASM_ERROR_SPACE" value="3">
			</member>
			<member name="C:ASM_ERROR_LABEL_OVERFLOW" value="4">
			</member>
			<member name="C:ASM_ERROR_LABEL_DUPLICATE" value="5">
			</member>
			<library>amx_assembly asm</library>
		</member>
		<member name="T:CAOBJECTINFO" value="3">
			<tagname value="CAOBJECTINFO"/>
			<member name="C:ColdAndreadsID" value="0">
			</member>
			<member name="C:ObjectID" value="1">
			</member>
			<member name="C:ObjectType" value="2">
			</member>
		</member>
		<member name="T:CodeScanMatcher" value="171">
			<tagname value="CodeScanMatcher"/>
			<member name="C:CodeScanMatcher_func" value="0">
			</member>
			<member name="C:CodeScanMatcher_user_data" value="1">
			</member>
			<member name="C:CodeScanMatcher_type" value="2">
				<size value="64"/>
			</member>
			<member name="C:CodeScanMatcher_code" value="66">
				<size value="64"/>
			</member>
			<member name="C:CodeScanMatcher_len" value="130">
			</member>
			<member name="C:CodeScanMatcher_offset" value="131">
				<size value="2"/>
			</member>
			<member name="C:CodeScanMatcher_start" value="133">
				<size value="2"/>
			</member>
			<member name="C:CodeScanMatcher_holeidx" value="135">
				<size value="2"/>
			</member>
			<member name="C:CodeScanMatcher_holes" value="137">
				<size value="32"/>
			</member>
			<member name="C:CodeScanMatcher_next" value="169">
			</member>
			<member name="C:CodeScanMatcher_flags" value="170">
			</member>
			<referrer name="AddressofResolve"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="T:CodeScanner" value="172">
			<tagname value="CodeScanner"/>
			<member name="C:CodeScanMatch_func" value="0">
			</member>
			<member name="C:CodeScanMatch_size" value="1">
			</member>
			<member name="C:CodeScanMatch_type" value="2">
			</member>
			<member name="C:CodeScanMatch_heap" value="3">
			</member>
			<member name="C:CodeScanMatch_stack" value="4">
			</member>
			<member name="C:CodeScanMatch_params" value="5">
			</member>
			<member name="C:CodeScanMatch_cip" value="6">
			</member>
			<member name="C:CodeScanMatch_holes" value="7">
				<size value="16"/>
			</member>
			<member name="C:CodeScanMatch_hole_count" value="23">
			</member>
			<member name="C:CodeScanMatch_name" value="24">
				<size value="16"/>
			</member>
			<member name="C:CodeScanner_first" value="40">
			</member>
			<member name="C:CodeScanner_minn" value="41">
			</member>
			<member name="C:CodeScanner_jump_switch" value="42">
				<size value="32"/>
			</member>
			<member name="C:CodeScanner_jump_target" value="74">
				<size value="32"/>
			</member>
			<member name="C:CodeScanner_jump_stack" value="106">
				<size value="32"/>
			</member>
			<member name="C:CodeScanner_jump_heap" value="138">
				<size value="32"/>
			</member>
			<member name="C:CodeScanner_state" value="170">
			</member>
			<member name="C:CodeScanner_param" value="171">
			</member>
			<referrer name="AddressofResolve"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="T:DisasmContext" value="5">
			<tagname value="DisasmContext"/>
			<member name="C:DisasmContext_start_ip" value="0">
			</member>
			<member name="C:DisasmContext_end_ip" value="1">
			</member>
			<member name="C:DisasmContext_nip" value="2">
			</member>
			<member name="C:DisasmContext_cip" value="3">
			</member>
			<member name="C:DisasmContext_opcode" value="4">
				<tagname value="Opcode"/>
			</member>
			<referrer name="DisasmWriteCode"/>
			<referrer name="O@A_"/>
			<referrer name="O@B_"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanRun"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="ThirdParty_OnCodeInit"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_DoRetnGen"/>
			<library>amx_assembly disasm</library>
		</member>
		<member name="T:DisasmResult" value="3">
			<tagname value="DisasmResult"/>
			<member name="C:DISASM_DONE" value="0">
			</member>
			<member name="C:DISASM_NOP" value="1">
			</member>
			<member name="C:DISASM_OK" value="2">
			</member>
			<library>amx_assembly disasm</library>
		</member>
		<member name="T:E_BAR_DATA" value="9">
			<tagname value="E_BAR_DATA"/>
			<member name="C:pbar_show" value="0">
				<tagname value="bool"/>
			</member>
			<member name="C:pbar_posX" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:pbar_posY" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:pbar_width" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:pbar_height" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:pbar_colour" value="5">
			</member>
			<member name="C:pbar_maxValue" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:pbar_progressValue" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:pbar_direction" value="8">
			</member>
		</member>
		<member name="T:E_BAR_TEXT_DRAW" value="3">
			<tagname value="E_BAR_TEXT_DRAW"/>
			<member name="C:pbar_back" value="0">
				<tagname value="PlayerText"/>
			</member>
			<member name="C:pbar_fill" value="1">
				<tagname value="PlayerText"/>
			</member>
			<member name="C:pbar_main" value="2">
				<tagname value="PlayerText"/>
			</member>
		</member>
		<member name="T:E_CALLBACK_DATA" value="1">
			<tagname value="E_CALLBACK_DATA"/>
			<member name="C:E_CALLBACK_DATA_ALLOC" value="0">
			</member>
		</member>
		<member name="T:E_CHAIN_HOOK" value="17">
			<tagname value="E_CHAIN_HOOK"/>
			<member name="C:E_CHAIN_HOOK_NAME" value="0">
				<size value="16"/>
			</member>
			<member name="C:E_CHAIN_HOOK_VALUE" value="16">
			</member>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="CGen_OnCodeInit"/>
		</member>
		<member name="T:E_DAMAGE_FEED_HIT" value="28">
			<tagname value="E_DAMAGE_FEED_HIT"/>
			<member name="C:e_Issuer" value="0">
			</member>
			<member name="C:e_Name" value="1">
				<size value="24"/>
			</member>
			<member name="C:e_Amount" value="25">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Weapon" value="26">
			</member>
			<member name="C:e_Tick" value="27">
			</member>
		</member>
		<member name="T:E_HIT_INFO" value="7">
			<tagname value="E_HIT_INFO"/>
			<member name="C:e_Tick" value="0">
			</member>
			<member name="C:e_Issuer" value="1">
			</member>
			<member name="C:e_Weapon" value="2">
			</member>
			<member name="C:e_Amount" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Health" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Armour" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Bodypart" value="6">
			</member>
		</member>
		<member name="T:E_HOOK_NAME_REPLACEMENT_DATA" value="34">
			<tagname value="E_HOOK_NAME_REPLACEMENT_DATA"/>
			<member name="C:E_HOOK_NAME_REPLACEMENT_SHORT" value="0">
				<size value="16"/>
			</member>
			<member name="C:E_HOOK_NAME_REPLACEMENT_LONG" value="16">
				<size value="16"/>
			</member>
			<member name="C:E_HOOK_NAME_REPLACEMENT_MIN" value="32">
			</member>
			<member name="C:E_HOOK_NAME_REPLACEMENT_MAX" value="33">
			</member>
		</member>
		<member name="T:E_INLINE_CALL" value="11">
			<tagname value="E_INLINE_CALL"/>
			<member name="C:E_INLINE_CALL_NULL" value="0">
			</member>
			<member name="C:E_INLINE_CALL_HANDLER" value="1">
			</member>
			<member name="C:E_INLINE_CALL_CLAIM" value="2">
			</member>
			<member name="C:E_INLINE_CALL_RELEASE" value="3">
			</member>
			<member name="C:E_INLINE_CALL_METADATA" value="4">
			</member>
			<member name="C:E_INLINE_CALL_TIMER" value="5">
			</member>
			<member name="C:E_INLINE_CALL_FLAGS" value="6">
			</member>
			<member name="C:E_INLINE_CALL_SIZE" value="7">
			</member>
			<member name="C:E_INLINE_CALL_SOURCE" value="8">
			</member>
			<member name="C:E_INLINE_CALL_FUNCTION" value="9">
			</member>
			<member name="C:E_INLINE_CALL_PARAMS" value="10">
			</member>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
		</member>
		<member name="T:E_INLINE_DATA" value="41">
			<tagname value="E_INLINE_DATA"/>
			<member name="C:E_INLINE_DATA_PARAMETERS" value="0">
				<size value="32"/>
			</member>
			<member name="C:E_INLINE_DATA_PARAMETER_COUNT" value="32">
			</member>
			<member name="C:E_INLINE_DATA_NAME" value="33">
			</member>
			<member name="C:E_INLINE_DATA_STATE" value="34">
			</member>
			<member name="C:E_INLINE_DATA_LOCALS" value="35">
			</member>
			<member name="C:E_INLINE_DATA_STACK" value="36">
			</member>
			<member name="C:E_INLINE_DATA_POINTER" value="37">
			</member>
			<member name="C:E_INLINE_DATA_START" value="38">
			</member>
			<member name="C:E_INLINE_DATA_USER" value="39">
			</member>
			<member name="C:E_INLINE_DATA_CLEANUP" value="40">
			</member>
			<referrer name="Malloc_OnCodeInit"/>
		</member>
		<member name="T:E_ITER_YIELD" value="11">
			<tagname value="E_ITER_YIELD"/>
			<member name="C:E_ITER_YIELD_STACK_START" value="0">
			</member>
			<member name="C:E_ITER_YIELD_STACK_END" value="1">
			</member>
			<member name="C:E_ITER_YIELD_STACK_SIZE" value="2">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_START" value="3">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_END" value="4">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_SIZE" value="5">
			</member>
			<member name="C:E_ITER_YIELD_FIRST" value="6">
			</member>
			<member name="C:E_ITER_YIELD_FRM" value="7">
			</member>
			<member name="C:E_ITER_YIELD_CIP" value="8">
			</member>
			<member name="C:E_ITER_YIELD_FRAME" value="9">
			</member>
			<member name="C:E_ITER_YIELD_RETURN" value="10">
			</member>
		</member>
		<member name="T:E_MODEL_SELECTION_INFO" value="3">
			<member name="C:E_MODEL_SELECTION_RESPONSE" value="0">
			</member>
			<member name="C:E_MODEL_SELECTION_INDEX" value="1">
			</member>
			<member name="C:E_MODEL_SELECTION_MODELID" value="2">
			</member>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="T:E_PHY_CYLINDER" value="8">
			<tagname value="E_PHY_CYLINDER"/>
			<member name="C:PHY_Created" value="0">
			</member>
			<member name="C:PHY_World" value="1">
			</member>
			<member name="C:PHY_X" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Y" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Z1" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Z2" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Size" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_BounceConst" value="7">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:E_PHY_OBJECT" value="28">
			<tagname value="E_PHY_OBJECT"/>
			<member name="C:PHY_Properties" value="0">
			</member>
			<member name="C:PHY_World" value="1">
			</member>
			<member name="C:PHY_Size" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Mass" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_VX" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_VY" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_VZ" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_AX" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_AY" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_AZ" value="9">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_AngularVelocity" value="10">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_AxisX" value="11">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_AxisY" value="12">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_AxisZ" value="13">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_QW" value="14">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_QX" value="15">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_QY" value="16">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_QZ" value="17">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Friction" value="18">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_AirResistance" value="19">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Gravity" value="20">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_LowZBound" value="21">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_HighZBound" value="22">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_BoundConst" value="23">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_PlayerConst" value="24">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_PlayerDist" value="25">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_PlayerLowZ" value="26">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_PlayerHighZ" value="27">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:E_PHY_PLAYER" value="1">
			<tagname value="E_PHY_PLAYER"/>
			<member name="C:PHY_World" value="0">
			</member>
		</member>
		<member name="T:E_PHY_WALL" value="10">
			<tagname value="E_PHY_WALL"/>
			<member name="C:PHY_Created" value="0">
			</member>
			<member name="C:PHY_World" value="1">
			</member>
			<member name="C:PHY_X1" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Y1" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_X2" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Y2" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Z1" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_Z2" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_BounceConst" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:PHY_ANG" value="9">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:E_PUBLIC_CALL" value="71">
			<tagname value="E_PUBLIC_CALL"/>
			<member name="C:E_PUBLIC_CALL_NULL" value="0">
			</member>
			<member name="C:E_PUBLIC_CALL_HANDLER" value="1">
			</member>
			<member name="C:E_PUBLIC_CALL_CLAIM" value="2">
			</member>
			<member name="C:E_PUBLIC_CALL_RELEASE" value="3">
			</member>
			<member name="C:E_PUBLIC_CALL_METADATA" value="4">
			</member>
			<member name="C:E_PUBLIC_CALL_TIMER" value="5">
			</member>
			<member name="C:E_PUBLIC_CALL_FLAGS" value="6">
			</member>
			<member name="C:E_PUBLIC_CALL_SPECIFIER" value="7">
			</member>
			<member name="C:E_PUBLIC_CALL_FUNCTION" value="39">
			</member>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
		</member>
		<member name="T:E_REJECTED_HIT" value="33">
			<tagname value="E_REJECTED_HIT"/>
			<member name="C:e_Time" value="0">
			</member>
			<member name="C:e_Hour" value="1">
			</member>
			<member name="C:e_Minute" value="2">
			</member>
			<member name="C:e_Second" value="3">
			</member>
			<member name="C:e_Weapon" value="4">
			</member>
			<member name="C:e_Reason" value="5">
			</member>
			<member name="C:e_Info1" value="6">
			</member>
			<member name="C:e_Info2" value="7">
			</member>
			<member name="C:e_Info3" value="8">
			</member>
			<member name="C:e_Name" value="9">
				<size value="24"/>
			</member>
		</member>
		<member name="T:E_RESYNC_DATA" value="35">
			<tagname value="E_RESYNC_DATA"/>
			<member name="C:e_Health" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Armour" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Skin" value="2">
			</member>
			<member name="C:e_Team" value="3">
			</member>
			<member name="C:e_PosX" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:e_PosY" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:e_PosZ" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:e_PosA" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Weapon" value="8">
			</member>
			<member name="C:e_WeaponId" value="9">
				<size value="13"/>
			</member>
			<member name="C:e_WeaponAmmo" value="22">
				<size value="13"/>
			</member>
		</member>
		<member name="T:E_SHOT_INFO" value="16">
			<tagname value="E_SHOT_INFO"/>
			<member name="C:e_Tick" value="0">
			</member>
			<member name="C:e_Weapon" value="1">
			</member>
			<member name="C:e_HitType" value="2">
			</member>
			<member name="C:e_HitId" value="3">
			</member>
			<member name="C:e_Hits" value="4">
			</member>
			<member name="C:e_X" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Y" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Z" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:e_OX" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:e_OY" value="9">
				<tagname value="Float"/>
			</member>
			<member name="C:e_OZ" value="10">
				<tagname value="Float"/>
			</member>
			<member name="C:e_HX" value="11">
				<tagname value="Float"/>
			</member>
			<member name="C:e_HY" value="12">
				<tagname value="Float"/>
			</member>
			<member name="C:e_HZ" value="13">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Length" value="14">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Valid" value="15">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:E_SPAWN_INFO" value="12">
			<tagname value="E_SPAWN_INFO"/>
			<member name="C:e_Skin" value="0">
			</member>
			<member name="C:e_Team" value="1">
			</member>
			<member name="C:e_PosX" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:e_PosY" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:e_PosZ" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Rot" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:e_Weapon1" value="6">
			</member>
			<member name="C:e_Ammo1" value="7">
			</member>
			<member name="C:e_Weapon2" value="8">
			</member>
			<member name="C:e_Ammo2" value="9">
			</member>
			<member name="C:e_Weapon3" value="10">
			</member>
			<member name="C:e_Ammo3" value="11">
			</member>
			<referrer name="ac_OnPlayerSpawn"/>
		</member>
		<member name="T:E_VENDING_MACHINE" value="10">
			<tagname value="E_VENDING_MACHINE"/>
			<member name="C:e_Model" value="0">
			</member>
			<member name="C:e_Interior" value="1">
			</member>
			<member name="C:e_PosX" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:e_PosY" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:e_PosZ" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:e_RotX" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:e_RotY" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:e_RotZ" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:e_FrontX" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:e_FrontY" value="9">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:E_YSI_DIR" value="2">
			<tagname value="E_YSI_DIR"/>
			<member name="C:E_YSI_DIR_FIXES" value="0">
			</member>
			<member name="C:E_YSI_DIR_TEMP" value="1">
			</member>
			<referrer name="ResolveYSIScriptfileDirs"/>
		</member>
		<member name="T:ElementOrientation" value="10">
			<tagname value="ElementOrientation"/>
			<member name="C:o_left" value="0">
			</member>
			<member name="C:o_right" value="1">
			</member>
			<member name="C:o_up" value="2">
			</member>
			<member name="C:o_down" value="3">
			</member>
			<member name="C:o_front" value="4">
			</member>
			<member name="C:o_back" value="5">
			</member>
			<member name="C:o_front_left" value="6">
			</member>
			<member name="C:o_front_right" value="7">
			</member>
			<member name="C:o_back_left" value="8">
			</member>
			<member name="C:o_back_right" value="9">
			</member>
		</member>
		<member name="T:LootArray" value="2">
			<tagname value="LootArray"/>
			<member name="C:ItemID" value="0">
			</member>
			<member name="C:ItemChance" value="1">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:Opcode" value="139">
			<tagname value="Opcode"/>
			<member name="C:OP_NONE" value="0">
			</member>
			<member name="C:OP_LOAD_PRI" value="1">
			</member>
			<member name="C:OP_LOAD_ALT" value="2">
			</member>
			<member name="C:OP_LOAD_S_PRI" value="3">
			</member>
			<member name="C:OP_LOAD_S_ALT" value="4">
			</member>
			<member name="C:OP_LREF_PRI" value="5">
			</member>
			<member name="C:OP_LREF_ALT" value="6">
			</member>
			<member name="C:OP_LREF_S_PRI" value="7">
			</member>
			<member name="C:OP_LREF_S_ALT" value="8">
			</member>
			<member name="C:OP_LOAD_I" value="9">
			</member>
			<member name="C:OP_LODB_I" value="10">
			</member>
			<member name="C:OP_CONST_PRI" value="11">
			</member>
			<member name="C:OP_CONST_ALT" value="12">
			</member>
			<member name="C:OP_ADDR_PRI" value="13">
			</member>
			<member name="C:OP_ADDR_ALT" value="14">
			</member>
			<member name="C:OP_STOR_PRI" value="15">
			</member>
			<member name="C:OP_STOR_ALT" value="16">
			</member>
			<member name="C:OP_STOR_S_PRI" value="17">
			</member>
			<member name="C:OP_STOR_S_ALT" value="18">
			</member>
			<member name="C:OP_SREF_PRI" value="19">
			</member>
			<member name="C:OP_SREF_ALT" value="20">
			</member>
			<member name="C:OP_SREF_S_PRI" value="21">
			</member>
			<member name="C:OP_SREF_S_ALT" value="22">
			</member>
			<member name="C:OP_STOR_I" value="23">
			</member>
			<member name="C:OP_STRB_I" value="24">
			</member>
			<member name="C:OP_LIDX" value="25">
			</member>
			<member name="C:OP_LIDX_B" value="26">
			</member>
			<member name="C:OP_IDXADDR" value="27">
			</member>
			<member name="C:OP_IDXADDR_B" value="28">
			</member>
			<member name="C:OP_ALIGN_PRI" value="29">
			</member>
			<member name="C:OP_ALIGN_ALT" value="30">
			</member>
			<member name="C:OP_LCTRL" value="31">
			</member>
			<member name="C:OP_SCTRL" value="32">
			</member>
			<member name="C:OP_MOVE_PRI" value="33">
			</member>
			<member name="C:OP_MOVE_ALT" value="34">
			</member>
			<member name="C:OP_XCHG" value="35">
			</member>
			<member name="C:OP_PUSH_PRI" value="36">
			</member>
			<member name="C:OP_PUSH_ALT" value="37">
			</member>
			<member name="C:OP_PUSH_R" value="38">
			</member>
			<member name="C:OP_PUSH_C" value="39">
			</member>
			<member name="C:OP_PUSH" value="40">
			</member>
			<member name="C:OP_PUSH_S" value="41">
			</member>
			<member name="C:OP_POP_PRI" value="42">
			</member>
			<member name="C:OP_POP_ALT" value="43">
			</member>
			<member name="C:OP_STACK" value="44">
			</member>
			<member name="C:OP_HEAP" value="45">
			</member>
			<member name="C:OP_PROC" value="46">
			</member>
			<member name="C:OP_RET" value="47">
			</member>
			<member name="C:OP_RETN" value="48">
			</member>
			<member name="C:OP_CALL" value="49">
			</member>
			<member name="C:OP_CALL_PRI" value="50">
			</member>
			<member name="C:OP_JUMP" value="51">
			</member>
			<member name="C:OP_JREL" value="52">
			</member>
			<member name="C:OP_JZER" value="53">
			</member>
			<member name="C:OP_JNZ" value="54">
			</member>
			<member name="C:OP_JEQ" value="55">
			</member>
			<member name="C:OP_JNEQ" value="56">
			</member>
			<member name="C:OP_JLESS" value="57">
			</member>
			<member name="C:OP_JLEQ" value="58">
			</member>
			<member name="C:OP_JGRTR" value="59">
			</member>
			<member name="C:OP_JGEQ" value="60">
			</member>
			<member name="C:OP_JSLESS" value="61">
			</member>
			<member name="C:OP_JSLEQ" value="62">
			</member>
			<member name="C:OP_JSGRTR" value="63">
			</member>
			<member name="C:OP_JSGEQ" value="64">
			</member>
			<member name="C:OP_SHL" value="65">
			</member>
			<member name="C:OP_SHR" value="66">
			</member>
			<member name="C:OP_SSHR" value="67">
			</member>
			<member name="C:OP_SHL_C_PRI" value="68">
			</member>
			<member name="C:OP_SHL_C_ALT" value="69">
			</member>
			<member name="C:OP_SHR_C_PRI" value="70">
			</member>
			<member name="C:OP_SHR_C_ALT" value="71">
			</member>
			<member name="C:OP_SMUL" value="72">
			</member>
			<member name="C:OP_SDIV" value="73">
			</member>
			<member name="C:OP_SDIV_ALT" value="74">
			</member>
			<member name="C:OP_UMUL" value="75">
			</member>
			<member name="C:OP_UDIV" value="76">
			</member>
			<member name="C:OP_UDIV_ALT" value="77">
			</member>
			<member name="C:OP_ADD" value="78">
			</member>
			<member name="C:OP_SUB" value="79">
			</member>
			<member name="C:OP_SUB_ALT" value="80">
			</member>
			<member name="C:OP_AND" value="81">
			</member>
			<member name="C:OP_OR" value="82">
			</member>
			<member name="C:OP_XOR" value="83">
			</member>
			<member name="C:OP_NOT" value="84">
			</member>
			<member name="C:OP_NEG" value="85">
			</member>
			<member name="C:OP_INVERT" value="86">
			</member>
			<member name="C:OP_ADD_C" value="87">
			</member>
			<member name="C:OP_SMUL_C" value="88">
			</member>
			<member name="C:OP_ZERO_PRI" value="89">
			</member>
			<member name="C:OP_ZERO_ALT" value="90">
			</member>
			<member name="C:OP_ZERO" value="91">
			</member>
			<member name="C:OP_ZERO_S" value="92">
			</member>
			<member name="C:OP_SIGN_PRI" value="93">
			</member>
			<member name="C:OP_SIGN_ALT" value="94">
			</member>
			<member name="C:OP_EQ" value="95">
			</member>
			<member name="C:OP_NEQ" value="96">
			</member>
			<member name="C:OP_LESS" value="97">
			</member>
			<member name="C:OP_LEQ" value="98">
			</member>
			<member name="C:OP_GRTR" value="99">
			</member>
			<member name="C:OP_GEQ" value="100">
			</member>
			<member name="C:OP_SLESS" value="101">
			</member>
			<member name="C:OP_SLEQ" value="102">
			</member>
			<member name="C:OP_SGRTR" value="103">
			</member>
			<member name="C:OP_SGEQ" value="104">
			</member>
			<member name="C:OP_EQ_C_PRI" value="105">
			</member>
			<member name="C:OP_EQ_C_ALT" value="106">
			</member>
			<member name="C:OP_INC_PRI" value="107">
			</member>
			<member name="C:OP_INC_ALT" value="108">
			</member>
			<member name="C:OP_INC" value="109">
			</member>
			<member name="C:OP_INC_S" value="110">
			</member>
			<member name="C:OP_INC_I" value="111">
			</member>
			<member name="C:OP_DEC_PRI" value="112">
			</member>
			<member name="C:OP_DEC_ALT" value="113">
			</member>
			<member name="C:OP_DEC" value="114">
			</member>
			<member name="C:OP_DEC_S" value="115">
			</member>
			<member name="C:OP_DEC_I" value="116">
			</member>
			<member name="C:OP_MOVS" value="117">
			</member>
			<member name="C:OP_CMPS" value="118">
			</member>
			<member name="C:OP_FILL" value="119">
			</member>
			<member name="C:OP_HALT" value="120">
			</member>
			<member name="C:OP_BOUNDS" value="121">
			</member>
			<member name="C:OP_SYSREQ_PRI" value="122">
			</member>
			<member name="C:OP_SYSREQ_C" value="123">
			</member>
			<member name="C:OP_FILE" value="124">
			</member>
			<member name="C:OP_LINE" value="125">
			</member>
			<member name="C:OP_SYMBOL" value="126">
			</member>
			<member name="C:OP_SRANGE" value="127">
			</member>
			<member name="C:OP_JUMP_PRI" value="128">
			</member>
			<member name="C:OP_SWITCH" value="129">
			</member>
			<member name="C:OP_CASETBL" value="130">
			</member>
			<member name="C:OP_SWAP_PRI" value="131">
			</member>
			<member name="C:OP_SWAP_ALT" value="132">
			</member>
			<member name="C:OP_PUSH_ADR" value="133">
			</member>
			<member name="C:OP_NOP" value="134">
			</member>
			<member name="C:OP_SYSREQ_D" value="135">
			</member>
			<member name="C:OP_SYMTAG" value="136">
			</member>
			<member name="C:OP_BREAK" value="137">
			</member>
			<member name="C:OP_LAST_" value="138">
			</member>
			<library>amx_assembly opcode</library>
		</member>
		<member name="T:OrientationCube3D" value="8">
			<tagname value="OrientationCube3D"/>
			<member name="C:o_left_back_down" value="0">
			</member>
			<member name="C:o_right_back_down" value="1">
			</member>
			<member name="C:o_right_front_down" value="2">
			</member>
			<member name="C:o_left_front_down" value="3">
			</member>
			<member name="C:o_left_back_up" value="4">
			</member>
			<member name="C:o_right_back_up" value="5">
			</member>
			<member name="C:o_right_front_up" value="6">
			</member>
			<member name="C:o_left_front_up" value="7">
			</member>
		</member>
		<member name="T:PR_AimSync" value="11">
			<tagname value="PR_AimSync"/>
			<member name="C:PR_camMode" value="0">
			</member>
			<member name="C:PR_camFrontVec" value="1">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_camPos" value="4">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_aimZ" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:PR_camZoom" value="8">
			</member>
			<member name="C:PR_weaponState" value="9">
			</member>
			<member name="C:PR_aspectRatio" value="10">
			</member>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
		</member>
		<member name="T:PR_BulletSync" value="12">
			<tagname value="PR_BulletSync"/>
			<member name="C:PR_hitType" value="0">
			</member>
			<member name="C:PR_hitId" value="1">
			</member>
			<member name="C:PR_origin" value="2">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_hitPos" value="5">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_offsets" value="8">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_weaponId" value="11">
			</member>
		</member>
		<member name="T:PR_InCarSync" value="23">
			<tagname value="PR_InCarSync"/>
			<member name="C:PR_vehicleId" value="0">
			</member>
			<member name="C:PR_lrKey" value="1">
			</member>
			<member name="C:PR_udKey" value="2">
			</member>
			<member name="C:PR_keys" value="3">
			</member>
			<member name="C:PR_quaternion" value="4">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:PR_position" value="8">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_velocity" value="11">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_vehicleHealth" value="14">
				<tagname value="Float"/>
			</member>
			<member name="C:PR_playerHealth" value="15">
			</member>
			<member name="C:PR_armour" value="16">
			</member>
			<member name="C:PR_weaponId" value="17">
			</member>
			<member name="C:PR_additionalKey" value="18">
			</member>
			<member name="C:PR_sirenState" value="19">
			</member>
			<member name="C:PR_landingGearState" value="20">
			</member>
			<member name="C:PR_trailerId" value="21">
			</member>
			<member name="C:PR_trainSpeed" value="22">
				<tagname value="Float"/>
			</member>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_VEHICLE_SYNC"/>
		</member>
		<member name="T:PR_MarkersSync" value="101">
			<tagname value="PR_MarkersSync"/>
			<member name="C:PR_numberOfPlayers" value="0">
			</member>
			<member name="C:PR_playerIsActive" value="1">
				<size value="20"/>
			</member>
			<member name="C:PR_playerPositionX" value="21">
				<size value="20"/>
			</member>
			<member name="C:PR_playerPositionY" value="41">
				<size value="20"/>
			</member>
			<member name="C:PR_playerPositionZ" value="61">
				<size value="20"/>
			</member>
			<member name="C:PR_playerIsParticipant" value="81">
				<size value="20"/>
			</member>
		</member>
		<member name="T:PR_OnFootSync" value="24">
			<tagname value="PR_OnFootSync"/>
			<member name="C:PR_lrKey" value="0">
			</member>
			<member name="C:PR_udKey" value="1">
			</member>
			<member name="C:PR_keys" value="2">
			</member>
			<member name="C:PR_position" value="3">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_quaternion" value="6">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:PR_health" value="10">
			</member>
			<member name="C:PR_armour" value="11">
			</member>
			<member name="C:PR_weaponId" value="12">
			</member>
			<member name="C:PR_additionalKey" value="13">
			</member>
			<member name="C:PR_specialAction" value="14">
			</member>
			<member name="C:PR_velocity" value="15">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_surfingOffsets" value="18">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_surfingVehicleId" value="21">
			</member>
			<member name="C:PR_animationId" value="22">
			</member>
			<member name="C:PR_animationFlags" value="23">
			</member>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
		</member>
		<member name="T:PR_PassengerSync" value="13">
			<tagname value="PR_PassengerSync"/>
			<member name="C:PR_vehicleId" value="0">
			</member>
			<member name="C:PR_seatId" value="1">
			</member>
			<member name="C:PR_driveBy" value="2">
			</member>
			<member name="C:PR_weaponId" value="3">
			</member>
			<member name="C:PR_additionalKey" value="4">
			</member>
			<member name="C:PR_playerHealth" value="5">
			</member>
			<member name="C:PR_playerArmour" value="6">
			</member>
			<member name="C:PR_lrKey" value="7">
			</member>
			<member name="C:PR_udKey" value="8">
			</member>
			<member name="C:PR_keys" value="9">
			</member>
			<member name="C:PR_position" value="10">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_PASSENGER_SYNC"/>
		</member>
		<member name="T:PR_RconCommand" value="256">
			<tagname value="PR_RconCommand"/>
			<member name="C:PR_command" value="0">
				<size value="256"/>
			</member>
		</member>
		<member name="T:PR_SpectatingSync" value="6">
			<tagname value="PR_SpectatingSync"/>
			<member name="C:PR_lrKey" value="0">
			</member>
			<member name="C:PR_udKey" value="1">
			</member>
			<member name="C:PR_keys" value="2">
			</member>
			<member name="C:PR_position" value="3">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
		</member>
		<member name="T:PR_StatsUpdate" value="2">
			<tagname value="PR_StatsUpdate"/>
			<member name="C:PR_money" value="0">
			</member>
			<member name="C:PR_drunkLevel" value="1">
			</member>
		</member>
		<member name="T:PR_TrailerSync" value="14">
			<tagname value="PR_TrailerSync"/>
			<member name="C:PR_trailerId" value="0">
			</member>
			<member name="C:PR_position" value="1">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_quaternion" value="4">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:PR_velocity" value="8">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_angularVelocity" value="11">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<referrer name="OnIncomingPacket"/>
		</member>
		<member name="T:PR_UnoccupiedSync" value="18">
			<tagname value="PR_UnoccupiedSync"/>
			<member name="C:PR_vehicleId" value="0">
			</member>
			<member name="C:PR_seatId" value="1">
			</member>
			<member name="C:PR_roll" value="2">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_direction" value="5">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_position" value="8">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_velocity" value="11">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_angularVelocity" value="14">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:PR_vehicleHealth" value="17">
				<tagname value="Float"/>
			</member>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_209"/>
		</member>
		<member name="T:PR_WeaponsUpdate" value="41">
			<tagname value="PR_WeaponsUpdate"/>
			<member name="C:PR_targetId" value="0">
			</member>
			<member name="C:PR_targetActorId" value="1">
			</member>
			<member name="C:PR_slotWeaponId" value="2">
				<size value="13"/>
			</member>
			<member name="C:PR_slotWeaponAmmo" value="15">
				<size value="13"/>
			</member>
			<member name="C:PR_slotUpdated" value="28">
				<size value="13"/>
			</member>
		</member>
		<member name="T:__BULLET_HIT_TYPE" value="5">
			<member name="C:BULLET_HIT_TYPE_NONE" value="0">
			</member>
			<member name="C:BULLET_HIT_TYPE_PLAYER" value="1">
			</member>
			<member name="C:BULLET_HIT_TYPE_VEHICLE" value="2">
			</member>
			<member name="C:BULLET_HIT_TYPE_OBJECT" value="3">
			</member>
			<member name="C:BULLET_HIT_TYPE_PLAYER_OBJECT" value="4">
			</member>
			<referrer name="_@BULLET_HIT_TYPE"/>
			<library>a_samp</library> 
		</member>
		<member name="T:__CAM_MODE" value="57">
			<member name="C:CAM_MODE_DISCONNECTED" value="-1">
			</member>
			<member name="C:CAM_MODE_NONE" value="0">
			</member>
			<member name="C:CAM_MODE_BEHINDCAR" value="3">
			</member>
			<member name="C:CAM_MODE_FOLLOWPED" value="4">
			</member>
			<member name="C:CAM_MODE_SNIPER" value="7">
			</member>
			<member name="C:CAM_MODE_ROCKETLAUNCHER" value="8">
			</member>
			<member name="C:CAM_MODE_FIXED" value="15">
			</member>
			<member name="C:CAM_MODE_1STPERSON" value="16">
			</member>
			<member name="C:CAM_MODE_CAM_ON_A_STRING" value="18">
			</member>
			<member name="C:CAM_MODE_BEHINDBOAT" value="22">
			</member>
			<member name="C:CAM_MODE_CAMERA" value="46">
			</member>
			<member name="C:CAM_MODE_ROCKETLAUNCHER_HS" value="51">
			</member>
			<member name="C:CAM_MODE_AIMWEAPON" value="53">
			</member>
			<member name="C:CAM_MODE_AIMWEAPON_FROMCAR" value="55">
			</member>
			<member name="C:CAM_MODE_DW_HELI_CHASE" value="56">
			</member>
			<referrer name="_@CAM_MODE"/>
			<library>a_players</library> 
		</member>
		<member name="T:__CARMODTYPE" value="16">
			<member name="C:CARMODTYPE_NONE" value="-1">
			</member>
			<member name="C:CARMODTYPE_SPOILER" value="0">
			</member>
			<member name="C:CARMODTYPE_HOOD" value="1">
			</member>
			<member name="C:CARMODTYPE_ROOF" value="2">
			</member>
			<member name="C:CARMODTYPE_SIDESKIRT" value="3">
			</member>
			<member name="C:CARMODTYPE_LAMPS" value="4">
			</member>
			<member name="C:CARMODTYPE_NITRO" value="5">
			</member>
			<member name="C:CARMODTYPE_EXHAUST" value="6">
			</member>
			<member name="C:CARMODTYPE_WHEELS" value="7">
			</member>
			<member name="C:CARMODTYPE_STEREO" value="8">
			</member>
			<member name="C:CARMODTYPE_HYDRAULICS" value="9">
			</member>
			<member name="C:CARMODTYPE_FRONT_BUMPER" value="10">
			</member>
			<member name="C:CARMODTYPE_REAR_BUMPER" value="11">
			</member>
			<member name="C:CARMODTYPE_VENT_RIGHT" value="12">
			</member>
			<member name="C:CARMODTYPE_VENT_LEFT" value="13">
			</member>
			<member name="C:CARMODTYPE_FRONT_BULLBAR" value="14">
			</member>
			<member name="C:CARMODTYPE_REAR_BULLBAR" value="15">
			</member>
			<referrer name="_@CARMODTYPE"/>
			<library>a_vehicles</library> 
		</member>
		<member name="T:__CLICK_SOURCE" value="1">
			<member name="C:CLICK_SOURCE_SCOREBOARD" value="0">
			</member>
			<referrer name="_@CLICK_SOURCE"/>
			<library>a_samp</library> 
		</member>
		<member name="T:__CP_TYPE" value="9">
			<member name="C:CP_TYPE_GROUND_NORMAL" value="0">
			</member>
			<member name="C:CP_TYPE_GROUND_FINISH" value="1">
			</member>
			<member name="C:CP_TYPE_GROUND_EMPTY" value="2">
			</member>
			<member name="C:CP_TYPE_AIR_NORMAL" value="3">
			</member>
			<member name="C:CP_TYPE_AIR_FINISH" value="4">
			</member>
			<member name="C:CP_TYPE_AIR_ROTATING" value="5">
			</member>
			<member name="C:CP_TYPE_AIR_STROBING" value="6">
			</member>
			<member name="C:CP_TYPE_AIR_SWINGING" value="7">
			</member>
			<member name="C:CP_TYPE_AIR_BOBBING" value="8">
			</member>
			<referrer name="_@CP_TYPE"/>
			<library>a_players</library> 
		</member>
		<member name="T:__DIALOG_STYLE" value="6">
			<member name="C:DIALOG_STYLE_MSGBOX" value="0">
			</member>
			<member name="C:DIALOG_STYLE_INPUT" value="1">
			</member>
			<member name="C:DIALOG_STYLE_LIST" value="2">
			</member>
			<member name="C:DIALOG_STYLE_PASSWORD" value="3">
			</member>
			<member name="C:DIALOG_STYLE_TABLIST" value="4">
			</member>
			<member name="C:DIALOG_STYLE_TABLIST_HEADERS" value="5">
			</member>
			<referrer name="_@DIALOG_STYLE"/>
			<library>a_samp</library>  <summary>Player GUI dialog</summary> 
		</member>
		<member name="T:__DOWNLOAD_REQUEST" value="3">
			<member name="C:DOWNLOAD_REQUEST_EMPTY" value="0">
			</member>
			<member name="C:DOWNLOAD_REQUEST_MODEL_FILE" value="1">
			</member>
			<member name="C:DOWNLOAD_REQUEST_TEXTURE_FILE" value="2">
			</member>
			<referrer name="_@DOWNLOAD_REQUEST"/>
			<library>a_samp</library>  <summary>Artwork/NetModels</summary> 
		</member>
		<member name="T:__EDIT_RESPONSE" value="3">
			<member name="C:EDIT_RESPONSE_CANCEL" value="0">
			</member>
			<member name="C:EDIT_RESPONSE_FINAL" value="1">
			</member>
			<member name="C:EDIT_RESPONSE_UPDATE" value="2">
			</member>
			<referrer name="_@EDIT_RESPONSE"/>
			<library>a_samp</library> 
		</member>
		<member name="T:__E_COMPILER_ENUM" value="4">
			<tagname value="__E_COMPILER_ENUM"/>
			<member name="C:__E_COMPILER_ENUM_ENTRY" value="0">
				<size value="3"/>
			</member>
			<member name="C:__E_COMPILER_ENUM_AFTER" value="3">
			</member>
		</member>
		<member name="T:__FIGHT_STYLE" value="17">
			<member name="C:FIGHT_STYLE_NORMAL" value="4">
			</member>
			<member name="C:FIGHT_STYLE_BOXING" value="5">
			</member>
			<member name="C:FIGHT_STYLE_KUNGFU" value="6">
			</member>
			<member name="C:FIGHT_STYLE_KNEEHEAD" value="7">
			</member>
			<member name="C:FIGHT_STYLE_GRABKICK" value="15">
			</member>
			<member name="C:FIGHT_STYLE_ELBOW" value="16">
			</member>
			<referrer name="_@FIGHT_STYLE"/>
			<library>a_players</library> 
		</member>
		<member name="T:__FORCE_SYNC" value="3">
			<member name="C:SYNC_NONE" value="0">
			</member>
			<member name="C:SYNC_ALL" value="1">
			</member>
			<member name="C:SYNC_OTHER" value="2">
			</member>
			<referrer name="_@FORCE_SYNC"/>
			<library>a_samp</library> 
		</member>
		<member name="T:__HTTP_ERROR" value="7">
			<member name="C:HTTP_ERROR_BAD_HOST" value="1">
			</member>
			<member name="C:HTTP_ERROR_NO_SOCKET" value="2">
			</member>
			<member name="C:HTTP_ERROR_CANT_CONNECT" value="3">
			</member>
			<member name="C:HTTP_ERROR_CANT_WRITE" value="4">
			</member>
			<member name="C:HTTP_ERROR_CONTENT_TOO_BIG" value="5">
			</member>
			<member name="C:HTTP_ERROR_MALFORMED_RESPONSE" value="6">
			</member>
			<referrer name="_@HTTP_ERROR"/>
			<library>a_http</library>  <summary>HTTP error response codes</summary>  <remarks>  These codes compliment ordinary HTTP response codes returned in 'responseCode'  (10x) (20x OK) (30x Moved) (40x Unauthorised) (50x Server Error)  </remarks> 
		</member>
		<member name="T:__HTTP_METHOD" value="4">
			<member name="C:HTTP_GET" value="1">
			</member>
			<member name="C:HTTP_POST" value="2">
			</member>
			<member name="C:HTTP_HEAD" value="3">
			</member>
			<referrer name="_@HTTP_METHOD"/>
			<library>a_http</library>  <summary>HTTP request types</summary> 
		</member>
		<member name="T:__KEY" value="256">
			<member name="C:KEY_ACTION" value="1">
			</member>
			<member name="C:KEY_CROUCH" value="2">
			</member>
			<member name="C:KEY_FIRE" value="4">
			</member>
			<member name="C:KEY_SPRINT" value="8">
			</member>
			<member name="C:KEY_SECONDARY_ATTACK" value="16">
			</member>
			<member name="C:KEY_JUMP" value="32">
			</member>
			<member name="C:KEY_LOOK_RIGHT" value="64">
			</member>
			<member name="C:KEY_HANDBRAKE" value="128">
			</member>
			<member name="C:KEY_LOOK_LEFT" value="256">
			</member>
			<member name="C:KEY_SUBMISSION" value="512">
			</member>
			<member name="C:KEY_LOOK_BEHIND" value="512">
			</member>
			<member name="C:KEY_WALK" value="1024">
			</member>
			<member name="C:KEY_ANALOG_UP" value="2048">
			</member>
			<member name="C:KEY_ANALOG_DOWN" value="4096">
			</member>
			<member name="C:KEY_ANALOG_LEFT" value="8192">
			</member>
			<member name="C:KEY_ANALOG_RIGHT" value="16384">
			</member>
			<member name="C:KEY_YES" value="65536">
			</member>
			<member name="C:KEY_NO" value="131072">
			</member>
			<member name="C:KEY_CTRL_BACK" value="262144">
			</member>
			<member name="C:KEY_UP" value="-128">
			</member>
			<member name="C:KEY_DOWN" value="128">
			</member>
			<member name="C:KEY_LEFT" value="-128">
			</member>
			<member name="C:KEY_RIGHT" value="128">
			</member>
			<referrer name="_@KEY"/>
			<library>a_samp</library>  <summary>Keys</summary> 
		</member>
		<member name="T:__MAPICON" value="4">
			<member name="C:MAPICON_LOCAL" value="0">
			</member>
			<member name="C:MAPICON_GLOBAL" value="1">
			</member>
			<member name="C:MAPICON_LOCAL_CHECKPOINT" value="2">
			</member>
			<member name="C:MAPICON_GLOBAL_CHECKPOINT" value="3">
			</member>
			<referrer name="_@MAPICON"/>
			<library>a_players</library> 
		</member>
		<member name="T:__OBJECT_MATERIAL_SIZE" value="150">
			<member name="C:OBJECT_MATERIAL_SIZE_32x32" value="10">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_64x32" value="20">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_64x64" value="30">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x32" value="40">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x64" value="50">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x128" value="60">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x32" value="70">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x64" value="80">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x128" value="90">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x256" value="100">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x64" value="110">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x128" value="120">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x256" value="130">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x512" value="140">
				<size value="10"/>
			</member>
			<referrer name="_@OBJECT_MATERIAL_SIZE"/>
			<library>a_objects</library> 
		</member>
		<member name="T:__OBJECT_MATERIAL_TEXT_ALIGN" value="3">
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_LEFT" value="0">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_CENT" value="1">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_RIGT" value="2">
			</member>
			<referrer name="_@OBJECT_MATERIAL_TEXT_ALIGN"/>
			<library>a_objects</library> 
		</member>
		<member name="T:__PLAYER_MARKERS_MODE" value="3">
			<member name="C:PLAYER_MARKERS_MODE_OFF" value="0">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_GLOBAL" value="1">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_STREAMED" value="2">
			</member>
			<referrer name="_@PLAYER_MARKERS_MODE"/>
			<library>a_players</library>  <summary>Marker modes used by <c>ShowPlayerMarkers()</c></summary> 
		</member>
		<member name="T:__PLAYER_RECORDING_TYPE" value="3">
			<member name="C:PLAYER_RECORDING_TYPE_NONE" value="0">
			</member>
			<member name="C:PLAYER_RECORDING_TYPE_DRIVER" value="1">
			</member>
			<member name="C:PLAYER_RECORDING_TYPE_ONFOOT" value="2">
			</member>
			<referrer name="_@PLAYER_RECORDING_TYPE"/>
			<library>a_players</library>  <summary>Recording for NPC playback</summary> 
		</member>
		<member name="T:__PLAYER_STATE" value="10">
			<member name="C:PLAYER_STATE_NONE" value="0">
			</member>
			<member name="C:PLAYER_STATE_ONFOOT" value="1">
			</member>
			<member name="C:PLAYER_STATE_DRIVER" value="2">
			</member>
			<member name="C:PLAYER_STATE_PASSENGER" value="3">
			</member>
			<member name="C:PLAYER_STATE_WASTED" value="7">
			</member>
			<member name="C:PLAYER_STATE_SPAWNED" value="8">
			</member>
			<member name="C:PLAYER_STATE_SPECTATING" value="9">
			</member>
			<referrer name="_@PLAYER_STATE"/>
			<library>a_players</library>  <summary>States</summary> 
		</member>
		<member name="T:__PLAYER_VARTYPE" value="4">
			<member name="C:PLAYER_VARTYPE_NONE" value="0">
			</member>
			<member name="C:PLAYER_VARTYPE_INT" value="1">
			</member>
			<member name="C:PLAYER_VARTYPE_STRING" value="2">
			</member>
			<member name="C:PLAYER_VARTYPE_FLOAT" value="3">
			</member>
			<referrer name="_@PLAYER_VARTYPE"/>
			<library>a_players</library>  <summary>PVar enumeration</summary> 
		</member>
		<member name="T:__SELECT_OBJECT" value="3">
			<member name="C:SELECT_OBJECT_GLOBAL_OBJECT" value="1">
			</member>
			<member name="C:SELECT_OBJECT_PLAYER_OBJECT" value="2">
			</member>
			<referrer name="_@SELECT_OBJECT"/>
			<library>a_objects</library> 
		</member>
		<member name="T:__SERVER_VARTYPE" value="4">
			<member name="C:SERVER_VARTYPE_NONE" value="0">
			</member>
			<member name="C:SERVER_VARTYPE_INT" value="1">
			</member>
			<member name="C:SERVER_VARTYPE_STRING" value="2">
			</member>
			<member name="C:SERVER_VARTYPE_FLOAT" value="3">
			</member>
			<referrer name="_@SERVER_VARTYPE"/>
			<library>a_samp</library>  <summary>SVar enumeration</summary> 
		</member>
		<member name="T:__SPECIAL_ACTION" value="69">
			<member name="C:SPECIAL_ACTION_NONE" value="0">
			</member>
			<member name="C:SPECIAL_ACTION_DUCK" value="1">
			</member>
			<member name="C:SPECIAL_ACTION_USEJETPACK" value="2">
			</member>
			<member name="C:SPECIAL_ACTION_ENTER_VEHICLE" value="3">
			</member>
			<member name="C:SPECIAL_ACTION_EXIT_VEHICLE" value="4">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE1" value="5">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE2" value="6">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE3" value="7">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE4" value="8">
			</member>
			<member name="C:SPECIAL_ACTION_HANDSUP" value="10">
			</member>
			<member name="C:SPECIAL_ACTION_USECELLPHONE" value="11">
			</member>
			<member name="C:SPECIAL_ACTION_SITTING" value="12">
			</member>
			<member name="C:SPECIAL_ACTION_STOPUSECELLPHONE" value="13">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_BEER" value="20">
			</member>
			<member name="C:SPECIAL_ACTION_SMOKE_CIGGY" value="21">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_WINE" value="22">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_SPRUNK" value="23">
			</member>
			<member name="C:SPECIAL_ACTION_CUFFED" value="24">
			</member>
			<member name="C:SPECIAL_ACTION_CARRY" value="25">
			</member>
			<member name="C:SPECIAL_ACTION_PISSING" value="68">
			</member>
			<referrer name="_@SPECIAL_ACTION"/>
			<library>a_players</library> 
		</member>
		<member name="T:__SPECTATE_MODE" value="4">
			<member name="C:SPECTATE_MODE_NORMAL" value="1">
			</member>
			<member name="C:SPECTATE_MODE_FIXED" value="2">
			</member>
			<member name="C:SPECTATE_MODE_SIDE" value="3">
			</member>
			<referrer name="_@SPECTATE_MODE"/>
			<library>a_players</library>  <summary>Spectating</summary> 
		</member>
		<member name="T:__TEXT_DRAW_ALIGN" value="4">
			<member name="C:TEXT_DRAW_ALIGN_LEFT" value="1">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_CENTRE" value="2">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_CENTER" value="2">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_RIGHT" value="3">
			</member>
			<referrer name="_@TEXT_DRAW_ALIGN"/>
			<library>a_samp</library>  <summary>Text draw alignment</summary> 
		</member>
		<member name="T:__TEXT_DRAW_FONT" value="6">
			<member name="C:TEXT_DRAW_FONT_0" value="0">
			</member>
			<member name="C:TEXT_DRAW_FONT_1" value="1">
			</member>
			<member name="C:TEXT_DRAW_FONT_2" value="2">
			</member>
			<member name="C:TEXT_DRAW_FONT_3" value="3">
			</member>
			<member name="C:TEXT_DRAW_FONT_SPRITE_DRAW" value="4">
			</member>
			<member name="C:TEXT_DRAW_FONT_MODEL_PREVIEW" value="5">
			</member>
			<referrer name="_@TEXT_DRAW_FONT"/>
			<library>a_samp</library>  <summary>Text draw font</summary> 
		</member>
		<member name="T:__VEHICLE_MODEL_INFO" value="10">
			<member name="C:VEHICLE_MODEL_INFO_SIZE" value="1">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONTSEAT" value="2">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REARSEAT" value="3">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_PETROLCAP" value="4">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSFRONT" value="5">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSREAR" value="6">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSMID" value="7">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONT_BUMPER" value="8">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REAR_BUMPER" value="9">
			</member>
			<referrer name="_@VEHICLE_MODEL_INFO"/>
			<library>a_vehicles</library> 
		</member>
		<member name="T:__VEHICLE_PARAMS" value="2">
			<member name="C:VEHICLE_PARAMS_UNSET" value="-1">
			</member>
			<member name="C:VEHICLE_PARAMS_OFF" value="0">
			</member>
			<member name="C:VEHICLE_PARAMS_ON" value="1">
			</member>
			<referrer name="_@VEHICLE_PARAMS"/>
			<library>a_vehicles</library> 
		</member>
		<member name="T:__WEAPON" value="55">
			<member name="C:WEAPON_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPON_FIST" value="0">
			</member>
			<member name="C:WEAPON_BRASSKNUCKLE" value="1">
			</member>
			<member name="C:WEAPON_GOLFCLUB" value="2">
			</member>
			<member name="C:WEAPON_NITESTICK" value="3">
			</member>
			<member name="C:WEAPON_NIGHTSTICK" value="3">
			</member>
			<member name="C:WEAPON_KNIFE" value="4">
			</member>
			<member name="C:WEAPON_BAT" value="5">
			</member>
			<member name="C:WEAPON_SHOVEL" value="6">
			</member>
			<member name="C:WEAPON_POOLSTICK" value="7">
			</member>
			<member name="C:WEAPON_KATANA" value="8">
			</member>
			<member name="C:WEAPON_CHAINSAW" value="9">
			</member>
			<member name="C:WEAPON_DILDO" value="10">
			</member>
			<member name="C:WEAPON_DILDO2" value="11">
			</member>
			<member name="C:WEAPON_VIBRATOR" value="12">
			</member>
			<member name="C:WEAPON_VIBRATOR2" value="13">
			</member>
			<member name="C:WEAPON_FLOWER" value="14">
			</member>
			<member name="C:WEAPON_CANE" value="15">
			</member>
			<member name="C:WEAPON_GRENADE" value="16">
			</member>
			<member name="C:WEAPON_TEARGAS" value="17">
			</member>
			<member name="C:WEAPON_MOLTOV" value="18">
			</member>
			<member name="C:WEAPON_MOLOTOV" value="18">
			</member>
			<member name="C:WEAPON_COLT45" value="22">
			</member>
			<member name="C:WEAPON_SILENCED" value="23">
			</member>
			<member name="C:WEAPON_DEAGLE" value="24">
			</member>
			<member name="C:WEAPON_SHOTGUN" value="25">
			</member>
			<member name="C:WEAPON_SAWEDOFF" value="26">
			</member>
			<member name="C:WEAPON_SHOTGSPA" value="27">
			</member>
			<member name="C:WEAPON_UZI" value="28">
			</member>
			<member name="C:WEAPON_MP5" value="29">
			</member>
			<member name="C:WEAPON_AK47" value="30">
			</member>
			<member name="C:WEAPON_M4" value="31">
			</member>
			<member name="C:WEAPON_TEC9" value="32">
			</member>
			<member name="C:WEAPON_RIFLE" value="33">
			</member>
			<member name="C:WEAPON_SNIPER" value="34">
			</member>
			<member name="C:WEAPON_ROCKETLAUNCHER" value="35">
			</member>
			<member name="C:WEAPON_HEATSEEKER" value="36">
			</member>
			<member name="C:WEAPON_FLAMETHROWER" value="37">
			</member>
			<member name="C:WEAPON_MINIGUN" value="38">
			</member>
			<member name="C:WEAPON_SATCHEL" value="39">
			</member>
			<member name="C:WEAPON_BOMB" value="40">
			</member>
			<member name="C:WEAPON_SPRAYCAN" value="41">
			</member>
			<member name="C:WEAPON_FIREEXTINGUISHER" value="42">
			</member>
			<member name="C:WEAPON_CAMERA" value="43">
			</member>
			<member name="C:WEAPON_NIGHT_VISION_GOGGLES" value="44">
			</member>
			<member name="C:WEAPON_THERMAL_GOGGLES" value="45">
			</member>
			<member name="C:WEAPON_PARACHUTE" value="46">
			</member>
			<member name="C:WEAPON_VEHICLE" value="49">
			</member>
			<member name="C:WEAPON_DROWN" value="53">
			</member>
			<member name="C:WEAPON_COLLISION" value="54">
			</member>
			<member name="C:WEAPON_SPLAT" value="54">
			</member>
			<referrer name="_@WEAPON"/>
			<library>a_samp</library>  <summary>Weapons</summary> 
		</member>
		<member name="T:__WEAPONSKILL" value="11">
			<member name="C:WEAPONSKILL_PISTOL" value="0">
			</member>
			<member name="C:WEAPONSKILL_PISTOL_SILENCED" value="1">
			</member>
			<member name="C:WEAPONSKILL_DESERT_EAGLE" value="2">
			</member>
			<member name="C:WEAPONSKILL_SHOTGUN" value="3">
			</member>
			<member name="C:WEAPONSKILL_SAWNOFF_SHOTGUN" value="4">
			</member>
			<member name="C:WEAPONSKILL_SPAS12_SHOTGUN" value="5">
			</member>
			<member name="C:WEAPONSKILL_MICRO_UZI" value="6">
			</member>
			<member name="C:WEAPONSKILL_MP5" value="7">
			</member>
			<member name="C:WEAPONSKILL_AK47" value="8">
			</member>
			<member name="C:WEAPONSKILL_M4" value="9">
			</member>
			<member name="C:WEAPONSKILL_SNIPERRIFLE" value="10">
			</member>
			<referrer name="_@WEAPONSKILL"/>
			<library>a_players</library> 
		</member>
		<member name="T:__WEAPONSTATE" value="4">
			<member name="C:WEAPONSTATE_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPONSTATE_NO_BULLETS" value="0">
			</member>
			<member name="C:WEAPONSTATE_LAST_BULLET" value="1">
			</member>
			<member name="C:WEAPONSTATE_MORE_BULLETS" value="2">
			</member>
			<member name="C:WEAPONSTATE_RELOADING" value="3">
			</member>
			<referrer name="_@WEAPONSTATE"/>
			<library>a_players</library> 
		</member>
		<member name="T:__WEAPON_SLOT" value="13">
			<member name="C:WEAPON_SLOT_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPON_SLOT_UNARMED" value="0">
			</member>
			<member name="C:WEAPON_SLOT_MELEE" value="1">
			</member>
			<member name="C:WEAPON_SLOT_PISTOL" value="2">
			</member>
			<member name="C:WEAPON_SLOT_SHOTGUN" value="3">
			</member>
			<member name="C:WEAPON_SLOT_MACHINE_GUN" value="4">
			</member>
			<member name="C:WEAPON_SLOT_ASSAULT_RIFLE" value="5">
			</member>
			<member name="C:WEAPON_SLOT_LONG_RIFLE" value="6">
			</member>
			<member name="C:WEAPON_SLOT_ARTILLERY" value="7">
			</member>
			<member name="C:WEAPON_SLOT_EXPLOSIVES" value="8">
			</member>
			<member name="C:WEAPON_SLOT_EQUIPMENT" value="9">
			</member>
			<member name="C:WEAPON_SLOT_GIFT" value="10">
			</member>
			<member name="C:WEAPON_SLOT_GADGET" value="11">
			</member>
			<member name="C:WEAPON_SLOT_DETONATOR" value="12">
			</member>
			<referrer name="_@WEAPON_SLOT"/>
			<library>a_npc</library>  <summary>Weapon Slots</summary> 
		</member>
		<member name="T:acInfo" value="346">
			<tagname value="acInfo"/>
			<member name="C:acPosX" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:acPosY" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:acPosZ" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:acDropJpX" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:acDropJpY" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:acDropJpZ" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:acSpawnPosX" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:acSpawnPosY" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:acSpawnPosZ" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:acSetVehHealth" value="9">
				<tagname value="Float"/>
			</member>
			<member name="C:acLastPosX" value="10">
				<tagname value="Float"/>
			</member>
			<member name="C:acLastPosY" value="11">
				<tagname value="Float"/>
			</member>
			<member name="C:acSetPosX" value="12">
				<tagname value="Float"/>
			</member>
			<member name="C:acSetPosY" value="13">
				<tagname value="Float"/>
			</member>
			<member name="C:acSetPosZ" value="14">
				<tagname value="Float"/>
			</member>
			<member name="C:acSpeed" value="15">
			</member>
			<member name="C:acHealth" value="16">
			</member>
			<member name="C:acArmour" value="17">
			</member>
			<member name="C:acMoney" value="18">
			</member>
			<member name="C:acShotWeapon" value="19">
			</member>
			<member name="C:acHoldWeapon" value="20">
			</member>
			<member name="C:acEnterSeat" value="21">
			</member>
			<member name="C:acEnterVeh" value="22">
			</member>
			<member name="C:acKickVeh" value="23">
			</member>
			<member name="C:acVeh" value="24">
			</member>
			<member name="C:acSeat" value="25">
			</member>
			<member name="C:acNextDialog" value="26">
			</member>
			<member name="C:acDialog" value="27">
			</member>
			<member name="C:acInt" value="28">
			</member>
			<member name="C:acAnim" value="29">
			</member>
			<member name="C:acSpecAct" value="30">
			</member>
			<member name="C:acNextSpecAct" value="31">
			</member>
			<member name="C:acLastSpecAct" value="32">
			</member>
			<member name="C:acLastPickup" value="33">
			</member>
			<member name="C:acReloadTick" value="34">
			</member>
			<member name="C:acShotTick" value="35">
			</member>
			<member name="C:acSpawnTick" value="36">
			</member>
			<member name="C:acTimerTick" value="37">
			</member>
			<member name="C:acSetPosTick" value="38">
			</member>
			<member name="C:acUpdateTick" value="39">
			</member>
			<member name="C:acEnterVehTick" value="40">
			</member>
			<member name="C:acSpawnWeapon1" value="41">
			</member>
			<member name="C:acSpawnWeapon2" value="42">
			</member>
			<member name="C:acSpawnWeapon3" value="43">
			</member>
			<member name="C:acSpawnAmmo1" value="44">
			</member>
			<member name="C:acSpawnAmmo2" value="45">
			</member>
			<member name="C:acSpawnAmmo3" value="46">
			</member>
			<member name="C:acSpawnRes" value="47">
			</member>
			<member name="C:acTimerID" value="48">
			</member>
			<member name="C:acKickTimerID" value="49">
			</member>
			<member name="C:acParachute" value="50">
			</member>
			<member name="C:acIntRet" value="51">
			</member>
			<member name="C:acKicked" value="52">
			</member>
			<member name="C:acIp" value="53">
				<size value="16"/>
			</member>
			<member name="C:acSet" value="69">
				<size value="12"/>
			</member>
			<member name="C:acGtc" value="81">
				<size value="19"/>
			</member>
			<member name="C:acWeapon" value="100">
				<size value="13"/>
			</member>
			<member name="C:acAmmo" value="113">
				<size value="13"/>
			</member>
			<member name="C:acSetWeapon" value="126">
				<size value="13"/>
			</member>
			<member name="C:acGiveAmmo" value="139">
				<size value="13"/>
			</member>
			<member name="C:acGtcSetWeapon" value="152">
				<size value="13"/>
			</member>
			<member name="C:acGtcGiveAmmo" value="165">
				<size value="13"/>
			</member>
			<member name="C:acNOPCount" value="178">
				<size value="12"/>
			</member>
			<member name="C:acCheatCount" value="190">
				<size value="22"/>
			</member>
			<member name="C:acCall" value="212">
				<size value="28"/>
			</member>
			<member name="C:acFloodCount" value="240">
				<size value="28"/>
			</member>
			<member name="C:acNOPAllow" value="268">
				<tagname value="bool"/>
				<size value="12"/>
			</member>
			<member name="C:acACAllow" value="280">
				<tagname value="bool"/>
				<size value="53"/>
			</member>
			<member name="C:acStuntBonus" value="333">
				<tagname value="bool"/>
			</member>
			<member name="C:acModShop" value="334">
				<tagname value="bool"/>
			</member>
			<member name="C:acUnFrozen" value="335">
				<tagname value="bool"/>
			</member>
			<member name="C:acOnline" value="336">
				<tagname value="bool"/>
			</member>
			<member name="C:acDeathRes" value="337">
				<tagname value="bool"/>
			</member>
			<member name="C:acDmgRes" value="338">
				<tagname value="bool"/>
			</member>
			<member name="C:acVehDmgRes" value="339">
				<tagname value="bool"/>
			</member>
			<member name="C:acForceClass" value="340">
				<tagname value="bool"/>
			</member>
			<member name="C:acClassRes" value="341">
				<tagname value="bool"/>
			</member>
			<member name="C:acDead" value="342">
				<tagname value="bool"/>
			</member>
			<member name="C:acTpToZ" value="343">
				<tagname value="bool"/>
			</member>
			<member name="C:acIntEnterExits" value="344">
				<tagname value="bool"/>
			</member>
			<member name="C:acSpec" value="345">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:acPickInfo" value="5">
			<tagname value="acPickInfo"/>
			<member name="C:acPosX" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:acPosY" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:acPosZ" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:acType" value="3">
			</member>
			<member name="C:acWeapon" value="4">
				<size value="13"/>
			</member>
		</member>
		<member name="T:acVehInfo" value="23">
			<tagname value="acVehInfo"/>
			<member name="C:acVelX" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:acVelY" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:acVelZ" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:acPosX" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:acPosY" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:acPosZ" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:acSpawnPosX" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:acSpawnPosY" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:acSpawnPosZ" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:acSpawnZAngle" value="9">
				<tagname value="Float"/>
			</member>
			<member name="C:acPosDiff" value="10">
				<tagname value="Float"/>
			</member>
			<member name="C:acZAngle" value="11">
				<tagname value="Float"/>
			</member>
			<member name="C:acHealth" value="12">
			</member>
			<member name="C:acLastSpeed" value="13">
			</member>
			<member name="C:acSpeedDiff" value="14">
			</member>
			<member name="C:acDriver" value="15">
			</member>
			<member name="C:acPanels" value="16">
			</member>
			<member name="C:acDoors" value="17">
			</member>
			<member name="C:acTires" value="18">
			</member>
			<member name="C:acInt" value="19">
			</member>
			<member name="C:acSpeed" value="20">
			</member>
			<member name="C:acPaintJob" value="21">
			</member>
			<member name="C:acSpawned" value="22">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:e_GangBaseObjects" value="36">
			<tagname value="e_GangBaseObjects"/>
			<member name="C:base_obj_name" value="0">
				<size value="35"/>
			</member>
			<member name="C:base_obj_modelid" value="35">
			</member>
		</member>
		<member name="T:e_KurczakPositions" value="8">
			<tagname value="e_KurczakPositions"/>
			<member name="C:chicken_object" value="0">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:chicken_spawn" value="4">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
		</member>
		<member name="T:e_RaceStatusData" value="2">
			<tagname value="e_RaceStatusData"/>
			<member name="C:race_id" value="0">
			</member>
			<member name="C:race_status" value="1">
			</member>
		</member>
		<member name="T:e_achievementData" value="315">
			<tagname value="e_achievementData"/>
			<member name="C:achievement_type" value="0">
			</member>
			<member name="C:achievement_name" value="1">
				<size value="50"/>
			</member>
			<member name="C:achievement_description" value="51">
				<size value="255"/>
			</member>
			<member name="C:achievement_levelable" value="306">
				<tagname value="bool"/>
			</member>
			<member name="C:achievement_levels" value="307">
			</member>
			<member name="C:achievement_required" value="308">
				<size value="5"/>
			</member>
			<member name="C:achievement_money" value="313">
			</member>
			<member name="C:achievement_display" value="314">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:e_attachmentObjectData" value="91">
			<tagname value="e_attachmentObjectData"/>
			<member name="C:attachment_modelid" value="0">
			</member>
			<member name="C:attachment_name" value="1">
				<size value="90"/>
			</member>
		</member>
		<member name="T:e_bakData" value="2">
			<tagname value="e_bakData"/>
			<member name="C:bak_amount" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:bak_money" value="1">
			</member>
		</member>
		<member name="T:e_betData" value="52">
			<tagname value="e_betData"/>
			<member name="C:bet_id" value="0">
			</member>
			<member name="C:bet_name" value="1">
				<size value="50"/>
			</member>
			<member name="C:bet_gang" value="51">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:e_businessData" value="89">
			<tagname value="e_businessData"/>
			<member name="C:business_name" value="0">
				<size value="50"/>
			</member>
			<member name="C:business_ownerid" value="50">
			</member>
			<member name="C:business_type" value="51">
			</member>
			<member name="C:business_cost" value="52">
			</member>
			<member name="C:business_position" value="53">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:business_worldid" value="56">
			</member>
			<member name="C:business_reward" value="57">
			</member>
			<member name="C:business_price" value="58">
			</member>
			<member name="C:business_ownername" value="59">
				<size value="25"/>
			</member>
			<member name="C:business_license" value="84">
				<tagname value="bool"/>
			</member>
			<member name="C:business_pickup" value="85">
			</member>
			<member name="C:business_pickupExit" value="86">
			</member>
			<member name="C:business_label" value="87">
				<tagname value="Text3D"/>
			</member>
			<member name="C:business_icon" value="88">
			</member>
		</member>
		<member name="T:e_chowanyDataArena" value="38">
			<tagname value="e_chowanyDataArena"/>
			<member name="C:chowany_name" value="0">
				<size value="25"/>
			</member>
			<member name="C:chowany_area" value="25">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:chowany_seeker" value="29">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:chowany_hideer" value="33">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:chowany_interior" value="37">
			</member>
		</member>
		<member name="T:e_corpsNames" value="100">
			<tagname value="e_corpsNames"/>
			<member name="C:corp_name" value="0">
				<size value="50"/>
			</member>
			<member name="C:corp_alt" value="50">
				<size value="50"/>
			</member>
		</member>
		<member name="T:e_creditData" value="2">
			<tagname value="e_creditData"/>
			<member name="C:credit_cost" value="0">
			</member>
			<member name="C:credit_level" value="1">
			</member>
		</member>
		<member name="T:e_deathArenaKills" value="3">
			<tagname value="e_deathArenaKills"/>
			<member name="C:da_id" value="0">
			</member>
			<member name="C:da_kills" value="1">
			</member>
			<member name="C:da_damage" value="2">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:e_drivingExamData" value="22">
			<tagname value="e_drivingExamData"/>
			<member name="C:exam_type" value="0">
			</member>
			<member name="C:exam_name" value="1">
				<size value="20"/>
			</member>
			<member name="C:exam_cost" value="21">
			</member>
		</member>
		<member name="T:e_eventPanelData" value="155">
			<tagname value="e_eventPanelData"/>
			<member name="C:event_id" value="0">
			</member>
			<member name="C:event_cmd" value="1">
				<size value="25"/>
			</member>
			<member name="C:event_description" value="26">
				<size value="128"/>
			</member>
			<member name="C:event_params" value="154">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:e_fishBaitData" value="53">
			<tagname value="e_fishBaitData"/>
			<member name="C:fish_bait_type" value="0">
			</member>
			<member name="C:fish_bait_name" value="1">
				<size value="50"/>
			</member>
			<member name="C:fish_bait_money" value="51">
			</member>
			<member name="C:fish_bait_chance" value="52">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:e_fishData" value="55">
			<tagname value="e_fishData"/>
			<member name="C:fish_name" value="0">
				<size value="50"/>
			</member>
			<member name="C:fish_respect" value="50">
			</member>
			<member name="C:fish_money" value="51">
			</member>
			<member name="C:fish_weight" value="52">
				<tagname value="Float"/>
				<size value="2"/>
			</member>
			<member name="C:fish_class" value="54">
			</member>
		</member>
		<member name="T:e_fishRodeData" value="28">
			<tagname value="e_fishRodeData"/>
			<member name="C:fish_rode_type" value="0">
			</member>
			<member name="C:fish_rode_name" value="1">
				<size value="25"/>
			</member>
			<member name="C:fish_rode_money" value="26">
			</member>
			<member name="C:fish_rode_amount" value="27">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:e_fishUlepszeniaData" value="92">
			<tagname value="e_fishUlepszeniaData"/>
			<member name="C:fish_ulep_id" value="0">
			</member>
			<member name="C:fish_ulep_name" value="1">
				<size value="90"/>
			</member>
			<member name="C:fish_ulep_money" value="91">
			</member>
		</member>
		<member name="T:e_gangAchievementData" value="308">
			<tagname value="e_gangAchievementData"/>
			<member name="C:gang_achievement_id" value="0">
			</member>
			<member name="C:gang_achievement_name" value="1">
				<size value="50"/>
			</member>
			<member name="C:gang_achievement_description" value="51">
				<size value="255"/>
			</member>
			<member name="C:gang_achievement_needed" value="306">
			</member>
			<member name="C:gang_achievement_reward" value="307">
			</member>
		</member>
		<member name="T:e_gangBasesData" value="11">
			<tagname value="e_gangBasesData"/>
			<member name="C:base_position" value="0">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:base_spawn" value="4">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:base_pickup" value="8">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
		</member>
		<member name="T:e_gangData" value="139">
			<tagname value="e_gangData"/>
			<member name="C:gang_name" value="0">
				<size value="50"/>
			</member>
			<member name="C:gang_tag" value="50">
				<size value="20"/>
			</member>
			<member name="C:gang_color" value="70">
			</member>
			<member name="C:gang_ownerid" value="71">
			</member>
			<member name="C:gang_draw" value="72">
				<tagname value="Text"/>
				<size value="3"/>
			</member>
			<member name="C:gang_level" value="75">
			</member>
			<member name="C:gang_respect" value="76">
			</member>
			<member name="C:gang_respect_needed" value="77">
			</member>
			<member name="C:gang_slots" value="78">
			</member>
			<member name="C:gang_place" value="79">
			</member>
			<member name="C:gang_rankDefault" value="80">
				<size value="50"/>
			</member>
			<member name="C:gang_battleZone" value="130">
			</member>
			<member name="C:gang_spar_win" value="131">
			</member>
			<member name="C:gang_spar_loss" value="132">
			</member>
			<member name="C:gang_spar_remis" value="133">
			</member>
			<member name="C:gang_kills" value="134">
			</member>
			<member name="C:gang_deaths" value="135">
			</member>
			<member name="C:gang_budget" value="136">
			</member>
			<member name="C:gang_budgetDraw" value="137">
				<tagname value="Text"/>
				<size value="2"/>
			</member>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="T:e_gangUlepszeniaData" value="26">
			<tagname value="e_gangUlepszeniaData"/>
			<member name="C:gang_ulep_name" value="0">
				<size value="25"/>
			</member>
			<member name="C:gang_ulep_cost" value="25">
			</member>
		</member>
		<member name="T:e_helpAdminCMD" value="155">
			<tagname value="e_helpAdminCMD"/>
			<member name="C:cmd_name" value="0">
				<size value="25"/>
			</member>
			<member name="C:cmd_description" value="25">
				<size value="128"/>
			</member>
			<member name="C:cmd_admin" value="153">
			</member>
			<member name="C:cmd_level" value="154">
			</member>
		</member>
		<member name="T:e_interiorDataList" value="55">
			<tagname value="e_interiorDataList"/>
			<member name="C:int_name" value="0">
				<size value="50"/>
			</member>
			<member name="C:int_pos" value="50">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:int_interior" value="54">
			</member>
		</member>
		<member name="T:e_jobUlepszeniaData" value="27">
			<tagname value="e_jobUlepszeniaData"/>
			<member name="C:job_ulep_id" value="0">
			</member>
			<member name="C:job_ulep_name" value="1">
				<size value="25"/>
			</member>
			<member name="C:job_ulep_points" value="26">
			</member>
		</member>
		<member name="T:e_mineData" value="32">
			<tagname value="e_mineData"/>
			<member name="C:mine_name" value="0">
				<size value="30"/>
			</member>
			<member name="C:mine_color" value="30">
			</member>
			<member name="C:mine_money" value="31">
			</member>
		</member>
		<member name="T:e_playerData" value="2764">
			<tagname value="e_playerData"/>
			<member name="C:player_logged" value="0">
				<tagname value="bool"/>
			</member>
			<member name="C:player_accountID" value="1">
			</member>
			<member name="C:player_password" value="2">
				<size value="130"/>
			</member>
			<member name="C:player_attempts" value="132">
			</member>
			<member name="C:player_visits" value="133">
			</member>
			<member name="C:player_iplast" value="134">
				<size value="18"/>
			</member>
			<member name="C:player_datelast" value="152">
				<size value="65"/>
			</member>
			<member name="C:player_admin" value="217">
			</member>
			<member name="C:player_adminLevel" value="218">
			</member>
			<member name="C:player_adminLoad" value="219">
			</member>
			<member name="C:player_adminPass" value="220">
				<size value="65"/>
			</member>
			<member name="C:player_adminTime" value="285">
			</member>
			<member name="C:player_adminData" value="286">
				<size value="255"/>
			</member>
			<member name="C:player_adminPoints" value="541">
			</member>
			<member name="C:player_adminPenalty" value="542">
				<size value="5"/>
			</member>
			<member name="C:player_eventPoints" value="547">
			</member>
			<member name="C:player_eventCount" value="548">
			</member>
			<member name="C:player_money" value="549">
			</member>
			<member name="C:player_kills" value="550">
			</member>
			<member name="C:player_deaths" value="551">
			</member>
			<member name="C:player_suicides" value="552">
			</member>
			<member name="C:player_online" value="553">
			</member>
			<member name="C:player_session" value="554">
			</member>
			<member name="C:player_hourGame" value="555">
			</member>
			<member name="C:player_gangManage" value="556">
				<size value="255"/>
			</member>
			<member name="C:player_level" value="811">
			</member>
			<member name="C:player_score" value="812">
			</member>
			<member name="C:player_score_needed" value="813">
			</member>
			<member name="C:player_god" value="814">
				<tagname value="bool"/>
			</member>
			<member name="C:player_teleportCategory" value="815">
			</member>
			<member name="C:player_saveData" value="816">
				<size value="255"/>
			</member>
			<member name="C:player_sparingZestaw" value="1071">
			</member>
			<member name="C:player_sparingData" value="1072">
				<size value="5"/>
			</member>
			<member name="C:player_sparingGangSpec" value="1077">
			</member>
			<member name="C:player_saveHealthArmour" value="1078">
				<tagname value="Float"/>
				<size value="2"/>
			</member>
			<member name="C:player_savePosition" value="1080">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:player_saveSkin" value="1084">
			</member>
			<member name="C:player_saveColor" value="1085">
			</member>
			<member name="C:player_saveWorld" value="1086">
			</member>
			<member name="C:player_saveInterior" value="1087">
			</member>
			<member name="C:player_saveWeaponData" value="1088">
				<size value="13"/>
			</member>
			<member name="C:player_saveAmmoData" value="1101">
				<size value="13"/>
			</member>
			<member name="C:player_loginTime" value="1114">
			</member>
			<member name="C:player_nickname" value="1115">
				<size value="25"/>
			</member>
			<member name="C:player_ipaddress" value="1140">
				<size value="18"/>
			</member>
			<member name="C:player_teleportData" value="1158">
				<size value="100"/>
			</member>
			<member name="C:player_gangData" value="1258">
				<size value="50"/>
			</member>
			<member name="C:player_skin" value="1308">
			</member>
			<member name="C:player_pickupTimer" value="1309">
			</member>
			<member name="C:player_nickTimer" value="1310">
			</member>
			<member name="C:player_spawnData" value="1311">
			</member>
			<member name="C:player_lastPos" value="1312">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:player_lastInterior" value="1316">
			</member>
			<member name="C:player_onUpdate" value="1317">
			</member>
			<member name="C:player_premiumTime" value="1318">
			</member>
			<member name="C:player_mutetime" value="1319">
			</member>
			<member name="C:player_warns" value="1320">
			</member>
			<member name="C:player_jailtime" value="1321">
			</member>
			<member name="C:player_checkMuted" value="1322">
				<tagname value="bool"/>
			</member>
			<member name="C:player_serial" value="1323">
				<size value="65"/>
			</member>
			<member name="C:player_banData" value="1388">
				<size value="255"/>
			</member>
			<member name="C:player_antySK" value="1643">
			</member>
			<member name="C:player_label" value="1644">
				<tagname value="Text3D"/>
			</member>
			<member name="C:player_levelPoints" value="1645">
			</member>
			<member name="C:player_heist_attempt" value="1646">
			</member>
			<member name="C:player_countdown" value="1647">
			</member>
			<member name="C:player_vault" value="1648">
				<tagname value="bool"/>
			</member>
			<member name="C:player_objectData" value="1649">
				<size value="255"/>
			</member>
			<member name="C:player_fps" value="1904">
			</member>
			<member name="C:player_drunk" value="1905">
			</member>
			<member name="C:player_battleTimer" value="1906">
			</member>
			<member name="C:player_antySpam" value="1907">
			</member>
			<member name="C:player_lastmessage" value="1908">
				<size value="144"/>
			</member>
			<member name="C:player_floodCounter" value="2052">
			</member>
			<member name="C:player_floodTimer" value="2053">
				<size value="2"/>
			</member>
			<member name="C:player_lastPM" value="2055">
			</member>
			<member name="C:player_raportData" value="2056">
				<size value="40"/>
			</member>
			<member name="C:player_country" value="2096">
				<size value="45"/>
			</member>
			<member name="C:player_city" value="2141">
				<size value="109"/>
			</member>
			<member name="C:player_isp" value="2250">
				<size value="95"/>
			</member>
			<member name="C:player_zone_damage" value="2345">
				<tagname value="Float"/>
			</member>
			<member name="C:player_bonus_vcxz" value="2346">
				<tagname value="bool"/>
			</member>
			<member name="C:player_robbed" value="2347">
			</member>
			<member name="C:player_teleportTimer" value="2348">
			</member>
			<member name="C:player_teleportRequest" value="2349">
			</member>
			<member name="C:player_checkPM" value="2350">
				<tagname value="bool"/>
			</member>
			<member name="C:player_checkCMD" value="2351">
				<tagname value="bool"/>
			</member>
			<member name="C:player_fakeNick" value="2352">
				<size value="25"/>
			</member>
			<member name="C:player_isFake" value="2377">
				<tagname value="bool"/>
			</member>
			<member name="C:player_job_points" value="2378">
			</member>
			<member name="C:player_eventData" value="2379">
				<size value="255"/>
			</member>
			<member name="C:player_chatID" value="2634">
			</member>
			<member name="C:player_gang_loan" value="2635">
				<tagname value="bool"/>
			</member>
			<member name="C:player_gang_loan_expire" value="2636">
			</member>
			<member name="C:player_holding" value="2637">
				<tagname value="bool"/>
			</member>
			<member name="C:player_quizDone" value="2638">
				<tagname value="bool"/>
			</member>
			<member name="C:player_respawn" value="2639">
				<tagname value="bool"/>
			</member>
			<member name="C:player_gangBases" value="2640">
				<size value="10"/>
			</member>
			<member name="C:player_warTeam" value="2650">
			</member>
			<member name="C:player_killstreak" value="2651">
			</member>
			<member name="C:player_beststreak" value="2652">
			</member>
			<member name="C:player_gangbase" value="2653">
			</member>
			<member name="C:player_betdata" value="2654">
				<size value="5"/>
			</member>
			<member name="C:player_fightstyle" value="2659">
			</member>
			<member name="C:player_createdVehicle" value="2660">
			</member>
			<member name="C:player_businessData" value="2661">
				<size value="100"/>
			</member>
			<member name="C:player_business" value="2761">
			</member>
			<member name="C:player_poolID" value="2762">
			</member>
			<member name="C:player_sparspec" value="2763">
				<tagname value="bool"/>
			</member>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="T:e_questListData" value="257">
			<tagname value="e_questListData"/>
			<member name="C:daily_id" value="0">
			</member>
			<member name="C:daily_name" value="1">
				<size value="255"/>
			</member>
			<member name="C:daily_required" value="256">
			</member>
		</member>
		<member name="T:e_quizData" value="106">
			<tagname value="e_quizData"/>
			<member name="C:quiz_active" value="0">
				<tagname value="bool"/>
			</member>
			<member name="C:quiz_type" value="1">
			</member>
			<member name="C:quiz_buffer" value="2">
				<size value="50"/>
			</member>
			<member name="C:quiz_result" value="52">
			</member>
			<member name="C:quiz_tick" value="53">
			</member>
			<member name="C:quiz_timer" value="54">
			</member>
			<member name="C:quiz_saveBuffer" value="55">
				<size value="50"/>
			</member>
			<member name="C:quiz_count" value="105">
			</member>
		</member>
		<member name="T:e_radioData" value="290">
			<tagname value="e_radioData"/>
			<member name="C:radio_name" value="0">
				<size value="35"/>
			</member>
			<member name="C:radio_url" value="35">
				<size value="255"/>
			</member>
		</member>
		<member name="T:e_raportData" value="197">
			<tagname value="e_raportData"/>
			<member name="C:raport_senderid" value="0">
			</member>
			<member name="C:raport_targetid" value="1">
			</member>
			<member name="C:raport_date" value="2">
				<size value="50"/>
			</member>
			<member name="C:raport_reason" value="52">
				<size value="144"/>
			</member>
			<member name="C:raport_active" value="196">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:e_royaleDataAreny" value="58">
			<tagname value="e_royaleDataAreny"/>
			<member name="C:royale_name" value="0">
				<size value="50"/>
			</member>
			<member name="C:royale_spawn" value="50">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:royale_zone" value="54">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
		</member>
		<member name="T:e_sparingDataAreny" value="39">
			<tagname value="e_sparingDataAreny"/>
			<member name="C:sparing_name" value="0">
				<size value="30"/>
			</member>
			<member name="C:sparing_att" value="30">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:sparing_def" value="34">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:sparing_interior" value="38">
			</member>
		</member>
		<member name="T:e_sparingKillerData" value="3">
			<tagname value="e_sparingKillerData"/>
			<member name="C:sparing_playerid" value="0">
			</member>
			<member name="C:sparing_kills" value="1">
			</member>
			<member name="C:sparing_damage" value="2">
				<tagname value="Float"/>
			</member>
			<referrer name="ResetGangData"/>
			<referrer name="StopSparing"/>
		</member>
		<member name="T:e_taxiPositionData" value="8">
			<tagname value="e_taxiPositionData"/>
			<member name="C:taxi_actor" value="0">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:taxi_cp" value="4">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
		</member>
		<member name="T:e_teleportData" value="77">
			<tagname value="e_teleportData"/>
			<member name="C:teleport_name" value="0">
				<size value="50"/>
			</member>
			<member name="C:teleport_cmd" value="50">
				<size value="20"/>
			</member>
			<member name="C:teleport_category" value="70">
			</member>
			<member name="C:teleport_x" value="71">
				<tagname value="Float"/>
			</member>
			<member name="C:teleport_y" value="72">
				<tagname value="Float"/>
			</member>
			<member name="C:teleport_z" value="73">
				<tagname value="Float"/>
			</member>
			<member name="C:teleport_a" value="74">
				<tagname value="Float"/>
			</member>
			<member name="C:teleport_interior" value="75">
			</member>
			<member name="C:teleport_spawn" value="76">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:e_towaryData" value="33">
			<tagname value="e_towaryData"/>
			<member name="C:towar_name" value="0">
				<size value="30"/>
			</member>
			<member name="C:towar_money" value="30">
				<size value="2"/>
			</member>
			<member name="C:towar_premium" value="32">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:e_ulepszeniaData" value="307">
			<tagname value="e_ulepszeniaData"/>
			<member name="C:ulep_id" value="0">
			</member>
			<member name="C:ulep_name" value="1">
				<size value="50"/>
			</member>
			<member name="C:ulep_description" value="51">
				<size value="255"/>
			</member>
			<member name="C:ulep_money" value="306">
			</member>
		</member>
		<member name="T:e_ulepszeniaPojazdData" value="307">
			<tagname value="e_ulepszeniaPojazdData"/>
			<member name="C:ulep_id" value="0">
			</member>
			<member name="C:ulep_name" value="1">
				<size value="50"/>
			</member>
			<member name="C:ulep_description" value="51">
				<size value="255"/>
			</member>
			<member name="C:ulep_money" value="306">
			</member>
		</member>
		<member name="T:e_vaultHeistData" value="4">
			<tagname value="e_vaultHeistData"/>
			<member name="C:vault_robbed" value="0">
				<tagname value="bool"/>
			</member>
			<member name="C:vault_gas" value="1">
			</member>
			<member name="C:vault_label" value="2">
				<tagname value="Text3D"/>
			</member>
			<member name="C:vault_reward" value="3">
			</member>
		</member>
		<member name="T:e_warePaczkaData" value="27">
			<tagname value="e_warePaczkaData"/>
			<member name="C:ware_name" value="0">
				<size value="25"/>
			</member>
			<member name="C:ware_money" value="25">
			</member>
			<member name="C:ware_premium" value="26">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:e_weaponShopData" value="54">
			<tagname value="e_weaponShopData"/>
			<member name="C:weapon_id" value="0">
			</member>
			<member name="C:weapon_name" value="1">
				<size value="50"/>
			</member>
			<member name="C:weapon_money" value="51">
			</member>
			<member name="C:weapon_bonus" value="52">
				<tagname value="bool"/>
			</member>
			<member name="C:weapon_type" value="53">
			</member>
		</member>
		<member name="T:e_wipeoutObjectPosition" value="6">
			<tagname value="e_wipeoutObjectPosition"/>
			<member name="C:wipeout_start_pos" value="0">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
			<member name="C:wipeout_last_pos" value="3">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
		</member>
		<member name="T:e_zoneNameData" value="56">
			<tagname value="e_zoneNameData"/>
			<member name="C:zone_name" value="0">
				<size value="50"/>
			</member>
			<member name="C:zone_minx" value="50">
				<tagname value="Float"/>
			</member>
			<member name="C:zone_miny" value="51">
				<tagname value="Float"/>
			</member>
			<member name="C:zone_minz" value="52">
				<tagname value="Float"/>
			</member>
			<member name="C:zone_maxx" value="53">
				<tagname value="Float"/>
			</member>
			<member name="C:zone_maxy" value="54">
				<tagname value="Float"/>
			</member>
			<member name="C:zone_maxz" value="55">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:g_eMenuModelData" value="72">
			<member name="C:g_eMenuModel" value="0">
			</member>
			<member name="C:g_eMenuModelText" value="1">
			</member>
			<member name="C:g_eItemUseRotation" value="65">
			</member>
			<member name="C:g_eItemRotX" value="66">
			</member>
			<member name="C:g_eItemRotY" value="67">
			</member>
			<member name="C:g_eItemRotZ" value="68">
			</member>
			<member name="C:g_eItemZoom" value="69">
			</member>
			<member name="C:g_eItemVehicleColor" value="70">
			</member>
			<referrer name="AddModelMenuItem"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
		</member>
		<member name="T:ndialogpages_data" value="1245">
			<tagname value="ndialogpages_data"/>
			<member name="C:ndp_dialogopened" value="0">
				<tagname value="bool"/>
			</member>
			<member name="C:ndp_isstylepage" value="1">
				<tagname value="bool"/>
			</member>
			<member name="C:ndp_dialogitemscount" value="2">
			</member>
			<member name="C:ndp_amountperpage" value="3">
			</member>
			<member name="C:ndp_endindex" value="4">
				<size value="500"/>
			</member>
			<member name="C:ndp_itemsonpage" value="504">
			</member>
			<member name="C:ndp_page" value="505">
			</member>
			<member name="C:ndp_caption" value="506">
				<size value="64"/>
			</member>
			<member name="C:ndp_button1" value="570">
				<size value="64"/>
			</member>
			<member name="C:ndp_button2" value="634">
				<size value="64"/>
			</member>
			<member name="C:ndp_nextbutton" value="698">
				<size value="256"/>
			</member>
			<member name="C:ndp_backbutton" value="954">
				<size value="256"/>
			</member>
			<member name="C:ndp_style" value="1210">
			</member>
			<member name="C:ndp_dialogid" value="1211">
			</member>
			<member name="C:ndp_type" value="1212">
			</member>
			<member name="C:ndp_dialogName" value="1213">
				<size value="32"/>
			</member>
		</member>
		<member name="T:zoneInfo" value="22">
			<tagname value="zoneInfo"/>
			<member name="C:zExists" value="0">
				<tagname value="bool"/>
			</member>
			<member name="C:zIsUsingNumbers" value="1">
				<tagname value="bool"/>
			</member>
			<member name="C:zIsUsingBorders" value="2">
				<tagname value="bool"/>
			</member>
			<member name="C:zPosCords" value="3">
				<tagname value="Float"/>
				<size value="4"/>
			</member>
			<member name="C:zMainID" value="7">
			</member>
			<member name="C:npart" value="8">
				<size value="5"/>
			</member>
			<member name="C:npart2" value="13">
				<size value="5"/>
			</member>
			<member name="C:border" value="18">
				<size value="4"/>
			</member>
		</member>

		<!-- constants -->
		<member name="C:ACH_BTR" value="23">
			<referrer name="UpdateBTR"/>
		</member>
		<member name="C:ACH_CH" value="24">
			<referrer name="StopChowany"/>
		</member>
		<member name="C:ACH_DA" value="25">
			<referrer name="StopDA"/>
		</member>
		<member name="C:ACH_DEATHS" value="1">
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="GetPlayerBudget"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="C:ACH_DISKS" value="8">
			<referrer name="_@yHOnDialogResponse@0B"/>
		</member>
		<member name="C:ACH_DRWAL" value="18">
			<referrer name="DrwalTree"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:ACH_DUEL" value="3">
			<referrer name="CheckDuel"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
		</member>
		<member name="C:ACH_FIGURKA" value="9">
			<referrer name="_@yHOnDialogResponse@0B"/>
		</member>
		<member name="C:ACH_GG" value="26">
			<referrer name="_@yHOnPlayerDeath@0u"/>
		</member>
		<member name="C:ACH_GORNIK" value="22">
			<referrer name="OnPlayerMining"/>
		</member>
		<member name="C:ACH_GRABARZ" value="13">
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:ACH_GRZYBIARZ" value="16">
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:ACH_HEIST" value="7">
			<referrer name="OnPlayerHeist"/>
		</member>
		<member name="C:ACH_JAIL" value="33">
			<referrer name="JailPlayer"/>
		</member>
		<member name="C:ACH_KILLS" value="0">
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="GetPlayerBudget"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="C:ACH_KONFIDENT" value="10">
		</member>
		<member name="C:ACH_KURCZAK" value="34">
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
		</member>
		<member name="C:ACH_LOYAL" value="2">
			<referrer name="SecondTimer"/>
		</member>
		<member name="C:ACH_MAGAZYNIER" value="12">
			<referrer name="MagazynPacked"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:ACH_MYSLIWY" value="15">
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:ACH_PEDOFIL" value="6">
			<referrer name="_@yHOnPlayerDeath@0@"/>
		</member>
		<member name="C:ACH_PRIVCAR" value="20">
			<referrer name="CreatePrivCar"/>
		</member>
		<member name="C:ACH_QUEST" value="5">
			<referrer name="pc_cmd_quest"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
		</member>
		<member name="C:ACH_QUIZ" value="4">
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="C:ACH_RC" value="27">
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
		</member>
		<member name="C:ACH_RYBAK" value="11">
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
		</member>
		<member name="C:ACH_SCHOOL" value="21">
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
		</member>
		<member name="C:ACH_SK" value="28">
			<referrer name="StopSK"/>
		</member>
		<member name="C:ACH_SM" value="29">
			<referrer name="StopSM"/>
		</member>
		<member name="C:ACH_TAXI" value="17">
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:ACH_TRUCK" value="19">
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Rozladuj"/>
		</member>
		<member name="C:ACH_WG" value="30">
			<referrer name="StopWG"/>
		</member>
		<member name="C:ACH_WP" value="31">
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
		</member>
		<member name="C:ACH_ZP" value="32">
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="C:ACH_ZRZUT" value="14">
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_AMX_VERSION" value="7">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_CIP" value="28">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_COD" value="12">
			<referrer name="GetAmxHeaderNow"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_DAT" value="16">
			<referrer name="GetAmxHeaderNow"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_DEFSIZE" value="10">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_FILE_VERSION" value="6">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_FLAGS" value="8">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_HEA" value="20">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_LIBRARIES" value="40">
			<referrer name="GetAmxHeaderNow"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_MAGIC" value="4">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_NAMETABLE" value="52">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_NATIVES" value="36">
			<referrer name="GetAmxHeaderNow"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_PUBLICS" value="32">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_PUBVARS" value="44">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_SIZE" value="0">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_STP" value="24">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:AMX_HDR_OFFSET_TAGS" value="48">
			<referrer name="GetAmxHeaderNow"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="C:BAR_DIRECTION_DOWN" value="3">
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
		</member>
		<member name="C:BAR_DIRECTION_LEFT" value="1">
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
		</member>
		<member name="C:BAR_DIRECTION_RIGHT" value="0">
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
		</member>
		<member name="C:BAR_DIRECTION_UP" value="2">
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
		</member>
		<member name="C:BUSINESS_BROTHEL" value="1">
			<referrer name="GetBusinessType"/>
		</member>
		<member name="C:BUSINESS_CASINO" value="0">
			<referrer name="GetBusinessType"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
		</member>
		<member name="C:BUSINESS_CLOTHES" value="2">
			<referrer name="GetBusinessType"/>
		</member>
		<member name="C:BUSINESS_GUNSHOP" value="3">
			<referrer name="GetBusinessType"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
		</member>
		<member name="C:DAMAGE_TYPE_MULTIPLIER" value="0">
			<referrer name="SetWeaponDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:DAMAGE_TYPE_RANGE" value="3">
			<referrer name="SetWeaponDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:DAMAGE_TYPE_RANGE_MULTIPLIER" value="2">
			<referrer name="SetWeaponDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:DAMAGE_TYPE_STATIC" value="1">
			<referrer name="SetWeaponDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:DIALOG_ACCOUNT_ANSWER" value="121">
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_ACCOUNT_CHAT" value="126">
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_ACCOUNT_PINCODE" value="122">
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_ACCOUNT_POSITION" value="125">
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_ACCOUNT_QUESTION" value="120">
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_ACCOUNT_SECURITY" value="119">
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_ACHIEVEMENTS" value="203">
			<referrer name="pc_cmd_osiagniecia"/>
			<referrer name="_@yHOnDialogResponse@04"/>
		</member>
		<member name="C:DIALOG_ACHIEVEMENT_LIST" value="204">
			<referrer name="ShowAchievementList"/>
			<referrer name="_@yHOnDialogResponse@04"/>
		</member>
		<member name="C:DIALOG_ADMIN_DUTY" value="72">
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
		</member>
		<member name="C:DIALOG_ADMIN_LEVEL" value="68">
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="C:DIALOG_ADMIN_LIST" value="66">
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="C:DIALOG_ADMIN_LOGIN" value="70">
			<referrer name="ShowAdminLogin"/>
			<referrer name="OnDialogAdminDuty"/>
		</member>
		<member name="C:DIALOG_ADMIN_PANEL" value="65">
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="C:DIALOG_ADMIN_PASSWORD" value="71">
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_setrank"/>
		</member>
		<member name="C:DIALOG_ADMIN_PASSWORD_CHANGE" value="73">
			<referrer name="OnDialogAdminDuty"/>
		</member>
		<member name="C:DIALOG_ADMIN_PERMISSION" value="67">
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="C:DIALOG_ADMIN_RANKING" value="74">
			<referrer name="OnDialogAdminDuty"/>
		</member>
		<member name="C:DIALOG_ADMIN_SELECT" value="69">
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="C:DIALOG_BANK_CREDIT" value="31">
			<referrer name="OnBankDialog"/>
		</member>
		<member name="C:DIALOG_BANK_KWOTA" value="30">
			<referrer name="OnBankDialog"/>
		</member>
		<member name="C:DIALOG_BANK_PANEL" value="26">
			<referrer name="ShowBankPanel"/>
			<referrer name="OnBankDialog"/>
		</member>
		<member name="C:DIALOG_BANK_PAYMENT" value="27">
			<referrer name="OnBankDialog"/>
		</member>
		<member name="C:DIALOG_BANK_PRZELEW" value="28">
			<referrer name="OnBankDialog"/>
		</member>
		<member name="C:DIALOG_BANK_TARGET" value="29">
			<referrer name="OnBankDialog"/>
		</member>
		<member name="C:DIALOG_BANLIST" value="32">
			<referrer name="pc_cmd_banlist"/>
			<referrer name="OnDialogBanList"/>
		</member>
		<member name="C:DIALOG_BAN_EXPIRE" value="35">
			<referrer name="OnDialogBanList"/>
		</member>
		<member name="C:DIALOG_BAN_MANAGE" value="33">
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
		</member>
		<member name="C:DIALOG_BAN_REASON" value="34">
			<referrer name="OnDialogBanList"/>
		</member>
		<member name="C:DIALOG_BASE_BUY" value="94">
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="C:DIALOG_BASE_COST" value="97">
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="C:DIALOG_BASE_MENU" value="98">
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_bazy"/>
		</member>
		<member name="C:DIALOG_BASE_NAME" value="96">
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="C:DIALOG_BASE_OBJECTS" value="103">
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
		</member>
		<member name="C:DIALOG_BASE_OBJECT_MENU" value="104">
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
		</member>
		<member name="C:DIALOG_BASE_PANEL" value="95">
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
		</member>
		<member name="C:DIALOG_BASE_SELL" value="99">
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="C:DIALOG_BASE_SELL_COST" value="102">
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="C:DIALOG_BASE_SELL_NAME" value="101">
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="C:DIALOG_BASE_SELL_PANEL" value="100">
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="C:DIALOG_BET_MONEY" value="131">
			<referrer name="_@yHOnDialogResponse@11"/>
		</member>
		<member name="C:DIALOG_BET_NEWBIE" value="127">
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
		</member>
		<member name="C:DIALOG_BET_REWARD" value="129">
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
		</member>
		<member name="C:DIALOG_BET_SELECT" value="128">
			<referrer name="_@yHOnDialogResponse@11"/>
		</member>
		<member name="C:DIALOG_BUSINESS_CREATOR" value="47">
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
		</member>
		<member name="C:DIALOG_BUSINESS_CREATOR_MONEY" value="50">
			<referrer name="_@yHOnDialogResponse@0b"/>
		</member>
		<member name="C:DIALOG_BUSINESS_CREATOR_NAME" value="48">
			<referrer name="_@yHOnDialogResponse@0b"/>
		</member>
		<member name="C:DIALOG_BUSINESS_MANAGE" value="52">
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
		</member>
		<member name="C:DIALOG_BUSINESS_PANEL" value="51">
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
		</member>
		<member name="C:DIALOG_BUSINESS_PRICE" value="54">
			<referrer name="OnBusinessResponse"/>
		</member>
		<member name="C:DIALOG_BUSINESS_RENAME" value="53">
			<referrer name="OnBusinessResponse"/>
		</member>
		<member name="C:DIALOG_BUSINESS_REWARD" value="55">
			<referrer name="OnBusinessResponse"/>
		</member>
		<member name="C:DIALOG_CASINO_SHOP" value="56">
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
		</member>
		<member name="C:DIALOG_CASINO_TOKEN_BUY" value="57">
			<referrer name="_@yHOnDialogResponse@0d"/>
		</member>
		<member name="C:DIALOG_CASINO_TOKEN_EXCHANGE" value="58">
			<referrer name="_@yHOnDialogResponse@0d"/>
		</member>
		<member name="C:DIALOG_DRIVING_EXAM" value="13">
			<referrer name="RunDriveExams"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
		</member>
		<member name="C:DIALOG_EVENT_COLOR" value="39">
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:DIALOG_EVENT_CONFIRM" value="37">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:DIALOG_EVENT_NAME" value="41">
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="C:DIALOG_EVENT_PANEL" value="36">
			<referrer name="pc_cmd_evpanel"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:DIALOG_EVENT_PARAMS" value="38">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:DIALOG_EVENT_SETTINGS" value="40">
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="C:DIALOG_EVENT_VEHICLE" value="43">
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="C:DIALOG_FISH_BAIT" value="109">
			<referrer name="ShowFishBaits"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
		</member>
		<member name="C:DIALOG_FISH_BAIT_AMOUNT" value="110">
			<referrer name="_@yHOnDialogResponse@0h"/>
		</member>
		<member name="C:DIALOG_FISH_CATEGORY" value="114">
			<referrer name="OnFishDialog"/>
		</member>
		<member name="C:DIALOG_FISH_LIST" value="113">
			<referrer name="OnFishDialog"/>
		</member>
		<member name="C:DIALOG_FISH_PANEL" value="112">
			<referrer name="pc_cmd_rybki"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
		</member>
		<member name="C:DIALOG_FISH_RODE" value="108">
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
		</member>
		<member name="C:DIALOG_FISH_SHOP" value="115">
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
		</member>
		<member name="C:DIALOG_FISH_ULEPSZENIA" value="111">
			<referrer name="ShowFishUlepszenia"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
		</member>
		<member name="C:DIALOG_GANG" value="150">
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
		</member>
		<member name="C:DIALOG_GANG_ACHIEVEMENTS" value="165">
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_CREATOR_COLOR" value="153">
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
		</member>
		<member name="C:DIALOG_GANG_CREATOR_NAME" value="151">
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
		</member>
		<member name="C:DIALOG_GANG_CREATOR_RESULT" value="154">
			<referrer name="OnDialogGangCreator"/>
		</member>
		<member name="C:DIALOG_GANG_CREATOR_TAG" value="152">
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
		</member>
		<member name="C:DIALOG_GANG_DELETE" value="171">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_HEIST" value="181">
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="_@yHOnDialogResponse@0Q"/>
		</member>
		<member name="C:DIALOG_GANG_INVITE" value="161">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_INVITE_LIST" value="162">
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_tzaproszenia"/>
		</member>
		<member name="C:DIALOG_GANG_LIST" value="163">
			<referrer name="ShowGangList"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_LOAN_CONFIRM" value="178">
			<referrer name="OnDialogGangMarket"/>
		</member>
		<member name="C:DIALOG_GANG_MANAGE_MEMBER" value="157">
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
		</member>
		<member name="C:DIALOG_GANG_MARKET" value="172">
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_MARKET_LIST" value="173">
			<referrer name="OnDialogGangMarket"/>
		</member>
		<member name="C:DIALOG_GANG_MARKET_LOAN" value="176">
			<referrer name="OnDialogGangMarket"/>
		</member>
		<member name="C:DIALOG_GANG_MARKET_TRANSFER" value="175">
			<referrer name="OnDialogGangMarket"/>
		</member>
		<member name="C:DIALOG_GANG_MARKET_TYPE" value="174">
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
		</member>
		<member name="C:DIALOG_GANG_MEMBERS" value="155">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_NEWBIE" value="156">
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
		</member>
		<member name="C:DIALOG_GANG_RANK_COLOR" value="159">
			<referrer name="OnDialogGangMember"/>
		</member>
		<member name="C:DIALOG_GANG_RANK_NAME" value="158">
			<referrer name="OnDialogGangMember"/>
		</member>
		<member name="C:DIALOG_GANG_RANK_PERMS" value="160">
			<referrer name="OnDialogGangMember"/>
		</member>
		<member name="C:DIALOG_GANG_RECOLOR" value="169">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_RENAME" value="167">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_REOWNER" value="170">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_RETAG" value="168">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_SETTINGS" value="166">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_TOP" value="182">
			<referrer name="ShowGangTop"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GANG_TRANSFER_CONFIRM" value="177">
			<referrer name="OnDialogGangMarket"/>
		</member>
		<member name="C:DIALOG_GANG_ULEPSZENIA" value="180">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_GIELDA_BUY" value="106">
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
		</member>
		<member name="C:DIALOG_GIELDA_MAIN" value="107">
			<referrer name="ShowGieldaPanel"/>
			<referrer name="OnDialogGielda"/>
		</member>
		<member name="C:DIALOG_GIELDA_SELL" value="105">
			<referrer name="GieldaSellPanel"/>
			<referrer name="OnDialogGielda"/>
		</member>
		<member name="C:DIALOG_GORNICTWO" value="195">
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
		</member>
		<member name="C:DIALOG_GORNICTWO_PLECAK" value="197">
			<referrer name="_@yHOnDialogResponse@0l"/>
		</member>
		<member name="C:DIALOG_HEIST_VAULT" value="9">
			<referrer name="ShowVaultDialog"/>
			<referrer name="OnDialogHeist"/>
		</member>
		<member name="C:DIALOG_HELP" value="22">
			<referrer name="pc_cmd_help"/>
			<referrer name="OnDialogHelp"/>
		</member>
		<member name="C:DIALOG_HELP_ADMIN" value="25">
			<referrer name="OnDialogHelp"/>
		</member>
		<member name="C:DIALOG_HELP_CMDLIST" value="24">
			<referrer name="OnDialogHelp"/>
			<referrer name="showPlayerCMD"/>
			<referrer name="pc_cmd_acmd"/>
		</member>
		<member name="C:DIALOG_HELP_CMDS" value="23">
			<referrer name="OnDialogHelp"/>
		</member>
		<member name="C:DIALOG_HUD" value="4">
			<referrer name="pc_cmd_hud"/>
			<referrer name="OnDialogHud"/>
		</member>
		<member name="C:DIALOG_HUD_COLOR" value="5">
			<referrer name="OnDialogHud"/>
		</member>
		<member name="C:DIALOG_INTERIORY" value="7">
			<referrer name="pc_cmd_interiory"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="C:DIALOG_KOLORY" value="3">
			<referrer name="pc_cmd_kolory"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="C:DIALOG_LAKIER_COLOR_A" value="11">
			<referrer name="pc_cmd_lakier"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="C:DIALOG_LAKIER_COLOR_B" value="12">
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="C:DIALOG_LOGIN" value="2">
			<referrer name="ShowLoginPanel"/>
			<referrer name="OnDialogAccount"/>
		</member>
		<member name="C:DIALOG_NEW_NICK" value="117">
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_NEW_PASSWORD" value="118">
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_OWNRANK_COLOR" value="191">
			<referrer name="OnDialogOwnRank"/>
		</member>
		<member name="C:DIALOG_OWNRANK_EDIT_COLOR" value="194">
			<referrer name="OnDialogOwnRank"/>
		</member>
		<member name="C:DIALOG_OWNRANK_EDIT_NAME" value="193">
			<referrer name="OnDialogOwnRank"/>
		</member>
		<member name="C:DIALOG_OWNRANK_NAME" value="190">
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
		</member>
		<member name="C:DIALOG_OWNRANK_PANEL" value="192">
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
		</member>
		<member name="C:DIALOG_PICKAXE_MANAGE" value="196">
			<referrer name="_@yHOnDialogResponse@0l"/>
		</member>
		<member name="C:DIALOG_PICKAXE_NAME" value="198">
			<referrer name="_@yHOnDialogResponse@0l"/>
		</member>
		<member name="C:DIALOG_PINCODE_LOGIN" value="124">
			<referrer name="ShowPinCodePanel"/>
			<referrer name="OnDialogAccount"/>
		</member>
		<member name="C:DIALOG_POJAZDY" value="8">
			<referrer name="pc_cmd_v"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="C:DIALOG_PRACA_LIST" value="133">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:DIALOG_PRACA_PANEL" value="132">
			<referrer name="RunJobPanel"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:DIALOG_PRACA_REWARD" value="134">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:DIALOG_PRACA_TOP" value="136">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:DIALOG_PRACA_ULEPSZENIA" value="135">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_ATTACHMENT" value="88">
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_ATTACH_SELECT" value="89">
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_BUY" value="76">
			<referrer name="OnDialogPrivCars"/>
			<referrer name="OnDialogPrivCarBuy"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_ENGINE" value="93">
			<referrer name="ShowEngineSelect"/>
			<referrer name="OnDialogPrivCarBuy"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_ETYKIETA" value="78">
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_ETYKIETA_COLOR" value="80">
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_GIVE_KEYS" value="82">
			<referrer name="OnDialogPrivCarKeys"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_HEADER" value="79">
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_KEYS" value="81">
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_MANAGE" value="77">
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="OnDialogPrivCarKeys"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_MODEL" value="92">
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_NEWBIE" value="75">
			<referrer name="OnDialogPrivCars"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pp"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_PLATE" value="84">
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_PLATE_COLOR" value="85">
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_PLATE_NAME" value="86">
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_TELEPORT" value="87">
			<referrer name="OnDialogPrivCars"/>
			<referrer name="RunPrivCarList"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_ULEPSZENIA" value="90">
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
		</member>
		<member name="C:DIALOG_PRIVCAR_ULEPSZENIA_BUY" value="91">
			<referrer name="OnDialogPrivCarUlepszenia"/>
		</member>
		<member name="C:DIALOG_QUEST" value="6">
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
		</member>
		<member name="C:DIALOG_QUESTION_LOGIN" value="123">
			<referrer name="ShowQuestionPanel"/>
			<referrer name="OnDialogAccount"/>
		</member>
		<member name="C:DIALOG_RACE_CREATOR" value="147">
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="OnDialogRaceCreator"/>
		</member>
		<member name="C:DIALOG_RACE_CREATOR_NAME" value="148">
			<referrer name="OnDialogRaceCreator"/>
		</member>
		<member name="C:DIALOG_RACE_CREATOR_VEHICLE" value="149">
			<referrer name="OnDialogRaceCreator"/>
		</member>
		<member name="C:DIALOG_RANKING" value="10">
			<referrer name="pc_cmd_top"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
		</member>
		<member name="C:DIALOG_RAPORTY" value="18">
			<referrer name="pc_cmd_raporty"/>
			<referrer name="OnDialogRaport"/>
		</member>
		<member name="C:DIALOG_RAPORT_PANEL" value="19">
			<referrer name="RunRaportManage"/>
			<referrer name="OnDialogRaport"/>
		</member>
		<member name="C:DIALOG_RAPORT_PUNISH" value="20">
			<referrer name="OnDialogRaport"/>
		</member>
		<member name="C:DIALOG_RAPORT_PUNISH_PARAMS" value="21">
			<referrer name="OnDialogRaport"/>
		</member>
		<member name="C:DIALOG_REGISTER" value="1">
			<referrer name="ShowRegisterPanel"/>
			<referrer name="OnDialogAccount"/>
		</member>
		<member name="C:DIALOG_ROULETTE_NUMBER" value="61">
			<referrer name="_@yHOnDialogResponse@0d"/>
		</member>
		<member name="C:DIALOG_ROULETTE_PANEL" value="59">
			<referrer name="ShowRoulettePanel"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
		</member>
		<member name="C:DIALOG_ROULETTE_TOKEN" value="60">
			<referrer name="_@yHOnDialogResponse@0d"/>
		</member>
		<member name="C:DIALOG_SETTINGS" value="116">
			<referrer name="pc_cmd_konto"/>
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="C:DIALOG_SPARING_ARENY" value="187">
			<referrer name="OnDialogSparing"/>
		</member>
		<member name="C:DIALOG_SPARING_LIMIT" value="185">
			<referrer name="OnDialogSparing"/>
		</member>
		<member name="C:DIALOG_SPARING_OPTION" value="184">
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
		</member>
		<member name="C:DIALOG_SPARING_PANEL" value="183">
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:DIALOG_SPARING_SPECTATE" value="189">
			<referrer name="OnDialogSparing"/>
			<referrer name="ShowSparingPanel"/>
		</member>
		<member name="C:DIALOG_SPARING_TIME" value="186">
			<referrer name="OnDialogSparing"/>
		</member>
		<member name="C:DIALOG_SPARING_ZESTAW" value="188">
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingCountDown"/>
		</member>
		<member name="C:DIALOG_TELEPORT_CATEGORY" value="138">
			<referrer name="pc_cmd_teles"/>
			<referrer name="OnDialogTeleport"/>
		</member>
		<member name="C:DIALOG_TELEPORT_CHANGE" value="144">
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="ShowTeleportManage"/>
		</member>
		<member name="C:DIALOG_TELEPORT_COMMAND" value="141">
			<referrer name="OnDialogTeleportCreator"/>
		</member>
		<member name="C:DIALOG_TELEPORT_CREATOR" value="140">
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
		</member>
		<member name="C:DIALOG_TELEPORT_EDIT_CMD" value="146">
			<referrer name="OnDialogTeleportManage"/>
		</member>
		<member name="C:DIALOG_TELEPORT_EDIT_NAME" value="145">
			<referrer name="OnDialogTeleportManage"/>
		</member>
		<member name="C:DIALOG_TELEPORT_LIST" value="142">
			<referrer name="pc_cmd_tplist"/>
			<referrer name="OnDialogTeleportManage"/>
		</member>
		<member name="C:DIALOG_TELEPORT_MANAGE" value="143">
			<referrer name="OnDialogTeleportManage"/>
		</member>
		<member name="C:DIALOG_TELEPORT_NAME" value="139">
			<referrer name="OnDialogTeleportCreator"/>
		</member>
		<member name="C:DIALOG_TELEPORT_SELECT" value="137">
			<referrer name="OnDialogTeleport"/>
			<referrer name="ShowTeleports"/>
		</member>
		<member name="C:DIALOG_TRUCK_NEWBIE" value="46">
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="pc_cmd_truck"/>
		</member>
		<member name="C:DIALOG_TRUCK_PANEL" value="44">
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
		</member>
		<member name="C:DIALOG_TRUCK_TOWAR" value="45">
			<referrer name="_@yHOnDialogResponse@0F"/>
		</member>
		<member name="C:DIALOG_TUTORIAL" value="14">
			<referrer name="ShowTutorial"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
		</member>
		<member name="C:DIALOG_ULEPSZENIA" value="199">
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="pc_cmd_ulepszenia"/>
		</member>
		<member name="C:DIALOG_ULEPSZENIA_LEVEL" value="201">
			<referrer name="OnDialogUlepszenia"/>
		</member>
		<member name="C:DIALOG_ULEPSZENIA_SELECT" value="200">
			<referrer name="OnDialogUlepszenia"/>
		</member>
		<member name="C:DIALOG_ULEPSZENIE_BUY" value="202">
			<referrer name="OnDialogUlepszenia"/>
		</member>
		<member name="C:DIALOG_UNUSED" value="0">
			<referrer name="pc_cmd_rekordy"/>
			<referrer name="ulepszenieError"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="pc_cmd_anims"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="gangRankError"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="CheckSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="pc_cmd_fishevent"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="pc_cmd_oreevent"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="StopDA"/>
			<referrer name="KickPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="CheckPlayerMuted"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="pc_cmd_autor"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_taryfikator"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="syntaxError"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="valueError"/>
			<referrer name="ShowRegulamin"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="SecondTimer"/>
			<referrer name="pc_cmd_nowosci"/>
		</member>
		<member name="C:DIALOG_WARGAME_CREATOR" value="15">
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
		</member>
		<member name="C:DIALOG_WARGAME_NAME" value="16">
			<referrer name="_@yHOnDialogResponse@0o"/>
		</member>
		<member name="C:DIALOG_WARGAME_WEAPONS" value="17">
			<referrer name="_@yHOnDialogResponse@0o"/>
		</member>
		<member name="C:DUEL_RANK_BRONZE" value="0">
			<referrer name="getDuelPoints"/>
			<referrer name="getDuelName"/>
			<referrer name="CheckDuelRank"/>
		</member>
		<member name="C:DUEL_RANK_CHAMPION" value="4">
			<referrer name="getDuelPoints"/>
			<referrer name="getDuelName"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="RunPlayerStats"/>
		</member>
		<member name="C:DUEL_RANK_DIAMOND" value="3">
			<referrer name="getDuelPoints"/>
			<referrer name="getDuelName"/>
		</member>
		<member name="C:DUEL_RANK_GOLD" value="2">
			<referrer name="getDuelPoints"/>
			<referrer name="getDuelName"/>
		</member>
		<member name="C:DUEL_RANK_SILVER" value="1">
			<referrer name="getDuelPoints"/>
			<referrer name="getDuelName"/>
		</member>
		<member name="C:EOS" value="0">
			<referrer name="T3_Init"/>
			<referrer name="Logger_Log"/>
			<referrer name="Logger_Dbg"/>
			<referrer name="Logger_Err"/>
			<referrer name="Logger_Fatal"/>
			<referrer name="Logger_EscapeQuote"/>
			<referrer name="CreateDesign"/>
			<referrer name="pc_cmd_rekordy"/>
			<referrer name="ulepszenieError"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="pc_cmd_ulepszenia"/>
			<referrer name="pc_cmd_osiagniecia"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="StartQuiz"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="OnDialogHud"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="pc_cmd_interiory"/>
			<referrer name="ShowBankPanel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="ShowVaultDialog"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="RunRaportManage"/>
			<referrer name="pc_cmd_top"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="RunDriveExams"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="pc_cmd_anims"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_truck"/>
			<referrer name="ShowTutorial"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="ShowTeleports"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="ShowTeleportManage"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="ShowEngineSelect"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="ShowGieldaPanel"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="SaveGang"/>
			<referrer name="gangRankError"/>
			<referrer name="ShowGangTop"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangList"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="CheckSparing"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="RunJobPanel"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="CreateBusiness"/>
			<referrer name="pc_cmd_rybki"/>
			<referrer name="pc_cmd_fishevent"/>
			<referrer name="OnFishDialog"/>
			<referrer name="ShowFishUlepszenia"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="ShowFishBaits"/>
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="pc_cmd_oreevent"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="StopDA"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evpanel"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="CheckPlayerMuted"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="ShowLoginPanel"/>
			<referrer name="ShowQuestionPanel"/>
			<referrer name="ShowPinCodePanel"/>
			<referrer name="ShowRegisterPanel"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="ShowAdminLogin"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="ShowBanManage"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_autor"/>
			<referrer name="pc_cmd_kolory"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_taryfikator"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="OnDialogHelp"/>
			<referrer name="showPlayerCMD"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="pc_cmd_acmd"/>
			<referrer name="syntaxError"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="strcopy"/>
			<referrer name="valueError"/>
			<referrer name="ShowRegulamin"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="pc_cmd_nowosci"/>
		</member>
		<member name="C:EVENT_PANEL_ADD" value="1">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_ARMOUR" value="15">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_COLOR" value="10">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_DELETE" value="2">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_DELGOD" value="9">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_DISARM" value="7">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_FREEZE" value="5">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_GIFT" value="3">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_GOD" value="8">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_HEALTH" value="14">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_INVISIBLE" value="11">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_KICK50" value="17">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_STOP" value="18">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_TIME" value="12">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_TYPE" value="0">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_UNFREEZE" value="6">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_VEHICLE" value="16">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_WEAPON" value="4">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_PANEL_WEATHER" value="13">
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="C:EVENT_SETTING_FLIP" value="1">
			<referrer name="pc_cmd_flip"/>
		</member>
		<member name="C:EVENT_SETTING_REPAIR" value="0">
			<referrer name="pc_cmd_napraw"/>
		</member>
		<member name="C:EVENT_SETTING_VEHICLE" value="2">
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="C:EVENT_TYPE_10HP" value="3">
			<referrer name="GetEventType"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="C:EVENT_TYPE_1V1" value="4">
			<referrer name="GetEventType"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="C:EVENT_TYPE_DM" value="1">
			<referrer name="GetEventType"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="C:EVENT_TYPE_NODM" value="2">
			<referrer name="GetEventType"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="C:EVENT_TYPE_NONE" value="0">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="GetEventType"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="C:EVENT_TYPE_TDM" value="5">
			<referrer name="GetEventType"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="C:E_STREAMER_ATTACH_OFFSET_X" value="4">
			<referrer name="UpdateEditorAttachment"/>
		</member>
		<member name="C:E_STREAMER_ATTACH_OFFSET_Y" value="5">
			<referrer name="UpdateEditorAttachment"/>
		</member>
		<member name="C:E_STREAMER_ATTACH_OFFSET_Z" value="6">
			<referrer name="UpdateEditorAttachment"/>
		</member>
		<member name="C:E_STREAMER_ATTACH_R_X" value="7">
			<referrer name="UpdateEditorAttachment"/>
		</member>
		<member name="C:E_STREAMER_ATTACH_R_Y" value="8">
			<referrer name="UpdateEditorAttachment"/>
		</member>
		<member name="C:E_STREAMER_ATTACH_R_Z" value="9">
			<referrer name="UpdateEditorAttachment"/>
		</member>
		<member name="C:E_STREAMER_EXTRA_ID" value="15">
			<referrer name="ac_CreateDynamicPickup"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="ac_Timer"/>
			<referrer name="Init_NoDM"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnPlayerEnterDynArea@0O"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
		</member>
		<member name="C:GAME_BTR" value="4">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_btr"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="RoyalePickup"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="C:GAME_CH" value="0">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="C:GAME_DA" value="2">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_da"/>
			<referrer name="StartDA"/>
			<referrer name="UpdateDA"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerDeath@0r"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="C:GAME_GG" value="6">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_gg"/>
			<referrer name="GG_GetWinner"/>
			<referrer name="StartGG"/>
			<referrer name="UpdateGG"/>
			<referrer name="StopGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="WC_OnPlayerSpawn"/>
		</member>
		<member name="C:GAME_RC" value="3">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_rc"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="C:GAME_SK" value="8">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_sk"/>
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="C:GAME_SM" value="5">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_sm"/>
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="C:GAME_WG" value="9">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_wg"/>
			<referrer name="StartWG"/>
			<referrer name="UpdateWG"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="WC_OnPlayerSpawn"/>
		</member>
		<member name="C:GAME_WP" value="7">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_wp"/>
			<referrer name="StartWP"/>
			<referrer name="MoveWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="C:GAME_ZP" value="1">
			<referrer name="GetGameLimit"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="pc_cmd_zp"/>
			<referrer name="StartZP"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="GetStatusZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="StopZP"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="C:GANG_DIALOG_ACHIEVEMENT" value="10">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_DIALOG_BASE" value="13">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_DIALOG_BUDGET" value="8">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_DIALOG_INVITE" value="14">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_DIALOG_MANAGE" value="15">
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_DIALOG_MARKET" value="11">
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_DIALOG_SETTINGS" value="16">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_DIALOG_SPARING" value="9">
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_DIALOG_ULEP" value="12">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="C:GANG_ULEP_KIBICE" value="0">
			<referrer name="WC_OnPlayerDeath"/>
		</member>
		<member name="C:GANG_ULEP_SZEJK" value="1">
			<referrer name="RandomGangReward"/>
		</member>
		<member name="C:GANG_ULEP_ZONES" value="2">
			<referrer name="ConquestGangReward"/>
		</member>
		<member name="C:HIT_BEING_RESYNCED" value="9">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_DISCONNECTED" value="22">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_DYING_PLAYER" value="5">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:HIT_INVALID_DAMAGE" value="18">
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
		</member>
		<member name="C:HIT_INVALID_HITTYPE" value="8">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_INVALID_VEHICLE" value="21">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_INVALID_WEAPON" value="1">
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_MULTIPLE_PLAYERS" value="3">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:HIT_MULTIPLE_PLAYERS_SHOTGUN" value="4">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:HIT_NOT_SPAWNED" value="10">
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_NO_DAMAGEDID" value="0">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:HIT_OUT_OF_RANGE" value="11">
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_OWN_VEHICLE" value="20">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_RATE_TOO_FAST" value="15">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:HIT_RATE_TOO_FAST_MULTIPLE" value="16">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:HIT_SAME_TEAM" value="6">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:HIT_SAME_VEHICLE" value="19">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_TOO_FAR_FROM_ORIGIN" value="17">
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:HIT_TOO_FAR_FROM_SHOT" value="12">
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:HIT_UNSTREAMED" value="7">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:INVALID_LIST" value="0">
			<tagname value="List"/>
			<referrer name="HideModelSelectionMenu"/>
		</member>
		<member name="C:INVALID_MAP" value="0">
			<tagname value="Map"/>
		</member>
		<member name="C:LOG_CHAT" value="0">
			<referrer name="WriteToLog"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="C:LOG_CMD" value="3">
			<referrer name="WriteToLog"/>
			<referrer name="OnPlayerCommandPerformed"/>
		</member>
		<member name="C:LOG_DEBUG" value="1">
			<referrer name="WriteToLog"/>
			<referrer name="givePremium"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="Teleport"/>
			<referrer name="FreezePlayer"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerSpawn"/>
		</member>
		<member name="C:LOG_PUNISH" value="2">
			<referrer name="WriteToLog"/>
			<referrer name="KickPlayer"/>
			<referrer name="WarnPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="BanPlayer"/>
		</member>
		<member name="C:NDP_DIALOG_TYPE_DIALOG" value="0">
			<referrer name="ShowPlayerDialogPages"/>
			<referrer name="NDP_ProcessDialogResponse"/>
		</member>
		<member name="C:NDP_DIALOG_TYPE_LEGACY" value="1">
			<referrer name="_NDP_ShowPlayerDialog_"/>
		</member>
		<member name="C:NUM_OPCODES" value="138">
			<referrer name="IsOpcodeValid"/>
			<referrer name="InitOpcodeTable"/>
			<referrer name="UnrelocateOpcode"/>
			<referrer name="GetOpcodeInstructionName"/>
			<referrer name="GetOpcodeInstructionParameters"/>
			<referrer name="GetOpcodeInstructionRelocatable"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmDecodeInsnUnsafe"/>
			<referrer name="DisasmNext"/>
			<referrer name="AsmEmitOpcode"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="C:PAWN_PLUS_EXTRA_ID" value="20523">
			<referrer name="ShowAsyncModelSelectionMenu"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="C:PHY_OBJECT_COLANDREAS_BOUNDS" value="16">
			<referrer name="PHY_UseColAndreas"/>
		</member>
		<member name="C:PHY_OBJECT_COLANDREAS_COLLS" value="32">
			<referrer name="PHY_UseColAndreas"/>
		</member>
		<member name="C:PHY_OBJECT_GHOST_CYLINDERS" value="256">
			<referrer name="PHY_CoreTimer"/>
		</member>
		<member name="C:PHY_OBJECT_GHOST_OBJECTS" value="64">
			<referrer name="PHY_CoreTimer"/>
		</member>
		<member name="C:PHY_OBJECT_GHOST_WALLS" value="128">
			<referrer name="PHY_CoreTimer"/>
		</member>
		<member name="C:PHY_OBJECT_MODE" value="2">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
		</member>
		<member name="C:PHY_OBJECT_PLAYER_COLLISIONS" value="512">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_ToggleObjectPlayerColls"/>
		</member>
		<member name="C:PHY_OBJECT_ROLL" value="4">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_RollObject"/>
		</member>
		<member name="C:PHY_OBJECT_ROLLING_MODE" value="8">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_RollObject"/>
		</member>
		<member name="C:PHY_OBJECT_USED" value="1">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
			<referrer name="PHY_SetObjectVelocity"/>
			<referrer name="PHY_GetObjectVelocity"/>
			<referrer name="PHY_SetObjectAcceleration"/>
			<referrer name="PHY_GetObjectAcceleration"/>
			<referrer name="PHY_GetObjectSpeed"/>
			<referrer name="PHY_GetObjectMoveAngle"/>
			<referrer name="PHY_UseColAndreas"/>
			<referrer name="PHY_RollObject"/>
			<referrer name="PHY_SetObjectFriction"/>
			<referrer name="PHY_SetObjectAirResistance"/>
			<referrer name="PHY_SetObjectZBound"/>
			<referrer name="PHY_SetObjectGravity"/>
			<referrer name="PHY_SetObjectWorld"/>
			<referrer name="PHY_GetObjectWorld"/>
			<referrer name="PHY_ToggleObjectPlayerColls"/>
		</member>
		<member name="C:RECORD_BTR" value="10">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_CH" value="6">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_DA" value="8">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_GG" value="11">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_MINI" value="5">
			<referrer name="checkRecord"/>
			<referrer name="JoinPlayerArena"/>
		</member>
		<member name="C:RECORD_ONEDE" value="2">
			<referrer name="checkRecord"/>
			<referrer name="JoinPlayerArena"/>
		</member>
		<member name="C:RECORD_PLAYERS" value="0">
			<referrer name="Init_Records"/>
			<referrer name="checkRecord"/>
			<referrer name="OnPlayerLogged"/>
		</member>
		<member name="C:RECORD_POMPA" value="3">
			<referrer name="checkRecord"/>
			<referrer name="JoinPlayerArena"/>
		</member>
		<member name="C:RECORD_RC" value="9">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_SK" value="14">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_SM" value="13">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_SNIPER" value="4">
			<referrer name="checkRecord"/>
			<referrer name="JoinPlayerArena"/>
		</member>
		<member name="C:RECORD_TODAY" value="1">
			<referrer name="Init_Records"/>
			<referrer name="checkRecord"/>
			<referrer name="OnPlayerLogged"/>
		</member>
		<member name="C:RECORD_WG" value="15">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_WP" value="12">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:RECORD_ZP" value="7">
			<referrer name="checkRecord"/>
			<referrer name="AddPlayerGame"/>
		</member>
		<member name="C:SHOOTING_RATE_TOO_FAST" value="13">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:SHOOTING_RATE_TOO_FAST_MULTIPLE" value="14">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="C:SORT_IS_PLAYERS" value="1">
			<referrer name="SortArrayUsingCompInto_Entry"/>
		</member>
		<member name="C:SPARING_RANK_BRONZE" value="0">
			<referrer name="getRankingPoints"/>
			<referrer name="getRankingName"/>
			<referrer name="CheckRankedLevel"/>
		</member>
		<member name="C:SPARING_RANK_CHAMPION" value="5">
			<referrer name="RunSparingOptions"/>
			<referrer name="getRankingPoints"/>
			<referrer name="getRankingName"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="pc_cmd_team"/>
		</member>
		<member name="C:SPARING_RANK_DIAMOND" value="4">
			<referrer name="getRankingPoints"/>
			<referrer name="getRankingName"/>
		</member>
		<member name="C:SPARING_RANK_GOLD" value="2">
			<referrer name="getRankingPoints"/>
			<referrer name="getRankingName"/>
		</member>
		<member name="C:SPARING_RANK_PLATINUM" value="3">
			<referrer name="getRankingPoints"/>
			<referrer name="getRankingName"/>
		</member>
		<member name="C:SPARING_RANK_SILVER" value="1">
			<referrer name="getRankingPoints"/>
			<referrer name="getRankingName"/>
		</member>
		<member name="C:VW_ARENA" value="127">
			<referrer name="JoinPlayerArena"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
		</member>
		<member name="C:VW_BANK" value="110">
			<referrer name="Init_Bank"/>
			<referrer name="Bank_Pickup"/>
			<referrer name="Heist_Init"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="RunObjects"/>
		</member>
		<member name="C:VW_BTR" value="118">
			<referrer name="StartBTR"/>
			<referrer name="CreateRoyaleWeapons"/>
		</member>
		<member name="C:VW_BUSINESS" value="126">
			<referrer name="FetchBusinessName"/>
		</member>
		<member name="C:VW_CH" value="114">
			<referrer name="StartChowany"/>
		</member>
		<member name="C:VW_DA" value="116">
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
		</member>
		<member name="C:VW_DRWAL" value="106">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:VW_EVENT" value="125">
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evadd"/>
		</member>
		<member name="C:VW_GG" value="120">
			<referrer name="StartGG"/>
			<referrer name="RespawnGG"/>
		</member>
		<member name="C:VW_GRABARZ" value="102">
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:VW_GRZYBIARZ" value="107">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:VW_HEIST" value="111">
			<referrer name="Heist_Init"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="CountPlayerHeist"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="C:VW_JAIL" value="113">
			<referrer name="JailPlayer"/>
			<referrer name="RunObjects"/>
		</member>
		<member name="C:VW_MAGAZYNIER" value="100">
			<referrer name="Magazynier_Pickup"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:VW_MYSLIWY" value="105">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:VW_RC" value="117">
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
		</member>
		<member name="C:VW_SK" value="122">
			<referrer name="StartSK"/>
		</member>
		<member name="C:VW_SM" value="119">
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="CreateSumoObjects"/>
		</member>
		<member name="C:VW_TAXI" value="104">
			<referrer name="Taxi_Start"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:VW_WG" value="123">
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
		</member>
		<member name="C:VW_WORD" value="124">
			<referrer name="Init_Driving"/>
			<referrer name="WordPickup"/>
		</member>
		<member name="C:VW_WP" value="121">
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="RunObjects"/>
		</member>
		<member name="C:VW_WYBIERALKA" value="109">
			<referrer name="WC_OnPlayerRequestClass"/>
			<referrer name="RunObjects"/>
		</member>
		<member name="C:VW_ZP" value="115">
			<referrer name="StartZP"/>
			<referrer name="CreateVehicleZP"/>
		</member>
		<member name="C:VW_ZRZUT" value="103">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="C:WC_AIM_SYNC" value="203">
			<referrer name="pr_rip_WC_AIM_SYNC"/>
		</member>
		<member name="C:WC_INVALID_DAMAGE" value="3">
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:WC_INVALID_DISTANCE" value="4">
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:WC_NO_DAMAGED" value="2">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="C:WC_NO_ERROR" value="0">
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:WC_NO_ISSUER" value="1">
			<referrer name="ProcessDamage"/>
		</member>
		<member name="C:WC_PASSENGER_SYNC" value="211">
			<referrer name="pr_rip_WC_PASSENGER_SYNC"/>
		</member>
		<member name="C:WC_PLAYER_SYNC" value="207">
			<referrer name="pr_rip_WC_PLAYER_SYNC"/>
			<referrer name="SendLastSyncPacket"/>
		</member>
		<member name="C:WC_RPC_CLEAR_ANIMATIONS" value="87">
			<referrer name="ClearAnimationsForPlayer"/>
		</member>
		<member name="C:WC_RPC_REQUEST_SPAWN" value="129">
			<referrer name="WC_SpawnForStreamedIn"/>
		</member>
		<member name="C:WC_VEHICLE_SYNC" value="200">
			<referrer name="pr_rip_WC_VEHICLE_SYNC"/>
		</member>
		<member name="C:__COMPILER_CODEPAGE_TEST_1" value="255">
		</member>
		<member name="C:__COMPILER_CODEPAGE_TEST_3" value="128">
		</member>
		<member name="C:__COMPILER_DETERMINE_SEMICOLON" value="1">
		</member>
		<member name="C:__Pawn" value="778">
			<referrer name="Server_GetCompilerVersion"/>
			<referrer name="Script_GetCompilerVersion"/>
			<referrer name="Script_GetCompilerString"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="RelocateOpcodeNow"/>
		</member>
		<member name="C:__PawnBuild" value="10">
			<referrer name="Server_GetCompilerVersion"/>
			<referrer name="Script_GetCompilerVersion"/>
			<referrer name="Script_GetCompilerString"/>
		</member>
		<member name="C:cellbits" value="32">
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Debug_IsStringLike"/>
			<referrer name="MemSet"/>
			<referrer name="memset"/>
			<referrer name="RawMemSet"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanNOPMatch"/>
			<referrer name="AddressofResolveFoundEnd"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_TextDrawSetString"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_fprintf"/>
			<referrer name="va_SendRconCommand"/>
			<referrer name="va_SetGameModeText"/>
			<referrer name="va_DBQuery"/>
			<referrer name="va_ShowPlayerDialog"/>
			<referrer name="va_CreateMenu"/>
			<referrer name="va_AddMenuItem"/>
			<referrer name="va_SetMenuColumnHeader"/>
			<referrer name="va_SetObjectMaterialText"/>
			<referrer name="va_SetPlayerObjectMaterialText"/>
			<referrer name="va_Create3DTextLabel"/>
			<referrer name="va_Update3DTextLabelText"/>
			<referrer name="va_CreatePlayer3DTextLabel"/>
			<referrer name="va_UpdatePlayer3DTextLabelText"/>
			<referrer name="va_SetSVarString"/>
			<referrer name="va_SetPVarString"/>
			<referrer name="va_AddServerRule"/>
			<referrer name="va_SetServerRule"/>
			<referrer name="Bit_Set"/>
			<referrer name="Iter_Func@Bits"/>
			<referrer name="Iter_Func@Blanks"/>
			<referrer name="VA_OnCodeInit"/>
			<referrer name="realloc"/>
			<referrer name="Inline_MaybeConst_"/>
			<referrer name="Inline_StoreData"/>
			<referrer name="Inline_FoundUsingInline"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Get"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<referrer name="Inline_GenerateLocalsStore"/>
			<referrer name="Inline_GeneratePostamble"/>
			<referrer name="Callback_Release_"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Callback_Restore_"/>
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
			<referrer name="AddDialogListitem"/>
			<referrer name="Log"/>
			<referrer name="catstr"/>
			<referrer name="msg"/>
			<referrer name="msgAll"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="msgAdmins"/>
			<referrer name="textDrawSetString"/>
			<referrer name="playerTextDrawSetString"/>
		</member>
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
			<referrer name="T3_GetNearest2DPointOnPolygon"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="IPToInt"/>
			<referrer name="rawMemcpy"/>
			<referrer name="GetNearestColourLinear"/>
			<referrer name="Range"/>
			<referrer name="CodeScanGetFunctionAsm"/>
			<referrer name="CodeScanGetMatchAsm"/>
			<referrer name="YHNPS_Insert"/>
			<referrer name="YHNPS_Push"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Inline_FoundDescriptor"/>
			<referrer name="Inline_StoreData"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<referrer name="Inline_GenerateLocalsStore"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Callback_Restore_"/>
			<referrer name="Dialog_Set"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="EndOfLine"/>
			<referrer name="IsHex"/>
			<referrer name="IsNumeric"/>
			<referrer name="IsRPName"/>
			<referrer name="SkipWhitespace"/>
			<referrer name="Trim"/>
			<referrer name="Range"/>
			<referrer name="IterativeColouredSkipSUnpacked"/>
			<referrer name="IterativeColouredSkipWUnpacked"/>
			<referrer name="IterativeColouredSkipSPacked"/>
			<referrer name="IterativeColouredSkipWPacked"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<referrer name="Iter_Random_Impl"/>
			<referrer name="Iter_RandomFree_Impl"/>
			<referrer name="Iter_Alloc_InternalC"/>
			<referrer name="Iter_Alloc_InternalD"/>
			<referrer name="Iter_Free_Internal"/>
			<referrer name="Iter_FreeMulti_Internal"/>
			<referrer name="Iter_Add_InternalC"/>
			<referrer name="Iter_Add_InternalD"/>
			<referrer name="Iter_Index_Internal"/>
			<referrer name="Iter_SafeRemove_InternalC"/>
			<referrer name="Iter_SafeRemove_InternalD"/>
			<referrer name="Iter_GetMulti_Internal"/>
			<referrer name="Iter_Func@Range"/>
			<referrer name="Iter_Func@Random"/>
			<referrer name="CallN"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
			<referrer name="CallNative"/>
			<referrer name="CallNativeByAddress"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanRun"/>
			<referrer name="CodeScanInit"/>
			<referrer name="_@Hy"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="YHNPS_Find"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Dialog_Show"/>
			<referrer name="_@yHOnPlayerDisconnect@01"/>
			<referrer name="Dialog_ShowPlayerDialog"/>
		</member>
		<member name="C:charbits" value="8">
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Debug_IsStringLike"/>
			<referrer name="MemSet"/>
			<referrer name="memset"/>
			<referrer name="RawMemSet"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanNOPMatch"/>
			<referrer name="AddressofResolveFoundEnd"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_TextDrawSetString"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_fprintf"/>
			<referrer name="va_SendRconCommand"/>
			<referrer name="va_SetGameModeText"/>
			<referrer name="va_DBQuery"/>
			<referrer name="va_ShowPlayerDialog"/>
			<referrer name="va_CreateMenu"/>
			<referrer name="va_AddMenuItem"/>
			<referrer name="va_SetMenuColumnHeader"/>
			<referrer name="va_SetObjectMaterialText"/>
			<referrer name="va_SetPlayerObjectMaterialText"/>
			<referrer name="va_Create3DTextLabel"/>
			<referrer name="va_Update3DTextLabelText"/>
			<referrer name="va_CreatePlayer3DTextLabel"/>
			<referrer name="va_UpdatePlayer3DTextLabelText"/>
			<referrer name="va_SetSVarString"/>
			<referrer name="va_SetPVarString"/>
			<referrer name="va_AddServerRule"/>
			<referrer name="va_SetServerRule"/>
			<referrer name="realloc"/>
			<referrer name="Inline_MaybeConst_"/>
			<referrer name="Inline_StoreData"/>
			<referrer name="Inline_FoundUsingInline"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Get"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<referrer name="Inline_GenerateLocalsStore"/>
			<referrer name="Inline_GeneratePostamble"/>
			<referrer name="Callback_Release_"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Callback_Restore_"/>
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
			<referrer name="AddDialogListitem"/>
			<referrer name="Log"/>
			<referrer name="catstr"/>
			<referrer name="msg"/>
			<referrer name="msgAll"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="msgAdmins"/>
			<referrer name="textDrawSetString"/>
			<referrer name="playerTextDrawSetString"/>
		</member>
		<member name="C:debug" value="2">
			<referrer name="RelocateOpcodeNow"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="T3_IsPolygonClosed"/>
			<referrer name="T3_IsValidPolygon"/>
			<referrer name="T3_GetOrientationName"/>
			<referrer name="T3_IsProbable"/>
			<referrer name="T3_ShiftVectorRotation"/>
			<referrer name="T3_ShiftLineRotationVector"/>
			<referrer name="T3_IsPointToPointVector"/>
			<referrer name="T3_IsPointInCylinder3D"/>
			<referrer name="T3_IsPointInCube3D"/>
			<referrer name="T3_IsPointInCone3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="T3_IsPointInEllipticalCylinder"/>
			<referrer name="T3_IsPointInPolygon"/>
			<referrer name="T3_GetPointInCylinder3D"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
			<referrer name="IsCrashDetectPresent"/>
			<referrer name="Server_IsLinuxCompiler"/>
			<referrer name="Script_IsLinuxCompiler"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_IsLongCallEnabled"/>
			<referrer name="Server_IsDetectAddr0Enabled"/>
			<referrer name="Server_HasDetectAddr0"/>
			<referrer name="Server_HasLongCallControl"/>
			<referrer name="OnJITCompile"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="Server_CrashDetectExists"/>
			<referrer name="YVers_Callback"/>
			<referrer name="Debug_IsStringLike"/>
			<referrer name="IsPCPlayer"/>
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="EndOfLine"/>
			<referrer name="ChrFind"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="IsRPName"/>
			<referrer name="Utils_PreSort"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="IterativeColouredSkipWUnpacked"/>
			<referrer name="IterativeColouredSkipWPacked"/>
			<referrer name="IterativeTextSplitter"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="Iter_Func@VehiclePassenger"/>
			<referrer name="Iter_Func@VehicleDriver"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicNameFromIndex"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeNameFromIndex"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagNameFromIndex"/>
			<referrer name="RelocateOpcodeNow"/>
			<referrer name="GetOpcodeInstructionRelocatable"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmDecodeInsnUnsafe"/>
			<referrer name="DisasmWrite"/>
			<referrer name="O@A_"/>
			<referrer name="O@B_"/>
			<referrer name="Push"/>
			<referrer name="Pop"/>
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanGetFuncName"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanFindOneFastPattern3"/>
			<referrer name="CodeScanFindOneFastPattern2"/>
			<referrer name="CodeScanRunFastPrescanLocated"/>
			<referrer name="CodeScanRunFastPrescanRelocate"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="AddressofResolve"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<referrer name="DumpAMX_Write"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="HidePlayerProgressBar"/>
			<referrer name="SetPlayerProgressBarPos"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="BS_WriteOnFootSync"/>
			<referrer name="BS_WriteInCarSync"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Callback_Get"/>
			<referrer name="Callback_Claim_"/>
			<referrer name="Inline_GeneratePostamble"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Callback_Restore_"/>
			<referrer name="HTTPCallback"/>
			<referrer name="Dialog_ShowPlayerDialog"/>
			<referrer name="Inline_OnCodeInit"/>
			<referrer name="@y_inlineTimerCount"/>
			<referrer name="Timer_CreateCallback"/>
			<referrer name="ac_Streamer_UpdateEx"/>
			<referrer name="ac_DestroyVehicle"/>
			<referrer name="ac_DisableInteriorEnterExits"/>
			<referrer name="ac_EnableStuntBonusForAll"/>
			<referrer name="ac_EnableStuntBonusForPlayer"/>
			<referrer name="ac_TogglePlayerControllable"/>
			<referrer name="ac_TogglePlayerSpectating"/>
			<referrer name="ac_SetPlayerPos"/>
			<referrer name="ac_SetVehiclePos"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="ac_EnableAntiNOP"/>
			<referrer name="ac_AntiCheatKickWithDesync"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="ac_Timer"/>
			<referrer name="ClearDialogListitems"/>
			<referrer name="NDP_DialogInvoke"/>
			<referrer name="ac_OnGameModeInit"/>
			<referrer name="DestroyZone"/>
			<referrer name="DestroyZoneNumber"/>
			<referrer name="DestroyZoneBorders"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="IsHighRateWeapon"/>
			<referrer name="WC_IsPlayerSpawned"/>
			<referrer name="AverageShootRate"/>
			<referrer name="AverageHitRate"/>
			<referrer name="EnableHealthBarForPlayer"/>
			<referrer name="IsPlayerDying"/>
			<referrer name="WC_SetSpawnInfo"/>
			<referrer name="WC_TogglePlayerSpectating"/>
			<referrer name="WC_DestroyVehicle"/>
			<referrer name="WC_TextDrawCreate"/>
			<referrer name="WC_CreatePlayerTextDraw"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="WC_CbugPunishment"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="WC_KillVehicle"/>
			<referrer name="ac_OnVehicleDeath"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="SetHealthBarVisible"/>
			<referrer name="CreateVendingMachines"/>
			<referrer name="DestroyVendingMachines"/>
			<referrer name="InflictDamage"/>
			<referrer name="PlayerDeath"/>
			<referrer name="OnRejectedHit"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="WC_SecondKnifeAnim"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<referrer name="checkAdminLevel"/>
			<referrer name="IsPlayerSwimming"/>
			<referrer name="BlockAdminTroll"/>
			<referrer name="SkinKobiecy"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="ResetUlepszeniaData"/>
			<referrer name="_@yHResetPlayerData@04"/>
			<referrer name="achievement"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="ResetQuestData"/>
			<referrer name="Init_Quiz"/>
			<referrer name="StartQuiz"/>
			<referrer name="StopQuiz"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="changePlayerHudColor"/>
			<referrer name="changeHudColor"/>
			<referrer name="ResetDuelData"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
			<referrer name="CheckDuel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="getMentioned"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="_@yHResetPlayerData@07"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="ExitGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="Bank_Pickup"/>
			<referrer name="Heist_Init"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="SpecToggle"/>
			<referrer name="pc_cmd_specoff"/>
			<referrer name="CheckPlayerRaported"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="_@yHOnPlayerDisconnect@0A"/>
			<referrer name="_@yHResetPlayerData@0C"/>
			<referrer name="WordPickup"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerDeath@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="_@yHResetPlayerData@0D"/>
			<referrer name="StopLoopingAnim"/>
			<referrer name="pc_cmd_plantuj"/>
			<referrer name="pc_cmd_aresztuj"/>
			<referrer name="pc_cmd_smiech"/>
			<referrer name="pc_cmd_ramiona"/>
			<referrer name="pc_cmd_lez"/>
			<referrer name="pc_cmd_wal"/>
			<referrer name="pc_cmd_wytrysk"/>
			<referrer name="pc_cmd_schowaj"/>
			<referrer name="pc_cmd_wymiotuj"/>
			<referrer name="pc_cmd_papa"/>
			<referrer name="pc_cmd_daj"/>
			<referrer name="pc_cmd_usiadz"/>
			<referrer name="pc_cmd_spij"/>
			<referrer name="pc_cmd_ranny"/>
			<referrer name="pc_cmd_taxi"/>
			<referrer name="pc_cmd_rozgladaj"/>
			<referrer name="pc_cmd_yes"/>
			<referrer name="pc_cmd_no"/>
			<referrer name="pc_cmd_myjrece"/>
			<referrer name="pc_cmd_medyk"/>
			<referrer name="pc_cmd_oh"/>
			<referrer name="pc_cmd_dowody"/>
			<referrer name="pc_cmd_start"/>
			<referrer name="pc_cmd_naprawia"/>
			<referrer name="pc_cmd_naprawil"/>
			<referrer name="pc_cmd_chatauto"/>
			<referrer name="pc_cmd_chatauto2"/>
			<referrer name="pc_cmd_bagaznik"/>
			<referrer name="pc_cmd_krzeslouderz"/>
			<referrer name="pc_cmd_krzeslowypij"/>
			<referrer name="pc_cmd_krzeslokomp"/>
			<referrer name="pc_cmd_krzeslozegarek"/>
			<referrer name="pc_cmd_krzeslorozm1"/>
			<referrer name="pc_cmd_krzeslorozm2"/>
			<referrer name="pc_cmd_wypij"/>
			<referrer name="pc_cmd_barman"/>
			<referrer name="pc_cmd_barman2"/>
			<referrer name="pc_cmd_wyjmijbutelke"/>
			<referrer name="pc_cmd_nalej"/>
			<referrer name="pc_cmd_polchodz"/>
			<referrer name="pc_cmd_polodejdz"/>
			<referrer name="pc_cmd_polstop"/>
			<referrer name="pc_cmd_ratunku"/>
			<referrer name="pc_cmd_krzeslo"/>
			<referrer name="pc_cmd_calus"/>
			<referrer name="pc_cmd_sikaj"/>
			<referrer name="pc_cmd_lookout"/>
			<referrer name="pc_cmd_napad"/>
			<referrer name="pc_cmd_hide"/>
			<referrer name="pc_cmd_rzygaj"/>
			<referrer name="pc_cmd_jedz"/>
			<referrer name="pc_cmd_machaj"/>
			<referrer name="pc_cmd_klepnij"/>
			<referrer name="pc_cmd_deal"/>
			<referrer name="pc_cmd_cpun"/>
			<referrer name="pc_cmd_siadaj"/>
			<referrer name="pc_cmd_fucku"/>
			<referrer name="pc_cmd_taichi"/>
			<referrer name="pc_cmd_pij"/>
			<referrer name="pc_cmd_inbedright"/>
			<referrer name="pc_cmd_inbedleft"/>
			<referrer name="pc_cmd_fotel"/>
			<referrer name="pc_cmd_patrz"/>
			<referrer name="pc_cmd_opieraj"/>
			<referrer name="pc_cmd_zolwik"/>
			<referrer name="pc_cmd_carchat"/>
			<referrer name="pc_cmd_krzycz"/>
			<referrer name="pc_cmd_wtf"/>
			<referrer name="pc_cmd_adhd"/>
			<referrer name="pc_cmd_raczkuj"/>
			<referrer name="pc_cmd_down"/>
			<referrer name="pc_cmd_scratch"/>
			<referrer name="pc_cmd_beach"/>
			<referrer name="pc_cmd_rofl"/>
			<referrer name="pc_cmd_getin"/>
			<referrer name="pc_cmd_sprayuj"/>
			<referrer name="pc_cmd_headbutt"/>
			<referrer name="pc_cmd_lightcig"/>
			<referrer name="pc_cmd_tapcig"/>
			<referrer name="pc_cmd_finger"/>
			<referrer name="pc_cmd_shouting"/>
			<referrer name="pc_cmd_cop"/>
			<referrer name="pc_cmd_lowbodypush"/>
			<referrer name="pc_cmd_push"/>
			<referrer name="pc_cmd_rollfall"/>
			<referrer name="pc_cmd_fall"/>
			<referrer name="pc_cmd_fallback"/>
			<referrer name="pc_cmd_robman"/>
			<referrer name="pc_cmd_bacznosc"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_smoke"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_look"/>
			<referrer name="pc_cmd_shout"/>
			<referrer name="pc_cmd_bj"/>
			<referrer name="pc_cmd_swat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_stance"/>
			<referrer name="pc_cmd_hike"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_gryps"/>
			<referrer name="pc_cmd_yo"/>
			<referrer name="pc_cmd_siad"/>
			<referrer name="pc_cmd_jem"/>
			<referrer name="pc_cmd_trup"/>
			<referrer name="pc_cmd_pijak"/>
			<referrer name="pc_cmd_rece"/>
			<referrer name="pc_cmd_spadam"/>
			<referrer name="_@yHResetPlayerData@0E"/>
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Stop"/>
			<referrer name="_@yHResetPlayerData@0G"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="pc_cmd_kurczaktp"/>
			<referrer name="RandomSpawn"/>
			<referrer name="EnterTeleport"/>
			<referrer name="ResetTeleportData"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="_@yHResetPlayerData@0J"/>
			<referrer name="StopFueling"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ChangePrivCarModel"/>
			<referrer name="_@yHDestroyVehicle@0K"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="FindKeyPlayer"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="SetVehicleToSell"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="ResetGangData"/>
			<referrer name="checkRankPermission"/>
			<referrer name="giveGangBudget"/>
			<referrer name="Init_Gangs"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="pc_cmd_atakuj"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_tspawn"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="UpdateGangBar"/>
			<referrer name="Sparing_Init"/>
			<referrer name="Sparing_Config"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingRespawn"/>
			<referrer name="SparingSK"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHResetPlayerData@0S"/>
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="Magazynier_Fetch"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="MagazynPacked"/>
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="_@yHResetPlayerData@0Z"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Z"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="Init_Business"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="_@yHResetPlayerData@0f"/>
			<referrer name="_@yHResetPlayerData@0g"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="PrepareMining"/>
			<referrer name="CancelMining"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="ResetRaceCreatorData"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHResetPlayerData@0o"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="DeleteGodDA"/>
			<referrer name="UpdateDA"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="StopGG"/>
			<referrer name="RespawnGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHResetPlayerData@0x"/>
			<referrer name="CheckEvent"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evtdmspawn"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="_@yHResetPlayerData@11"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="_@yHResetPlayerData@12"/>
			<referrer name="JailPlayer"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="FindAccount"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="giveWeapon"/>
			<referrer name="Teleport"/>
			<referrer name="FreezePlayer"/>
			<referrer name="foundString"/>
			<referrer name="percent"/>
			<referrer name="percent_float"/>
			<referrer name="SavePlayerPosition"/>
			<referrer name="SQLInjection"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="showGameDraw"/>
			<referrer name="IsPlayerInArea"/>
			<referrer name="HideNameTagForAll"/>
			<referrer name="CompareEx"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="PrepareVehicleRespawn"/>
			<referrer name="AngleInRangeOfAngle"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="StopKillCamera"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerLeaveDynamicArea"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="SecondTimer"/>
			<referrer name="MinuteTimer"/>
			<referrer name="WC_OnGameModeInit"/>
			<referrer name="giveMoney"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="C:tag_uid_unknown" value="0">
			<tagname value="tag_uid"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="T3_IsPolygonClosed"/>
			<referrer name="T3_IsValidPolygon"/>
			<referrer name="T3_GetOrientationName"/>
			<referrer name="T3_IsProbable"/>
			<referrer name="T3_ShiftVectorRotation"/>
			<referrer name="T3_ShiftLineRotationVector"/>
			<referrer name="T3_IsPointToPointVector"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="T3_GetPointInCylinder3D"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="Server_IsWindowsCompiler"/>
			<referrer name="Script_IsWindowsCompiler"/>
			<referrer name="Server_FinishIntroPart"/>
			<referrer name="Server_FinishIntroMessage"/>
			<referrer name="Server_HasLongCallControl"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="OnJITCompile"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="IsAndroidPlayer"/>
			<referrer name="OnAndroidTimer"/>
			<referrer name="BoolStr"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="IsRPName"/>
			<referrer name="Utils_PreSort"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="IterativeColouredSkipWUnpacked"/>
			<referrer name="IterativeColouredSkipWPacked"/>
			<referrer name="IterativeTextSplitter"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_Func@VehiclePassenger"/>
			<referrer name="Iter_Func@VehicleDriver"/>
			<referrer name="OnScriptInit@E"/>
			<referrer name="Logger_Fatal"/>
			<referrer name="ResetStaticAmxHeader"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagNameFromIndex"/>
			<referrer name="GetTagNameFromID"/>
			<referrer name="InitOpcodeTable"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmDecodeInsnUnsafe"/>
			<referrer name="DisasmWrite"/>
			<referrer name="Push"/>
			<referrer name="Pop"/>
			<referrer name="AsmEmitJrelLabelStringize"/>
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanGetFuncName"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanFindOneFastPattern3"/>
			<referrer name="CodeScanFindOneFastPattern2"/>
			<referrer name="CodeScanRunFastPrescanLocated"/>
			<referrer name="CodeScanRunFastPrescanRelocate"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanRun"/>
			<referrer name="AddressofResolve"/>
			<referrer name="DumpAMX_WriteAMXData"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="DumpAMX_Write"/>
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<referrer name="Hooks_CompressPublics"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="_Hooks_RepairStub"/>
			<referrer name="ShowPlayerProgressBar"/>
			<referrer name="SetPlayerProgressBarPos"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="@yH_OnScriptInit@000"/>
			<referrer name="@yH_OnPlayerDisconnect@000"/>
			<referrer name="@yH_OnScriptExit@000"/>
			<referrer name="BS_ReadMarkersSync"/>
			<referrer name="BS_ReadWeaponsUpdate"/>
			<referrer name="BS_WriteOnFootSync"/>
			<referrer name="BS_WriteInCarSync"/>
			<referrer name="calloc"/>
			<referrer name="Callback_Get"/>
			<referrer name="Inline_GeneratePostamble"/>
			<referrer name="Callback_Restore_"/>
			<referrer name="@yH_OnPlayerDisconnect@01"/>
			<referrer name="@yH_OnDialogResponse@01"/>
			<referrer name="@yH_OnPlayerConnect@02"/>
			<referrer name="@yH_OnPlayerDisconnect@02"/>
			<referrer name="_Timer_I"/>
			<referrer name="_Timer_D"/>
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
			<referrer name="ORM_SelectInline"/>
			<referrer name="ORM_UpdateInline"/>
			<referrer name="ORM_InsertInline"/>
			<referrer name="ORM_DeleteInline"/>
			<referrer name="ORM_LoadInline"/>
			<referrer name="ORM_SaveInline"/>
			<referrer name="@y_inlineTimerStart"/>
			<referrer name="ac_AddStaticVehicle"/>
			<referrer name="ac_CreateVehicle"/>
			<referrer name="ac_CreatePickup"/>
			<referrer name="ac_DestroyPickup"/>
			<referrer name="ac_DestroyDynamicPickup"/>
			<referrer name="ac_UsePlayerPedAnims"/>
			<referrer name="ac_EnableVehicleFriendlyFire"/>
			<referrer name="ac_TogglePlayerSpectating"/>
			<referrer name="ac_SpawnPlayer"/>
			<referrer name="ac_SetPlayerPosFindZ"/>
			<referrer name="ac_SetVehicleToRespawn"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="ac_EnableAntiNOP"/>
			<referrer name="ac_EnableAntiCheatForPlayer"/>
			<referrer name="acc_CreateDynamicPickup"/>
			<referrer name="acc_CreateDynamicPickupEx"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="T3_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnVehicleSirenStateChange"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_KickWithCode"/>
			<referrer name="NDP_DialogInvoke"/>
			<referrer name="@yH_OnDialogResponse@03"/>
			<referrer name="CreateZone"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="CreateZoneBorders"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="ac_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="Indirection_OnFilterScriptInit"/>
			<referrer name="IsHighRateWeapon"/>
			<referrer name="WC_IsPlayerSpawned"/>
			<referrer name="AverageShootRate"/>
			<referrer name="AverageHitRate"/>
			<referrer name="EnableHealthBarForPlayer"/>
			<referrer name="ResyncPlayer"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="WC_SetPlayerArmour"/>
			<referrer name="WC_TogglePlayerSpectating"/>
			<referrer name="WC_CreateVehicle"/>
			<referrer name="WC_AddStaticVehicle"/>
			<referrer name="WC_AddStaticVehicleEx"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ac_OnVehicleSpawn"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="SetHealthBarVisible"/>
			<referrer name="SpawnPlayerInPlace"/>
			<referrer name="WC_DeathSkipEnd"/>
			<referrer name="WC_SetSpawnForStreamedIn"/>
			<referrer name="ProcessDamage"/>
			<referrer name="InflictDamage"/>
			<referrer name="PlayerDeath"/>
			<referrer name="WC_DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedAddHit"/>
			<referrer name="SendLastSyncPacket"/>
			<referrer name="WC_SecondKnifeAnim"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<referrer name="checkAdminLevel"/>
			<referrer name="IsPlayerSwimming"/>
			<referrer name="BlockAdminTroll"/>
			<referrer name="SkinKobiecy"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="achievement"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="@yH_OnDialogResponse@04"/>
			<referrer name="CheckQuest"/>
			<referrer name="StartQuiz"/>
			<referrer name="@yH_OnPlayerPickUpDynPickup@05"/>
			<referrer name="changePlayerHudColor"/>
			<referrer name="changeHudColor"/>
			<referrer name="UpdateHud"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="CheckDuel"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="getMentioned"/>
			<referrer name="@yH_OnPlayerDeath@06"/>
			<referrer name="pc_cmd_onede"/>
			<referrer name="pc_cmd_pompa"/>
			<referrer name="pc_cmd_sniper"/>
			<referrer name="pc_cmd_mini"/>
			<referrer name="@yH_OnPlayerKeyStateChange@07"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="Bank_Pickup"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@08"/>
			<referrer name="OnBankDialog"/>
			<referrer name="@yH_OnPlayerKeyStateChange@09"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@09"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="@yH_OnPlayerDeath@0@"/>
			<referrer name="SpecToggle"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="RefreshSpec"/>
			<referrer name="CheckPlayerRaported"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="@yH_OnPlayerDisconnect@0A"/>
			<referrer name="@yH_OnDialogResponse@0B"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0C"/>
			<referrer name="@yH_OnDialogResponse@0C"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="@yH_OnPlayerExitVehicle@0C"/>
			<referrer name="@yH_OnPlayerDeath@0C"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0D"/>
			<referrer name="LoopingAnim"/>
			<referrer name="pc_cmd_aresztuj"/>
			<referrer name="pc_cmd_ramiona"/>
			<referrer name="pc_cmd_lez"/>
			<referrer name="pc_cmd_wal"/>
			<referrer name="pc_cmd_schowaj"/>
			<referrer name="pc_cmd_usiadz"/>
			<referrer name="pc_cmd_spij"/>
			<referrer name="pc_cmd_ranny"/>
			<referrer name="pc_cmd_dowody"/>
			<referrer name="pc_cmd_wniebo"/>
			<referrer name="pc_cmd_naprawia"/>
			<referrer name="pc_cmd_chatauto"/>
			<referrer name="pc_cmd_krzeslouderz"/>
			<referrer name="pc_cmd_krzeslowypij"/>
			<referrer name="pc_cmd_krzeslokomp"/>
			<referrer name="pc_cmd_krzeslozegarek"/>
			<referrer name="pc_cmd_krzeslorozm1"/>
			<referrer name="pc_cmd_krzeslorozm2"/>
			<referrer name="pc_cmd_barman2"/>
			<referrer name="pc_cmd_ratunku"/>
			<referrer name="pc_cmd_krzeslo"/>
			<referrer name="pc_cmd_sikaj"/>
			<referrer name="pc_cmd_drunk"/>
			<referrer name="pc_cmd_napad"/>
			<referrer name="pc_cmd_hide"/>
			<referrer name="pc_cmd_machaj"/>
			<referrer name="pc_cmd_cpun"/>
			<referrer name="pc_cmd_siadaj"/>
			<referrer name="pc_cmd_taichi"/>
			<referrer name="pc_cmd_pij"/>
			<referrer name="pc_cmd_inbedright"/>
			<referrer name="pc_cmd_inbedleft"/>
			<referrer name="pc_cmd_fotel"/>
			<referrer name="pc_cmd_patrz"/>
			<referrer name="pc_cmd_opieraj"/>
			<referrer name="pc_cmd_zolwik"/>
			<referrer name="pc_cmd_carchat"/>
			<referrer name="pc_cmd_krzycz"/>
			<referrer name="pc_cmd_wtf"/>
			<referrer name="pc_cmd_adhd"/>
			<referrer name="pc_cmd_raczkuj"/>
			<referrer name="pc_cmd_down"/>
			<referrer name="pc_cmd_scratch"/>
			<referrer name="pc_cmd_beach"/>
			<referrer name="pc_cmd_circle"/>
			<referrer name="pc_cmd_rofl"/>
			<referrer name="pc_cmd_getin"/>
			<referrer name="pc_cmd_bat"/>
			<referrer name="pc_cmd_chant"/>
			<referrer name="pc_cmd_shouting"/>
			<referrer name="pc_cmd_cop"/>
			<referrer name="pc_cmd_rollfall"/>
			<referrer name="pc_cmd_boxanim"/>
			<referrer name="pc_cmd_fall"/>
			<referrer name="pc_cmd_fallback"/>
			<referrer name="pc_cmd_robman"/>
			<referrer name="pc_cmd_bacznosc"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_smoke"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_run"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_walk"/>
			<referrer name="pc_cmd_look"/>
			<referrer name="pc_cmd_shout"/>
			<referrer name="pc_cmd_bj"/>
			<referrer name="pc_cmd_swat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_stance"/>
			<referrer name="pc_cmd_hike"/>
			<referrer name="pc_cmd_face"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_siad"/>
			<referrer name="pc_cmd_jem"/>
			<referrer name="pc_cmd_trup"/>
			<referrer name="pc_cmd_pijak"/>
			<referrer name="pc_cmd_rece"/>
			<referrer name="pc_cmd_spadam"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="@yH_OnPlayerDeath@0F"/>
			<referrer name="@yH_OnPlayerDisconnect@0F"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0F"/>
			<referrer name="@yH_OnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0F"/>
			<referrer name="@yH_OnPlayerExitVehicle@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="@yH_OnPlayerUpdate@0G"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="CreateKurczak"/>
			<referrer name="@yH_OnPlayerShootDynObject@0H"/>
			<referrer name="@yH_OnDialogResponse@0I"/>
			<referrer name="CheckPlayerTeleport"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="SetEditorAttachment"/>
			<referrer name="SaveEditorAttachment"/>
			<referrer name="StopFueling"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0J"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="@yH_OnPlayerUpdate@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="FindKeyPlayer"/>
			<referrer name="OnPlayerBuyPrivCar"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="@yH_OnVehicleMod@0L"/>
			<referrer name="@yH_OnVehiclePaintjob@0L"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0M"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="checkRankPermission"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="@yH_OnPlayerDeath@0N"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="Init_GangBases"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0O"/>
			<referrer name="@yH_OnPlayerEnterDynArea@0O"/>
			<referrer name="@yH_OnPlayerLeaveDynArea@0O"/>
			<referrer name="@yH_OnDialogResponse@0O"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_tspawn"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="@yH_OnDialogResponse@0P"/>
			<referrer name="@yH_OnPlayerEditDynObject@0P"/>
			<referrer name="@yH_OnDialogResponse@0Q"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="Sparing_Config"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingRespawn"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0S"/>
			<referrer name="@yH_OnPlayerDeath@0S"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0U"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0U"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0U"/>
			<referrer name="Grabarz_TakeTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0V"/>
			<referrer name="@yH_OnPlayerExitVehicle@0V"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0W"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="@yH_OnPlayerShootDynObject@0X"/>
			<referrer name="DrwalTree"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Y"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Y"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Z"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Z"/>
			<referrer name="OnDialogJob"/>
			<referrer name="@yH_OnDialogResponse@0b"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0c"/>
			<referrer name="@yH_OnPlayerPickUpPickup@0c"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0d"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Roulette_Start"/>
			<referrer name="@yH_OnPlayerClickTextDraw@0d"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="@yH_OnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0e"/>
			<referrer name="EnterBusiness"/>
			<referrer name="@yH_OnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="@yH_OnDialogResponse@0h"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0i"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="Init_Mining"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0k"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="PrepareMining"/>
			<referrer name="CancelMining"/>
			<referrer name="@yH_OnDialogResponse@0l"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0m"/>
			<referrer name="@yH_OnPlayerExitVehicle@0m"/>
			<referrer name="@yH_OnPlayerDeath@0m"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0m"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0n"/>
			<referrer name="@yH_OnPlayerDisconnect@0o"/>
			<referrer name="@yH_OnDialogResponse@0o"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="@yH_OnPlayerUpdate@0o"/>
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="@yH_OnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0q"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="StopDA"/>
			<referrer name="@yH_OnPlayerDeath@0r"/>
			<referrer name="StartRC"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0s"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0s"/>
			<referrer name="@yH_OnPlayerExitVehicle@0s"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="@yH_OnPlayerDeath@0t"/>
			<referrer name="StartSM"/>
			<referrer name="PutPlayerSumo"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="@yH_OnPlayerDeath@0u"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="StartWP"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="@yH_OnPlayerDeath@0v"/>
			<referrer name="StartSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="UpdateWG"/>
			<referrer name="StopWG"/>
			<referrer name="@yH_OnPlayerDeath@0w"/>
			<referrer name="CheckEvent"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="AllowEventCMD"/>
			<referrer name="@yH_OnPlayerDisconnect@0x"/>
			<referrer name="@yH_OnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evzone"/>
			<referrer name="@yH_OnDialogResponse@0y"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="@yH_OnDialogResponse@0z"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="@yH_OnPlayerWeaponShot@10"/>
			<referrer name="@yH_OnDialogResponse@11"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_betspec"/>
			<referrer name="KickPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="ResetAccountData"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="giveWeapon"/>
			<referrer name="GetVehicleNameByID"/>
			<referrer name="UnFreezePlayer"/>
			<referrer name="foundString"/>
			<referrer name="percent"/>
			<referrer name="percent_float"/>
			<referrer name="SavePlayerPosition"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="EnableSpawnKill"/>
			<referrer name="IsPlayerInArea"/>
			<referrer name="ShowNameTagForAll"/>
			<referrer name="CompareEx"/>
			<referrer name="GetRandomCoord"/>
			<referrer name="getLost"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="AngleInRangeOfAngle"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="_yT@SecondTimer"/>
			<referrer name="_yT@MinuteTimer"/>
			<referrer name="MinuteTimer"/>
			<referrer name="WC_OnGameModeInit"/>
			<referrer name="Init_MySQL"/>
		</member>
		<member name="C:v3Deuler_default" value="11">
			<tagname value="EulerModes"/>
		</member>

		<!-- variables -->
		<member name="F:@_">
			<attribute name="public"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="@@Dialog_Set"/>
		</member>
		<member name="F:ACInfo">
			<referrer name="ac_SetSpawnInfo"/>
			<referrer name="ac_Streamer_UpdateEx"/>
			<referrer name="ac_DestroyVehicle"/>
			<referrer name="ac_DestroyPickup"/>
			<referrer name="ac_DestroyDynamicPickup"/>
			<referrer name="ac_EnableStuntBonusForAll"/>
			<referrer name="ac_EnableStuntBonusForPlayer"/>
			<referrer name="ac_TogglePlayerControllable"/>
			<referrer name="ac_TogglePlayerSpectating"/>
			<referrer name="ac_SpawnPlayer"/>
			<referrer name="ac_SetPlayerHealth"/>
			<referrer name="ac_SetPlayerArmour"/>
			<referrer name="ac_GivePlayerWeapon"/>
			<referrer name="ac_SetPlayerAmmo"/>
			<referrer name="ac_ResetPlayerWeapons"/>
			<referrer name="ac_GivePlayerMoney"/>
			<referrer name="ac_ResetPlayerMoney"/>
			<referrer name="ac_GetPlayerMoney"/>
			<referrer name="ac_SetPlayerSpecialAction"/>
			<referrer name="ac_SetPlayerInterior"/>
			<referrer name="ac_SetPlayerPos"/>
			<referrer name="ac_SetPlayerPosFindZ"/>
			<referrer name="ac_SetPlayerVelocity"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<referrer name="ac_RemovePlayerFromVehicle"/>
			<referrer name="ac_SetVehiclePos"/>
			<referrer name="ac_SetVehicleVelocity"/>
			<referrer name="ac_SetVehicleAngularVelocity"/>
			<referrer name="ac_SetVehicleHealth"/>
			<referrer name="ac_RepairVehicle"/>
			<referrer name="ac_SetVehicleToRespawn"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="ac_EnableAntiNOP"/>
			<referrer name="ac_EnableAntiCheatForPlayer"/>
			<referrer name="ac_EnableAntiNOPForPlayer"/>
			<referrer name="ac_IsAntiCheatEnabledForPlayer"/>
			<referrer name="ac_IsAntiNOPEnabledForPlayer"/>
			<referrer name="ac_AntiCheatGetSpeed"/>
			<referrer name="ac_AntiCheatGetAnimationIndex"/>
			<referrer name="ac_AntiCheatGetDialog"/>
			<referrer name="ac_AntiCheatGetInterior"/>
			<referrer name="ac_AntiCheatGetEnterVehicle"/>
			<referrer name="ac_AntiCheatGetEnterVehicleSeat"/>
			<referrer name="ac_AntiCheatGetVehicleID"/>
			<referrer name="ac_AntiCheatGetVehicleSeat"/>
			<referrer name="ac_AntiCheatGetWeapon"/>
			<referrer name="ac_AntiCheatGetWeaponInSlot"/>
			<referrer name="ac_AntiCheatGetAmmoInSlot"/>
			<referrer name="ac_AntiCheatGetSpecialAction"/>
			<referrer name="ac_AntiCheatGetLastSpecialActio"/>
			<referrer name="ac_AntiCheatGetLastShotWeapon"/>
			<referrer name="ac_AntiCheatGetLastPickup"/>
			<referrer name="ac_AntiCheatGetLastUpdateTime"/>
			<referrer name="ac_AntiCheatGetLastReloadTime"/>
			<referrer name="ac_AntiCheatGetLastEnteredVehTi"/>
			<referrer name="ac_AntiCheatGetLastShotTime"/>
			<referrer name="ac_AntiCheatGetLastSpawnTime"/>
			<referrer name="ac_AntiCheatIntEnterExitsIsEnab"/>
			<referrer name="ac_AntiCheatStuntBonusIsEnabled"/>
			<referrer name="ac_AntiCheatIsInModShop"/>
			<referrer name="ac_AntiCheatIsInSpectate"/>
			<referrer name="ac_AntiCheatIsFrozen"/>
			<referrer name="ac_AntiCheatIsDead"/>
			<referrer name="ac_AntiCheatIsConnected"/>
			<referrer name="ac_AntiCheatKickWithDesync"/>
			<referrer name="ac_AntiCheatIsKickedWithDesync"/>
			<referrer name="ac_AntiCheatGetNextDialog"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="T3_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnVehicleSirenStateChange"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnTrailerUpdate"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnPlayerEnterDynamicArea"/>
			<referrer name="OnPlayerLeaveDynamicArea"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="OnIncomingRPC"/>
			<referrer name="ac_Timer"/>
			<referrer name="AntiCheatGetHealth"/>
			<referrer name="AntiCheatGetArmour"/>
			<referrer name="AntiCheatGetWeaponData"/>
			<referrer name="AntiCheatGetPos"/>
			<referrer name="AntiCheatGetSpawnPos"/>
			<referrer name="AntiCheatGetSpawnWeapon"/>
			<referrer name="ac_IsVehicleSeatOccupied"/>
			<referrer name="ac_FloodDetect"/>
			<referrer name="ac_KickWithCode"/>
		</member>
		<member name="F:ACPickInfo">
			<referrer name="ac_CreatePickup"/>
			<referrer name="ac_DestroyPickup"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="ac_Timer"/>
			<referrer name="AntiCheatGetPickupPos"/>
		</member>
		<member name="F:ACVehInfo">
			<referrer name="ac_AddStaticVehicle"/>
			<referrer name="ac_CreateVehicle"/>
			<referrer name="ac_DestroyVehicle"/>
			<referrer name="ac_SetVehiclePos"/>
			<referrer name="ac_SetVehicleVelocity"/>
			<referrer name="ac_SetVehicleAngularVelocity"/>
			<referrer name="ac_LinkVehicleToInterior"/>
			<referrer name="ac_ChangeVehiclePaintjob"/>
			<referrer name="ac_SetVehicleHealth"/>
			<referrer name="ac_RepairVehicle"/>
			<referrer name="ac_UpdateVehicleDamageStatus"/>
			<referrer name="ac_SetVehicleToRespawn"/>
			<referrer name="ac_AntiCheatGetVehicleDriver"/>
			<referrer name="ac_AntiCheatGetVehicleInterior"/>
			<referrer name="ac_AntiCheatGetVehiclePaintjob"/>
			<referrer name="ac_AntiCheatGetVehicleSpeed"/>
			<referrer name="ac_AntiCheatIsVehicleSpawned"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="ac_Timer"/>
			<referrer name="AntiCheatGetVehicleHealth"/>
			<referrer name="AntiCheatGetVehiclePos"/>
			<referrer name="AntiCheatGetVehicleVelocity"/>
			<referrer name="AntiCheatGetVehicleZAngle"/>
			<referrer name="AntiCheatGetVehicleSpawnPos"/>
			<referrer name="AntiCheatGetVehicleSpawnZAngle"/>
		</member>
		<member name="F:AMX_BASE_ADDRESS">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<referrer name="AMX_GetLengthFromEntry"/>
			<referrer name="AMX_GetStringFromEntry"/>
			<referrer name="AMX_GetTagByValue"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_CompressPublics"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="_Hooks_RepairStub"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Inline_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_AMX_VERSION">
			<referrer name="Debug_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_CIP">
			<referrer name="Debug_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_COD">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetGlobal"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="CGen_GetAddr"/>
			<referrer name="ThirdParty_OnCodeInit"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Callback_Get"/>
			<referrer name="Inline_DoRetnGen"/>
			<referrer name="Inline_DoCodeGen"/>
		</member>
		<member name="F:AMX_HEADER_DAT">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_TraceMemory"/>
			<referrer name="Callback_Get"/>
		</member>
		<member name="F:AMX_HEADER_DEFSIZE">
			<referrer name="Debug_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_FILE_VERSION">
			<referrer name="Debug_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_FLAGS">
			<referrer name="Debug_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_HEA">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_TraceMemory"/>
		</member>
		<member name="F:AMX_HEADER_LIBRARIES">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_MAGIC">
			<referrer name="Debug_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_NAMETABLE">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_NATIVES">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="AMX_GetEntryFromNativeIndex"/>
			<referrer name="AMX_GetNativeIndexFromEntry"/>
			<referrer name="Hooks_CompressPublics"/>
		</member>
		<member name="F:AMX_HEADER_PUBLICS">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="AMX_GetEntryFromPublicIndex"/>
			<referrer name="AMX_GetPublicIndexFromEntry"/>
			<referrer name="CGen_GetAddr"/>
			<referrer name="Hooks_CompressPublics"/>
			<referrer name="_Hooks_RepairStub"/>
			<referrer name="Hooks_RepairJITInit"/>
		</member>
		<member name="F:AMX_HEADER_PUBVARS">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_SIZE">
			<referrer name="Debug_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_STP">
			<referrer name="Debug_OnCodeInit"/>
		</member>
		<member name="F:AMX_HEADER_TAGS">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_REAL_ADDRESS">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="CGen_OnCodeInit"/>
		</member>
		<member name="F:AMX_REAL_DATA">
			<referrer name="Debug_OnCodeInit"/>
			<referrer name="AMX_GetGlobalAddress"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GenerateCode"/>
		</member>
		<member name="F:ASM_ARGUMENTS_OFFSET">
			<referrer name="AsmGetArgOffset"/>
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CALLER_FRAME_OFFSET">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_CIP">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_COD">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_DAT">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_FRM">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_HEA">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_JIT">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_JMP">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_STK">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_CTRL_STP">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_LOCALS_OFFSET">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:ASM_RETURN_ADDR_OFFSET">
			<library>amx_assembly asm</library>
		</member>
		<member name="F:AccountDataSettings">
			<referrer name="pc_cmd_konto"/>
		</member>
		<member name="F:CA_ObjectList">
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="CA_DestroyObject_DC"/>
			<referrer name="CA_SetObjectPos_DC"/>
			<referrer name="CA_SetObjectRot_DC"/>
			<referrer name="CA_DestroyAllObjects_DC"/>
			<referrer name="CA_GetObjectID"/>
			<referrer name="CA_GetObjectType"/>
			<referrer name="CA_GetCollisionObjectID"/>
		</member>
		<member name="F:CELLMIN_ON_MATCHES">
		</member>
		<member name="F:CFG_OPENING_ERROR">
			<referrer name="PawnRakNet_OnGameModeInit"/>
		</member>
		<member name="F:ChowanyArenaID">
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
		</member>
		<member name="F:ChowanySzukajacy">
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:ChowanyZone">
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
		</member>
		<member name="F:DEBUG_CODE_1">
			<referrer name="ac_FloodDetect"/>
		</member>
		<member name="F:DEBUG_CODE_2">
			<referrer name="PHY_OnPlayerConnect"/>
		</member>
		<member name="F:DEBUG_CODE_3">
			<referrer name="PHY_OnPlayerConnect"/>
		</member>
		<member name="F:DEBUG_CODE_4">
			<referrer name="OnRconLoginAttempt"/>
		</member>
		<member name="F:DEBUG_CODE_5">
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_Timer"/>
		</member>
		<member name="F:DrwalCount">
			<referrer name="_@yHResetPlayerData@0Y"/>
			<referrer name="Drwal_Start"/>
			<referrer name="DrwalTree"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:DrwalCutted">
			<tagname value="bool"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="GetNearestTree"/>
			<referrer name="DrwalTree"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:DrwalHealth">
			<tagname value="Float"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:DrwalLabel">
			<tagname value="Text3D"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:DrwalMapIcon">
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:DrwalObject">
			<referrer name="Drwal_Spawn"/>
			<referrer name="GetNearestTree"/>
			<referrer name="DrwalTree"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:DrwalReward">
			<referrer name="_@yHResetPlayerData@0Y"/>
			<referrer name="Drwal_Start"/>
			<referrer name="DrwalTree"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:DrwalTreeCount">
			<referrer name="_@yHResetPlayerData@0Y"/>
			<referrer name="Drwal_Start"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
		</member>
		<member name="F:DrwalTreePosition">
			<tagname value="Float"/>
			<referrer name="Drwal_Spawn"/>
		</member>
		<member name="F:DrwalVehicle">
			<referrer name="Drwal_Start"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:EventBuffer">
			<referrer name="Logger_Log"/>
			<referrer name="Logger_Dbg"/>
			<referrer name="Logger_Err"/>
			<referrer name="Logger_Fatal"/>
			<referrer name="_PrintBufferAmxBacktrace"/>
		</member>
		<member name="F:EventCountDown">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_ev"/>
		</member>
		<member name="F:EventDuelCount">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evduel"/>
		</member>
		<member name="F:EventDuelEnemy">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evduel"/>
		</member>
		<member name="F:EventDuelStarted">
			<tagname value="bool"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evduel"/>
		</member>
		<member name="F:EventInterior">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evadd"/>
		</member>
		<member name="F:EventLeader">
			<referrer name="CheckEvent"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="AllowEventCMD"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
		</member>
		<member name="F:EventName">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="F:EventPosition">
			<tagname value="Float"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evadd"/>
		</member>
		<member name="F:EventRectangle">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evend"/>
		</member>
		<member name="F:EventSettings">
			<tagname value="bool"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
		</member>
		<member name="F:EventSpawnDuel">
			<tagname value="Float"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evduel"/>
		</member>
		<member name="F:EventSpawnTDM">
			<tagname value="Float"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evtdmspawn"/>
		</member>
		<member name="F:EventStarted">
			<tagname value="bool"/>
			<referrer name="CheckEvent"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="AllowEventCMD"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:EventTimer">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
		</member>
		<member name="F:EventType">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:EventVehicle">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="F:EventZone">
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evend"/>
		</member>
		<member name="F:F@o">
		</member>
		<member name="F:FALSE">
			<tagname value="bool"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="OnActorStreamOut"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
			<referrer name="PHY_CreateWall"/>
			<referrer name="PHY_CreateCylinder"/>
			<referrer name="Hooks_RepairJITInit"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="DestroyPlayerProgressBar"/>
			<referrer name="IsValidPlayerProgressBar"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="CA_DestroyObject_DC"/>
			<referrer name="CA_SetObjectPos_DC"/>
			<referrer name="CA_SetObjectRot_DC"/>
			<referrer name="givePremium"/>
			<referrer name="pc_cmd_vpozostalo"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Init_Teleports"/>
			<referrer name="AddTeleport"/>
			<referrer name="ResetGangData"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="giveGangBudget"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_GangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopSparing"/>
			<referrer name="LeaveGang"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="CreateBusiness"/>
			<referrer name="ResetGameData"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="_@yHOnPlayerDeath@0r"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="RoyalePickup"/>
			<referrer name="UpdateSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="UpdateWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:FLOAT_TAG_">
			<tagname value="Float"/>
		</member>
		<member name="F:FieldBuffer">
			<referrer name="Logger_I"/>
			<referrer name="Logger_B"/>
			<referrer name="Logger_X"/>
			<referrer name="Logger_F"/>
			<referrer name="Logger_S"/>
			<referrer name="Logger_A"/>
			<referrer name="Logger_P"/>
		</member>
		<member name="F:FishBar">
			<tagname value="PlayerBar"/>
			<referrer name="UpdateHud"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="WC_OnPlayerConnect"/>
		</member>
		<member name="F:FishDay">
			<referrer name="Init_Fishing"/>
			<referrer name="pc_cmd_rybki"/>
		</member>
		<member name="F:FuelBar">
			<tagname value="PlayerBar"/>
			<referrer name="StopFueling"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="WC_OnPlayerConnect"/>
		</member>
		<member name="F:FuelCostMoney">
			<referrer name="Init_Stations"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
		</member>
		<member name="F:FuelStations">
			<tagname value="Float"/>
			<referrer name="Init_Stations"/>
			<referrer name="GetNearestStation"/>
		</member>
		<member name="F:GEOLITE_asn_db">
			<tagname value="DB"/>
			<referrer name="GetIpAutonomousSystem"/>
			<referrer name="geolite_open_dbs"/>
			<referrer name="geolite_close_dbs"/>
		</member>
		<member name="F:GEOLITE_city_db">
			<tagname value="DB"/>
			<referrer name="GetIpCity"/>
			<referrer name="GetIpUTC"/>
			<referrer name="IsIpProxy"/>
			<referrer name="geolite_open_dbs"/>
			<referrer name="geolite_close_dbs"/>
		</member>
		<member name="F:GEOLITE_country_db">
			<tagname value="DB"/>
			<referrer name="GetIpCountry"/>
			<referrer name="IsIpProxy"/>
			<referrer name="geolite_open_dbs"/>
			<referrer name="geolite_close_dbs"/>
		</member>
		<member name="F:GEOLITE_init">
			<tagname value="bool"/>
			<referrer name="Indirection_OnFilterScriptInit"/>
			<referrer name="CA_OnFilterScriptExit"/>
			<referrer name="MS_OnGameModeInit"/>
			<referrer name="CA_OnGameModeExit"/>
		</member>
		<member name="F:GEOLITE_province_db">
			<tagname value="DB"/>
			<referrer name="GetIpProvince"/>
			<referrer name="geolite_open_dbs"/>
			<referrer name="geolite_close_dbs"/>
		</member>
		<member name="F:GameCountDown">
			<referrer name="UpdateGameDraw"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="StartZP"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="StopWP"/>
			<referrer name="StartSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="StopWG"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:GameDrawShowed">
			<referrer name="Init_Games"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
		</member>
		<member name="F:GameStarted">
			<tagname value="bool"/>
			<referrer name="UpdateGameDraw"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="StopZP"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="StartDA"/>
			<referrer name="UpdateDA"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerDeath@0r"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="RoyalePickup"/>
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="UpdateGG"/>
			<referrer name="StopGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="StartWP"/>
			<referrer name="MoveWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="UpdateWG"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:GameTimer">
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StopChowany"/>
			<referrer name="StopZP"/>
			<referrer name="StopDA"/>
			<referrer name="StopRC"/>
			<referrer name="StopBTR"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="StopWP"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
		</member>
		<member name="F:GangBar">
			<tagname value="PlayerBar"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="_updateGangBarEx"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="WC_OnPlayerConnect"/>
		</member>
		<member name="F:GangBaseCost">
			<referrer name="Init_GangBases"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="F:GangBaseDoor">
			<referrer name="Init_GangBases"/>
			<referrer name="pc_cmd_brama"/>
		</member>
		<member name="F:GangBaseDoorStatus">
			<tagname value="bool"/>
			<referrer name="Init_GangBases"/>
			<referrer name="pc_cmd_brama"/>
		</member>
		<member name="F:GangBaseDoorZ">
			<tagname value="Float"/>
			<referrer name="Init_GangBases"/>
			<referrer name="pc_cmd_brama"/>
		</member>
		<member name="F:GangBaseLabel">
			<tagname value="Text3D"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="F:GangBaseName">
			<referrer name="Init_GangBases"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="F:GangBaseObjectCount">
			<referrer name="GetBaseObjectCount"/>
			<referrer name="FetchBaseObjects"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
		</member>
		<member name="F:GangBaseObjectData">
			<referrer name="FetchBaseObjects"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
		</member>
		<member name="F:GangBaseObjectID">
			<referrer name="FetchBaseObjects"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
		</member>
		<member name="F:GangBaseObjectIndex">
			<referrer name="FetchBaseObjects"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
		</member>
		<member name="F:GangBaseObjectPosition">
			<tagname value="Float"/>
			<referrer name="FetchBaseObjects"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
		</member>
		<member name="F:GangBaseObjects">
			<referrer name="FetchBaseObjects"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
		</member>
		<member name="F:GangBaseOwner">
			<referrer name="Init_GangBases"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="CheckGangBase"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="CheckBaseTimer"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:GangBasePickup">
			<referrer name="Init_GangBases"/>
		</member>
		<member name="F:GangBaseRectangle">
			<referrer name="Init_GangBases"/>
			<referrer name="GetNearestBase"/>
		</member>
		<member name="F:GangBaseSell">
			<tagname value="bool"/>
			<referrer name="Init_GangBases"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="CheckGangBase"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="F:GangBaseSellTime">
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
		</member>
		<member name="F:GangBaseSettings">
			<tagname value="bool"/>
			<referrer name="Init_GangBases"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="CheckBaseTimer"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="WC_OnPlayerSpawn"/>
		</member>
		<member name="F:GangBaseZone">
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:GangUlepszeniaData">
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="F:GangUlepszeniaLevel">
			<referrer name="GetGangUlepszenia"/>
			<referrer name="RandomGangReward"/>
			<referrer name="FetchGang"/>
			<referrer name="ConquestGangReward"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="WC_OnPlayerDeath"/>
		</member>
		<member name="F:GrzybAlive">
			<tagname value="bool"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="GetNearestGrzyb"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:GrzybCount">
			<referrer name="_@yHResetPlayerData@0Z"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:GrzybCountAlive">
			<referrer name="_@yHResetPlayerData@0Z"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="Grzybiarz_Zbierz"/>
		</member>
		<member name="F:GrzybLabel">
			<tagname value="Text3D"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:GrzybObject">
			<referrer name="Grzybiarz_Random"/>
			<referrer name="GetNearestGrzyb"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:GrzybReward">
			<referrer name="_@yHResetPlayerData@0Z"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:GrzybZone">
			<referrer name="Grzybiarz_Start"/>
		</member>
		<member name="F:GrzybiarzZbiera">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0Z"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Z"/>
			<referrer name="Grzybiarz_Zbierz"/>
		</member>
		<member name="F:GunGameAllowed">
			<referrer name="GG_GetWeapon"/>
		</member>
		<member name="F:GunGameLevel">
			<referrer name="GG_GetWinner"/>
			<referrer name="GG_GetWeapon"/>
			<referrer name="StartGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:GunGameStatus">
			<referrer name="StartGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
		</member>
		<member name="F:GunShopActor">
			<referrer name="FetchGunShop"/>
		</member>
		<member name="F:GunShopCP">
			<referrer name="FetchGunShop"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0e"/>
		</member>
		<member name="F:GunShopDay">
			<referrer name="GunShop_RandomGun"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
		</member>
		<member name="F:HuntingAlive">
			<tagname value="bool"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:HuntingCount">
			<referrer name="_@yHResetPlayerData@0X"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:HuntingCountAlive">
			<referrer name="_@yHResetPlayerData@0X"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
		</member>
		<member name="F:HuntingHealth">
			<tagname value="Float"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:HuntingLabel">
			<tagname value="Text3D"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:HuntingObject">
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:HuntingReward">
			<referrer name="_@yHResetPlayerData@0X"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:HuntingZone">
			<referrer name="Mysliwy_Start"/>
		</member>
		<member name="F:I@">
			<referrer name="Files_DoCopy"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="Iter_YieldReturn"/>
			<referrer name="_@yHOnScriptInit@000"/>
			<referrer name="Callback_CallHandler_"/>
			<referrer name="Inline_GeneratePostamble"/>
			<referrer name="Inline_UP_"/>
			<referrer name="_@Dialog_Set"/>
			<referrer name="Dialog_ShowCallback"/>
			<referrer name="Dialog_Show"/>
			<referrer name="Dialog_Hide"/>
			<referrer name="_@yHOnDialogResponse@01"/>
			<referrer name="Dialog_ShowPlayerDialog"/>
			<referrer name="_Timer_C"/>
			<referrer name="Init_Areny"/>
			<referrer name="Init_Teleports"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_Business"/>
			<referrer name="Init_Games"/>
			<referrer name="_yT@SecondTimer"/>
			<referrer name="_yT@MinuteTimer"/>
			<referrer name="Init_Map"/>
		</member>
		<member name="F:INDIRECTION_DATA">
			<referrer name="Indirect_Call"/>
			<referrer name="Indirect_Callstring"/>
			<referrer name="Indirect_Callvoid"/>
			<referrer name="Indirect_Array"/>
			<referrer name="Callback_CallHandler_"/>
			<referrer name="Callback_RemoteHandler_"/>
			<referrer name="Callback_LocalHandler_"/>
		</member>
		<member name="F:INDIRECTION_TAG">
			<referrer name="Indirect_Call"/>
			<referrer name="Indirect_Callstring"/>
			<referrer name="Indirect_Callvoid"/>
			<referrer name="Indirect_Array"/>
		</member>
		<member name="F:IsKicked">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@12"/>
			<referrer name="KickPlayer"/>
			<referrer name="WarnPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="BanPlayer"/>
		</member>
		<member name="F:Iter_Single@Actor">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_ActorDo"/>
		</member>
		<member name="F:Iter_Single@Areny">
			<referrer name="UpdateAreny"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:Iter_Single@Bot">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
		</member>
		<member name="F:Iter_Single@Business">
			<referrer name="pc_cmd_wolnybiznes"/>
			<referrer name="Init_Business"/>
			<referrer name="CreateBusiness"/>
		</member>
		<member name="F:Iter_Single@CA_Objects">
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="CA_DestroyObject_DC"/>
		</member>
		<member name="F:Iter_Single@Character">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
		</member>
		<member name="F:Iter_Single@Event">
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:Iter_Single@Game">
			<referrer name="ResetGameData"/>
			<referrer name="UpdateGameDraw"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="UpdateDA"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="UpdateGG"/>
			<referrer name="StopGG"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="UpdateWG"/>
			<referrer name="StopWG"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:Iter_Single@GangBases">
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnPlayerEnterDynArea@0O"/>
			<referrer name="pc_cmd_bazy"/>
		</member>
		<member name="F:Iter_Single@GangMember">
			<referrer name="ResetGangData"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
		</member>
		<member name="F:Iter_Single@GangZones">
			<referrer name="Init_GangZones"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
		</member>
		<member name="F:Iter_Single@Gangs">
			<referrer name="FetchGang"/>
			<referrer name="Init_Gangs"/>
			<referrer name="pc_cmd_serverstats"/>
		</member>
		<member name="F:Iter_Single@ITER_Cylinder">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_CreateCylinder"/>
		</member>
		<member name="F:Iter_Single@ITER_Object">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
		</member>
		<member name="F:Iter_Single@ITER_Wall">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_CreateWall"/>
		</member>
		<member name="F:Iter_Single@LocalActor">
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
		</member>
		<member name="F:Iter_Single@LocalVehicle">
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
		</member>
		<member name="F:Iter_Single@Permission">
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:Iter_Single@Player">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:Iter_Single@Premium">
			<referrer name="givePremium"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:Iter_Single@Sparing">
			<referrer name="ResetGangData"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="StopSparing"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:Iter_Single@StreamedActor">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="OnActorStreamOut"/>
		</member>
		<member name="F:Iter_Single@StreamedBot">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iter_Single@StreamedCharacter">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iter_Single@StreamedPlayer">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iter_Single@StreamedVehicle">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
		</member>
		<member name="F:Iter_Single@Teleports">
			<referrer name="Init_Teleports"/>
			<referrer name="RandomSpawn"/>
			<referrer name="AddTeleport"/>
		</member>
		<member name="F:Iter_Single@Vehicle">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_VehicleDo"/>
		</member>
		<member name="F:Iter_Single@pbar_Index">
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="DestroyPlayerProgressBar"/>
			<referrer name="_@yHOnPlayerDisconnect@000"/>
		</member>
		<member name="F:Iterator@Actor">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_ActorDo"/>
		</member>
		<member name="F:Iterator@Areny">
			<tagname value="_no_itertag"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:Iterator@Bot">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
		</member>
		<member name="F:Iterator@Business">
			<tagname value="_no_itertag"/>
			<referrer name="GetNearestBusiness"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="CountFreeBusiness"/>
			<referrer name="pc_cmd_wolnybiznes"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="CreateBusiness"/>
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="F:Iterator@CA_Objects">
			<tagname value="_no_itertag"/>
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="CA_DestroyObject_DC"/>
			<referrer name="CA_SetObjectPos_DC"/>
			<referrer name="CA_SetObjectRot_DC"/>
			<referrer name="CA_DestroyAllObjects_DC"/>
		</member>
		<member name="F:Iterator@Character">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
		</member>
		<member name="F:Iterator@Event">
			<tagname value="_no_itertag"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evczas"/>
			<referrer name="pc_cmd_evpogoda"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:Iterator@Fib">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Filter">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Game">
			<tagname value="_no_itertag"/>
			<referrer name="ResetGameData"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="GetStatusZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="StopZP"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="StartDA"/>
			<referrer name="UpdateDA"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerDeath@0r"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="RoyalePickup"/>
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="GG_GetWinner"/>
			<referrer name="StartGG"/>
			<referrer name="UpdateGG"/>
			<referrer name="StopGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="UpdateWG"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:Iterator@GangBases">
			<tagname value="_no_itertag"/>
			<referrer name="Init_GangBases"/>
			<referrer name="GetNearestBase"/>
			<referrer name="CheckGangBase"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:Iterator@GangMember">
			<tagname value="_no_itertag"/>
			<referrer name="ResetGangData"/>
			<referrer name="UpdateGangBox"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="DelayedGangInvite"/>
			<referrer name="countGangMembers"/>
			<referrer name="giveGangBudget"/>
			<referrer name="HideBudgetDraw"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="ZonesReward"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="TransferResetGang"/>
			<referrer name="addGangScore"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="HideRankedPoints"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:Iterator@GangZones">
			<tagname value="_no_itertag"/>
			<referrer name="Init_GangZones"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="ShowGangZones"/>
			<referrer name="CountGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:Iterator@Gangs">
			<tagname value="_no_itertag"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="giveGangBudget"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_GangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="ZonesReward"/>
			<referrer name="ShowGangList"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="saveAll"/>
		</member>
		<member name="F:Iterator@ITER_Cylinder">
			<tagname value="_no_itertag"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_CreateCylinder"/>
		</member>
		<member name="F:Iterator@ITER_Object">
			<tagname value="_no_itertag"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
		</member>
		<member name="F:Iterator@ITER_Wall">
			<tagname value="_no_itertag"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_CreateWall"/>
		</member>
		<member name="F:Iterator@LocalActor">
			<tagname value="_no_itertag"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
		</member>
		<member name="F:Iterator@LocalVehicle">
			<tagname value="_no_itertag"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
		</member>
		<member name="F:Iterator@N">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@NonNull">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Null">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Permission">
			<tagname value="_no_itertag"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="CheckAdminList"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="msgAdmins"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:Iterator@Player">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PR_SendPacketToPlayerStream"/>
			<referrer name="PR_SendRPCToPlayerStream"/>
			<referrer name="PR_SendPacketToVehicleStream"/>
			<referrer name="PR_SendRPCToVehicleStream"/>
			<referrer name="_Timer_D"/>
			<referrer name="ac_DestroyVehicle"/>
			<referrer name="ac_DestroyPickup"/>
			<referrer name="ac_DestroyDynamicPickup"/>
			<referrer name="ac_EnableStuntBonusForAll"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="ac_EnableAntiNOP"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="ac_IsVehicleSeatOccupied"/>
			<referrer name="SetCbugAllowed"/>
			<referrer name="SetDamageFeed"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateSyncData"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<referrer name="DamageFeedAddHitGiven"/>
			<referrer name="DamageFeedAddHitTaken"/>
			<referrer name="OnPlayerDamageDone"/>
			<referrer name="StartQuiz"/>
			<referrer name="StopQuiz"/>
			<referrer name="OnBankDialog"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="CountPlayerHeist"/>
			<referrer name="RefreshSpec"/>
			<referrer name="SendLocalMessage"/>
			<referrer name="GetZoneDamageId"/>
			<referrer name="CheckGangWar"/>
			<referrer name="StopSparing"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="CheckPlayerOnline"/>
			<referrer name="foundPlayer"/>
			<referrer name="saveAll"/>
			<referrer name="HideNameTagForAll"/>
			<referrer name="ShowNameTagForAll"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:Iterator@Powers">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Premium">
			<tagname value="_no_itertag"/>
			<referrer name="givePremium"/>
			<referrer name="pc_cmd_vpozostalo"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:Iterator@Random">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Range">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Sparing">
			<tagname value="_no_itertag"/>
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="SparingCountDown"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopSparing"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:Iterator@StreamedActor">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="OnActorStreamOut"/>
		</member>
		<member name="F:Iterator@StreamedBot">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iterator@StreamedCharacter">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iterator@StreamedPlayer">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			Create the internal iterators. 
		</member>
		<member name="F:Iterator@StreamedVehicle">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
		</member>
		<member name="F:Iterator@Teleports">
			<tagname value="_no_itertag"/>
			<referrer name="Init_Teleports"/>
			<referrer name="CheckPlayerTeleport"/>
			<referrer name="RandomSpawn"/>
			<referrer name="ShowTeleports"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="AddTeleport"/>
			<referrer name="OnDialogTeleportManage"/>
		</member>
		<member name="F:Iterator@Until">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Vehicle">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_VehicleDo"/>
		</member>
		<member name="F:Iterator@VehicleDriver">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@VehicleOccupant">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@VehiclePassenger">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@pbar_Index">
			<tagname value="_no_itertag"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="DestroyPlayerProgressBar"/>
			<referrer name="IsValidPlayerProgressBar"/>
			<referrer name="_@yHOnPlayerDisconnect@000"/>
		</member>
		<member name="F:J@">
			<referrer name="_@Dialog_Set"/>
			<referrer name="Dialog_ShowCallback"/>
			<referrer name="Dialog_Show"/>
			<referrer name="Dialog_Hide"/>
			<referrer name="_@yHOnDialogResponse@01"/>
			<referrer name="Dialog_ShowPlayerDialog"/>
			<referrer name="_yT@SecondTimer"/>
			<referrer name="_yT@MinuteTimer"/>
			<referrer name="Init_Map"/>
		</member>
		<member name="F:JobDay">
			<referrer name="Init_Jobs"/>
			<referrer name="RunJobPanel"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Drwal_Start"/>
			<referrer name="Grzybiarz_Start"/>
		</member>
		<member name="F:KICK_MSG">
			<referrer name="ac_OnCheatDetected"/>
		</member>
		<member name="F:KoloryGraczy">
			<referrer name="OnDialogHud"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="pc_cmd_kolory"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="F:KurczakDamage">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0H"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
		</member>
		<member name="F:KurczakEnabled">
			<tagname value="bool"/>
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="pc_cmd_kurczaktp"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:KurczakHealth">
			<tagname value="Float"/>
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:KurczakLabel">
			<tagname value="Text3D"/>
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
		</member>
		<member name="F:KurczakObject">
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
		</member>
		<member name="F:KurczakPositionType">
			<referrer name="CreateKurczak"/>
			<referrer name="pc_cmd_kurczaktp"/>
		</member>
		<member name="F:KurczakPositions">
			<referrer name="CreateKurczak"/>
			<referrer name="pc_cmd_kurczaktp"/>
		</member>
		<member name="F:KurczakReward">
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:LOADED_MSG_1">
			<referrer name="PawnRakNet_OnGameModeInit"/>
		</member>
		<member name="F:LOADED_MSG_2">
			<referrer name="PawnRakNet_OnGameModeInit"/>
		</member>
		<member name="F:LOADED_MSG_3">
			<referrer name="PawnRakNet_OnGameModeInit"/>
		</member>
		<member name="F:LevelBar">
			<tagname value="PlayerBar"/>
			<referrer name="addLevelScore"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="HideLevelBar"/>
			<referrer name="UpdateHud"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:LevelTimer">
			<referrer name="UpdateLevelBar"/>
			<referrer name="HideLevelBar"/>
		</member>
		<member name="F:MATCH_NAME_PARTIAL">
		</member>
		<member name="F:MAX_CONNECTS_MSG">
			<referrer name="ac_OnCheatDetected"/>
		</member>
		<member name="F:MODELS_gColCount">
		</member>
		<member name="F:MODELS_gColOffset">
			<tagname value="Float"/>
			<referrer name="GetColSphereOffset"/>
		</member>
		<member name="F:MODELS_gColRadius">
			<tagname value="Float"/>
			<referrer name="GetColSphereRadius"/>
		</member>
		<member name="F:MagazynPozycje">
			<tagname value="Float"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Magazynier_CP"/>
		</member>
		<member name="F:MaxVehicleZP">
			<referrer name="StartZP"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:MineBag">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:MineBagLevel">
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="GetBagAmount"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="GetBagLevel"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:MineCount">
			<referrer name="Init_Mining"/>
		</member>
		<member name="F:MineCounter">
			<referrer name="Init_Mining"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="OnPlayerMining"/>
		</member>
		<member name="F:MineCreated">
			<tagname value="bool"/>
			<referrer name="Init_Mining"/>
			<referrer name="GetNearestOre"/>
			<referrer name="OnPlayerMining"/>
		</member>
		<member name="F:MineLabel">
			<tagname value="Text3D"/>
			<referrer name="Init_Mining"/>
			<referrer name="OnPlayerMining"/>
		</member>
		<member name="F:MineLevel">
			<referrer name="Init_Mining"/>
			<referrer name="GetMineStatus"/>
			<referrer name="OnPlayerMining"/>
		</member>
		<member name="F:MineMiners">
			<referrer name="Init_Mining"/>
			<referrer name="UpdateMineLabel"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
		</member>
		<member name="F:MineObject">
			<referrer name="Init_Mining"/>
			<referrer name="GetNearestOre"/>
			<referrer name="OnPlayerMining"/>
		</member>
		<member name="F:MinePickaxe">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:MinePickaxeHealth">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
		</member>
		<member name="F:MinePickaxeLevel">
			<referrer name="GetPickaxeLevel"/>
			<referrer name="PrepareMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
		</member>
		<member name="F:MinePickaxeName">
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:MinePoints">
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
		</member>
		<member name="F:MineSell">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0m"/>
			<referrer name="_@yHOnPlayerExitVehicle@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
		</member>
		<member name="F:MineSellCP">
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
		</member>
		<member name="F:MineSellIcon">
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
		</member>
		<member name="F:MineSellLabel">
			<tagname value="Text3D"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
		</member>
		<member name="F:MineSellNagroda">
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
		</member>
		<member name="F:MineSellTimer">
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0m"/>
			<referrer name="_@yHOnPlayerExitVehicle@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
		</member>
		<member name="F:MineSellVehicle">
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0m"/>
			<referrer name="_@yHOnPlayerExitVehicle@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
		</member>
		<member name="F:MineStarted">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="PrepareMining"/>
			<referrer name="CancelMining"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="OnPlayerCommandReceived"/>
		</member>
		<member name="F:MineType">
			<referrer name="Init_Mining"/>
			<referrer name="UpdateMineLabel"/>
			<referrer name="OnPlayerMining"/>
		</member>
		<member name="F:MineWeight">
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="GetBagWeight"/>
			<referrer name="GetOreCost"/>
			<referrer name="GetMineWeight"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:MissionTimer">
			<referrer name="ShowMissionDraw"/>
			<referrer name="HideMissionDraw"/>
		</member>
		<member name="F:ModelSelectionTask">
			<tagname value="Task"/>
			<referrer name="ShowAsyncModelSelectionMenu"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:NDP_DialogInfo">
			<referrer name="AddDialogListitem"/>
			<referrer name="NDP_CalculateListitemsPerPage"/>
			<referrer name="NDP_ShowDialogPage"/>
		</member>
		<member name="F:NDP_DialogString">
			<referrer name="NDP_ShowDialogPage"/>
		</member>
		<member name="F:NDP_P">
			<referrer name="ClearDialogListitems"/>
			<referrer name="AddDialogListitem"/>
			<referrer name="NDP_DialogInvoke"/>
			<referrer name="NDP_CalculateListitemsPerPage"/>
			<referrer name="NDP_ShowDialogPage"/>
			<referrer name="NDP_ProcessDialogResponse"/>
			<referrer name="_@yHOnDialogResponse@03"/>
		</member>
		<member name="F:NULL">
			<referrer name="_@yHOnDialogResponse@01"/>
		</member>
		<member name="F:O@V_">
			<referrer name="O@A_"/>
			<referrer name="O@B_"/>
			<referrer name="AddressofResolve"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="@yH_OnScriptInit@000"/>
			<referrer name="@yH_OnPlayerDisconnect@000"/>
			<referrer name="@yH_OnScriptExit@000"/>
			<referrer name="Hooks_OnCodeInit"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Callback_Get"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<referrer name="Inline_DoCodeGen"/>
			<referrer name="Inline_UI_"/>
			<referrer name="@yH_OnPlayerDisconnect@01"/>
			<referrer name="@yH_OnDialogResponse@01"/>
			<referrer name="@yH_OnPlayerConnect@02"/>
			<referrer name="@yH_OnPlayerDisconnect@02"/>
			<referrer name="@yH_OnDialogResponse@03"/>
			<referrer name="@yH_ResetPlayerData@04"/>
			<referrer name="@yH_OnDialogResponse@04"/>
			<referrer name="@yH_OnPlayerPickUpDynPickup@05"/>
			<referrer name="@yH_OnPlayerDeath@06"/>
			<referrer name="@yH_ResetPlayerData@07"/>
			<referrer name="@yH_OnPlayerKeyStateChange@07"/>
			<referrer name="@yH_ResetPlayerData@08"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@08"/>
			<referrer name="@yH_OnPlayerKeyStateChange@09"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@09"/>
			<referrer name="@yH_OnPlayerDeath@0@"/>
			<referrer name="@yH_ResetPlayerData@0@"/>
			<referrer name="@yH_OnPlayerDisconnect@0A"/>
			<referrer name="@yH_OnDialogResponse@0B"/>
			<referrer name="@yH_ResetPlayerData@0C"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0C"/>
			<referrer name="@yH_OnDialogResponse@0C"/>
			<referrer name="@yH_OnPlayerExitVehicle@0C"/>
			<referrer name="@yH_OnPlayerDeath@0C"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0C"/>
			<referrer name="@yH_ResetPlayerData@0D"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0D"/>
			<referrer name="@yH_ResetPlayerData@0E"/>
			<referrer name="@yH_ResetPlayerData@0F"/>
			<referrer name="@yH_OnPlayerDeath@0F"/>
			<referrer name="@yH_OnPlayerDisconnect@0F"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0F"/>
			<referrer name="@yH_OnDialogResponse@0F"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0F"/>
			<referrer name="@yH_OnPlayerExitVehicle@0F"/>
			<referrer name="@yH_ResetPlayerData@0G"/>
			<referrer name="@yH_OnPlayerUpdate@0G"/>
			<referrer name="@yH_ResetPlayerData@0H"/>
			<referrer name="@yH_OnPlayerShootDynObject@0H"/>
			<referrer name="@yH_OnDialogResponse@0I"/>
			<referrer name="@yH_ResetPlayerData@0J"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0J"/>
			<referrer name="@yH_OnPlayerUpdate@0J"/>
			<referrer name="@yH_DestroyVehicle@0K"/>
			<referrer name="@yH_OnVehicleMod@0L"/>
			<referrer name="@yH_OnVehiclePaintjob@0L"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0M"/>
			<referrer name="@yH_OnPlayerDeath@0N"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0O"/>
			<referrer name="@yH_OnPlayerEnterDynArea@0O"/>
			<referrer name="@yH_OnPlayerLeaveDynArea@0O"/>
			<referrer name="@yH_OnDialogResponse@0O"/>
			<referrer name="@yH_OnDialogResponse@0P"/>
			<referrer name="@yH_OnPlayerEditDynObject@0P"/>
			<referrer name="@yH_OnDialogResponse@0Q"/>
			<referrer name="@yH_ResetPlayerData@0R"/>
			<referrer name="@yH_ResetPlayerData@0S"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0S"/>
			<referrer name="@yH_OnPlayerDeath@0S"/>
			<referrer name="@yH_ResetPlayerData@0T"/>
			<referrer name="@yH_ResetPlayerData@0U"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0U"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0U"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0U"/>
			<referrer name="@yH_ResetPlayerData@0V"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0V"/>
			<referrer name="@yH_OnPlayerExitVehicle@0V"/>
			<referrer name="@yH_ResetPlayerData@0W"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0W"/>
			<referrer name="@yH_ResetPlayerData@0X"/>
			<referrer name="@yH_OnPlayerShootDynObject@0X"/>
			<referrer name="@yH_ResetPlayerData@0Y"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Y"/>
			<referrer name="@yH_ResetPlayerData@0Z"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Z"/>
			<referrer name="@yH_ResetPlayerData@0b"/>
			<referrer name="@yH_OnDialogResponse@0b"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0c"/>
			<referrer name="@yH_OnPlayerPickUpPickup@0c"/>
			<referrer name="@yH_ResetPlayerData@0d"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0d"/>
			<referrer name="@yH_OnPlayerClickTextDraw@0d"/>
			<referrer name="@yH_OnDialogResponse@0d"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0e"/>
			<referrer name="@yH_ResetPlayerData@0f"/>
			<referrer name="@yH_ResetPlayerData@0g"/>
			<referrer name="@yH_OnDialogResponse@0g"/>
			<referrer name="@yH_OnDialogResponse@0h"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0i"/>
			<referrer name="@yH_ResetPlayerData@0j"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0k"/>
			<referrer name="@yH_OnDialogResponse@0l"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0m"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0m"/>
			<referrer name="@yH_OnPlayerExitVehicle@0m"/>
			<referrer name="@yH_OnPlayerDeath@0m"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0m"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0n"/>
			<referrer name="@yH_ResetPlayerData@0o"/>
			<referrer name="@yH_OnPlayerDisconnect@0o"/>
			<referrer name="@yH_OnDialogResponse@0o"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0o"/>
			<referrer name="@yH_OnPlayerUpdate@0o"/>
			<referrer name="@yH_OnPlayerDeath@0p"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0q"/>
			<referrer name="@yH_OnPlayerDeath@0r"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0s"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0s"/>
			<referrer name="@yH_OnPlayerExitVehicle@0s"/>
			<referrer name="@yH_OnPlayerDeath@0t"/>
			<referrer name="@yH_OnPlayerDeath@0u"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0v"/>
			<referrer name="@yH_OnPlayerDeath@0v"/>
			<referrer name="@yH_OnPlayerDeath@0w"/>
			<referrer name="@yH_ResetPlayerData@0x"/>
			<referrer name="@yH_OnPlayerDisconnect@0x"/>
			<referrer name="@yH_OnPlayerDeath@0x"/>
			<referrer name="@yH_OnDialogResponse@0y"/>
			<referrer name="@yH_OnDialogResponse@0z"/>
			<referrer name="@yH_OnPlayerWeaponShot@10"/>
			<referrer name="@yH_ResetPlayerData@11"/>
			<referrer name="@yH_OnDialogResponse@11"/>
			<referrer name="@yH_ResetPlayerData@12"/>
			<referrer name="@yH_SetPlayerColor@13"/>
			<library>amx_assembly addressof</library>
		</member>
		<member name="F:OLD_DEFAULT_CUSTOM">
		</member>
		<member name="F:OLD_DEFAULT_KUSTOM">
		</member>
		<member name="F:OLD_DEFAULT_NAME">
		</member>
		<member name="F:OreDay">
			<referrer name="Init_Mining"/>
			<referrer name="GetOreCost"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="Init_Map"/>
		</member>
		<member name="F:PHY_Cylinder">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_CreateCylinder"/>
			<referrer name="PHY_DestroyCylinder"/>
			<referrer name="PHY_SetCylinderWorld"/>
		</member>
		<member name="F:PHY_Object">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
			<referrer name="PHY_DeleteObject"/>
			<referrer name="PHY_SetObjectVelocity"/>
			<referrer name="PHY_GetObjectVelocity"/>
			<referrer name="PHY_SetObjectAcceleration"/>
			<referrer name="PHY_GetObjectAcceleration"/>
			<referrer name="PHY_GetObjectSpeed"/>
			<referrer name="PHY_GetObjectMoveAngle"/>
			<referrer name="PHY_UseColAndreas"/>
			<referrer name="PHY_RollObject"/>
			<referrer name="PHY_SetObjectFriction"/>
			<referrer name="PHY_SetObjectAirResistance"/>
			<referrer name="PHY_SetObjectZBound"/>
			<referrer name="PHY_SetObjectGravity"/>
			<referrer name="PHY_SetObjectWorld"/>
			<referrer name="PHY_GetObjectWorld"/>
			<referrer name="PHY_ToggleObjectPlayerColls"/>
			<referrer name="PHY_ApplyRotation"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
		</member>
		<member name="F:PHY_Player">
			<referrer name="Iter_OnPlayerConnect"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_SetPlayerWorld"/>
		</member>
		<member name="F:PHY_Wall">
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_CreateWall"/>
			<referrer name="PHY_DestroyWall"/>
			<referrer name="PHY_SetWallWorld"/>
		</member>
		<member name="F:PlayerFueling">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0J"/>
			<referrer name="StopFueling"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="_@yHOnPlayerUpdate@0J"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:PlayerFuelingAmount">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0J"/>
			<referrer name="StopFueling"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
		</member>
		<member name="F:PlayerFuelingCost">
			<referrer name="_@yHResetPlayerData@0J"/>
			<referrer name="StopFueling"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
		</member>
		<member name="F:PlayerFuelingType">
			<referrer name="_@yHResetPlayerData@0J"/>
			<referrer name="GetFuelingColor"/>
			<referrer name="GetFuelingName"/>
			<referrer name="StopFueling"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
		</member>
		<member name="F:PoolBar">
			<tagname value="PlayerBar"/>
			<referrer name="UpdateHud"/>
			<referrer name="WC_OnPlayerConnect"/>
		</member>
		<member name="F:Q@">
			<referrer name="K@"/>
			<referrer name="G@"/>
		</member>
		<member name="F:RaceArenaID">
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
		</member>
		<member name="F:RaceArenaName">
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
		</member>
		<member name="F:RaceCheckpoint">
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:RaceCountCPs">
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:RaceMapIcon">
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:RaceMatchCP">
			<tagname value="Float"/>
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
		</member>
		<member name="F:RaceMeta">
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
		</member>
		<member name="F:RacePlacement">
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:RaceRecordID">
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
		</member>
		<member name="F:RaceRecordTime">
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
		</member>
		<member name="F:RaceStatusData">
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:RaceTimer">
			<referrer name="StartRC"/>
			<referrer name="ResetRaceTimer"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
		</member>
		<member name="F:RaceVehicle">
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:RaceVehicleBack">
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
		</member>
		<member name="F:RaceVehicleModel">
			<referrer name="StartRC"/>
		</member>
		<member name="F:RaceVehicleSpawn">
			<tagname value="Float"/>
			<referrer name="StartRC"/>
		</member>
		<member name="F:RaportCount">
			<referrer name="CheckPlayerRaported"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="pc_cmd_raporty"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="_@yHOnPlayerDisconnect@0A"/>
		</member>
		<member name="F:RoyaleArenaID">
			<referrer name="StartBTR"/>
			<referrer name="StopBTR"/>
		</member>
		<member name="F:RoyaleKills">
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:RoyaleWeaponID">
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="RoyalePickup"/>
		</member>
		<member name="F:RoyaleWeaponPickup">
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="RoyalePickup"/>
		</member>
		<member name="F:RoyaleZone">
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
		</member>
		<member name="F:RoyaleZoneCount">
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
		</member>
		<member name="F:RoyaleZoneDamage">
			<tagname value="Float"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:RoyaleZonePosition">
			<tagname value="Float"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
		</member>
		<member name="F:RoyaleZoneSwitch">
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
		</member>
		<member name="F:SSCANF_QUIET">
		</member>
		<member name="F:SSCANF_gInit">
			<tagname value="bool"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
		</member>
		<member name="F:SSCANF_g_sPlayers">
		</member>
		<member name="F:STATS_STRING_1">
			<referrer name="ScriptInit_OnGameModeExit"/>
		</member>
		<member name="F:STATS_STRING_2">
			<referrer name="ScriptInit_OnGameModeExit"/>
		</member>
		<member name="F:STATS_STRING_3">
			<referrer name="ScriptInit_OnGameModeExit"/>
		</member>
		<member name="F:STATS_STRING_4">
			<referrer name="ScriptInit_OnGameModeExit"/>
		</member>
		<member name="F:STATS_STRING_5">
			<referrer name="ScriptInit_OnGameModeExit"/>
		</member>
		<member name="F:STATS_STRING_6">
			<referrer name="ScriptInit_OnGameModeExit"/>
		</member>
		<member name="F:STATS_STRING_7">
			<referrer name="ScriptInit_OnGameModeExit"/>
		</member>
		<member name="F:STATS_STRING_8">
			<referrer name="ScriptInit_OnGameModeExit"/>
		</member>
		<member name="F:SUSPICION_1">
			<referrer name="ac_KickWithCode"/>
		</member>
		<member name="F:SUSPICION_2">
			<referrer name="ac_KickWithCode"/>
		</member>
		<member name="F:SiankoCount">
			<referrer name="StartSK"/>
			<referrer name="StopSK"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:SiankoObject">
			<referrer name="StartSK"/>
			<referrer name="StopSK"/>
		</member>
		<member name="F:SiankoTimer">
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
		</member>
		<member name="F:SlotsBar">
			<tagname value="PlayerBar"/>
			<referrer name="Slots_Start"/>
			<referrer name="Slots_Hide"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="WC_OnPlayerConnect"/>
		</member>
		<member name="F:StatusZP">
			<referrer name="StartZP"/>
			<referrer name="GetStatusZP"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:Streamer_IncludeFileVersion">
			<attribute name="public"/>
		</member>
		<member name="F:SwitchZP">
			<referrer name="StartZP"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:T3_Cube3DOffset">
			<tagname value="Float"/>
			<referrer name="T3_GetCube3DPoint"/>
		</member>
		<member name="F:T3_ErrorLevel">
			<referrer name="T3_Init"/>
		</member>
		<member name="F:T3_OrientationCompass">
			<referrer name="T3_GetOrientationName"/>
		</member>
		<member name="F:T3_OrientationNames">
			<referrer name="T3_GetOrientationName"/>
		</member>
		<member name="F:T3_OrientationRotation">
			<tagname value="Float"/>
		</member>
		<member name="F:T3_StateExit">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
		</member>
		<member name="F:T3_StateInit">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:T3_StreamDistance">
			<tagname value="Float"/>
		</member>
		<member name="F:T3_UpTime">
			<referrer name="T3_Init"/>
		</member>
		<member name="F:T3_WeaponDamage">
			<tagname value="Float"/>
		</member>
		<member name="F:TRUE">
			<tagname value="bool"/>
			<referrer name="YVA2_DummyPush"/>
		</member>
		<member name="F:TaxiActor">
			<referrer name="_@yHResetPlayerData@0W"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:TaxiCP">
			<referrer name="_@yHResetPlayerData@0W"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:TaxiClient">
			<referrer name="_@yHResetPlayerData@0W"/>
			<referrer name="Taxi_Start"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
		</member>
		<member name="F:TaxiLabel">
			<tagname value="Text3D"/>
			<referrer name="_@yHResetPlayerData@0W"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:TaxiNamesMan">
			<referrer name="Taxi_Random"/>
		</member>
		<member name="F:TaxiNamesWoman">
			<referrer name="Taxi_Random"/>
		</member>
		<member name="F:TaxiReward">
			<referrer name="_@yHResetPlayerData@0W"/>
			<referrer name="Taxi_Start"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:TaxiSwitch">
			<referrer name="_@yHResetPlayerData@0W"/>
			<referrer name="Taxi_Start"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:TaxiVehicle">
			<referrer name="_@yHResetPlayerData@0W"/>
			<referrer name="Taxi_Start"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:UNIQUE_SYMBOL_DOESNT_EXIST">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0063">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0127">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0127">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0127">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_0127">
		</member>
		<member name="F:UNKNOWN_CLIENT_MSG">
			<referrer name="ac_OnCheatDetected"/>
		</member>
		<member name="F:VERSION_WARNING">
			<referrer name="PawnRakNet_OnGameModeInit"/>
		</member>
		<member name="F:VehicleColoursTableRGBA">
			<referrer name="pc_cmd_lakier"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="F:VehicleModelZP">
			<referrer name="StartZP"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="StopZP"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:VehicleNames">
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ChangePrivCarModel"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="SetVehicleToSell"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="AddRaceArena"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="GetVehicleNameByID"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="F:VehiclePrivate">
			<tagname value="bool"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="_@yHDestroyVehicle@0K"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="_@yHOnVehicleMod@0L"/>
			<referrer name="_@yHOnVehiclePaintjob@0L"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:VehiclePrivateID">
			<referrer name="Init_PrivCars"/>
			<referrer name="_@yHDestroyVehicle@0K"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="_@yHOnVehicleMod@0L"/>
			<referrer name="_@yHOnVehiclePaintjob@0L"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:VehicleZP">
			<referrer name="CreateVehicleZP"/>
			<referrer name="StopZP"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:WarArenaID">
			<referrer name="StartWG"/>
		</member>
		<member name="F:WarArenaName">
			<referrer name="StartWG"/>
		</member>
		<member name="F:WarPosition">
			<tagname value="Float"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
		</member>
		<member name="F:WarResult">
			<referrer name="StartWG"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:WarTeam">
			<referrer name="StartWG"/>
		</member>
		<member name="F:WarWeapons">
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
		</member>
		<member name="F:WarZoneID">
			<referrer name="StartWG"/>
		</member>
		<member name="F:WarZonePosition">
			<tagname value="Float"/>
			<referrer name="StartWG"/>
			<referrer name="UpdateWG"/>
		</member>
		<member name="F:WeaponNames">
			<referrer name="pc_cmd_duel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="WC_OnPlayerDeath"/>
		</member>
		<member name="F:WordCP">
			<referrer name="Init_Driving"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0C"/>
		</member>
		<member name="F:YSIM_VERMAX">
		</member>
		<member name="F:YSIM_VERRET">
		</member>
		<member name="F:YSI_EMPTY">
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="YVers_Callback"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
		</member>
		<member name="F:YSI_FILTERSCRIPT">
			<tagname value="bool"/>
			<referrer name="Server_IsFilterscript"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="T3_OnFilterScriptExit"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
		</member>
		<member name="F:YSI_GAMEMODE">
			<tagname value="bool"/>
			<referrer name="Server_IsGameMode"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="T3_OnGameModeExit"/>
			<referrer name="ScriptInit_OnYSIInit"/>
		</member>
		<member name="F:YSI_SPACE">
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroMessage"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
		</member>
		<member name="F:YSI_TEMP_FILE_NAME">
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="fautocleanup"/>
		</member>
		<member name="F:YSI_g">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It starts a massive  comment block in the pawndoc XML output that hides all YSI internal  variables - that is, those that start with <c>YSI_g</c>.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  <!-- 
		</member>
		<member name="F:YSI_gAMXAddress_">
			<referrer name="Debug_IsStringLike"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_TraceMemory"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<referrer name="CGen_GetAddr"/>
			<referrer name="CGen_SetupCodeSpace"/>
			<referrer name="ThirdParty_OnCodeInit"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Hooks_InvalidatePointer"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_CompressPublics"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="_Hooks_RepairStub"/>
			<referrer name="Hooks_RepairJITInit"/>
			<referrer name="OnRuntimeError"/>
			<referrer name="YHNPS_Find"/>
			<referrer name="YHNPS_Insert"/>
			<referrer name="Inline_MaybeConst_"/>
			<referrer name="Inline_StoreData"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Callback_Get"/>
			<referrer name="Inline_DoRetnGen"/>
			<referrer name="Callback_Release_"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Callback_Restore_"/>
		</member>
		<member name="F:YSI_gDebugLevel">
			<referrer name="Debug_Level"/>
		</member>
		<member name="F:YSI_gInlineRet">
			<tagname value="InlineRet"/>
		</member>
		<member name="F:YSI_gIteratorDepth">
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_gMallocMemory">
			<referrer name="VA_OnCodeInit"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_GetS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="Malloc_GetA"/>
			<referrer name="Malloc_SetA"/>
			<referrer name="Malloc_SetVAA"/>
			<referrer name="realloc"/>
			<referrer name="Malloc_Allocate"/>
			<referrer name="Malloc_Free"/>
			<referrer name="Malloc_Resolve"/>
			<referrer name="Malloc_Reconcile"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Inline_Debug"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_Get"/>
			<referrer name="Timer_GetCallCount"/>
			<referrer name="_Timer_C"/>
			<referrer name="_Timer_B"/>
			<referrer name="_Timer_F"/>
		</member>
		<member name="F:YSI_gPlayerIP">
			<referrer name="Android_OnPlayerConnect"/>
			<referrer name="Android_OnPlayerDisconnect"/>
		</member>
		<member name="F:YSI_gUnsafeHugeString">
			<referrer name="Files_CopyRange"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_TextDrawSetString"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_fprintf"/>
			<referrer name="va_SendRconCommand"/>
			<referrer name="va_SetGameModeText"/>
			<referrer name="va_DBQuery"/>
			<referrer name="va_ShowPlayerDialog"/>
			<referrer name="va_CreateMenu"/>
			<referrer name="va_AddMenuItem"/>
			<referrer name="va_SetMenuColumnHeader"/>
			<referrer name="va_SetObjectMaterialText"/>
			<referrer name="va_SetPlayerObjectMaterialText"/>
			<referrer name="va_Create3DTextLabel"/>
			<referrer name="va_Update3DTextLabelText"/>
			<referrer name="va_CreatePlayer3DTextLabel"/>
			<referrer name="va_UpdatePlayer3DTextLabelText"/>
			<referrer name="va_SetSVarString"/>
			<referrer name="va_SetPVarString"/>
			<referrer name="va_AddServerRule"/>
			<referrer name="va_SetServerRule"/>
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
		</member>
		<member name="F:YSI_g_sActiveHooks">
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="OnRuntimeError"/>
		</member>
		<member name="F:YSI_g_sAddress">
			<referrer name="_@Hy"/>
			<referrer name="Hooks_GetAllHooks"/>
		</member>
		<member name="F:YSI_g_sBlockEnd">
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="CGen_OnCodeInit"/>
		</member>
		<member name="F:YSI_g_sBlockStart">
			<referrer name="CGen_OnCodeInit"/>
		</member>
		<member name="F:YSI_g_sCallData">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="F@"/>
		</member>
		<member name="F:YSI_g_sCallbackCallAddress">
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Inline_GeneratePostamble"/>
		</member>
		<member name="F:YSI_g_sCodeEnd">
			<referrer name="CGen_SetupCodeSpace"/>
			<referrer name="CGen_UseCodeSpace"/>
		</member>
		<member name="F:YSI_g_sCodeSpace">
			<referrer name="CGen_SetupCodeSpace"/>
			<referrer name="ThirdParty_OnCodeInit"/>
			<referrer name="CGen_UseCodeSpace"/>
			<referrer name="CGen_GetCodeSpace"/>
			<referrer name="CGen_AddCodeSpace"/>
		</member>
		<member name="F:YSI_g_sContexts">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sCount">
			<referrer name="Hooks_Collate"/>
			<referrer name="Hooks_WriteFunction"/>
		</member>
		<member name="F:YSI_g_sDoPushAddr">
			<referrer name="Hooks_OnCodeInit"/>
			<referrer name="YVA2_CodeGenPushSite"/>
		</member>
		<member name="F:YSI_g_sFakeE_INLINE_CALL">
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
		</member>
		<member name="F:YSI_g_sFirstSlot">
			<tagname value="Alloc"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_C"/>
			<referrer name="_Timer_B"/>
		</member>
		<member name="F:YSI_g_sHooks">
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Hooks_WriteFunction"/>
		</member>
		<member name="F:YSI_g_sInitFSIdx">
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="_Hooks_RepairStub"/>
			<referrer name="Hooks_RepairJITInit"/>
		</member>
		<member name="F:YSI_g_sInitFSPtr">
			<referrer name="_Hooks_RepairStubFS"/>
			<referrer name="Hooks_RepairJITInit"/>
		</member>
		<member name="F:YSI_g_sInitFSRep">
			<referrer name="_Hooks_RepairStub"/>
			<referrer name="Hooks_RepairJITInit"/>
		</member>
		<member name="F:YSI_g_sInitGMIdx">
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="_Hooks_RepairStub"/>
			<referrer name="Hooks_RepairJITInit"/>
		</member>
		<member name="F:YSI_g_sInitGMPtr">
			<referrer name="_Hooks_RepairStubGM"/>
			<referrer name="Hooks_RepairJITInit"/>
		</member>
		<member name="F:YSI_g_sInitGMRep">
			<referrer name="_Hooks_RepairStub"/>
			<referrer name="Hooks_RepairJITInit"/>
		</member>
		<member name="F:YSI_g_sInitPublicDiff">
			<referrer name="Hooks_CompressPublics"/>
			<referrer name="_Hooks_RepairStub"/>
		</member>
		<member name="F:YSI_g_sInitialised">
			<referrer name="YVA2_DummyPush"/>
			<referrer name="Hooks_OnCodeInit"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sInlineEndPoint">
			<referrer name="Inline_FoundDestructor"/>
			<referrer name="Inline_DoRetnGen"/>
		</member>
		<member name="F:YSI_g_sInlineLinkedList">
			<referrer name="operator~(I@T:)"/>
			<referrer name="Inline_FoundDestructor"/>
			<referrer name="Hooks_OnRuntimeError"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_DoRetnGen"/>
		</member>
		<member name="F:YSI_g_sIsAndroid">
			<tagname value="bool"/>
			<referrer name="IsPCPlayer"/>
			<referrer name="IsAndroidPlayer"/>
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="OnAndroidTimer"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
		</member>
		<member name="F:YSI_g_sIteratorStack">
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sJumpOffset">
			<referrer name="operator~(I@T:)"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Inline_DoRetnGen"/>
		</member>
		<member name="F:YSI_g_sLastSlot">
			<tagname value="Alloc"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_C"/>
		</member>
		<member name="F:YSI_g_sLength">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sMaxNesting">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sNPSBaseCall">
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="Hooks_RegisterNPSHook"/>
		</member>
		<member name="F:YSI_g_sNPSReplace">
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="Hooks_RegisterNPSHook"/>
		</member>
		<member name="F:YSI_g_sNPSStack">
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
		</member>
		<member name="F:YSI_g_sNPSTrampoline">
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="Hooks_RegisterNPSHook"/>
		</member>
		<member name="F:YSI_g_sName">
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="_@Hy"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="Hooks_GenerateCode"/>
		</member>
		<member name="F:YSI_g_sPassthroughNestings">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sPlayerCallback">
			<tagname value="F@_@iiiis"/>
			<referrer name="Dialog_Set"/>
			<referrer name="Dialog_ShowCallback"/>
			<referrer name="Dialog_Show"/>
			<referrer name="_@yHOnPlayerDisconnect@01"/>
			<referrer name="_@yHOnDialogResponse@01"/>
			<referrer name="Dialog_ShowPlayerDialog"/>
		</member>
		<member name="F:YSI_g_sPlayerDialog">
			<referrer name="Dialog_Get"/>
			<referrer name="Dialog_Set"/>
			<referrer name="_@yHOnPlayerDisconnect@01"/>
			<referrer name="_@yHOnDialogResponse@01"/>
		</member>
		<member name="F:YSI_g_sPlayerTimers">
			<referrer name="_@yHOnPlayerConnect@02"/>
			<referrer name="_@yHOnPlayerDisconnect@02"/>
			<referrer name="_Timer_D"/>
		</member>
		<member name="F:YSI_g_sPropCaller">
			<referrer name="K@"/>
			<referrer name="D@"/>
		</member>
		<member name="F:YSI_g_sPropEmpty">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="T@"/>
		</member>
		<member name="F:YSI_g_sPropReturn">
			<referrer name="D@"/>
			<referrer name="L@"/>
			<referrer name="X@"/>
		</member>
		<member name="F:YSI_g_sPropVarArg">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="L@"/>
			<referrer name="T@"/>
		</member>
		<member name="F:YSI_g_sPtr">
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sReplacePtr">
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Hooks_SortReplacements"/>
		</member>
		<member name="F:YSI_g_sReplacements">
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Hooks_SortReplacements"/>
		</member>
		<member name="F:YSI_g_sReplacementsLongOrder">
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Hooks_SortReplacements"/>
		</member>
		<member name="F:YSI_g_sReplacementsShortOrder">
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Hooks_SortReplacements"/>
		</member>
		<member name="F:YSI_g_sScriptInitState">
			<tagname value="E_SCRIPTINIT_STATE"/>
			<referrer name="Server_JITExists"/>
			<referrer name="Server_JITComplete"/>
			<referrer name="Script_JITComplete"/>
			<referrer name="Server_CacheLoaded"/>
			<referrer name="Script_CacheLoaded"/>
			<referrer name="Server_CacheSaved"/>
			<referrer name="Script_CacheSaved"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="OnJITCompile"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
		</member>
		<member name="F:YSI_g_sSkips">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sSortedOnce">
			<tagname value="bool"/>
			<referrer name="Hooks_CompressPublics"/>
			<referrer name="_Hooks_RepairStub"/>
		</member>
		<member name="F:YSI_g_sStack">
			<referrer name="AMX_OnCodeInit"/>
		</member>
		<member name="F:YSI_g_sStackPtr">
			<referrer name="AMX_OnCodeInit"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sStacks">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sTempRet">
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
		</member>
		<member name="F:YSI_g_sTimerList">
			<tagname value="Alloc"/>
			<referrer name="_Timer_Get"/>
			<referrer name="_Timer_C"/>
			<referrer name="_Timer_F"/>
		</member>
		<member name="F:YSI_g_sTimers">
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
		</member>
		<member name="F:YSI_g_sUserId">
			<referrer name="_Timer_C"/>
		</member>
		<member name="F:YSI_g_sYSIM_STRING">
			<referrer name="K@"/>
		</member>
		<member name="F:YSI_g_sYSI_MAX_STRING">
			<referrer name="K@"/>
		</member>
		<member name="F:YSI_gsCalls">
		</member>
		<member name="F:YSI_gsDefaultDirs">
			<referrer name="GetYSIScriptfilesDir"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
		</member>
		<member name="F:YSI_gsFirstHeader">
			<tagname value="bool"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroMessage"/>
		</member>
		<member name="F:YSI_gsIter_ActorDo">
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
		</member>
		<member name="F:YSI_gsIter_VehicleDo">
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
		</member>
		<member name="F:YSI_gsNewPart">
			<tagname value="bool"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroPart"/>
		</member>
		<member name="F:YSI_gsObnoxiousHeader">
			<tagname value="bool"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
		</member>
		<member name="F:YSI_gsPurgeTimer">
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="SSCANF_OnGameModeInit"/>
		</member>
		<member name="F:YSI_gsStartDMY">
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="Server_GetStartDateTime"/>
		</member>
		<member name="F:YSI_gsStartHMS">
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="Server_GetStartDateTime"/>
		</member>
		<member name="F:YSI_gsStartTime">
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Server_GetStartTime"/>
		</member>
		<member name="F:YSI_gs_CALLBACK_ii">
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
			<referrer name="ORM_SelectInline"/>
			<referrer name="ORM_UpdateInline"/>
			<referrer name="ORM_InsertInline"/>
			<referrer name="ORM_DeleteInline"/>
			<referrer name="ORM_LoadInline"/>
			<referrer name="ORM_SaveInline"/>
		</member>
		<member name="F:YSI_gs_INDIRECT_FROM_CALLBACK">
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
			<referrer name="ORM_SelectInline"/>
			<referrer name="ORM_UpdateInline"/>
			<referrer name="ORM_InsertInline"/>
			<referrer name="ORM_DeleteInline"/>
			<referrer name="ORM_LoadInline"/>
			<referrer name="ORM_SaveInline"/>
		</member>
		<member name="F:YSI_gscCrashdetect">
		</member>
		<member name="F:YSI_gscDone">
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
		</member>
		<member name="F:YSI_gscFailed">
		</member>
		<member name="F:YSI_gscHeader">
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroPart"/>
		</member>
		<member name="F:YSI_gscInitMsgA">
		</member>
		<member name="F:YSI_gscInitMsgB">
		</member>
		<member name="F:YSI_gscInitMsgC">
			<referrer name="ScriptInit_Dump"/>
		</member>
		<member name="F:YSI_gscInitMsgD">
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
		</member>
		<member name="F:YSI_gscLinux">
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="F:YSI_gscOnClientCheckResponse">
			<referrer name="y_rconfix_Load"/>
		</member>
		<member name="F:YSI_gscPostInitFile">
		</member>
		<member name="F:YSI_gscPreInitFile">
		</member>
		<member name="F:YSI_gscRconFixFS">
			<referrer name="y_rconfix_Load"/>
		</member>
		<member name="F:YSI_gscSpacer">
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroPart"/>
		</member>
		<member name="F:YSI_gscWindows">
			<referrer name="Script_GetCompilerString"/>
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="F:YSI_gsii">
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
		</member>
		<member name="F:YSI_gzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It ends a massive  comment block in the pawndoc XML output that hides all YSI internal  variables - that is, those that start with <c>YSI_g</c>.  </remarks>  --> 
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0000_0063_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0064_0127_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0064_0127_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0064_0127_CALLED">
		</member>
		<member name="F:Y_UNIQUE_0064_0127_CALLED">
		</member>
		<member name="F:ZoneZP">
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
		</member>
		<member name="F:ZrzutCP">
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:ZrzutMapIcon">
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:ZrzutPaczka">
			<referrer name="_@yHResetPlayerData@0V"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:ZrzutPaczkaCount">
			<referrer name="_@yHResetPlayerData@0V"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
		</member>
		<member name="F:ZrzutPaczkaID">
			<referrer name="_@yHResetPlayerData@0V"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:ZrzutPaczkaName">
			<referrer name="ZrzutLoaded"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:ZrzutPositions">
			<tagname value="Float"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
		</member>
		<member name="F:ZrzutReward">
			<referrer name="_@yHResetPlayerData@0V"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:ZrzutSwitch">
			<referrer name="_@yHResetPlayerData@0V"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
		</member>
		<member name="F:ZrzutVehicle">
			<referrer name="_@yHResetPlayerData@0V"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerExitVehicle@0V"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:ZrzutWaga">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0V"/>
			<referrer name="Zrzut_Start"/>
		</member>
		<member name="F:_0">
			<summary>  The first parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_0</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_0zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You  still see one variable (<c>_0</c>), but that one has a legitimate use  that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_1">
			<summary>  The second parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_1</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_1zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_1</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_2">
			<summary>  The third parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_2</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_2zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_2</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_3">
			<summary>  The fourth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_3</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_3zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_3</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_4">
			<summary>  The fifth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_4</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_4zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_4</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_5">
			<summary>  The sixth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_5</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_5zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_5</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_6">
			<summary>  The seventh parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_6</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_6zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_6</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_7">
			<summary>  The eighth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_7</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_7zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_7</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_8">
			<summary>  The ninth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_8</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_8zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_8</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_9">
			<summary>  The tenth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_9</c> prefix.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_PP@TMP1">
		</member>
		<member name="F:_PP@TMP2">
		</member>
		<member name="F:_PP@TMP3">
		</member>
		<member name="F:_PP@TRUE">
		</member>
		<member name="F:_YSI_g_sCurrentTimer">
			<tagname value="Timer"/>
			<referrer name="Timer_GetCallCount"/>
			<referrer name="Timer_IsRunning"/>
			<referrer name="_Timer_F"/>
			<referrer name="@_yTSecondTimer"/>
			<referrer name="@_yTMinuteTimer"/>
		</member>
		<member name="F:__ARR">
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<library>amx_assembly addressof</library>
		</member>
		<member name="F:__COMPILER_CODEPAGE_TEST_6">
		</member>
		<member name="F:__COMPILER_PACKED_TEST">
		</member>
		<member name="F:__OPEN_MP_VERSION">
			<attribute name="public"/>
			<remarks>  If running on SA:MP this will remain <c>0</c>, open.mp will set it.  open.mp versions look like:  <code>  01.04.02.0544  </code>  Thus they are encoded here as:  <code>  (major << 28) | (minor << 21) | (patch << 14) | (prerel)  </code>  </remarks> 
		</member>
		<member name="F:__REF">
			<referrer name="Malloc_OnCodeInit"/>
			<library>amx_assembly addressof</library>
		</member>
		<member name="F:__SAMP_INCLUDES_VERSION">
			<attribute name="public"/>
			<referrer name="Script_GetIncludesString"/>
			<remarks>  Version examples:  <ul>  <li><c>0.3.DL R1       - 03D010</c></li>  <li>                               </li>  <li><c>0.3.7 R3        - 037030</c></li>  <li><c>0.3.7 R2-2      - 037022</c></li>  <li><c>0.3.7 R1-2      - 037012</c></li>  <li><c>0.3.7           - 037000</c></li>  <li>                               </li>  <li><c>0.3z R4         - 030700</c></li>  <li><c>0.3z R3         - 030700</c></li>  <li><c>0.3z R2-1       - 030700</c></li>  <li><c>0.3z R1-2       - 030700</c></li>  <li><c>0.3z            - 030700</c></li>  <li><c>0.3x R2 patch 1 - 030621</c></li>  <li><c>0.3x R2         - 030620</c></li>  <li><c>0.3x R1-2       - 030612</c></li>  <li><c>0.3x            - 030600</c></li>  <li><c>0.3e            - 030500</c></li>  <li><c>0.3d            - 030400</c></li>  <li><c>0.3c            - 030300</c></li>  <li><c>0.3b            - 030200</c></li>  <li><c>0.3a            - 030100</c></li>  <li>                               </li>  <li><c>0.2X            - 02A000</c></li>  <li><c>0.2.2 R3        - 022300</c></li>  </ul>  Rough rules:  <p />  Uses (roughtly) BCD.  Special versions are denoted outside 0-9.  <code>  0.1.2c R4-5  | | ||  | |  0 1 23  4 5  =  0x012345  </code>  (assuming c is the third revision)  <p />  0.2X becomes 02A000 because it is basically 0.2.3, but not, while higher than  0.2.2 so can't be 020400 (for example).  Also, its a capital letter, so doesn't  use the revision method.  <p />  P.S.  Making a consistent scheme for SA:MP versions is REALLY hard.  <p />  open.mp releases can use `A` as the first digit.  </remarks> 
		</member>
		<member name="F:__YSI_g_sHeapStart">
			<referrer name="VA_OnCodeInit"/>
			<referrer name="Malloc_Allocate"/>
			<referrer name="Malloc_Free"/>
		</member>
		<member name="F:__YSI_g_sUnusedStart">
			<referrer name="VA_OnCodeInit"/>
			<referrer name="Malloc_Allocate"/>
			<referrer name="Malloc_Free"/>
		</member>
		<member name="F:__YSI_gsCompilerEnum">
		</member>
		<member name="F:__date">
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__gOnce">
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerStateChange"/>
		</member>
		<member name="F:__time">
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="F:_pawncmd_is_gamemode">
			<tagname value="bool"/>
			<attribute name="public"/>
		</member>
		<member name="F:_pawncmd_version">
			<attribute name="public"/>
		</member>
		<member name="F:_pawnraknet_is_gamemode">
			<tagname value="bool"/>
			<attribute name="public"/>
		</member>
		<member name="F:_pawnraknet_version">
			<attribute name="public"/>
		</member>
		<member name="F:_pawnregex_version">
			<attribute name="public"/>
		</member>
		<member name="F:_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzy">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You  still see some internal variables (<c>_0</c> - <c>_9</c>), but those  have a legitimate reason to be documented externally.  <p />  This is <c>_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzy</c> and ends the internal  variables block.  This is the last possible name before the first  character is no longer <c>_</c>, except for one, when the functions are  sorted lexicographically (alphabetically).  There's also  <c>_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz</c> that ends the functions block;  they could have the same name if they were not declared in the same  scope, but they might not always be separately defined.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:ac_ACAllow">
			<tagname value="bool"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="ac_IsAntiCheatEnabled"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="ac_LoadCfg"/>
		</member>
		<member name="F:ac_AmmuNationInfo">
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_Timer"/>
		</member>
		<member name="F:ac_AmmuNations">
			<tagname value="Float"/>
			<referrer name="ac_InAmmuNation"/>
		</member>
		<member name="F:ac_Casinos">
			<tagname value="Float"/>
			<referrer name="ac_InCasino"/>
		</member>
		<member name="F:ac_ClassAmmo">
			<referrer name="ac_AddPlayerClass"/>
			<referrer name="OnPlayerRequestClass"/>
		</member>
		<member name="F:ac_ClassPos">
			<tagname value="Float"/>
			<referrer name="ac_AddPlayerClass"/>
			<referrer name="OnPlayerRequestClass"/>
		</member>
		<member name="F:ac_ClassWeapon">
			<referrer name="ac_AddPlayerClass"/>
			<referrer name="OnPlayerRequestClass"/>
		</member>
		<member name="F:ac_IntEnterExits">
			<tagname value="bool"/>
			<referrer name="ac_DisableInteriorEnterExits"/>
			<referrer name="PHY_OnPlayerConnect"/>
		</member>
		<member name="F:ac_LagCompMode">
			<tagname value="bool"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
		</member>
		<member name="F:ac_MaxPassengers">
			<referrer name="ac_GetMaxPassengers"/>
		</member>
		<member name="F:ac_Mtfc">
			<referrer name="OnDialogResponse"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnVehicleSirenStateChange"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="ac_FloodDetect"/>
		</member>
		<member name="F:ac_NOPAllow">
			<tagname value="bool"/>
			<referrer name="ac_EnableAntiNOP"/>
			<referrer name="ac_IsAntiNOPEnabled"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="ac_LoadNOPCfg"/>
		</member>
		<member name="F:ac_PayNSpray">
			<tagname value="Float"/>
			<referrer name="ac_InPayNSpray"/>
		</member>
		<member name="F:ac_PedAnims">
			<tagname value="bool"/>
			<referrer name="ac_UsePlayerPedAnims"/>
			<referrer name="OnPlayerUpdate"/>
		</member>
		<member name="F:ac_RconEnable">
			<tagname value="bool"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
		</member>
		<member name="F:ac_Restaurants">
			<tagname value="Float"/>
			<referrer name="ac_InRestaurant"/>
		</member>
		<member name="F:ac_StuntBonus">
			<tagname value="bool"/>
			<referrer name="ac_EnableStuntBonusForAll"/>
			<referrer name="PHY_OnPlayerConnect"/>
		</member>
		<member name="F:ac_VehFriendlyFire">
			<tagname value="bool"/>
			<referrer name="ac_EnableVehicleFriendlyFire"/>
			<referrer name="OnPlayerWeaponShot"/>
		</member>
		<member name="F:ac_cPrice">
			<referrer name="OnVehicleMod"/>
		</member>
		<member name="F:ac_pAmmo">
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="ac_Timer"/>
		</member>
		<member name="F:ac_sInfo">
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="ac_KickWithCode"/>
		</member>
		<member name="F:ac_vMachines">
			<tagname value="Float"/>
			<referrer name="ac_NearVendingMachine"/>
		</member>
		<member name="F:ac_vMods">
			<referrer name="ac_IsCompatible"/>
		</member>
		<member name="F:ac_vType">
			<referrer name="ac_IsAnAirplane"/>
			<referrer name="ac_IsAnAircraftEx"/>
			<referrer name="ac_IsABoatEx"/>
			<referrer name="ac_IsABmx"/>
			<referrer name="ac_IsABmxEx"/>
			<referrer name="ac_IsABikeEx"/>
			<referrer name="ac_IsABusEx"/>
			<referrer name="ac_IsATrainLoco"/>
			<referrer name="ac_IsATrainCarriageEx"/>
			<referrer name="ac_IsATrainPartEx"/>
		</member>
		<member name="F:ac_wMinRange">
			<tagname value="Float"/>
			<referrer name="OnPlayerWeaponShot"/>
		</member>
		<member name="F:ac_wModel">
			<referrer name="ac_CreatePickup"/>
			<referrer name="ac_CreateDynamicPickup"/>
		</member>
		<member name="F:ac_wSlot">
			<referrer name="ac_GivePlayerWeapon"/>
			<referrer name="ac_SetPlayerAmmo"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
		</member>
		<member name="F:achievementData">
			<referrer name="achievement"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_quest"/>
		</member>
		<member name="F:adminWeekName">
			<referrer name="Init_AdminTop"/>
		</member>
		<member name="F:animationList">
			<referrer name="WC_OnPlayerConnect"/>
		</member>
		<member name="F:annTime">
			<referrer name="pc_cmd_ann"/>
		</member>
		<member name="F:annTimer">
			<referrer name="pc_cmd_ann"/>
		</member>
		<member name="F:attachmentObjectData">
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:bakData">
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="F:bankCheckpoint">
			<referrer name="Init_Bank"/>
			<referrer name="IsPlayerNearBankCP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@08"/>
		</member>
		<member name="F:bankEnterPickup">
			<referrer name="Init_Bank"/>
			<referrer name="Bank_Pickup"/>
		</member>
		<member name="F:bankExitPickup">
			<referrer name="Init_Bank"/>
			<referrer name="Bank_Pickup"/>
		</member>
		<member name="F:bankHeistCheckpoint">
			<referrer name="Heist_Init"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@09"/>
		</member>
		<member name="F:bankHeistCode">
			<referrer name="RandomVaultCode"/>
			<referrer name="ShowVaultDialog"/>
			<referrer name="OnDialogHeist"/>
		</member>
		<member name="F:bankHeistCountDown">
			<referrer name="Heist_Pickup"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
		</member>
		<member name="F:bankHeistEnabled">
			<tagname value="bool"/>
			<referrer name="Heist_Init"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:bankHeistExit">
			<referrer name="Heist_Init"/>
			<referrer name="Heist_Pickup"/>
		</member>
		<member name="F:bankHeistGas">
			<tagname value="bool"/>
			<referrer name="Heist_Init"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:bankHeistHacker">
			<referrer name="Heist_Pickup"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:bankHeistLabel">
			<tagname value="Text3D"/>
			<referrer name="Heist_Init"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:bankHeistPickup">
			<referrer name="Heist_Init"/>
			<referrer name="Heist_Pickup"/>
		</member>
		<member name="F:bankHeistTimer">
			<referrer name="Heist_Pickup"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:bankHeistVault">
			<referrer name="Heist_Init"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
		</member>
		<member name="F:bankHeistVaultLabel">
			<tagname value="Text3D"/>
			<referrer name="Heist_Init"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
		</member>
		<member name="F:bankHeistVaultOpen">
			<tagname value="bool"/>
			<referrer name="Heist_Init"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@09"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:bans">
			<referrer name="Init_Records"/>
			<referrer name="BanPlayer"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:betData">
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
		</member>
		<member name="F:bombaOwner">
			<referrer name="pc_cmd_bomba"/>
			<referrer name="BombaExplode"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
		</member>
		<member name="F:bombaPickup">
			<referrer name="pc_cmd_bomba"/>
			<referrer name="BombaExplode"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="SetPlayerDraw"/>
		</member>
		<member name="F:bombaTimer">
			<referrer name="pc_cmd_bomba"/>
			<referrer name="BombaExplode"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
		</member>
		<member name="F:businessData">
			<referrer name="UpdateBusinessLabel"/>
			<referrer name="GetNearestBusiness"/>
			<referrer name="GetBusinessWorld"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="CountFreeBusiness"/>
			<referrer name="pc_cmd_wolnybiznes"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="FetchCasino"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="FetchGunShop"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="CreateBusiness"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
			<referrer name="OnDialogSettings"/>
		</member>
		<member name="F:cb_Connect">
			<referrer name="OnScriptInit@E"/>
			<referrer name="Iter_OnPlayerConnect"/>
		</member>
		<member name="F:chowanyDataArena">
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
		</member>
		<member name="F:cityNameData">
			<referrer name="getCityName"/>
		</member>
		<member name="F:connects">
			<referrer name="Init_Records"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:corpsNames">
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:creditData">
			<referrer name="OnBankDialog"/>
		</member>
		<member name="F:dbconn">
			<tagname value="MySQL"/>
			<referrer name="Init_Records"/>
			<referrer name="checkRecord"/>
			<referrer name="addLevelScore"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="Init_Quiz"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="OnDialogHud"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Init_Teleports"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="SetVehicleToSell"/>
			<referrer name="CountVehicleSellPlayer"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="SaveGang"/>
			<referrer name="CountGangMembers"/>
			<referrer name="giveGangBudget"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="CheckGangWar"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="addGangScore"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="addJobScore"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="Init_Business"/>
			<referrer name="CreateBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="AddRaceArena"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StartWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="WarnPlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="CountAdminList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="MinuteTimer"/>
			<referrer name="WC_OnGameModeExit"/>
			<referrer name="Init_MySQL"/>
			<referrer name="Init_Map"/>
			<referrer name="giveMoney"/>
		</member>
		<member name="F:dbstr">
			<referrer name="checkRecord"/>
			<referrer name="addLevelScore"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="Init_Quiz"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="OnDialogHud"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="SetVehicleToSell"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="SaveGang"/>
			<referrer name="giveGangBudget"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="Init_GangZones"/>
			<referrer name="CheckGangWar"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="addGangScore"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="addJobScore"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="CreateBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="AddRaceArena"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="WarnPlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="MinuteTimer"/>
			<referrer name="Init_Map"/>
			<referrer name="giveMoney"/>
		</member>
		<member name="F:deathArenaID">
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
		</member>
		<member name="F:deathArenaInterior">
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
		</member>
		<member name="F:deathArenaKills">
			<referrer name="StartDA"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerDeath@0r"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:deathArenaPlace">
			<referrer name="StartDA"/>
			<referrer name="StopDA"/>
		</member>
		<member name="F:deathPosLVPD">
			<tagname value="Float"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
		</member>
		<member name="F:deathPosWH">
			<tagname value="Float"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
		</member>
		<member name="F:deniedRankNames">
			<referrer name="OnDialogOwnRank"/>
		</member>
		<member name="F:diskActive">
			<tagname value="bool"/>
			<referrer name="Init_Disks"/>
			<referrer name="GetClosestDisk"/>
			<referrer name="CollectDisk"/>
		</member>
		<member name="F:diskCount">
			<referrer name="Init_Disks"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:diskLabel">
			<tagname value="Text3D"/>
			<referrer name="Init_Disks"/>
			<referrer name="CollectDisk"/>
		</member>
		<member name="F:diskPickup">
			<referrer name="Init_Disks"/>
			<referrer name="GetClosestDisk"/>
			<referrer name="CollectDisk"/>
		</member>
		<member name="F:diskReward">
			<referrer name="Init_Disks"/>
			<referrer name="CollectDisk"/>
		</member>
		<member name="F:drawMessages">
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:drivingExamData">
			<referrer name="RunDriveExams"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
		</member>
		<member name="F:eventPanelData">
			<referrer name="pc_cmd_evpanel"/>
		</member>
		<member name="F:eventSettingData">
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
		</member>
		<member name="F:eventWeekName">
			<referrer name="Init_AdminTop"/>
		</member>
		<member name="F:examPositions">
			<tagname value="Float"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
		</member>
		<member name="F:figureActive">
			<tagname value="bool"/>
			<referrer name="Init_Figure"/>
			<referrer name="GetClosestFigure"/>
			<referrer name="CollectFigure"/>
		</member>
		<member name="F:figureCount">
			<referrer name="Init_Figure"/>
			<referrer name="GetClosestFigure"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:figureLabel">
			<tagname value="Text3D"/>
			<referrer name="Init_Figure"/>
			<referrer name="CollectFigure"/>
		</member>
		<member name="F:figurePickup">
			<referrer name="Init_Figure"/>
			<referrer name="GetClosestFigure"/>
			<referrer name="CollectFigure"/>
		</member>
		<member name="F:fishBaitData">
			<referrer name="ShowFishBaits"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="OnPlayerFishing"/>
		</member>
		<member name="F:fishData">
			<referrer name="Init_Fishing"/>
			<referrer name="pc_cmd_rybki"/>
			<referrer name="OnFishDialog"/>
			<referrer name="GetFishClass"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
		</member>
		<member name="F:fishEvent">
			<tagname value="bool"/>
			<referrer name="pc_cmd_rybki"/>
			<referrer name="pc_cmd_fishevent"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:fishRodeData">
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
		</member>
		<member name="F:fishUlepszeniaData">
			<referrer name="ShowFishUlepszenia"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
		</member>
		<member name="F:fortuneLabel">
			<tagname value="Text3D"/>
			<referrer name="FetchCasino"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:fortunePlayer">
			<referrer name="FetchCasino"/>
			<referrer name="Fortune_Start"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:fortunePosition">
			<tagname value="Float"/>
			<referrer name="FetchCasino"/>
			<referrer name="GetNearestFortune"/>
		</member>
		<member name="F:gAMXOpcodeBaseSizes">
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmDecodeInsnUnsafe"/>
			<referrer name="CodeScanRunFastPrescanLocated"/>
			<referrer name="CodeScanRunFastPrescanRelocate"/>
			<referrer name="CGen_OnCodeInit"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="F:gAMXOpcodeNames">
			<referrer name="GetOpcodeInstructionName"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="F:gAMXOpcodeNeedsReloc">
			<referrer name="GetOpcodeInstructionRelocatable"/>
			<referrer name="DisasmGetOperandReloc"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="F:gAMXOpcodeParameterCounts">
			<referrer name="GetOpcodeInstructionParameters"/>
			<referrer name="DisasmGetNumOperands"/>
			<referrer name="AsmEmitPadding"/>
			<referrer name="CodeScanMatcherPattern_"/>
			<referrer name="CodeScanCheck"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="F:gAmxAssemblyAddress_">
			<referrer name="ReadAmxMemoryArray"/>
			<referrer name="WriteAmxMemoryArray"/>
			<referrer name="GetRawAmxHeader"/>
			<referrer name="PrintAmxNameTable"/>
			<referrer name="NtCompare"/>
			<referrer name="NtCopy"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmDecodeInsnUnsafe"/>
			<referrer name="DisasmGetOperand"/>
			<referrer name="DisasmGetNumOperands"/>
			<referrer name="DisasmGetOperandReloc"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteDataRowChar"/>
			<referrer name="DisasmWriteDataRowHex"/>
			<referrer name="AsmEmitCell"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitPadding"/>
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanRunFastPrescanLocated"/>
			<referrer name="CodeScanRunFastPrescanRelocate"/>
			<referrer name="DumpAMX_WriteAMXData"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="YVA2_FoundCall"/>
		</member>
		<member name="F:gBase">
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanInit"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:gCodBase">
			<referrer name="CodeScanRunFastPrescanLocated"/>
			<referrer name="CodeScanRunFastPrescanRelocate"/>
			<referrer name="CodeScanInit"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:gCodBase">
			<referrer name="DisasmInit"/>
			<referrer name="DisasmReloc"/>
			<referrer name="DisasmGetOperandReloc"/>
			<referrer name="DisasmWriteCode"/>
			<library>amx_assembly disasm</library>
		</member>
		<member name="F:gCodeScanCallback_match">
			<referrer name="AddressofResolve"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:gDat">
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanInit"/>
			<referrer name="CodeScanGetMatchFunc"/>
			<referrer name="CodeScanGetMatchAddress"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:gFakeMatcher">
			<referrer name="CodeScanFindOneFastPattern2"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanRun"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:gHdr">
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanInit"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:gHdr">
			<referrer name="ResetStaticAmxHeader"/>
			<referrer name="GetAmxHeader"/>
			<referrer name="GetAmxHeaderComponent"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="F:gInitialized">
			<tagname value="bool"/>
			<referrer name="ResetStaticAmxHeader"/>
			<referrer name="GetAmxHeader"/>
			<referrer name="GetAmxHeaderComponent"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="F:gOP_CASETBL">
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanInit"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:gOP_NOP">
			<referrer name="CodeScanInit"/>
			<referrer name="CodeScanNOPMatch"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:gPreviousWriteOffset">
			<referrer name="AsmEmitInstruction"/>
			<referrer name="AsmEmitJumpLabelInstruction"/>
			<referrer name="AsmGetPreviousWriteOffset"/>
			<library>amx_assembly asm</library>
		</member>
		<member name="F:gRelocateRequired">
			<tagname value="bool"/>
			<referrer name="CodeScanMatcherInit_"/>
			<referrer name="CodeScanRunFast"/>
			<library>amx_assembly codescan</library>
		</member>
		<member name="F:g_HitRejectReasons">
			<referrer name="GetRejectedHit"/>
		</member>
		<member name="F:g_MenuBackground">
			<tagname value="Text"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="Hook_OnGameModeInit"/>
		</member>
		<member name="F:g_MenuBottomBanner">
			<tagname value="Text"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="Hook_OnGameModeInit"/>
		</member>
		<member name="F:g_MenuCloseButton">
			<tagname value="Text"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
		</member>
		<member name="F:g_MenuCooldownTick">
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:g_MenuCurrentPage">
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:g_MenuExtraID">
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:g_MenuHeaderText">
			<tagname value="PlayerText"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="DestroyModelSelectionPlayerTDs"/>
			<referrer name="ac_OnPlayerDisconnect"/>
		</member>
		<member name="F:g_MenuItemCount">
			<referrer name="HideModelSelectionMenu"/>
		</member>
		<member name="F:g_MenuItemText">
			<tagname value="PlayerText"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="SetModelSelectionModelBox"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="DestroyModelSelectionPlayerTDs"/>
			<referrer name="ac_OnPlayerDisconnect"/>
		</member>
		<member name="F:g_MenuItems">
			<tagname value="PlayerText"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="SetModelSelectionModelBox"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="DestroyModelSelectionPlayerTDs"/>
			<referrer name="ac_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:g_MenuLeftArrow">
			<tagname value="Text"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
		</member>
		<member name="F:g_MenuModels">
			<tagname value="List"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:g_MenuPageCount">
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
		</member>
		<member name="F:g_MenuPageNumber">
			<tagname value="PlayerText"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="DestroyModelSelectionPlayerTDs"/>
			<referrer name="ac_OnPlayerDisconnect"/>
		</member>
		<member name="F:g_MenuRightArrow">
			<tagname value="Text"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
		</member>
		<member name="F:g_MenuShown">
			<tagname value="bool"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:g_MenuTopBanner">
			<tagname value="Text"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="Hook_OnGameModeInit"/>
		</member>
		<member name="F:g_WeaponName">
			<referrer name="SetWeaponName"/>
			<referrer name="WC_GetWeaponName"/>
		</member>
		<member name="F:g_args">
			<referrer name="Push"/>
			<referrer name="Pop"/>
			<referrer name="Call"/>
			<referrer name="CallN"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="F:g_nargs">
			<referrer name="Push"/>
			<referrer name="Pop"/>
			<referrer name="Call"/>
			<referrer name="CallN"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="F:g_sort_cmp_array">
			<referrer name="CheckSparing"/>
			<referrer name="StopDA"/>
			<referrer name="UpdateRC"/>
		</member>
		<member name="F:g_sort_cmp_offset">
			<referrer name="SortDeepArray_Entry"/>
			<referrer name="_SortDeepArray"/>
		</member>
		<member name="F:g_sort_cmp_type">
			<referrer name="SortDeepArray_Entry"/>
			<referrer name="_SortDeepArray"/>
		</member>
		<member name="F:g_sort_ignorecase">
			<tagname value="bool"/>
			<referrer name="SortDeepArray_Entry"/>
			<referrer name="_SortDeepArray"/>
		</member>
		<member name="F:g_sort_order">
			<tagname value="E_SORT_ORDER"/>
			<referrer name="SortDeepArray_Entry"/>
			<referrer name="_SortDeepArray"/>
		</member>
		<member name="F:g_sort_stack">
			<referrer name="_SortDeepArray"/>
			<referrer name="SortArrayUsingComparator_QS"/>
			<referrer name="SortArrayUsingCompInto_QS"/>
		</member>
		<member name="F:gameCMD">
			<referrer name="RefreshGameList"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="StopGG"/>
			<referrer name="StartWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:gameName">
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="StopGG"/>
			<referrer name="StartWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:gangAchievementData">
			<referrer name="CheckGangAchievement"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="F:gangBasesData">
			<referrer name="Init_GangBases"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="GetNearestBase"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_tspawn"/>
			<referrer name="WC_OnPlayerSpawn"/>
		</member>
		<member name="F:gangData">
			<referrer name="UpdateGangBox"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="DelayedGangInvite"/>
			<referrer name="SaveGang"/>
			<referrer name="CountGangMembers"/>
			<referrer name="giveGangBudget"/>
			<referrer name="HideBudgetDraw"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="FetchGang"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="UpdateGangZoneLabel"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="pc_cmd_atakuj"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ZonesReward"/>
			<referrer name="ShowGangList"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_baza"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="TransferResetGang"/>
			<referrer name="_updateGangBarEx"/>
			<referrer name="addGangScore"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingRespawn"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopSparing"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="HideRankedPoints"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="pc_cmd_tkolor"/>
			<referrer name="pc_cmd_topusc"/>
			<referrer name="LeaveGang"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:gangRankPermissions">
			<referrer name="gangRankError"/>
			<referrer name="OnDialogGangMember"/>
		</member>
		<member name="F:gangRankingPlace">
			<referrer name="FetchGang"/>
		</member>
		<member name="F:gieldaSellCP">
			<referrer name="Init_Gielda"/>
			<referrer name="IsPlayerNearSellPoint"/>
		</member>
		<member name="F:gieldaSellLabel">
			<tagname value="Text3D"/>
			<referrer name="Init_Gielda"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
		</member>
		<member name="F:gieldaSellOwned">
			<referrer name="Init_Gielda"/>
			<referrer name="GetFreeGieldaPoint"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="CountVehicleToSell"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
		</member>
		<member name="F:gieldaSellPos">
			<tagname value="Float"/>
			<referrer name="Init_Gielda"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
		</member>
		<member name="F:grabarzCP">
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:grabarzCorps">
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:grabarzCount">
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:grabarzEtap">
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:grabarzLabel">
			<tagname value="Text3D"/>
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:grabarzMapIcon">
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:grabarzReward">
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:grabarzTravelPosition">
			<tagname value="Float"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
		</member>
		<member name="F:grabarzTrumna">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TakeTrumna"/>
		</member>
		<member name="F:grabarzVehicle">
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:grabarzVehicleOwner">
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0U"/>
		</member>
		<member name="F:grabarzYardPosition">
			<tagname value="Float"/>
			<referrer name="Grabarz_TravelDone"/>
		</member>
		<member name="F:gsCodSize">
			<referrer name="Indirect_Call"/>
			<referrer name="Indirect_Callstring"/>
			<referrer name="Indirect_Callvoid"/>
			<referrer name="Indirect_Array"/>
			<referrer name="Indirect_GetMeta_"/>
			<referrer name="Indirect_SetMeta_"/>
			<referrer name="Indirect_Claim_"/>
			<referrer name="Indirect_Release_"/>
			<referrer name="Indirect_Ref_"/>
			<referrer name="Indirect_Ptr_"/>
			<referrer name="Indirect_DeRef_"/>
			<referrer name="Indirect_DePtr_"/>
			<referrer name="Indirect_Init"/>
		</member>
		<member name="F:guiPrivCarModels">
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarBuy"/>
		</member>
		<member name="F:guiVehicleModels">
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="F:heistRobbed">
			<referrer name="Heist_Init"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="VaultHeistTimer"/>
		</member>
		<member name="F:heist_kurwa">
			<tagname value="bool"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:helpAdminCMD">
			<referrer name="pc_cmd_acmd"/>
		</member>
		<member name="F:hudOptions">
			<referrer name="pc_cmd_hud"/>
		</member>
		<member name="F:interiorDataList">
			<referrer name="pc_cmd_interiory"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="F:iterstart@Fib">
		</member>
		<member name="F:iterstart@Filter">
		</member>
		<member name="F:iterstart@N">
		</member>
		<member name="F:iterstart@NonNull">
		</member>
		<member name="F:iterstart@Null">
		</member>
		<member name="F:iterstart@Powers">
		</member>
		<member name="F:iterstart@Random">
		</member>
		<member name="F:iterstart@Range">
		</member>
		<member name="F:iterstart@Until">
		</member>
		<member name="F:iterstart@VehicleDriver">
		</member>
		<member name="F:iterstart@VehicleOccupant">
		</member>
		<member name="F:iterstart@VehiclePassenger">
		</member>
		<member name="F:jobUlepszeniaData">
			<referrer name="OnDialogJob"/>
		</member>
		<member name="F:kicks">
			<referrer name="Init_Records"/>
			<referrer name="KickPlayer"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:magazynCP">
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="MagazynPacked"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:magazynLabel">
			<tagname value="Text3D"/>
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="ExitPraca"/>
		</member>
		<member name="F:magazynPaczkaSize">
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="Magazynier_Pickup"/>
		</member>
		<member name="F:magazynPaczkaType">
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="Magazynier_Fetch"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:magazynPlacement">
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="MagazynPacked"/>
		</member>
		<member name="F:magazynReward">
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:magazynTowar">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="Magazynier_Fetch"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="MagazynPacked"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:magazynierPickup">
			<referrer name="Init_Jobs"/>
			<referrer name="Magazynier_Pickup"/>
		</member>
		<member name="F:messages">
			<referrer name="Init_Records"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:mineData">
			<referrer name="Init_Mining"/>
			<referrer name="UpdateMineLabel"/>
			<referrer name="GetOreCost"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
		</member>
		<member name="F:noDMRectangle">
			<referrer name="Init_NoDM"/>
		</member>
		<member name="F:noDMZone">
			<referrer name="Init_NoDM"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:opcode_table">
			<tagname value="Opcode"/>
			<referrer name="InitOpcodeTable"/>
			<referrer name="RelocateOpcode"/>
			<referrer name="UnrelocateOpcode"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="F:opcode_table_is_ready">
			<tagname value="bool"/>
			<referrer name="InitOpcodeTable"/>
			<referrer name="RelocateOpcode"/>
			<referrer name="UnrelocateOpcode"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="F:oreEvent">
			<tagname value="bool"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="pc_cmd_oreevent"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
		</member>
		<member name="F:pAFK">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0G"/>
			<referrer name="_@yHOnPlayerUpdate@0G"/>
			<referrer name="CheckPlayerAFK"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:pAFKHealth">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0G"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="pc_cmd_jj"/>
		</member>
		<member name="F:pAFKPosition">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0G"/>
			<referrer name="_@yHOnPlayerUpdate@0G"/>
			<referrer name="CheckPlayerAFK"/>
		</member>
		<member name="F:pAFKTime">
			<referrer name="_@yHResetPlayerData@0G"/>
			<referrer name="_@yHOnPlayerUpdate@0G"/>
			<referrer name="CheckPlayerAFK"/>
			<referrer name="pc_cmd_zw"/>
		</member>
		<member name="F:pAccountSettings">
			<tagname value="bool"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_aduel"/>
			<referrer name="ResetAccountData"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="getAccountSettings"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="sendError"/>
		</member>
		<member name="F:pAchievement">
			<referrer name="_@yHResetPlayerData@04"/>
			<referrer name="GetAchievement"/>
			<referrer name="achievement"/>
			<referrer name="GetAchievementCount"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pAchievementData">
			<referrer name="_@yHResetPlayerData@04"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="_@yHOnDialogResponse@04"/>
		</member>
		<member name="F:pAchievementDone">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@04"/>
			<referrer name="achievement"/>
			<referrer name="GetAchievementDone"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pAchievementLevel">
			<referrer name="_@yHResetPlayerData@04"/>
			<referrer name="achievement"/>
			<referrer name="GetAchievementLevel"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pAchievementStatus">
			<referrer name="_@yHResetPlayerData@04"/>
			<referrer name="achievement"/>
			<referrer name="GetAchievementStatus"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pAnimation">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0D"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0D"/>
			<referrer name="LoopingAnim"/>
			<referrer name="StopLoopingAnim"/>
		</member>
		<member name="F:pArena">
			<referrer name="_@yHOnPlayerDeath@06"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pArenaDeaths">
			<referrer name="_@yHOnPlayerDeath@06"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="getArenaDeaths"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pArenaKills">
			<referrer name="_@yHOnPlayerDeath@06"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="getArenaKills"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pBank">
			<referrer name="_@yHResetPlayerData@08"/>
			<referrer name="ShowBankPanel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pBankAmount">
			<referrer name="_@yHResetPlayerData@08"/>
			<referrer name="OnBankDialog"/>
		</member>
		<member name="F:pBankTarget">
			<referrer name="_@yHResetPlayerData@08"/>
			<referrer name="OnBankDialog"/>
		</member>
		<member name="F:pBetAccept">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@11"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="pc_cmd_betspec"/>
		</member>
		<member name="F:pBetGang">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@11"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
		</member>
		<member name="F:pBetReward">
			<referrer name="_@yHResetPlayerData@11"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
		</member>
		<member name="F:pBetTarget">
			<referrer name="_@yHResetPlayerData@11"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="pc_cmd_betspec"/>
		</member>
		<member name="F:pBetType">
			<referrer name="_@yHResetPlayerData@11"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
		</member>
		<member name="F:pBusinessCreatorCost">
			<referrer name="_@yHResetPlayerData@0b"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
		</member>
		<member name="F:pBusinessCreatorName">
			<referrer name="_@yHResetPlayerData@0b"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
		</member>
		<member name="F:pBusinessCreatorPosition">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0b"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
		</member>
		<member name="F:pBusinessCreatorType">
			<referrer name="_@yHResetPlayerData@0b"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
		</member>
		<member name="F:pBusinessTimer">
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
		</member>
		<member name="F:pCasinoTokens">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="AddCasinoTokens"/>
			<referrer name="GetCasinoTokens"/>
		</member>
		<member name="F:pCheatDetected">
			<referrer name="OnCheatDetected"/>
			<referrer name="giveWeapon"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pCheatTemp">
			<tagname value="bool"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="giveWeapon"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pCheatWH">
			<tagname value="bool"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pCredit">
			<referrer name="_@yHResetPlayerData@08"/>
			<referrer name="OnBankDialog"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="giveMoney"/>
		</member>
		<member name="F:pDailyDone">
			<tagname value="bool"/>
			<referrer name="ResetQuestData"/>
			<referrer name="GetQuestName"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="OnPlayerLogged"/>
		</member>
		<member name="F:pDailyMoney">
			<referrer name="ResetQuestData"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pDailyQuest">
			<referrer name="ResetQuestData"/>
			<referrer name="GetQuestName"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="OnPlayerLogged"/>
		</member>
		<member name="F:pDailyStatus">
			<referrer name="ResetQuestData"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnPlayerLogged"/>
		</member>
		<member name="F:pDrawVisible">
			<tagname value="bool"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:pDriveCP">
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
		</member>
		<member name="F:pDriveExam">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0C"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerExitVehicle@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerDeath@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
		</member>
		<member name="F:pDriveLicense">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0C"/>
			<referrer name="RunDriveExams"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pDriveStatus">
			<referrer name="_@yHResetPlayerData@0C"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerDeath@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
		</member>
		<member name="F:pDriveTimer">
			<referrer name="_@yHOnPlayerExitVehicle@0C"/>
			<referrer name="DriveExamTimer"/>
		</member>
		<member name="F:pDriveType">
			<referrer name="_@yHResetPlayerData@0C"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerExitVehicle@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerDeath@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
		</member>
		<member name="F:pDriveVehicle">
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerExitVehicle@0C"/>
			<referrer name="DriveExamTimer"/>
		</member>
		<member name="F:pDuel">
			<tagname value="bool"/>
			<referrer name="ResetDuelData"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_aduel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="CheckDuelKiller"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pDuelEnemy">
			<referrer name="ResetDuelData"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_aduel"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuelKiller"/>
			<referrer name="CheckDuel"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pDuelInvite">
			<tagname value="bool"/>
			<referrer name="ResetDuelData"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_aduel"/>
		</member>
		<member name="F:pDuelPoints">
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuel"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pDuelRank">
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="GetPlayerBudget"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pDuelRoundCount">
			<referrer name="ResetDuelData"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuelKiller"/>
			<referrer name="CheckDuel"/>
		</member>
		<member name="F:pDuelRounds">
			<referrer name="ResetDuelData"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuelKiller"/>
		</member>
		<member name="F:pDuelSync">
			<tagname value="bool"/>
			<referrer name="ResetDuelData"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:pDuelTick">
			<referrer name="ResetDuelData"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="CheckDuel"/>
		</member>
		<member name="F:pDuelTimer">
			<referrer name="pc_cmd_duel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="RejectDuelTimer"/>
		</member>
		<member name="F:pDuelWeapon">
			<referrer name="ResetDuelData"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
		</member>
		<member name="F:pEventVehicle">
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
		</member>
		<member name="F:pEventZone">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0x"/>
			<referrer name="pc_cmd_evzone"/>
		</member>
		<member name="F:pEventZoneCreator">
			<referrer name="_@yHResetPlayerData@0x"/>
		</member>
		<member name="F:pEventZonePos">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0x"/>
			<referrer name="pc_cmd_evzone"/>
		</member>
		<member name="F:pFishBait">
			<referrer name="_@yHResetPlayerData@0f"/>
			<referrer name="ShowFishBaits"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="GetFishBaits"/>
			<referrer name="CountPlayerBaits"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pFishBaitUsed">
			<referrer name="_@yHResetPlayerData@0f"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
		</member>
		<member name="F:pFishRode">
			<referrer name="_@yHResetPlayerData@0f"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
		</member>
		<member name="F:pFishStatus">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0f"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
		</member>
		<member name="F:pFishUlepszenia">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0g"/>
			<referrer name="GetFishUlepszenia"/>
			<referrer name="ShowFishUlepszenia"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pFishZylka">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0f"/>
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
		</member>
		<member name="F:pFishing">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0f"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="NieMozeTeraz"/>
		</member>
		<member name="F:pFortuneBlock">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Fortune_Start"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pFortuneCount">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:pFortuneID">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Fortune_Start"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:pFortuneTimer">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:pFreezeTimer">
			<referrer name="FreezePlayer"/>
			<referrer name="UnFreezePlayer"/>
		</member>
		<member name="F:pGame">
			<referrer name="ResetGameData"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopZP"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerDeath@0r"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="RoyalePickup"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pGameDrawTimer">
			<referrer name="showGameDraw"/>
			<referrer name="hideGameDraw"/>
		</member>
		<member name="F:pGang">
			<referrer name="ResetGangData"/>
			<referrer name="UpdateGangBox"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="DelayedGangInvite"/>
			<referrer name="countGangMembers"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="GetZoneDamageId"/>
			<referrer name="_@yHOnPlayerDeath@0N"/>
			<referrer name="pc_cmd_atakuj"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="GangWarTimer"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="CheckBaseTimer"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_brama"/>
			<referrer name="pc_cmd_tspawn"/>
			<referrer name="pc_cmd_baza"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="addGangScore"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopSparing"/>
			<referrer name="pc_cmd_sparspec"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="pc_cmd_tkolor"/>
			<referrer name="pc_cmd_topusc"/>
			<referrer name="LeaveGang"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
			<referrer name="SecondTimer"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pGangAchievement">
			<tagname value="bool"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="GetGangAchievements"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="FetchGang"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="F:pGangAchievementStatus">
			<referrer name="CheckGangAchievement"/>
			<referrer name="GetGangAchievementStatus"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="FetchGang"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="F:pGangBudgetTimer">
			<referrer name="giveGangBudget"/>
			<referrer name="HideBudgetDraw"/>
		</member>
		<member name="F:pGangCreatorColor">
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogGangCreator"/>
		</member>
		<member name="F:pGangCreatorName">
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogGangCreator"/>
		</member>
		<member name="F:pGangCreatorTag">
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogGangCreator"/>
		</member>
		<member name="F:pGangInviteTimer">
			<referrer name="DelayedGangInvite"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="F:pGangInvites">
			<referrer name="ResetGangData"/>
			<referrer name="DelayedGangInvite"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_tzaproszenia"/>
		</member>
		<member name="F:pGangMarket">
			<referrer name="_@yHResetPlayerData@0R"/>
			<referrer name="OnDialogGangMarket"/>
		</member>
		<member name="F:pGangRankColor">
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pGangRankName">
			<referrer name="ResetGangData"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pGangRankPerm">
			<tagname value="bool"/>
			<referrer name="ResetGangData"/>
			<referrer name="checkRankPermission"/>
			<referrer name="GetPlayerGangPerms"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pGangSpar">
			<tagname value="bool"/>
			<referrer name="Sparing_Init"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="pc_cmd_sparspec"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pGangSparAccepted">
			<tagname value="bool"/>
			<referrer name="Sparing_Init"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="pc_cmd_sparaccept"/>
		</member>
		<member name="F:pGangSparArena">
			<referrer name="Sparing_Config"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingCountDown"/>
		</member>
		<member name="F:pGangSparCountDown">
			<referrer name="Sparing_Config"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
		</member>
		<member name="F:pGangSparDraw">
			<tagname value="Text"/>
			<referrer name="Sparing_Config"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="StopSparing"/>
		</member>
		<member name="F:pGangSparInitiator">
			<referrer name="Sparing_Init"/>
			<referrer name="Sparing_Config"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:pGangSparLimit">
			<referrer name="Sparing_Config"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="SparingCountDown"/>
			<referrer name="CheckSparing"/>
		</member>
		<member name="F:pGangSparMembers">
			<referrer name="Sparing_Init"/>
			<referrer name="Sparing_Config"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
		</member>
		<member name="F:pGangSparOdliczanie">
			<tagname value="Text"/>
			<referrer name="Sparing_Config"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="StopSparing"/>
		</member>
		<member name="F:pGangSparPoints">
			<referrer name="Sparing_Init"/>
			<referrer name="Sparing_Config"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="WC_OnPlayerDeath"/>
		</member>
		<member name="F:pGangSparRank">
			<referrer name="SaveGang"/>
			<referrer name="FetchGang"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="pc_cmd_team"/>
		</member>
		<member name="F:pGangSparRanked">
			<tagname value="bool"/>
			<referrer name="Sparing_Config"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
		</member>
		<member name="F:pGangSparRankedScore">
			<referrer name="SaveGang"/>
			<referrer name="FetchGang"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="pc_cmd_team"/>
		</member>
		<member name="F:pGangSparSettings">
			<tagname value="bool"/>
			<referrer name="Sparing_Config"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:pGangSparSide">
			<tagname value="bool"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingRespawn"/>
		</member>
		<member name="F:pGangSparTime">
			<referrer name="Sparing_Config"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingCountDown"/>
		</member>
		<member name="F:pGangSparTimer">
			<referrer name="Sparing_Config"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="StopSparing"/>
		</member>
		<member name="F:pGangSparWorld">
			<referrer name="SparingCountDown"/>
		</member>
		<member name="F:pGangTransferCost">
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="TransferResetGang"/>
		</member>
		<member name="F:pGangTransferID">
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="TransferResetGang"/>
		</member>
		<member name="F:pGangTransferTimer">
			<referrer name="OnDialogGangMarket"/>
			<referrer name="TransferResetGang"/>
		</member>
		<member name="F:pGangWarAttacker">
			<referrer name="GetZoneDamageId"/>
			<referrer name="_@yHOnPlayerDeath@0N"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
		</member>
		<member name="F:pGangWarDamage">
			<tagname value="Float"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckGangWar"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:pGangWarDefender">
			<referrer name="GetZoneDamageId"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
		</member>
		<member name="F:pGangWarDefenderDef">
			<tagname value="bool"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
		</member>
		<member name="F:pGangWarDefenderExit">
			<tagname value="bool"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
		</member>
		<member name="F:pGangWarPoints">
			<referrer name="_@yHOnPlayerDeath@0N"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
		</member>
		<member name="F:pGangWarTime">
			<referrer name="_@yHOnPlayerDeath@0N"/>
			<referrer name="pc_cmd_atakuj"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
		</member>
		<member name="F:pGangWarTimer">
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
		</member>
		<member name="F:pGangZone">
			<referrer name="Init_GangZones"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:pGangZoneArea">
			<referrer name="GetZoneDamageId"/>
			<referrer name="_@yHOnPlayerDeath@0N"/>
			<referrer name="pc_cmd_atakuj"/>
			<referrer name="CheckGangWar"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
			<referrer name="ac_OnPlayerLeaveDynamicArea"/>
		</member>
		<member name="F:pGangZoneDamageId">
			<referrer name="GetZoneDamageId"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
		</member>
		<member name="F:pGangZoneDraw">
			<tagname value="Text"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckGangWar"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
			<referrer name="ac_OnPlayerLeaveDynamicArea"/>
		</member>
		<member name="F:pGangZoneLabel">
			<tagname value="Text3D"/>
			<referrer name="Init_GangZones"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="CheckGangWar"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="F:pGangZoneName">
			<referrer name="Init_GangZones"/>
			<referrer name="UpdateGangZoneLabel"/>
		</member>
		<member name="F:pGangZoneOwner">
			<referrer name="Init_GangZones"/>
			<referrer name="UpdateGangZoneLabel"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="pc_cmd_atakuj"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="ShowGangZones"/>
			<referrer name="CountGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:pGangZonePoint">
			<tagname value="Float"/>
			<referrer name="Init_GangZones"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
		</member>
		<member name="F:pGangZonePosition">
			<tagname value="Float"/>
			<referrer name="Init_GangZones"/>
			<referrer name="pc_cmd_ttp"/>
		</member>
		<member name="F:pGangZoneRectangle">
			<referrer name="Init_GangZones"/>
			<referrer name="GetZoneDamageId"/>
			<referrer name="_@yHOnPlayerDeath@0N"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckGangWar"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:pGlitch">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@07"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
		</member>
		<member name="F:pGlitchArena">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@07"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="ExitGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pGlitchRecord">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@07"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pHud">
			<referrer name="getHud"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="UpdateHud"/>
			<referrer name="OnDialogHud"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="OnPasswordHash"/>
		</member>
		<member name="F:pJob">
			<referrer name="_@yHResetPlayerData@0S"/>
			<referrer name="_@yHOnPlayerDeath@0S"/>
			<referrer name="addJobScore"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0U"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerExitVehicle@0V"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="CheckMysliwyZone"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Y"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Z"/>
			<referrer name="CheckGrzybiarzZone"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pJobLevel">
			<referrer name="_@yHResetPlayerData@0S"/>
			<referrer name="RunJobPanel"/>
			<referrer name="addJobScore"/>
			<referrer name="getJobLevel"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Drwal_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pJobReward">
			<referrer name="_@yHResetPlayerData@0S"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Drwal_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="OnDialogJob"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pJobScore">
			<referrer name="_@yHResetPlayerData@0S"/>
			<referrer name="RunJobPanel"/>
			<referrer name="addJobScore"/>
			<referrer name="getJobScore"/>
			<referrer name="LoadPlayerStats"/>
		</member>
		<member name="F:pJobUlepszenia">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0S"/>
			<referrer name="GetJobUlepszenia"/>
			<referrer name="CountJobUlepszenia"/>
			<referrer name="OnDialogJob"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:pMoneyTimer">
			<referrer name="giveMoney"/>
			<referrer name="ResetMoneyTD"/>
		</member>
		<member name="F:pNoDM">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0E"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
			<referrer name="ac_OnPlayerLeaveDynamicArea"/>
		</member>
		<member name="F:pOwnRank">
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:pOwnRankColor">
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:pOwnRankHave">
			<tagname value="bool"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:pRaceCreatorCP">
			<tagname value="Float"/>
			<referrer name="ResetRaceCreatorData"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="AddRaceArena"/>
		</member>
		<member name="F:pRaceCreatorCPs">
			<referrer name="ResetRaceCreatorData"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
		</member>
		<member name="F:pRaceCreatorModel">
			<referrer name="ResetRaceCreatorData"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
		</member>
		<member name="F:pRaceCreatorName">
			<referrer name="ResetRaceCreatorData"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
		</member>
		<member name="F:pRaceCreatorPoints">
			<tagname value="bool"/>
			<referrer name="ResetRaceCreatorData"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
		</member>
		<member name="F:pRaceCreatorSpawn">
			<tagname value="Float"/>
			<referrer name="ResetRaceCreatorData"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
		</member>
		<member name="F:pRouletteColor">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
		</member>
		<member name="F:pRouletteCount">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
		</member>
		<member name="F:pRouletteNumber">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
		</member>
		<member name="F:pRouletteTimer">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
		</member>
		<member name="F:pRouletteTokens">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
		</member>
		<member name="F:pSecretAnswer">
			<referrer name="OnDialogSettings"/>
			<referrer name="FindAccount"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pSecretPinCode">
			<referrer name="OnDialogSettings"/>
			<referrer name="FindAccount"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pSecretQuestion">
			<referrer name="OnDialogSettings"/>
			<referrer name="FindAccount"/>
			<referrer name="ShowQuestionPanel"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="ResetPlayerData"/>
		</member>
		<member name="F:pSlotsCount">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Slots_Hide"/>
			<referrer name="Slots_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:pSlotsID">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Slots_Start"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:pSlotsNumber">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Slots_Start"/>
			<referrer name="Slots_Timer"/>
		</member>
		<member name="F:pSlotsSpin">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Slots_Start"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:pSlotsTimer">
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="Slots_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:pSpectate">
			<referrer name="_@yHResetPlayerData@0@"/>
			<referrer name="SpecToggle"/>
			<referrer name="pc_cmd_specoff"/>
			<referrer name="RefreshSpec"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="CheckBet"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:pStalyInterior">
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="WC_OnPlayerSpawn"/>
		</member>
		<member name="F:pStalyPos">
			<tagname value="Float"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="WC_OnPlayerSpawn"/>
		</member>
		<member name="F:pTeleportCreatorCMD">
			<referrer name="ResetTeleportData"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="AddTeleport"/>
		</member>
		<member name="F:pTeleportCreatorInterior">
			<referrer name="ResetTeleportData"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="AddTeleport"/>
		</member>
		<member name="F:pTeleportCreatorName">
			<referrer name="ResetTeleportData"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="AddTeleport"/>
		</member>
		<member name="F:pTeleportCreatorPos">
			<tagname value="Float"/>
			<referrer name="ResetTeleportData"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="AddTeleport"/>
		</member>
		<member name="F:pTeleportCreatorSpawn">
			<tagname value="bool"/>
			<referrer name="ResetTeleportData"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="AddTeleport"/>
		</member>
		<member name="F:pTeleportCreatorType">
			<referrer name="ResetTeleportData"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="AddTeleport"/>
		</member>
		<member name="F:pTransferData">
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
		</member>
		<member name="F:pTruck">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnPlayerDeath@0F"/>
			<referrer name="_@yHOnPlayerDisconnect@0F"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0F"/>
			<referrer name="_@yHOnPlayerExitVehicle@0F"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="Truck_Stop"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:pTruckCheckpoint">
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Stop"/>
		</member>
		<member name="F:pTruckData">
			<referrer name="_@yHResetPlayerData@0F"/>
		</member>
		<member name="F:pTruckDist">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_truck"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
		</member>
		<member name="F:pTruckIcon">
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Stop"/>
		</member>
		<member name="F:pTruckLabel">
			<tagname value="Text3D"/>
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Stop"/>
		</member>
		<member name="F:pTruckReward">
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="Truck_Stop"/>
		</member>
		<member name="F:pTruckTowar">
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="Truck_Stop"/>
		</member>
		<member name="F:pTruckTrailer">
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Stop"/>
		</member>
		<member name="F:pTruckVehicle">
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0F"/>
			<referrer name="_@yHOnPlayerExitVehicle@0F"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="Truck_Stop"/>
		</member>
		<member name="F:pUlepszenia">
			<tagname value="bool"/>
			<referrer name="ResetUlepszeniaData"/>
			<referrer name="getUlepszeniaData"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="pc_cmd_invisible"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:pUlepszeniaLevel">
			<referrer name="ResetUlepszeniaData"/>
			<referrer name="getUlepszeniaLevelData"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="achievement"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="WC_OnPlayerDeath"/>
		</member>
		<member name="F:pVeh">
			<referrer name="Init_PrivCars"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="DelayedPrivCarPut"/>
			<referrer name="_@yHDestroyVehicle@0K"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:pVehColor">
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="pc_cmd_lakier"/>
		</member>
		<member name="F:pVehComponent">
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
		</member>
		<member name="F:pVehCount">
			<referrer name="ResetPrivCarData"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="pc_cmd_pmanage"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="WC_OnPlayerDisconnect"/>
		</member>
		<member name="F:pVehDist">
			<tagname value="Float"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="pc_cmd_pbuy"/>
		</member>
		<member name="F:pVehEdit">
			<tagname value="bool"/>
			<referrer name="SetEditorAttachment"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="WC_OnPlayerUpdate"/>
		</member>
		<member name="F:pVehEditType">
			<tagname value="bool"/>
			<referrer name="SetEditorAttachment"/>
			<referrer name="UpdateEditorAttachment"/>
		</member>
		<member name="F:pVehEditorPos">
			<tagname value="Float"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:pVehEditorRot">
			<tagname value="Float"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:pVehEngine">
			<referrer name="Init_PrivCars"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="pc_cmd_pbuy"/>
		</member>
		<member name="F:pVehEtykieta">
			<referrer name="GetEtykietaColor"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
		</member>
		<member name="F:pVehEtykietaName">
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
		</member>
		<member name="F:pVehFetch">
			<referrer name="ResetPrivCarData"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
		</member>
		<member name="F:pVehFuel">
			<tagname value="Float"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="PrivCarTimer"/>
		</member>
		<member name="F:pVehFuelAmount">
			<tagname value="Float"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pbuy"/>
		</member>
		<member name="F:pVehGas">
			<tagname value="bool"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="PrivCarTimer"/>
		</member>
		<member name="F:pVehGasEnabled">
			<tagname value="bool"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="PrivCarTimer"/>
		</member>
		<member name="F:pVehHave">
			<referrer name="ResetPrivCarData"/>
			<referrer name="GetPrivCarSlot"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="pc_cmd_pmanage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="WC_OnPlayerDisconnect"/>
		</member>
		<member name="F:pVehID">
			<referrer name="ResetPrivCarData"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:pVehKeyData">
			<referrer name="ResetPrivCarData"/>
			<referrer name="OnDialogPrivCarManage"/>
		</member>
		<member name="F:pVehKeys">
			<referrer name="Init_PrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="GetKeyCount"/>
			<referrer name="FindKeyPlayer"/>
			<referrer name="OnDialogPrivCarKeys"/>
		</member>
		<member name="F:pVehLabel">
			<tagname value="Text3D"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="OnDialogGieldaBuy"/>
		</member>
		<member name="F:pVehManage">
			<referrer name="ResetPrivCarData"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="OnDialogPrivCarKeys"/>
		</member>
		<member name="F:pVehModel">
			<referrer name="Init_PrivCars"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="ChangePrivCarModel"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
		</member>
		<member name="F:pVehObject">
			<referrer name="Init_PrivCars"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:pVehObjectCount">
			<referrer name="Init_PrivCars"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:pVehObjectData">
			<referrer name="Init_PrivCars"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="_@yHDestroyVehicle@0K"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:pVehObjectID">
			<referrer name="Init_PrivCars"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:pVehObjectPos">
			<tagname value="Float"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:pVehObjectRot">
			<tagname value="Float"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
		</member>
		<member name="F:pVehOwner">
			<referrer name="Init_PrivCars"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:pVehOwnerName">
			<referrer name="CreatePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:pVehPaintJob">
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="_@yHOnVehiclePaintjob@0L"/>
		</member>
		<member name="F:pVehPosition">
			<tagname value="Float"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="CreatePrivCar"/>
		</member>
		<member name="F:pVehRegisterColor">
			<referrer name="Init_PrivCars"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
		</member>
		<member name="F:pVehRegisterName">
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
		</member>
		<member name="F:pVehSell">
			<tagname value="bool"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="pc_cmd_pmanage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:pVehSellCost">
			<referrer name="Init_PrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:pVehSellPoint">
			<referrer name="Init_PrivCars"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:pVehSpawned">
			<tagname value="bool"/>
			<referrer name="Init_PrivCars"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="_@yHOnVehicleMod@0L"/>
			<referrer name="_@yHOnVehiclePaintjob@0L"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="GieldaSellPanel"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="WC_OnPlayerDisconnect"/>
		</member>
		<member name="F:pVehUlepszenie">
			<tagname value="bool"/>
			<referrer name="CountPojazdUlepszenia"/>
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="getPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="PrivCarTimer"/>
		</member>
		<member name="F:pWarGame">
			<tagname value="bool"/>
			<referrer name="_@yHResetPlayerData@0o"/>
			<referrer name="_@yHOnPlayerDisconnect@0o"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
		</member>
		<member name="F:pWarGameName">
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
		</member>
		<member name="F:pWarGamePosition">
			<tagname value="Float"/>
			<referrer name="_@yHResetPlayerData@0o"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
		</member>
		<member name="F:pWarGameWeapons">
			<referrer name="_@yHResetPlayerData@0o"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
		</member>
		<member name="F:pWarGameZone">
			<referrer name="_@yHResetPlayerData@0o"/>
			<referrer name="_@yHOnPlayerDisconnect@0o"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
		</member>
		<member name="F:pWeapons">
			<referrer name="GunShop_Panel"/>
			<referrer name="CancelMining"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:papieskaCount">
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:pbar_Data">
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="IsPlayerProgressBarVisible"/>
			<referrer name="ShowPlayerProgressBar"/>
			<referrer name="HidePlayerProgressBar"/>
			<referrer name="GetPlayerProgressBarPos"/>
			<referrer name="SetPlayerProgressBarPos"/>
			<referrer name="GetPlayerProgressBarWidth"/>
			<referrer name="SetPlayerProgressBarWidth"/>
			<referrer name="GetPlayerProgressBarHeight"/>
			<referrer name="SetPlayerProgressBarHeight"/>
			<referrer name="GetPlayerProgressBarColour"/>
			<referrer name="SetPlayerProgressBarColour"/>
			<referrer name="GetPlayerProgressBarMaxValue"/>
			<referrer name="SetPlayerProgressBarMaxValue"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="GetPlayerProgressBarValue"/>
			<referrer name="GetPlayerProgressBarDirection"/>
			<referrer name="SetPlayerProgressBarDirection"/>
			<referrer name="_progress2_renderBar"/>
		</member>
		<member name="F:pbar_TextDraw">
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="DestroyPlayerProgressBar"/>
			<referrer name="ShowPlayerProgressBar"/>
			<referrer name="HidePlayerProgressBar"/>
			<referrer name="SetPlayerProgressBarColour"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
		</member>
		<member name="F:pedofilReward">
			<referrer name="_@yHOnPlayerDeath@0@"/>
			<referrer name="pc_cmd_pedofil"/>
		</member>
		<member name="F:pedofilSelected">
			<referrer name="_@yHOnPlayerDeath@0@"/>
			<referrer name="pc_cmd_pedofil"/>
		</member>
		<member name="F:playerData">
			<referrer name="checkAdminLevel"/>
			<referrer name="BlockAdminTroll"/>
			<referrer name="addLevelScore"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="pc_cmd_ulepszenia"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="StartQuiz"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="OnDialogHud"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="CheckDuel"/>
			<referrer name="RejectDuelTimer"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="givePremium"/>
			<referrer name="pc_cmd_vpozostalo"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="OnGlitchRecord"/>
			<referrer name="OnBankDialog"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="_@yHOnPlayerDeath@0@"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_specoff"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="pc_cmd_raporty"/>
			<referrer name="RunRaportManage"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="pc_cmd_local"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerDeath@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="CheckPlayerAFK"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="OnDialogTeleport"/>
			<referrer name="ShowTeleports"/>
			<referrer name="AddTeleport"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="ShowTeleportManage"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="CountVehicleSellPlayer"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="UpdateGangBox"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="DelayedGangInvite"/>
			<referrer name="GetPlayerBudget"/>
			<referrer name="GetZoneDamageId"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="ShowGangList"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnPlayerEnterDynArea@0O"/>
			<referrer name="_@yHOnPlayerLeaveDynArea@0O"/>
			<referrer name="CheckBaseTimer"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_baza"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="TransferResetGang"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingRespawn"/>
			<referrer name="SparingSK"/>
			<referrer name="CheckSparing"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="pc_cmd_topusc"/>
			<referrer name="LeaveGang"/>
			<referrer name="RunJobPanel"/>
			<referrer name="addJobScore"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0U"/>
			<referrer name="DrwalTree"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Y"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0e"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="DeleteGodDA"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="StartSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="StopGG"/>
			<referrer name="StartWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evczas"/>
			<referrer name="pc_cmd_evpogoda"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="pc_cmd_evpanel"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="pc_cmd_betspec"/>
			<referrer name="KickPlayer"/>
			<referrer name="WarnPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="CheckPlayerMuted"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="CollectFigure"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="ShowLoginPanel"/>
			<referrer name="ShowRegisterPanel"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="ShowAdminLogin"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="pc_cmd_naj"/>
			<referrer name="pc_cmd_kill"/>
			<referrer name="CheckAdminList"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_re"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_siema"/>
			<referrer name="pc_cmd_nara"/>
			<referrer name="pc_cmd_jebac"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_cls"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="pc_cmd_acmd"/>
			<referrer name="_@yHSetPlayerColor@13"/>
			<referrer name="CheckPlayerOnline"/>
			<referrer name="msgAdmins"/>
			<referrer name="Teleport"/>
			<referrer name="foundPlayer"/>
			<referrer name="SavePlayerPosition"/>
			<referrer name="SaveWeaponData"/>
			<referrer name="LoadWeaponData"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="EnableSpawnKill"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="CheckPlayerBattle"/>
			<referrer name="Przegral"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<referrer name="SecondTimer"/>
			<referrer name="MinuteTimer"/>
			<referrer name="getMoney"/>
			<referrer name="giveMoney"/>
			<referrer name="resetMoney"/>
			<referrer name="setMoney"/>
		</member>
		<member name="F:questListData">
			<referrer name="GetQuestName"/>
			<referrer name="CheckQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnPlayerLogged"/>
		</member>
		<member name="F:quizData">
			<referrer name="Init_Quiz"/>
			<referrer name="UpdateQuizDraw"/>
			<referrer name="StartQuiz"/>
			<referrer name="StopQuiz"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="ac_OnPlayerText"/>
		</member>
		<member name="F:radioData">
			<referrer name="pc_cmd_radio"/>
		</member>
		<member name="F:raportData">
			<referrer name="CheckPlayerRaported"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="pc_cmd_raporty"/>
			<referrer name="RunRaportManage"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="_@yHOnPlayerDisconnect@0A"/>
		</member>
		<member name="F:recordAmount">
			<referrer name="Init_Records"/>
			<referrer name="checkRecord"/>
			<referrer name="GetRecords"/>
			<referrer name="pc_cmd_rekordy"/>
		</member>
		<member name="F:recordNames">
			<referrer name="checkRecord"/>
			<referrer name="pc_cmd_rekordy"/>
		</member>
		<member name="F:rouletteLabel">
			<tagname value="Text3D"/>
			<referrer name="FetchCasino"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="Roulette_Refresh"/>
		</member>
		<member name="F:roulettePlayer">
			<referrer name="FetchCasino"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="Roulette_Refresh"/>
		</member>
		<member name="F:roulettePosition">
			<tagname value="Float"/>
			<referrer name="FetchCasino"/>
			<referrer name="GetNearestRoulette"/>
		</member>
		<member name="F:royaleDataAreny">
			<referrer name="StartBTR"/>
			<referrer name="CreateRoyaleWeapons"/>
		</member>
		<member name="F:royaleWeaponData">
			<referrer name="CreateRoyaleWeapons"/>
		</member>
		<member name="F:s">
			<referrer name="CreateDesign"/>
			<referrer name="pc_cmd_rekordy"/>
			<referrer name="ulepszenieError"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="pc_cmd_ulepszenia"/>
			<referrer name="pc_cmd_osiagniecia"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="OnDialogHud"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="pc_cmd_interiory"/>
			<referrer name="ShowBankPanel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="ShowVaultDialog"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="RunRaportManage"/>
			<referrer name="pc_cmd_top"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="RunDriveExams"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="pc_cmd_anims"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_truck"/>
			<referrer name="ShowTutorial"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="ShowTeleports"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="ShowTeleportManage"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="ShowEngineSelect"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="ShowGieldaPanel"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="gangRankError"/>
			<referrer name="ShowGangTop"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangList"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="CheckSparing"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="RunJobPanel"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="pc_cmd_rybki"/>
			<referrer name="pc_cmd_fishevent"/>
			<referrer name="OnFishDialog"/>
			<referrer name="ShowFishUlepszenia"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="ShowFishBaits"/>
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="pc_cmd_oreevent"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="StopDA"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evpanel"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="CheckPlayerMuted"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="ShowLoginPanel"/>
			<referrer name="ShowQuestionPanel"/>
			<referrer name="ShowPinCodePanel"/>
			<referrer name="ShowRegisterPanel"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="ShowAdminLogin"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="ShowBanManage"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_autor"/>
			<referrer name="pc_cmd_kolory"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_taryfikator"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="OnDialogHelp"/>
			<referrer name="showPlayerCMD"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="pc_cmd_acmd"/>
			<referrer name="syntaxError"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="valueError"/>
			<referrer name="ShowRegulamin"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="pc_cmd_nowosci"/>
		</member>
		<member name="F:s_AlreadyConnected">
			<tagname value="bool"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ScriptInit"/>
		</member>
		<member name="F:s_BeingResynced">
			<referrer name="WC_IsPlayerSpawned"/>
			<referrer name="ResyncPlayer"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="UpdateHealthBar"/>
		</member>
		<member name="F:s_CbugAllowed">
			<tagname value="bool"/>
			<referrer name="SetCbugAllowed"/>
			<referrer name="GetCbugAllowed"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="InflictDamage"/>
		</member>
		<member name="F:s_CbugFroze">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_CbugGlobal">
			<tagname value="bool"/>
			<referrer name="SetCbugAllowed"/>
			<referrer name="GetCbugAllowed"/>
			<referrer name="ac_OnPlayerConnect"/>
		</member>
		<member name="F:s_ClassSpawnInfo">
			<referrer name="WC_AddPlayerClass"/>
			<referrer name="WC_AddPlayerClassEx"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ScriptInit"/>
		</member>
		<member name="F:s_CustomFallDamage">
			<referrer name="SetCustomFallDamage"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
		</member>
		<member name="F:s_CustomVendingMachines">
			<tagname value="bool"/>
			<referrer name="SetCustomVendingMachines"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ScriptInit"/>
		</member>
		<member name="F:s_DamageArmour">
			<referrer name="SetWeaponArmourRule"/>
			<referrer name="InflictDamage"/>
		</member>
		<member name="F:s_DamageArmourToggle">
			<tagname value="bool"/>
			<referrer name="SetCustomArmourRules"/>
			<referrer name="InflictDamage"/>
		</member>
		<member name="F:s_DamageDoneArmour">
			<tagname value="Float"/>
			<referrer name="GetLastDamageArmour"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="InflictDamage"/>
		</member>
		<member name="F:s_DamageDoneHealth">
			<tagname value="Float"/>
			<referrer name="GetLastDamageHealth"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="InflictDamage"/>
		</member>
		<member name="F:s_DamageFeed">
			<referrer name="IsDamageFeedActive"/>
			<referrer name="SetDamageFeed"/>
		</member>
		<member name="F:s_DamageFeedGiven">
			<tagname value="PlayerText"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ScriptExit"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdateText"/>
		</member>
		<member name="F:s_DamageFeedHideDelay">
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedAddHit"/>
		</member>
		<member name="F:s_DamageFeedHitsGiven">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdateText"/>
			<referrer name="DamageFeedAddHitGiven"/>
		</member>
		<member name="F:s_DamageFeedHitsTaken">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdateText"/>
			<referrer name="DamageFeedAddHitTaken"/>
		</member>
		<member name="F:s_DamageFeedLastUpdate">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ScriptInit"/>
			<referrer name="DamageFeedUpdate"/>
		</member>
		<member name="F:s_DamageFeedMaxUpdateRate">
			<referrer name="DamageFeedUpdate"/>
		</member>
		<member name="F:s_DamageFeedPlayer">
			<referrer name="SetDamageFeedForPlayer"/>
			<referrer name="IsDamageFeedActive"/>
			<referrer name="ac_OnPlayerConnect"/>
		</member>
		<member name="F:s_DamageFeedTaken">
			<tagname value="PlayerText"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ScriptExit"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdateText"/>
		</member>
		<member name="F:s_DamageFeedTimer">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="WC_DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdate"/>
		</member>
		<member name="F:s_DamageGivenSound">
			<referrer name="SetDamageSounds"/>
			<referrer name="OnPlayerDamageDone"/>
		</member>
		<member name="F:s_DamageRangeRanges">
			<tagname value="Float"/>
			<referrer name="SetWeaponDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_DamageRangeSteps">
			<referrer name="SetWeaponDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_DamageRangeValues">
			<tagname value="Float"/>
			<referrer name="SetWeaponDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_DamageTakenSound">
			<referrer name="SetDamageSounds"/>
			<referrer name="ScriptInit"/>
			<referrer name="OnPlayerDamageDone"/>
		</member>
		<member name="F:s_DamageType">
			<referrer name="SetWeaponDamage"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_DeathSkip">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerUpdate"/>
		</member>
		<member name="F:s_DeathSkipTick">
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerUpdate"/>
		</member>
		<member name="F:s_DeathTimer">
			<referrer name="WC_TogglePlayerSpectating"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="PlayerDeath"/>
			<referrer name="OnPlayerDeathFinished"/>
		</member>
		<member name="F:s_DelayedDeathTimer">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="InflictDamage"/>
			<referrer name="WC_DelayedDeath"/>
		</member>
		<member name="F:s_DisableSyncBugs">
			<referrer name="SetDisableSyncBugs"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
		</member>
		<member name="F:s_EnableHealthBar">
			<tagname value="bool"/>
			<referrer name="EnableHealthBarForPlayer"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="SetHealthBarVisible"/>
		</member>
		<member name="F:s_FakeArmour">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="pr_ip_WC_VEHICLE_SYNC"/>
			<referrer name="pr_ip_WC_PASSENGER_SYNC"/>
			<referrer name="SetFakeArmour"/>
			<referrer name="SendLastSyncPacket"/>
		</member>
		<member name="F:s_FakeHealth">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="pr_ip_WC_VEHICLE_SYNC"/>
			<referrer name="pr_ip_WC_PASSENGER_SYNC"/>
			<referrer name="SetFakeHealth"/>
			<referrer name="SendLastSyncPacket"/>
		</member>
		<member name="F:s_FakeQuat">
			<tagname value="Float"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="SetFakeFacingAngle"/>
			<referrer name="SendLastSyncPacket"/>
		</member>
		<member name="F:s_FallDeathVelocity">
			<tagname value="Float"/>
			<referrer name="SetCustomFallDamage"/>
			<referrer name="ac_OnPlayerUpdate"/>
		</member>
		<member name="F:s_FirstSpawn">
			<tagname value="bool"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
		</member>
		<member name="F:s_ForceClassSelection">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="UpdateHealthBar"/>
		</member>
		<member name="F:s_HealthBarBackground">
			<tagname value="Text"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="SetHealthBarVisible"/>
		</member>
		<member name="F:s_HealthBarBorder">
			<tagname value="Text"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="SetHealthBarVisible"/>
		</member>
		<member name="F:s_HealthBarForeground">
			<tagname value="PlayerText"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="SetHealthBarVisible"/>
			<referrer name="PlayerDeath"/>
		</member>
		<member name="F:s_HealthBarVisible">
			<tagname value="bool"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="SetHealthBarVisible"/>
		</member>
		<member name="F:s_HitsIssued">
			<referrer name="AverageHitRate"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="F:s_InClassSelection">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ScriptInit"/>
		</member>
		<member name="F:s_InternalPlayerTextDraw">
			<tagname value="bool"/>
			<referrer name="WC_CreatePlayerTextDraw"/>
			<referrer name="WC_PlayerTextDrawDestroy"/>
			<referrer name="WC_PlayerTextDrawLetterSize"/>
			<referrer name="WC_PlayerTextDrawTextSize"/>
			<referrer name="WC_PlayerTextDrawAlignment"/>
			<referrer name="WC_PlayerTextDrawColor"/>
			<referrer name="WC_PlayerTextDrawUseBox"/>
			<referrer name="WC_PlayerTextDrawBoxColor"/>
			<referrer name="WC_PlayerTextDrawSetShadow"/>
			<referrer name="WC_PlayerTextDrawSetOutline"/>
			<referrer name="WC_PlayerTextDrawBackgroundColo"/>
			<referrer name="WC_PlayerTextDrawFont"/>
			<referrer name="WC_PlayerTextDrawSetProportiona"/>
			<referrer name="WC_PlayerTextDrawSetSelectable"/>
			<referrer name="WC_PlayerTextDrawShow"/>
			<referrer name="WC_PlayerTextDrawHide"/>
			<referrer name="WC_PlayerTextDrawSetString"/>
			<referrer name="WC_PlayerTextDrawSetPreviewMode"/>
			<referrer name="WC_PlayerTextDrawSetPreviewRot"/>
			<referrer name="WC_PlayerTextDrawSetPreviewVehC"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdateText"/>
		</member>
		<member name="F:s_InternalTextDraw">
			<tagname value="bool"/>
			<referrer name="WC_TextDrawCreate"/>
			<referrer name="WC_TextDrawDestroy"/>
			<referrer name="WC_TextDrawLetterSize"/>
			<referrer name="WC_TextDrawTextSize"/>
			<referrer name="WC_TextDrawAlignment"/>
			<referrer name="WC_TextDrawColor"/>
			<referrer name="WC_TextDrawUseBox"/>
			<referrer name="WC_TextDrawBoxColor"/>
			<referrer name="WC_TextDrawSetShadow"/>
			<referrer name="WC_TextDrawSetOutline"/>
			<referrer name="WC_TextDrawBackgroundColor"/>
			<referrer name="WC_TextDrawFont"/>
			<referrer name="WC_TextDrawSetProportional"/>
			<referrer name="WC_TextDrawSetSelectable"/>
			<referrer name="WC_TextDrawShowForPlayer"/>
			<referrer name="WC_TextDrawHideForPlayer"/>
			<referrer name="WC_TextDrawShowForAll"/>
			<referrer name="WC_TextDrawHideForAll"/>
			<referrer name="WC_TextDrawSetString"/>
			<referrer name="WC_TextDrawSetPreviewModel"/>
			<referrer name="WC_TextDrawSetPreviewRot"/>
			<referrer name="WC_TextDrawSetPreviewVehCol"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
		</member>
		<member name="F:s_IsDying">
			<referrer name="WC_IsPlayerSpawned"/>
			<referrer name="IsPlayerDying"/>
			<referrer name="WC_SpawnPlayer"/>
			<referrer name="WC_GetPlayerState"/>
			<referrer name="WC_ApplyAnimation"/>
			<referrer name="WC_ClearAnimations"/>
			<referrer name="WC_TogglePlayerSpectating"/>
			<referrer name="WC_TogglePlayerControllable"/>
			<referrer name="WC_SetPlayerPos"/>
			<referrer name="WC_SetPlayerPosFindZ"/>
			<referrer name="WC_SetPlayerVelocity"/>
			<referrer name="WC_SetPlayerVirtualWorld"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="Iter_OnPlayerStreamIn"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerLeaveCheckpoint"/>
			<referrer name="ac_OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="PlayerDeath"/>
			<referrer name="WC_VendingMachineUsed"/>
			<referrer name="WC_PlayerDeathRespawn"/>
		</member>
		<member name="F:s_KnifeSync">
			<referrer name="SetKnifeSync"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
		</member>
		<member name="F:s_KnifeTimeout">
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
		</member>
		<member name="F:s_LagCompMode">
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ScriptInit"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_LastAnim">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerUpdate"/>
		</member>
		<member name="F:s_LastDeathTick">
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="PlayerDeath"/>
		</member>
		<member name="F:s_LastExplosive">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_LastHitIdx">
			<referrer name="AverageHitRate"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="F:s_LastHitTicks">
			<referrer name="AverageHitRate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="F:s_LastHitWeapons">
			<referrer name="AverageHitRate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="F:s_LastSentArmour">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="UpdateHealthBar"/>
		</member>
		<member name="F:s_LastSentHealth">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="UpdateHealthBar"/>
		</member>
		<member name="F:s_LastShot">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_LastShotIdx">
			<referrer name="AverageShootRate"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_LastShotTicks">
			<referrer name="AverageShootRate"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_LastShotWeapons">
			<referrer name="AverageShootRate"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_LastStop">
			<referrer name="WC_ClearAnimations"/>
			<referrer name="WC_TogglePlayerControllable"/>
			<referrer name="WC_SetPlayerPos"/>
			<referrer name="WC_SetPlayerPosFindZ"/>
			<referrer name="WC_SetPlayerVelocity"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ScriptInit"/>
		</member>
		<member name="F:s_LastSyncData">
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
			<referrer name="FreezeSyncPacket"/>
			<referrer name="SendLastSyncPacket"/>
		</member>
		<member name="F:s_LastUpdate">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ScriptInit"/>
			<referrer name="WC_IsPlayerPaused"/>
		</member>
		<member name="F:s_LastVehicleEnterTime">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ScriptInit"/>
			<referrer name="InflictDamage"/>
		</member>
		<member name="F:s_LastVehicleShooter">
			<referrer name="WC_DestroyVehicle"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ac_OnVehicleSpawn"/>
		</member>
		<member name="F:s_LastVehicleTick">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerExitVehicle"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="WasPlayerInVehicle"/>
		</member>
		<member name="F:s_LastZ">
			<tagname value="Float"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerUpdate"/>
		</member>
		<member name="F:s_LastZVelo">
			<tagname value="Float"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerUpdate"/>
		</member>
		<member name="F:s_MaxHitRateSamples">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="F:s_MaxShootRateSamples">
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_MaxWeaponShootRate">
			<referrer name="SetWeaponShootRate"/>
			<referrer name="GetWeaponShootRate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_PlayerArmour">
			<tagname value="Float"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="WC_GetPlayerArmour"/>
			<referrer name="WC_SetPlayerArmour"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="InflictDamage"/>
			<referrer name="PlayerDeath"/>
		</member>
		<member name="F:s_PlayerClass">
			<referrer name="WC_SetSpawnInfo"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
		</member>
		<member name="F:s_PlayerFallbackSpawnInfo">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ScriptInit"/>
		</member>
		<member name="F:s_PlayerHealth">
			<tagname value="Float"/>
			<referrer name="WC_SpawnPlayer"/>
			<referrer name="WC_GetPlayerHealth"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="InflictDamage"/>
			<referrer name="PlayerDeath"/>
			<referrer name="OnPlayerDeathFinished"/>
			<referrer name="WC_VendingMachineUsed"/>
			<referrer name="DamageFeedUpdateText"/>
		</member>
		<member name="F:s_PlayerMaxArmour">
			<tagname value="Float"/>
			<referrer name="SetPlayerMaxArmour"/>
			<referrer name="GetPlayerMaxArmour"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="WC_SetPlayerArmour"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="UpdateHealthBar"/>
		</member>
		<member name="F:s_PlayerMaxHealth">
			<tagname value="Float"/>
			<referrer name="SetPlayerMaxHealth"/>
			<referrer name="GetPlayerMaxHealth"/>
			<referrer name="WC_SpawnPlayer"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="OnPlayerDeathFinished"/>
			<referrer name="WC_VendingMachineUsed"/>
		</member>
		<member name="F:s_PlayerSpawnInfo">
			<referrer name="WC_SetSpawnInfo"/>
			<referrer name="ac_OnPlayerSpawn"/>
		</member>
		<member name="F:s_PlayerTeam">
			<referrer name="WC_GetPlayerTeam"/>
			<referrer name="WC_SetPlayerTeam"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="HasSameTeam"/>
			<referrer name="SpawnPlayerInPlace"/>
		</member>
		<member name="F:s_PreviousHitI">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="OnPlayerDamageDone"/>
		</member>
		<member name="F:s_PreviousHits">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerDamageDone"/>
		</member>
		<member name="F:s_RejectedHits">
			<referrer name="GetRejectedHit"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="AddRejectedHit"/>
		</member>
		<member name="F:s_RejectedHitsIdx">
			<referrer name="GetRejectedHit"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="AddRejectedHit"/>
		</member>
		<member name="F:s_RespawnTime">
			<referrer name="SetRespawnTime"/>
			<referrer name="GetRespawnTime"/>
			<referrer name="PlayerDeath"/>
		</member>
		<member name="F:s_ShotsFired">
			<referrer name="AverageShootRate"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_SpawnForStreamedIn">
			<tagname value="bool"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="WC_SetSpawnForStreamedIn"/>
		</member>
		<member name="F:s_SpawnInfoModified">
			<tagname value="bool"/>
			<referrer name="WC_SetSpawnInfo"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="SpawnPlayerInPlace"/>
		</member>
		<member name="F:s_Spectating">
			<referrer name="WC_PlayerSpectatePlayer"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="DamageFeedAddHitGiven"/>
			<referrer name="DamageFeedAddHitTaken"/>
			<referrer name="OnPlayerDamageDone"/>
		</member>
		<member name="F:s_SyncData">
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="WC_DeathSkipEnd"/>
			<referrer name="SaveSyncData"/>
		</member>
		<member name="F:s_SyncDataFrozen">
			<tagname value="bool"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="FreezeSyncPacket"/>
		</member>
		<member name="F:s_TrueDeath">
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ScriptInit"/>
			<referrer name="WC_PlayerDeathRespawn"/>
		</member>
		<member name="F:s_ValidDamageGiven">
			<referrer name="ac_OnPlayerGiveDamage"/>
		</member>
		<member name="F:s_ValidDamageTaken">
			<referrer name="ac_OnPlayerTakeDamage"/>
		</member>
		<member name="F:s_VehicleAlive">
			<tagname value="bool"/>
			<referrer name="WC_DestroyVehicle"/>
			<referrer name="WC_CreateVehicle"/>
			<referrer name="WC_AddStaticVehicle"/>
			<referrer name="WC_AddStaticVehicleEx"/>
			<referrer name="ac_OnVehicleSpawn"/>
			<referrer name="ac_OnVehicleDeath"/>
		</member>
		<member name="F:s_VehiclePassengerDamage">
			<referrer name="SetVehiclePassengerDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_VehicleRespawnTimer">
			<referrer name="WC_DestroyVehicle"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="WC_KillVehicle"/>
			<referrer name="WC_OnDeadVehicleSpawn"/>
			<referrer name="ac_OnVehicleSpawn"/>
			<referrer name="ac_OnVehicleDeath"/>
		</member>
		<member name="F:s_VehicleUnoccupiedDamage">
			<referrer name="SetVehicleUnoccupiedDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
		</member>
		<member name="F:s_VendingMachineObject">
			<referrer name="CreateVendingMachines"/>
			<referrer name="DestroyVendingMachines"/>
		</member>
		<member name="F:s_VendingUseTimer">
			<referrer name="WC_TogglePlayerSpectating"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ScriptExit"/>
			<referrer name="WC_VendingMachineUsed"/>
		</member>
		<member name="F:s_WeaponDamage">
			<tagname value="Float"/>
			<referrer name="SetWeaponDamage"/>
			<referrer name="GetWeaponDamage"/>
			<referrer name="SetCustomFallDamage"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_WeaponRange">
			<tagname value="Float"/>
			<referrer name="SetWeaponMaxRange"/>
			<referrer name="GetWeaponMaxRange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ProcessDamage"/>
		</member>
		<member name="F:s_World">
			<referrer name="WC_SetPlayerVirtualWorld"/>
			<referrer name="WC_GetPlayerVirtualWorld"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ScriptInit"/>
			<referrer name="UpdatePlayerVirtualWorld"/>
		</member>
		<member name="F:sc_VendingMachines">
			<tagname value="Float"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="RemoveDefaultVendingMachines"/>
			<referrer name="CreateVendingMachines"/>
		</member>
		<member name="F:serverVehicle">
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
		</member>
		<member name="F:serverVehicleCount">
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
		</member>
		<member name="F:serverVehiclePosition">
			<tagname value="Float"/>
			<referrer name="Init_Vehicles"/>
		</member>
		<member name="F:size_l">
			<remarks>  <p>Because of the strange way we manipulate the stack, this function actually  gets called twice as often as you would expect.  Essentially, for this  (psudo-)loop:</p>  <code>  for (new i = iter_func(); Iter_YieldLoop(); )                              <br />  {                                                                          <br />  }  </code>  <p>The loop is entered and <c>iter_func()</c> is called.  This indirectly  calls <c>yield</c>, which returns to the call point of that function.  The  loop check is then entered and <c>Iter_YieldLoop()</c> is called.  Depending  on if <c>yield</c> was actually used, the main loop body is entered.  At the  end of that iteration, the loop check is run again and so  <c>Iter_YieldLoop()</c> is called again.</p>  <p>This is where it gets wierd!</p>  <p><c>Iter_YieldLoop()</c> does a stack copy and a jump in to the earlier  call to <c>iter_func</c>, whose return address is earlier in the code.  When  a <c>yield</c> is done again, that return is to the first part of the  <c>for</c> loop, which then instantly enters the loop check section and calls  <c>Iter_YieldLoop()</c> again (as a side-effect, saving the iterator value in  the loop variable).</p>  <p>So for <c>N</c> iterations of the loop, <c>Iter_YieldLoop()</c> is called  <c>2N + 1</c> times, and should be made aware of which phase of its calls it  is in.</p>  <p>This is, of course, made more complicated by nested loops, but that just  means we need to store the state on our own stack.</p>  </remarks> 
		</member>
		<member name="F:slotsLabel">
			<tagname value="Text3D"/>
			<referrer name="FetchCasino"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:slotsPlayer">
			<referrer name="FetchCasino"/>
			<referrer name="Slots_Start"/>
			<referrer name="Slots_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:slotsPosition">
			<tagname value="Float"/>
			<referrer name="FetchCasino"/>
			<referrer name="GetNearestSlots"/>
		</member>
		<member name="F:slotsTypeData">
			<referrer name="Slots_Start"/>
			<referrer name="Slots_Timer"/>
		</member>
		<member name="F:sparingDataAreny">
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingRespawn"/>
		</member>
		<member name="F:sparingKillerData">
			<referrer name="ResetGangData"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopSparing"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerDamage"/>
		</member>
		<member name="F:src_l">
		</member>
		<member name="F:strx">
			<referrer name="Init_Records"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="UpdateAreny"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="OnGlitchRecord"/>
			<referrer name="Init_Bank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="Init_Teleports"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="ShowTeleportManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="CountVehicleSellPlayer"/>
			<referrer name="UpdateGangBox"/>
			<referrer name="CountGangMembers"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="FetchGang"/>
			<referrer name="UpdateGangZoneLabel"/>
			<referrer name="StartGangWar"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="FetchCasino"/>
			<referrer name="CreateBusiness"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="UpdateZP"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickPlayer"/>
			<referrer name="WarnPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="pc_cmd_re"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="ConvertTime"/>
			<referrer name="showGameDraw"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="SecondTimer"/>
			<referrer name="MinuteTimer"/>
			<referrer name="PP_main"/>
		</member>
		<member name="F:sumoArenaID">
			<referrer name="AddPlayerGame"/>
			<referrer name="StartSM"/>
			<referrer name="StopSM"/>
		</member>
		<member name="F:sumoCar">
			<referrer name="StartSM"/>
			<referrer name="PutPlayerSumo"/>
			<referrer name="StopSM"/>
			<referrer name="CreateSumoObjects"/>
		</member>
		<member name="F:sumoVehicle">
			<referrer name="StartSM"/>
			<referrer name="PutPlayerSumo"/>
			<referrer name="UpdateSM"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:sumoVehicleCount">
			<referrer name="AddPlayerGame"/>
			<referrer name="StopSM"/>
		</member>
		<member name="F:sumoZapisanyCount">
			<referrer name="StartSM"/>
			<referrer name="StopSM"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:task_timer">
			<referrer name="SecondTimer"/>
			<referrer name="MinuteTimer"/>
		</member>
		<member name="F:taxiPositionData">
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:tdAchievement">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="achievement"/>
			<referrer name="HideAchievement"/>
			<referrer name="UpdateHud"/>
		</member>
		<member name="F:tdAnnounce">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="pc_cmd_ann"/>
		</member>
		<member name="F:tdAreny">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="UpdateAreny"/>
		</member>
		<member name="F:tdBomba">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="SetPlayerDraw"/>
		</member>
		<member name="F:tdBox">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="SetPlayerDraw"/>
		</member>
		<member name="F:tdCasinoButton">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="Fortune_Start"/>
			<referrer name="Fortune_Hide"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:tdCasinoSlot">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="Slots_Start"/>
			<referrer name="Slots_Hide"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Slots_RefreshTD"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:tdDate">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="MinuteTimer"/>
			<referrer name="PP_main"/>
		</member>
		<member name="F:tdEvent">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
		</member>
		<member name="F:tdEventAnn">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
		</member>
		<member name="F:tdFishing">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
		</member>
		<member name="F:tdFortune">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="Fortune_Start"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Fortune_Hide"/>
		</member>
		<member name="F:tdFuel">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="StopFueling"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
		</member>
		<member name="F:tdGameDraw">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="SaveEditorAttachment"/>
			<referrer name="showGameDraw"/>
			<referrer name="hideGameDraw"/>
		</member>
		<member name="F:tdGameLimit">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="UpdateGameDraw"/>
		</member>
		<member name="F:tdGameList">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="UpdateHud"/>
		</member>
		<member name="F:tdGameZapisy">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
		</member>
		<member name="F:tdInfo">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuel"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Stop"/>
			<referrer name="ExitPraca"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="OnDialogJob"/>
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="StopGG"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="StopWG"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
		</member>
		<member name="F:tdLevel">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="addLevelScore"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="HideLevelBar"/>
		</member>
		<member name="F:tdLicznik">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="UpdateHud"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="WC_OnPlayerStateChange"/>
		</member>
		<member name="F:tdLoginTime">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="FindAccount"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:tdLogo">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="SetPlayerDraw"/>
		</member>
		<member name="F:tdMessage">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:tdMissionDraw">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="HideMissionDraw"/>
		</member>
		<member name="F:tdMoney">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="UpdateHud"/>
			<referrer name="giveMoney"/>
			<referrer name="ResetMoneyTD"/>
			<referrer name="resetMoney"/>
			<referrer name="setMoney"/>
		</member>
		<member name="F:tdNoDM">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
			<referrer name="ac_OnPlayerLeaveDynamicArea"/>
		</member>
		<member name="F:tdOnline">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:tdPasek">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="UpdateHud"/>
		</member>
		<member name="F:tdPerformance">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:tdPlayer">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="UpdateHud"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:tdPosition">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="_@yHSetPlayerColor@13"/>
			<referrer name="SecondTimer"/>
		</member>
		<member name="F:tdQuest">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="UpdateHud"/>
			<referrer name="OnPlayerLogged"/>
		</member>
		<member name="F:tdQuiz">
			<tagname value="PlayerText"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="UpdateQuizDraw"/>
			<referrer name="StartQuiz"/>
			<referrer name="StopQuiz"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="UpdateHud"/>
		</member>
		<member name="F:tdSlotButton">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="Slots_Start"/>
			<referrer name="Slots_Hide"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
		</member>
		<member name="F:tdWalizka">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="SetPlayerDraw"/>
		</member>
		<member name="F:tdWelcome">
			<tagname value="Text"/>
			<referrer name="CreateDesign"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="FindAccount"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
		</member>
		<member name="F:teleportData">
			<referrer name="Init_Teleports"/>
			<referrer name="CheckPlayerTeleport"/>
			<referrer name="RandomSpawn"/>
			<referrer name="EnterTeleport"/>
			<referrer name="OnDialogTeleport"/>
			<referrer name="ShowTeleports"/>
			<referrer name="AddTeleport"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="ShowTeleportManage"/>
			<referrer name="OnPlayerCommandPerformed"/>
		</member>
		<member name="F:towaryData">
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_truck"/>
		</member>
		<member name="F:truckCP">
			<referrer name="Init_Truck"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
		</member>
		<member name="F:truckData">
			<tagname value="Float"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
		</member>
		<member name="F:truckDay">
			<referrer name="Init_Truck"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_truck"/>
		</member>
		<member name="F:ulepszeniaData">
			<referrer name="ulepszenieError"/>
			<referrer name="OnDialogUlepszenia"/>
		</member>
		<member name="F:ulepszeniaLevelData">
			<referrer name="OnDialogUlepszenia"/>
		</member>
		<member name="F:ulepszeniaPojazdData">
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
		</member>
		<member name="F:using_deprecated_foreach_syntax">
			<tagname value="bool"/>
			The workings of these macros are very extensively documented at:  <a href="http://forum.sa-mp.com/showpost.php?p=2823668" /> 
		</member>
		<member name="F:using_deprecated_itertag_syntax">
			<tagname value="bool"/>
		</member>
		<member name="F:vaultHeistData">
			<referrer name="RandomVaultReward"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="VaultHeistTimer"/>
		</member>
		<member name="F:vaultPositionData">
			<tagname value="Float"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="CheckVaultNear"/>
			<referrer name="VaultHeistTimer"/>
		</member>
		<member name="F:vehicleDataZP">
			<referrer name="CreateVehicleZP"/>
		</member>
		<member name="F:walizkaOwner">
			<referrer name="pc_cmd_walizka"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
		</member>
		<member name="F:walizkaPickup">
			<referrer name="pc_cmd_walizka"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="SetPlayerDraw"/>
		</member>
		<member name="F:warePaczkaData">
			<referrer name="Magazynier_Pickup"/>
			<referrer name="UpdateJobDraw"/>
		</member>
		<member name="F:weaponShopData">
			<referrer name="GunShop_RandomGun"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="pc_cmd_bronie"/>
		</member>
		<member name="F:wipeoutObjectPosition">
			<referrer name="MoveWP"/>
		</member>
		<member name="F:wpArenaID">
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
		</member>
		<member name="F:wpCountPeople">
			<referrer name="StartWP"/>
			<referrer name="UpdateGameStatus"/>
		</member>
		<member name="F:wpFallCount">
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
		</member>
		<member name="F:wpMeta">
			<referrer name="StartWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
		</member>
		<member name="F:wpObjectData">
			<referrer name="MoveWP"/>
			<referrer name="RunObjects"/>
		</member>
		<member name="F:wpRecordTime">
			<referrer name="StartWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
		</member>
		<member name="F:wpRecordUID">
			<referrer name="StartWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
		</member>
		<member name="F:wpSwitch">
			<tagname value="bool"/>
			<referrer name="MoveWP"/>
		</member>
		<member name="F:wpTimer">
			<referrer name="StartWP"/>
			<referrer name="ResetTimerWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
		</member>
		<member name="F:wpWinCP">
			<referrer name="StartWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
		</member>
		<member name="F:zGangZones">
			<referrer name="ac_OnGameModeInit"/>
			<referrer name="ShowZoneForAll"/>
			<referrer name="ShowZoneForPlayer"/>
			<referrer name="HideZoneForAll"/>
			<referrer name="HideZoneForPlayer"/>
			<referrer name="CreateZone"/>
			<referrer name="DestroyZone"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="DestroyZoneNumber"/>
			<referrer name="CreateZoneBorders"/>
			<referrer name="DestroyZoneBorders"/>
			<referrer name="ZoneFlashForPlayer"/>
			<referrer name="ZoneStopFlashForPlayer"/>
			<referrer name="ZoneFlashForAll"/>
			<referrer name="ZoneStopFlashForAll"/>
			<referrer name="ZoneBordersFlashForPlayer"/>
			<referrer name="ZoneBordersStopFlashForPlayer"/>
			<referrer name="ZoneBordersFlashForAll"/>
			<referrer name="ZoneBordersStopFlashForAll"/>
			<referrer name="ZoneNumberFlashForPlayer"/>
			<referrer name="ZoneNumberStopFlashForPlayer"/>
			<referrer name="ZoneNumberFlashForAll"/>
			<referrer name="ZoneNumberStopFlashForAll"/>
			<referrer name="agz_GangZoneCreateFirstNumber"/>
			<referrer name="agz_GangZoneCreateSecondNumber"/>
		</member>
		<member name="F:zGangZonesCreated">
			<referrer name="ac_OnGameModeInit"/>
			<referrer name="CreateZone"/>
			<referrer name="DestroyZone"/>
		</member>
		<member name="F:zoneNameData">
			<referrer name="getZoneName"/>
		</member>
		<member name="F:zonesNoDM">
			<tagname value="Float"/>
			<referrer name="Init_NoDM"/>
		</member>
		<member name="F:zresetowane">
			<tagname value="bool"/>
			<referrer name="MinuteTimer"/>
		</member>

		<!-- functions -->
		<member name="M:operator!(Handle:)" syntax="operator!(Handle:)(handle)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="handle_alive"/>
			<param name="handle">
				<paraminfo>Handle </paraminfo>
			</param>
		</member>
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="BS_WriteInCarSync"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Handle:,Handle:)" syntax="operator!=(Handle:,Handle:)(arg1, arg2)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="operator==(Handle:,Handle:)"/>
			<param name="arg1">
				<paraminfo>Handle </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Handle </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Iter:,Iter:)" syntax="operator!=(Iter:,Iter:)(arg1, arg2)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="operator==(Iter:,Iter:)"/>
			<param name="arg1">
				<paraminfo>Iter </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Iter </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(String@Const:,String@Const:)" syntax="operator!=(String@Const:,String@Const:)(arg1, arg2)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="operator==(String@Const:,String@Const:)"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(String@Const:,String:)" syntax="operator!=(String@Const:,String:)(arg1, arg2)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="operator==(String@Const:,String:)"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(String:,String@Const:)" syntax="operator!=(String:,String@Const:)(arg1, arg2)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="operator==(String:,String@Const:)"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(String:,String:)" syntax="operator!=(String:,String:)(arg1, arg2)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="operator==(String:,String:)"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,_:)" syntax="operator+(AmxVariantBuffer:,_:)(arg1, arg2)">
			<tagname value="AmxVariantBuffer"/>
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,_:)" syntax="operator+(AmxStringBuffer:,_:)(arg1, arg2)">
			<tagname value="AmxStringBuffer"/>
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,AmxVariantBuffer:)" syntax="operator%(AmxVariantBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,AmxVariantBuffer:)" syntax="operator/(AmxVariantBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,AmxVariantBuffer:)" syntax="operator*(AmxVariantBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,AmxVariantBuffer:)" syntax="operator-(AmxVariantBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,AmxVariantBuffer:)" syntax="operator+(AmxVariantBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,ConstAmxVariant:)" syntax="operator%(AmxVariantBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,ConstAmxVariant:)" syntax="operator/(AmxVariantBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,ConstAmxVariant:)" syntax="operator*(AmxVariantBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,ConstAmxVariant:)" syntax="operator-(AmxVariantBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,ConstAmxVariant:)" syntax="operator+(AmxVariantBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,AmxVariant:)" syntax="operator%(AmxVariantBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,AmxVariant:)" syntax="operator/(AmxVariantBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,AmxVariant:)" syntax="operator*(AmxVariantBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,AmxVariant:)" syntax="operator-(AmxVariantBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,AmxVariant:)" syntax="operator+(AmxVariantBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,AmxStringBuffer:)" syntax="operator%(AmxVariantBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,AmxStringBuffer:)" syntax="operator/(AmxVariantBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,AmxStringBuffer:)" syntax="operator*(AmxVariantBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,AmxStringBuffer:)" syntax="operator-(AmxVariantBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,AmxStringBuffer:)" syntax="operator+(AmxVariantBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,ConstAmxString:)" syntax="operator%(AmxVariantBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,ConstAmxString:)" syntax="operator/(AmxVariantBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,ConstAmxString:)" syntax="operator*(AmxVariantBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,ConstAmxString:)" syntax="operator-(AmxVariantBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,ConstAmxString:)" syntax="operator+(AmxVariantBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,AmxString:)" syntax="operator%(AmxVariantBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,AmxString:)" syntax="operator/(AmxVariantBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,AmxString:)" syntax="operator*(AmxVariantBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,AmxString:)" syntax="operator-(AmxVariantBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,AmxString:)" syntax="operator+(AmxVariantBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,String@Const:)" syntax="operator%(AmxVariantBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,String@Const:)" syntax="operator/(AmxVariantBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,String@Const:)" syntax="operator*(AmxVariantBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,String@Const:)" syntax="operator-(AmxVariantBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,String@Const:)" syntax="operator+(AmxVariantBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,String:)" syntax="operator%(AmxVariantBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,String:)" syntax="operator/(AmxVariantBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,String:)" syntax="operator*(AmxVariantBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,String:)" syntax="operator-(AmxVariantBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,String:)" syntax="operator+(AmxVariantBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,Float:)" syntax="operator%(AmxVariantBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,Float:)" syntax="operator/(AmxVariantBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,Float:)" syntax="operator*(AmxVariantBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,Float:)" syntax="operator-(AmxVariantBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariantBuffer:,Float:)" syntax="operator+(AmxVariantBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariantBuffer:,_:)" syntax="operator%(AmxVariantBuffer:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator/(AmxVariantBuffer:,_:)" syntax="operator/(AmxVariantBuffer:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator*(AmxVariantBuffer:,_:)" syntax="operator*(AmxVariantBuffer:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:,_:)" syntax="operator-(AmxVariantBuffer:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,AmxVariantBuffer:)" syntax="operator%(ConstAmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,AmxVariantBuffer:)" syntax="operator/(ConstAmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,AmxVariantBuffer:)" syntax="operator*(ConstAmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,AmxVariantBuffer:)" syntax="operator-(ConstAmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,AmxVariantBuffer:)" syntax="operator+(ConstAmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,ConstAmxVariant:)" syntax="operator%(ConstAmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,ConstAmxVariant:)" syntax="operator/(ConstAmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,ConstAmxVariant:)" syntax="operator*(ConstAmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,ConstAmxVariant:)" syntax="operator-(ConstAmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,ConstAmxVariant:)" syntax="operator+(ConstAmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,AmxVariant:)" syntax="operator%(ConstAmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,AmxVariant:)" syntax="operator/(ConstAmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,AmxVariant:)" syntax="operator*(ConstAmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,AmxVariant:)" syntax="operator-(ConstAmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,AmxVariant:)" syntax="operator+(ConstAmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,AmxStringBuffer:)" syntax="operator%(ConstAmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,AmxStringBuffer:)" syntax="operator/(ConstAmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,AmxStringBuffer:)" syntax="operator*(ConstAmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,AmxStringBuffer:)" syntax="operator-(ConstAmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,AmxStringBuffer:)" syntax="operator+(ConstAmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,ConstAmxString:)" syntax="operator%(ConstAmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,ConstAmxString:)" syntax="operator/(ConstAmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,ConstAmxString:)" syntax="operator*(ConstAmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,ConstAmxString:)" syntax="operator-(ConstAmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,ConstAmxString:)" syntax="operator+(ConstAmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,AmxString:)" syntax="operator%(ConstAmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,AmxString:)" syntax="operator/(ConstAmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,AmxString:)" syntax="operator*(ConstAmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,AmxString:)" syntax="operator-(ConstAmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,AmxString:)" syntax="operator+(ConstAmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,String@Const:)" syntax="operator%(ConstAmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,String@Const:)" syntax="operator/(ConstAmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,String@Const:)" syntax="operator*(ConstAmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,String@Const:)" syntax="operator-(ConstAmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,String@Const:)" syntax="operator+(ConstAmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,String:)" syntax="operator%(ConstAmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,String:)" syntax="operator/(ConstAmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,String:)" syntax="operator*(ConstAmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,String:)" syntax="operator-(ConstAmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,String:)" syntax="operator+(ConstAmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,Float:)" syntax="operator%(ConstAmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,Float:)" syntax="operator/(ConstAmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,Float:)" syntax="operator*(ConstAmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,Float:)" syntax="operator-(ConstAmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,Float:)" syntax="operator+(ConstAmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxVariant:,_:)" syntax="operator%(ConstAmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator/(ConstAmxVariant:,_:)" syntax="operator/(ConstAmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator*(ConstAmxVariant:,_:)" syntax="operator*(ConstAmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:,_:)" syntax="operator-(ConstAmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator+(ConstAmxVariant:,_:)" syntax="operator+(ConstAmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,AmxVariantBuffer:)" syntax="operator%(AmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,AmxVariantBuffer:)" syntax="operator/(AmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,AmxVariantBuffer:)" syntax="operator*(AmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,AmxVariantBuffer:)" syntax="operator-(AmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,AmxVariantBuffer:)" syntax="operator+(AmxVariant:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,ConstAmxVariant:)" syntax="operator%(AmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,ConstAmxVariant:)" syntax="operator/(AmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,ConstAmxVariant:)" syntax="operator*(AmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,ConstAmxVariant:)" syntax="operator-(AmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,ConstAmxVariant:)" syntax="operator+(AmxVariant:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,AmxVariant:)" syntax="operator%(AmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,AmxVariant:)" syntax="operator/(AmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,AmxVariant:)" syntax="operator*(AmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,AmxVariant:)" syntax="operator-(AmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,AmxVariant:)" syntax="operator+(AmxVariant:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,AmxStringBuffer:)" syntax="operator%(AmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,AmxStringBuffer:)" syntax="operator/(AmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,AmxStringBuffer:)" syntax="operator*(AmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,AmxStringBuffer:)" syntax="operator-(AmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,AmxStringBuffer:)" syntax="operator+(AmxVariant:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,ConstAmxString:)" syntax="operator%(AmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,ConstAmxString:)" syntax="operator/(AmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,ConstAmxString:)" syntax="operator*(AmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,ConstAmxString:)" syntax="operator-(AmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,ConstAmxString:)" syntax="operator+(AmxVariant:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,AmxString:)" syntax="operator%(AmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,AmxString:)" syntax="operator/(AmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,AmxString:)" syntax="operator*(AmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,AmxString:)" syntax="operator-(AmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,AmxString:)" syntax="operator+(AmxVariant:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,String@Const:)" syntax="operator%(AmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,String@Const:)" syntax="operator/(AmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,String@Const:)" syntax="operator*(AmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,String@Const:)" syntax="operator-(AmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,String@Const:)" syntax="operator+(AmxVariant:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,String:)" syntax="operator%(AmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,String:)" syntax="operator/(AmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,String:)" syntax="operator*(AmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,String:)" syntax="operator-(AmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,String:)" syntax="operator+(AmxVariant:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,Float:)" syntax="operator%(AmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,Float:)" syntax="operator/(AmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,Float:)" syntax="operator*(AmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,Float:)" syntax="operator-(AmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,Float:)" syntax="operator+(AmxVariant:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxVariant:,_:)" syntax="operator%(AmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator/(AmxVariant:,_:)" syntax="operator/(AmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator*(AmxVariant:,_:)" syntax="operator*(AmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator-(AmxVariant:,_:)" syntax="operator-(AmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator+(AmxVariant:,_:)" syntax="operator+(AmxVariant:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxVariant </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,AmxVariantBuffer:)" syntax="operator%(AmxStringBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,AmxVariantBuffer:)" syntax="operator/(AmxStringBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,AmxVariantBuffer:)" syntax="operator*(AmxStringBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,AmxVariantBuffer:)" syntax="operator-(AmxStringBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,AmxVariantBuffer:)" syntax="operator+(AmxStringBuffer:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,ConstAmxVariant:)" syntax="operator%(AmxStringBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,ConstAmxVariant:)" syntax="operator/(AmxStringBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,ConstAmxVariant:)" syntax="operator*(AmxStringBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,ConstAmxVariant:)" syntax="operator-(AmxStringBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,ConstAmxVariant:)" syntax="operator+(AmxStringBuffer:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,AmxVariant:)" syntax="operator%(AmxStringBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,AmxVariant:)" syntax="operator/(AmxStringBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,AmxVariant:)" syntax="operator*(AmxStringBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,AmxVariant:)" syntax="operator-(AmxStringBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,AmxVariant:)" syntax="operator+(AmxStringBuffer:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,AmxStringBuffer:)" syntax="operator%(AmxStringBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,AmxStringBuffer:)" syntax="operator/(AmxStringBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,AmxStringBuffer:)" syntax="operator*(AmxStringBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,AmxStringBuffer:)" syntax="operator-(AmxStringBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,AmxStringBuffer:)" syntax="operator+(AmxStringBuffer:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,ConstAmxString:)" syntax="operator%(AmxStringBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,ConstAmxString:)" syntax="operator/(AmxStringBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,ConstAmxString:)" syntax="operator*(AmxStringBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,ConstAmxString:)" syntax="operator-(AmxStringBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,ConstAmxString:)" syntax="operator+(AmxStringBuffer:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,AmxString:)" syntax="operator%(AmxStringBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,AmxString:)" syntax="operator/(AmxStringBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,AmxString:)" syntax="operator*(AmxStringBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,AmxString:)" syntax="operator-(AmxStringBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,AmxString:)" syntax="operator+(AmxStringBuffer:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,String@Const:)" syntax="operator%(AmxStringBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,String@Const:)" syntax="operator/(AmxStringBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,String@Const:)" syntax="operator*(AmxStringBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,String@Const:)" syntax="operator-(AmxStringBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,String@Const:)" syntax="operator+(AmxStringBuffer:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,String:)" syntax="operator%(AmxStringBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,String:)" syntax="operator/(AmxStringBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,String:)" syntax="operator*(AmxStringBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,String:)" syntax="operator-(AmxStringBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,String:)" syntax="operator+(AmxStringBuffer:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,Float:)" syntax="operator%(AmxStringBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,Float:)" syntax="operator/(AmxStringBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,Float:)" syntax="operator*(AmxStringBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,Float:)" syntax="operator-(AmxStringBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxStringBuffer:,Float:)" syntax="operator+(AmxStringBuffer:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxStringBuffer:,_:)" syntax="operator%(AmxStringBuffer:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator/(AmxStringBuffer:,_:)" syntax="operator/(AmxStringBuffer:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator*(AmxStringBuffer:,_:)" syntax="operator*(AmxStringBuffer:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:,_:)" syntax="operator-(AmxStringBuffer:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,AmxVariantBuffer:)" syntax="operator%(ConstAmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,AmxVariantBuffer:)" syntax="operator/(ConstAmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,AmxVariantBuffer:)" syntax="operator*(ConstAmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,AmxVariantBuffer:)" syntax="operator-(ConstAmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,AmxVariantBuffer:)" syntax="operator+(ConstAmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,ConstAmxVariant:)" syntax="operator%(ConstAmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,ConstAmxVariant:)" syntax="operator/(ConstAmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,ConstAmxVariant:)" syntax="operator*(ConstAmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,ConstAmxVariant:)" syntax="operator-(ConstAmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,ConstAmxVariant:)" syntax="operator+(ConstAmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,AmxVariant:)" syntax="operator%(ConstAmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,AmxVariant:)" syntax="operator/(ConstAmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,AmxVariant:)" syntax="operator*(ConstAmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,AmxVariant:)" syntax="operator-(ConstAmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,AmxVariant:)" syntax="operator+(ConstAmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,AmxStringBuffer:)" syntax="operator%(ConstAmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,AmxStringBuffer:)" syntax="operator/(ConstAmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,AmxStringBuffer:)" syntax="operator*(ConstAmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,AmxStringBuffer:)" syntax="operator-(ConstAmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,AmxStringBuffer:)" syntax="operator+(ConstAmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,ConstAmxString:)" syntax="operator%(ConstAmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,ConstAmxString:)" syntax="operator/(ConstAmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,ConstAmxString:)" syntax="operator*(ConstAmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,ConstAmxString:)" syntax="operator-(ConstAmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,ConstAmxString:)" syntax="operator+(ConstAmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,AmxString:)" syntax="operator%(ConstAmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,AmxString:)" syntax="operator/(ConstAmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,AmxString:)" syntax="operator*(ConstAmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,AmxString:)" syntax="operator-(ConstAmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,AmxString:)" syntax="operator+(ConstAmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,String@Const:)" syntax="operator%(ConstAmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,String@Const:)" syntax="operator/(ConstAmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,String@Const:)" syntax="operator*(ConstAmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,String@Const:)" syntax="operator-(ConstAmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,String@Const:)" syntax="operator+(ConstAmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,String:)" syntax="operator%(ConstAmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,String:)" syntax="operator/(ConstAmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,String:)" syntax="operator*(ConstAmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,String:)" syntax="operator-(ConstAmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,String:)" syntax="operator+(ConstAmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,Float:)" syntax="operator%(ConstAmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,Float:)" syntax="operator/(ConstAmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,Float:)" syntax="operator*(ConstAmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,Float:)" syntax="operator-(ConstAmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,Float:)" syntax="operator+(ConstAmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(ConstAmxString:,_:)" syntax="operator%(ConstAmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator/(ConstAmxString:,_:)" syntax="operator/(ConstAmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator*(ConstAmxString:,_:)" syntax="operator*(ConstAmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:,_:)" syntax="operator-(ConstAmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator+(ConstAmxString:,_:)" syntax="operator+(ConstAmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator%(AmxString:,AmxVariantBuffer:)" syntax="operator%(AmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,AmxVariantBuffer:)" syntax="operator/(AmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,AmxVariantBuffer:)" syntax="operator*(AmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,AmxVariantBuffer:)" syntax="operator-(AmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,AmxVariantBuffer:)" syntax="operator+(AmxString:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,ConstAmxVariant:)" syntax="operator%(AmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,ConstAmxVariant:)" syntax="operator/(AmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,ConstAmxVariant:)" syntax="operator*(AmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,ConstAmxVariant:)" syntax="operator-(AmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,ConstAmxVariant:)" syntax="operator+(AmxString:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,AmxVariant:)" syntax="operator%(AmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,AmxVariant:)" syntax="operator/(AmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,AmxVariant:)" syntax="operator*(AmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,AmxVariant:)" syntax="operator-(AmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,AmxVariant:)" syntax="operator+(AmxString:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,AmxStringBuffer:)" syntax="operator%(AmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,AmxStringBuffer:)" syntax="operator/(AmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,AmxStringBuffer:)" syntax="operator*(AmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,AmxStringBuffer:)" syntax="operator-(AmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,AmxStringBuffer:)" syntax="operator+(AmxString:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,ConstAmxString:)" syntax="operator%(AmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,ConstAmxString:)" syntax="operator/(AmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,ConstAmxString:)" syntax="operator*(AmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,ConstAmxString:)" syntax="operator-(AmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,ConstAmxString:)" syntax="operator+(AmxString:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,AmxString:)" syntax="operator%(AmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,AmxString:)" syntax="operator/(AmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,AmxString:)" syntax="operator*(AmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,AmxString:)" syntax="operator-(AmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,AmxString:)" syntax="operator+(AmxString:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,String@Const:)" syntax="operator%(AmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,String@Const:)" syntax="operator/(AmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,String@Const:)" syntax="operator*(AmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,String@Const:)" syntax="operator-(AmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,String@Const:)" syntax="operator+(AmxString:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,String:)" syntax="operator%(AmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,String:)" syntax="operator/(AmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,String:)" syntax="operator*(AmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,String:)" syntax="operator-(AmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,String:)" syntax="operator+(AmxString:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,Float:)" syntax="operator%(AmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(AmxString:,Float:)" syntax="operator/(AmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(AmxString:,Float:)" syntax="operator*(AmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:,Float:)" syntax="operator-(AmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(AmxString:,Float:)" syntax="operator+(AmxString:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(AmxString:,_:)" syntax="operator%(AmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator/(AmxString:,_:)" syntax="operator/(AmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator*(AmxString:,_:)" syntax="operator*(AmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator-(AmxString:,_:)" syntax="operator-(AmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator+(AmxString:,_:)" syntax="operator+(AmxString:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>AmxString </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator%(String@Const:,AmxVariantBuffer:)" syntax="operator%(String@Const:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,AmxVariantBuffer:)" syntax="operator/(String@Const:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,AmxVariantBuffer:)" syntax="operator*(String@Const:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,AmxVariantBuffer:)" syntax="operator-(String@Const:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String@Const:,AmxVariantBuffer:)" syntax="operator+(String@Const:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String@Const:,ConstAmxVariant:)" syntax="operator%(String@Const:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,ConstAmxVariant:)" syntax="operator/(String@Const:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,ConstAmxVariant:)" syntax="operator*(String@Const:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,ConstAmxVariant:)" syntax="operator-(String@Const:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String@Const:,ConstAmxVariant:)" syntax="operator+(String@Const:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String@Const:,AmxVariant:)" syntax="operator%(String@Const:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,AmxVariant:)" syntax="operator/(String@Const:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,AmxVariant:)" syntax="operator*(String@Const:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,AmxVariant:)" syntax="operator-(String@Const:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String@Const:,AmxVariant:)" syntax="operator+(String@Const:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String@Const:,AmxStringBuffer:)" syntax="operator%(String@Const:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,AmxStringBuffer:)" syntax="operator/(String@Const:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,AmxStringBuffer:)" syntax="operator*(String@Const:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,AmxStringBuffer:)" syntax="operator-(String@Const:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String@Const:,AmxStringBuffer:)" syntax="operator+(String@Const:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String@Const:,ConstAmxString:)" syntax="operator%(String@Const:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,ConstAmxString:)" syntax="operator/(String@Const:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,ConstAmxString:)" syntax="operator*(String@Const:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,ConstAmxString:)" syntax="operator-(String@Const:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String@Const:,ConstAmxString:)" syntax="operator+(String@Const:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String@Const:,AmxString:)" syntax="operator%(String@Const:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,AmxString:)" syntax="operator/(String@Const:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,AmxString:)" syntax="operator*(String@Const:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,AmxString:)" syntax="operator-(String@Const:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String@Const:,AmxString:)" syntax="operator+(String@Const:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,String@Const:)" syntax="operator/(String@Const:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,String@Const:)" syntax="operator*(String@Const:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,String@Const:)" syntax="operator-(String@Const:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,String:)" syntax="operator/(String@Const:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,String:)" syntax="operator*(String@Const:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,String:)" syntax="operator-(String@Const:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String@Const:,Float:)" syntax="operator%(String@Const:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String@Const:,Float:)" syntax="operator/(String@Const:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String@Const:,Float:)" syntax="operator*(String@Const:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:,Float:)" syntax="operator-(String@Const:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String@Const:,Float:)" syntax="operator+(String@Const:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String@Const:,_:)" syntax="operator%(String@Const:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator/(String@Const:,_:)" syntax="operator/(String@Const:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator*(String@Const:,_:)" syntax="operator*(String@Const:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator-(String@Const:,_:)" syntax="operator-(String@Const:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator+(String@Const:,_:)" syntax="operator+(String@Const:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator%(String:,AmxVariantBuffer:)" syntax="operator%(String:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,AmxVariantBuffer:)" syntax="operator/(String:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,AmxVariantBuffer:)" syntax="operator*(String:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,AmxVariantBuffer:)" syntax="operator-(String:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String:,AmxVariantBuffer:)" syntax="operator+(String:,AmxVariantBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String:,ConstAmxVariant:)" syntax="operator%(String:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,ConstAmxVariant:)" syntax="operator/(String:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,ConstAmxVariant:)" syntax="operator*(String:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,ConstAmxVariant:)" syntax="operator-(String:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String:,ConstAmxVariant:)" syntax="operator+(String:,ConstAmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String:,AmxVariant:)" syntax="operator%(String:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,AmxVariant:)" syntax="operator/(String:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,AmxVariant:)" syntax="operator*(String:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,AmxVariant:)" syntax="operator-(String:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String:,AmxVariant:)" syntax="operator+(String:,AmxVariant:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String:,AmxStringBuffer:)" syntax="operator%(String:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,AmxStringBuffer:)" syntax="operator/(String:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,AmxStringBuffer:)" syntax="operator*(String:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,AmxStringBuffer:)" syntax="operator-(String:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String:,AmxStringBuffer:)" syntax="operator+(String:,AmxStringBuffer:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String:,ConstAmxString:)" syntax="operator%(String:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,ConstAmxString:)" syntax="operator/(String:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,ConstAmxString:)" syntax="operator*(String:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,ConstAmxString:)" syntax="operator-(String:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String:,ConstAmxString:)" syntax="operator+(String:,ConstAmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String:,AmxString:)" syntax="operator%(String:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,AmxString:)" syntax="operator/(String:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,AmxString:)" syntax="operator*(String:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,AmxString:)" syntax="operator-(String:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String:,AmxString:)" syntax="operator+(String:,AmxString:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,String@Const:)" syntax="operator/(String:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,String@Const:)" syntax="operator*(String:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,String@Const:)" syntax="operator-(String:,String@Const:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,String:)" syntax="operator/(String:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,String:)" syntax="operator*(String:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,String:)" syntax="operator-(String:,String:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String:,Float:)" syntax="operator%(String:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(String:,Float:)" syntax="operator/(String:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(String:,Float:)" syntax="operator*(String:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:,Float:)" syntax="operator-(String:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(String:,Float:)" syntax="operator+(String:,Float:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(String:,_:)" syntax="operator%(String:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator/(String:,_:)" syntax="operator/(String:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator*(String:,_:)" syntax="operator*(String:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator-(String:,_:)" syntax="operator-(String:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator+(String:,_:)" syntax="operator+(String:,_:)(arg1, arg2)">
			<stacksize value="1"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
			</param>
		</member>
		<member name="M:operator++(AmxVariantBuffer:)" syntax="operator++(AmxVariantBuffer:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator++(ConstAmxVariant:)" syntax="operator++(ConstAmxVariant:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator++(AmxVariant:)" syntax="operator++(AmxVariant:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator++(AmxStringBuffer:)" syntax="operator++(AmxStringBuffer:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator++(ConstAmxString:)" syntax="operator++(ConstAmxString:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator++(AmxString:)" syntax="operator++(AmxString:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator++(String@Const:)" syntax="operator++(String@Const:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator++(String:)" syntax="operator++(String:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator--(AmxVariantBuffer:)" syntax="operator--(AmxVariantBuffer:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariantBuffer:)" syntax="operator-(AmxVariantBuffer:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator--(ConstAmxVariant:)" syntax="operator--(ConstAmxVariant:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxVariant:)" syntax="operator-(ConstAmxVariant:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator--(AmxVariant:)" syntax="operator--(AmxVariant:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxVariant:)" syntax="operator-(AmxVariant:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator--(AmxStringBuffer:)" syntax="operator--(AmxStringBuffer:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxStringBuffer:)" syntax="operator-(AmxStringBuffer:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:operator--(ConstAmxString:)" syntax="operator--(ConstAmxString:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(ConstAmxString:)" syntax="operator-(ConstAmxString:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator--(AmxString:)" syntax="operator--(AmxString:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator-(AmxString:)" syntax="operator-(AmxString:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:operator--(String@Const:)" syntax="operator--(String@Const:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String@Const:)" syntax="operator-(String@Const:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator--(String:)" syntax="operator--(String:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator-(String:)" syntax="operator-(String:)(arg)">
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator*(_no_itertag:,_:)" syntax="operator*(_no_itertag:,_:)(a, b)">
			<stacksize value="1"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="OnActorStreamOut"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
			<referrer name="PHY_CreateWall"/>
			<referrer name="PHY_CreateCylinder"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="DestroyPlayerProgressBar"/>
			<referrer name="IsValidPlayerProgressBar"/>
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="CA_DestroyObject_DC"/>
			<referrer name="CA_SetObjectPos_DC"/>
			<referrer name="CA_SetObjectRot_DC"/>
			<referrer name="givePremium"/>
			<referrer name="pc_cmd_vpozostalo"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Init_Teleports"/>
			<referrer name="AddTeleport"/>
			<referrer name="ResetGangData"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="giveGangBudget"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_GangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopSparing"/>
			<referrer name="LeaveGang"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="CreateBusiness"/>
			<referrer name="ResetGameData"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="_@yHOnPlayerDeath@0r"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="RoyalePickup"/>
			<referrer name="UpdateSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="UpdateWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
			<param name="a">
				<paraminfo>_no_itertag </paraminfo>
			</param>
			<param name="b">
			</param>
			<remarks>  Suppress warnings when <c>_:</c> is used (correctly) instead of  <c>_no_itertag:</c>.  This function is never called, it only exists to  check tags in <c>Iter_Add</c> et. al, while guarded by <c>FALSE ?</c>.  </remarks> 
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="PHY_CoreTimer"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="T3_IsPointInCylinder3D"/>
			<referrer name="T3_IsPointInCone3D"/>
			<referrer name="PHY_InitObject"/>
			<referrer name="ac_GetPlayerFacingAngle"/>
			<referrer name="ac_GetVehicleZAngle"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="_SortDeepArray"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="SetFakeFacingAngle"/>
			<referrer name="_@yHOnPlayerUpdate@0G"/>
			<referrer name="AddRaceArena"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="check_segment_intersection"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_GetPointInCylinder3D"/>
			<referrer name="T3_GetPointInCone3D"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="Init_Map"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_GetRandomHit"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="PHY_GetObjectSpeed"/>
			<referrer name="ac_GetPlayerFacingAngle"/>
			<referrer name="ac_GetVehicleZAngle"/>
			<referrer name="StartSK"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_EulerToQuat"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_ShiftDegreeToRadian"/>
			<referrer name="T3_ShiftDegreeToRadianEx"/>
			<referrer name="T3_ShiftRadianToDegree"/>
			<referrer name="T3_ShiftRadianToDegreeEx"/>
			<referrer name="T3_ShiftMoveTimeToSpeed"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_ApplyRotation"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<referrer name="ac_Timer"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="changePlayerHudColor"/>
			<referrer name="changeHudColor"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Fortune_Start"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_invisible"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_CompressRotation"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<referrer name="ac_Timer"/>
			<referrer name="CA_IsPlayerNearWater"/>
			<referrer name="CA_IsVehicleNearWater"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="CompressRotation"/>
			<referrer name="achievement"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="changePlayerHudColor"/>
			<referrer name="changeHudColor"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Fortune_Start"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_RandomGun"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_invisible"/>
			<referrer name="IsPosInWater"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="giveMoney"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_GetRotationMatrixEuler"/>
			<referrer name="T3_GetRotationMatrixEulerEx"/>
			<referrer name="T3_GetQuatFromEuler"/>
			<referrer name="T3_GetRotationFor2Point3D"/>
			<referrer name="T3_ShiftDegreeToRadianEx"/>
			<referrer name="T3_ShiftVectorToRotation"/>
			<referrer name="T3_ShiftPositionToOffset"/>
			<referrer name="T3_IsPointInCube3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_GetPointInCube3D"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointOnCube3D"/>
			<referrer name="T3_GetPointOnSphericalSector"/>
			<referrer name="RandomFloat"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="SetCustomFallDamage"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
			<referrer name="AngleBetweenPoints"/>
			<referrer name="InflictDamage"/>
			<referrer name="GetRotationFor2Point3D"/>
			<referrer name="Get2DInFrontOfPos"/>
			<referrer name="Get2DBehindObjectInAngle"/>
			<referrer name="AngleInRangeOfAngle"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<referrer name="T3_RandomFloatEx"/>
			<referrer name="T3_CompressRotation"/>
			<referrer name="T3_DeCompressRotation"/>
			<referrer name="T3_RecoilVector"/>
			<referrer name="T3_EulerToQuat"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_GetRotationMatrixEuler"/>
			<referrer name="T3_GetRotationMatrixEulerEx"/>
			<referrer name="T3_GetQuatFromEuler"/>
			<referrer name="T3_QuatRotate"/>
			<referrer name="T3_GetQuatUpVector"/>
			<referrer name="T3_NormCrossProduct"/>
			<referrer name="T3_GetDistance1D"/>
			<referrer name="T3_GetDistance2D"/>
			<referrer name="T3_GetDistance3D"/>
			<referrer name="T3_GetRotationFor2Point2D"/>
			<referrer name="T3_GetPointInFront2D"/>
			<referrer name="T3_GetPointInFront3D"/>
			<referrer name="T3_GetRotationFor2Point3D"/>
			<referrer name="T3_GetDistancePointToLine"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_GetLineCosTheta2D"/>
			<referrer name="T3_GetLineCosTheta3D"/>
			<referrer name="T3_GetGangZone"/>
			<referrer name="T3_ShiftDegreeToRadianEx"/>
			<referrer name="T3_ShiftVectorToRotation"/>
			<referrer name="T3_ShiftLineRotation"/>
			<referrer name="T3_ShiftLineRotationVector"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="T3_IsPointInPolygon"/>
			<referrer name="T3_GetPointInCylinder2D"/>
			<referrer name="T3_GetPointInRectangle"/>
			<referrer name="T3_GetPointInCube"/>
			<referrer name="T3_GetPointInCone2D"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointOnClock"/>
			<referrer name="T3_GetPointOnCylinder2D"/>
			<referrer name="T3_GetPointOnRectangle"/>
			<referrer name="T3_GetPointOnCube"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<referrer name="T3_GetPointOnCircularSector"/>
			<referrer name="T3_GetPointOnEllipticalCyl2D"/>
			<referrer name="RandomFloat"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<referrer name="BiGramSimilarity"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_GetObjectMoveAngle"/>
			<referrer name="PHY_ApplyRotation"/>
			<referrer name="PHY_CreateWall"/>
			<referrer name="check_segment_intersection"/>
			<referrer name="FixAngle"/>
			<referrer name="PHY_vectorcrossp"/>
			<referrer name="PHY_GetQuatProduct"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<referrer name="PHY_GetRotationQuaternion"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
			<referrer name="BS_PackAspectRatio"/>
			<referrer name="BS_PackCameraZoom"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="CreateZoneBorders"/>
			<referrer name="agz_GangZoneCreateFirstNumber"/>
			<referrer name="agz_GangZoneCreateSecondNumber"/>
			<referrer name="CA_IsPlayerOnSurface"/>
			<referrer name="CA_IsVehicleOnSurface"/>
			<referrer name="CA_IsPlayerInWater"/>
			<referrer name="CA_IsVehicleInWater"/>
			<referrer name="CA_IsPlayerNearWater"/>
			<referrer name="CA_IsVehicleNearWater"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="CA_GetRoomHeight"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="AngleBetweenPoints"/>
			<referrer name="ProcessDamage"/>
			<referrer name="InflictDamage"/>
			<referrer name="MakePlayerFacePlayer"/>
			<referrer name="IsPlayerBehindPlayer"/>
			<referrer name="GetRotationQuaternion"/>
			<referrer name="CompressRotation"/>
			<referrer name="GetDistance3D"/>
			<referrer name="GetDistanceBetweenPoints3D"/>
			<referrer name="GetPointsDistanceToPoint"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="CheckBaseTimer"/>
			<referrer name="pc_cmd_brama"/>
			<referrer name="CheckMysliwyZone"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="CheckGrzybiarzZone"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="Init_Mining"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="UpdateChowany"/>
			<referrer name="UpdateZP"/>
			<referrer name="UpdateBTR"/>
			<referrer name="UpdateWG"/>
			<referrer name="IsPosInWater"/>
			<referrer name="GetPointInFront2D"/>
			<referrer name="GetPointInFront3D"/>
			<referrer name="GetRotationFor2Point3D"/>
			<referrer name="Is2DPointInRangeOfPoint"/>
			<referrer name="GetAngleToPool"/>
			<referrer name="Get2DInFrontOfPos"/>
			<referrer name="AngleInRangeOfAngle"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="Init_Map"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_RandomFloatEx"/>
			<referrer name="T3_RecoilVector"/>
			<referrer name="T3_EulerToQuat"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_GetRotationMatrixEuler"/>
			<referrer name="T3_GetRotationMatrixEulerEx"/>
			<referrer name="T3_MatrixRotate"/>
			<referrer name="T3_MatrixRotateReverse"/>
			<referrer name="T3_GetQuatFromEuler"/>
			<referrer name="T3_QuatRotate"/>
			<referrer name="T3_GetQuatUpVector"/>
			<referrer name="T3_GetDistance2D"/>
			<referrer name="T3_GetDistance3D"/>
			<referrer name="T3_GetOrientation"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetLineSize2D"/>
			<referrer name="T3_GetLineSize3D"/>
			<referrer name="T3_GetPointInFront2D"/>
			<referrer name="T3_GetPointInFront3D"/>
			<referrer name="T3_GetDistancePointToLine"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_GetLineCosTheta2D"/>
			<referrer name="T3_GetLineCosTheta3D"/>
			<referrer name="T3_IsPointBetween2Points2D"/>
			<referrer name="T3_IsPointBetween2Points3D"/>
			<referrer name="T3_GetGangZone"/>
			<referrer name="T3_RandomItemFromArray"/>
			<referrer name="T3_ShiftRadianToDegreeEx"/>
			<referrer name="T3_IsPointInCylinder3D"/>
			<referrer name="T3_IsPointInCone3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInPolygon"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointInCylinder2D"/>
			<referrer name="T3_GetPointInRectangle"/>
			<referrer name="T3_GetPointInCube"/>
			<referrer name="T3_GetPointInCone2D"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointOnCylinder2D"/>
			<referrer name="T3_GetPointOnCylinder3D"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="T3_GetPointOnRectangle"/>
			<referrer name="T3_GetPointOnCube"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<referrer name="T3_GetPointOnCircularSector"/>
			<referrer name="T3_GetPointOnEllipticalCyl2D"/>
			<referrer name="RandomFloat"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEMultiply"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_GetObjectSpeed"/>
			<referrer name="PHY_ApplyRotation"/>
			<referrer name="vectordotp"/>
			<referrer name="check_segment_intersection"/>
			<referrer name="FixAngle"/>
			<referrer name="PHY_QuatFromAxisAngle"/>
			<referrer name="PHY_QuatNormalize"/>
			<referrer name="PHY_GetQuatProduct"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<referrer name="PHY_GetRotationQuaternion"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
			<referrer name="BS_UnpackAspectRatio"/>
			<referrer name="BS_UnpackCameraZoom"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="CreateZoneBorders"/>
			<referrer name="agz_GangZoneCreateFirstNumber"/>
			<referrer name="agz_GangZoneCreateSecondNumber"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_IsPlayerInWater"/>
			<referrer name="CA_IsVehicleInWater"/>
			<referrer name="CA_IsPlayerNearWater"/>
			<referrer name="CA_IsVehicleNearWater"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="CA_GetRoomHeight"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="ProcessDamage"/>
			<referrer name="InflictDamage"/>
			<referrer name="WC_VendingMachineUsed"/>
			<referrer name="DamageFeedUpdateText"/>
			<referrer name="DamageFeedAddHit"/>
			<referrer name="MakePlayerFacePlayer"/>
			<referrer name="IsPlayerBehindPlayer"/>
			<referrer name="GetRotationQuaternion"/>
			<referrer name="gSpeed"/>
			<referrer name="GetDistance3D"/>
			<referrer name="GetPointsDistanceToPoint"/>
			<referrer name="Init_Bank"/>
			<referrer name="Bank_Pickup"/>
			<referrer name="Heist_Init"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="Init_Driving"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="Init_Truck"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="CreateKurczak"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="Init_Stations"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="Init_Gielda"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Init_Jobs"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Taxi_Random"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="FetchCasino"/>
			<referrer name="FetchGunShop"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="Init_Mining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="StartBTR"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="UpdateBTR"/>
			<referrer name="RoyalePickup"/>
			<referrer name="StartSM"/>
			<referrer name="StartSK"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="setPosition"/>
			<referrer name="IsPosInWater"/>
			<referrer name="GetRandomCoord"/>
			<referrer name="GetPointInFront2D"/>
			<referrer name="GetPointInFront3D"/>
			<referrer name="IsObjectInSphere"/>
			<referrer name="Is2DPointInRangeOfPoint"/>
			<referrer name="Get2DInFrontOfPos"/>
			<referrer name="Get2DBehindObjectInAngle"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="Init_Map"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,Float:)" syntax="operator/(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_CalculatePercent"/>
			<referrer name="T3_CompressRotation"/>
			<referrer name="T3_NormalizeVector"/>
			<referrer name="T3_EulerToQuat"/>
			<referrer name="T3_GetQuatFromEuler"/>
			<referrer name="T3_NormCrossProduct"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetRotationFor2Point3D"/>
			<referrer name="T3_GetPointFor2Point2D"/>
			<referrer name="T3_GetPointFor2Point3D"/>
			<referrer name="T3_GetDistancePointToLine"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_GetLineCosTheta2D"/>
			<referrer name="T3_GetLineCosTheta3D"/>
			<referrer name="T3_ShiftDegreeToGrades"/>
			<referrer name="T3_ShiftRadianToDegree"/>
			<referrer name="T3_ShiftRadianToDegreeEx"/>
			<referrer name="T3_ShiftVectorRotation"/>
			<referrer name="T3_ShiftLineRotationVector"/>
			<referrer name="T3_ShiftSpeedToMoveTime"/>
			<referrer name="T3_ShiftMoveTimeToSpeed"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_IsPointInCylinder3D"/>
			<referrer name="T3_IsPointInCube3D"/>
			<referrer name="T3_IsPointInCone3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="T3_IsPointInPolygon"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointInCube3D"/>
			<referrer name="T3_GetPointInCone2D"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="T3_GetPointOnCube3D"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<referrer name="T3_GetPointOnCircularSector"/>
			<referrer name="T3_GetPointOnSphericalSector"/>
			<referrer name="BeautifyProfilingTime"/>
			<referrer name="RandomFloat"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_ApplyRotation"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<referrer name="projectVonU"/>
			<referrer name="check_segment_intersection"/>
			<referrer name="PHY_QuatFromAxisAngle"/>
			<referrer name="PHY_QuatNormalize"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
			<referrer name="BS_UnpackAspectRatio"/>
			<referrer name="BS_PackCameraZoom"/>
			<referrer name="BS_UnpackCameraZoom"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="WC_Bar_Calculate"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="ProcessDamage"/>
			<referrer name="getRatio"/>
			<referrer name="CompressRotation"/>
			<referrer name="randomPositionArea"/>
			<referrer name="GetRotationFor2Point3D"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(Float:,Float:)" syntax="operator*(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_CalculatePercent"/>
			<referrer name="T3_EulerToQuat"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_GetRotationMatrixEuler"/>
			<referrer name="T3_GetRotationMatrixEulerEx"/>
			<referrer name="T3_MatrixRotate"/>
			<referrer name="T3_MatrixRotateReverse"/>
			<referrer name="T3_GetQuatFromEuler"/>
			<referrer name="T3_QuatRotate"/>
			<referrer name="T3_GetQuatUpVector"/>
			<referrer name="T3_NormCrossProduct"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetPointInFront2D"/>
			<referrer name="T3_GetPointInFront3D"/>
			<referrer name="T3_GetPointFor2Point2D"/>
			<referrer name="T3_GetPointFor2Point3D"/>
			<referrer name="T3_GetDistancePointToLine"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_GetLineCosTheta2D"/>
			<referrer name="T3_GetLineCosTheta3D"/>
			<referrer name="T3_ShiftDegreeToRadian"/>
			<referrer name="T3_ShiftDegreeToRadianEx"/>
			<referrer name="T3_ShiftDegreeToGrades"/>
			<referrer name="T3_ShiftGradesToDegree"/>
			<referrer name="T3_ShiftSpeedToMoveTime"/>
			<referrer name="T3_GetCube3DPoint"/>
			<referrer name="T3_IsPointInCylinder3D"/>
			<referrer name="T3_IsPointInCone3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInPolygon"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointInCone2D"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<referrer name="RandomFloat"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEMultiply"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<referrer name="BiGramSimilarity"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_GetObjectSpeed"/>
			<referrer name="PHY_ApplyRotation"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<referrer name="vectordotp"/>
			<referrer name="projectVonU"/>
			<referrer name="check_segment_intersection"/>
			<referrer name="PHY_vectorcrossp"/>
			<referrer name="PHY_QuatFromAxisAngle"/>
			<referrer name="PHY_QuatNormalize"/>
			<referrer name="PHY_GetQuatProduct"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<referrer name="PHY_GetRotationQuaternion"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_bar_percent"/>
			<referrer name="BS_PackAspectRatio"/>
			<referrer name="BS_PackCameraZoom"/>
			<referrer name="BS_UnpackCameraZoom"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_GetSpeed"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="agz_GangZoneCreateFirstNumber"/>
			<referrer name="agz_GangZoneCreateSecondNumber"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_IsPlayerNearWater"/>
			<referrer name="CA_IsVehicleNearWater"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="CA_GetRoomHeight"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="WC_Bar_Calculate"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="ProcessDamage"/>
			<referrer name="InflictDamage"/>
			<referrer name="GetRotationQuaternion"/>
			<referrer name="gSpeed"/>
			<referrer name="GetPointsDistanceToPoint"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="randomPositionArea"/>
			<referrer name="IsPosInWater"/>
			<referrer name="GetPointInFront2D"/>
			<referrer name="GetPointInFront3D"/>
			<referrer name="Is2DPointInRangeOfPoint"/>
			<referrer name="Get2DInFrontOfPos"/>
			<referrer name="Get2DBehindObjectInAngle"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(_:)" syntax="Float:operator=(_:)(oper)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_GetNearest2DPointOnPolygon"/>
			<referrer name="T3_GetPointInCylinder2D"/>
			<referrer name="T3_GetPointInRectangle"/>
			<referrer name="T3_GetPointInCube"/>
			<referrer name="T3_GetPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointOnCylinder2D"/>
			<referrer name="T3_GetPointOnRectangle"/>
			<referrer name="T3_GetPointOnCube"/>
			<referrer name="T3_GetPointOnEllipticalCyl2D"/>
			<referrer name="InterpolateColorLinear"/>
			<referrer name="InterpolateColor"/>
			<referrer name="InterpolateColour"/>
			<referrer name="BiGramSimilarity"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
			<referrer name="AntiCheatGetHealth"/>
			<referrer name="AntiCheatGetArmour"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="GetPlayerBudget"/>
			<referrer name="_updateGangBarEx"/>
			<referrer name="SparingTimer"/>
			<referrer name="Slots_Start"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="StartWP"/>
			<referrer name="MoveWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="randomPositionArea"/>
			<referrer name="GetRandomCoord"/>
			<referrer name="Przegral"/>
			<referrer name="checkTime"/>
			<referrer name="IsObjectInSphere"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="SecondTimer"/>
			<referrer name="RunObjects"/>
			<param name="oper">
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="T3_CalculatePercent"/>
			<referrer name="T3_IsPolygonClosed"/>
			<referrer name="T3_IsLinesParallel2D"/>
			<referrer name="T3_IsLinesParallel3D"/>
			<referrer name="T3_IsLinesPerpendicular2D"/>
			<referrer name="T3_IsLinesPerpendicular3D"/>
			<referrer name="T3_IsPointBetween2Points2D"/>
			<referrer name="T3_IsPointBetween2Points3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointOnClock"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_SetObjectZBound"/>
			<referrer name="PHY_QuatNormalize"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="WC_SpawnPlayer"/>
			<referrer name="WC_SetPlayerVelocity"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="OnPlayerDeathFinished"/>
			<referrer name="SendLastSyncPacket"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="MovePointCol"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="getRatio"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="T3_DeCompressRotation"/>
			<referrer name="T3_RotationInRange"/>
			<referrer name="T3_GetDistancePointToLine"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointInPolygon"/>
			<referrer name="T3_GetPointOnCircularSector"/>
			<referrer name="T3_GetPointOnSphericalSector"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="FixAngle"/>
			<referrer name="PHY_QuatFromAxisAngle"/>
			<referrer name="PHY_asin_limit"/>
			<referrer name="PHY_atan2_limit"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="ac_Timer"/>
			<referrer name="_SortDeepArray"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_IsPlayerInWater"/>
			<referrer name="CA_IsVehicleInWater"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="WC_SetPlayerArmour"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
			<referrer name="ProcessDamage"/>
			<referrer name="WC_VendingMachineUsed"/>
			<referrer name="MakePlayerFacePlayer"/>
			<referrer name="IsPlayerBehindPlayer"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="GetZoneDamageId"/>
			<referrer name="CheckGangWar"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="IsPlayerInArea"/>
			<referrer name="Get2DInFrontOfPos"/>
			<referrer name="AngleInRangeOfAngle"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="pr_ip_209"/>
			<referrer name="SavePlayerPosition"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_RandomFloatEx"/>
			<referrer name="T3_RecoilVector"/>
			<referrer name="T3_GetNearest2DPointOnPolygon"/>
			<referrer name="T3_IsProbable"/>
			<referrer name="T3_IsPointInCube"/>
			<referrer name="T3_IsPointInEllipticalCylinder"/>
			<referrer name="T3_IsPointInPolygon"/>
			<referrer name="T3_IsPointInRectangle"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="PHY_SetObjectFriction"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ProcessDamage"/>
			<referrer name="InflictDamage"/>
			<referrer name="getCityName"/>
			<referrer name="getZoneName"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="Init_Mining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kamizelka"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_GetOrientation"/>
			<referrer name="T3_GetDistancePointToLine"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_GetNearest2DPointOnPolygon"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="T3_IsPointInPolygon"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointInPolygon"/>
			<referrer name="T3_GetPointOnCircularSector"/>
			<referrer name="T3_GetPointOnSphericalSector"/>
			<referrer name="T3_Init"/>
			<referrer name="RandomFloat"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_ApplyRotation"/>
			<referrer name="check_segment_intersection"/>
			<referrer name="FixAngle"/>
			<referrer name="PHY_asin_limit"/>
			<referrer name="PHY_atan2_limit"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="ac_SetPlayerHealth"/>
			<referrer name="ac_SetPlayerArmour"/>
			<referrer name="acc_SetVehicleHealth"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="_SortDeepArray"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_IsPlayerInWater"/>
			<referrer name="CA_IsVehicleInWater"/>
			<referrer name="DamagePlayer"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
			<referrer name="ProcessDamage"/>
			<referrer name="InflictDamage"/>
			<referrer name="MakePlayerFacePlayer"/>
			<referrer name="IsPlayerBehindPlayer"/>
			<referrer name="getCityName"/>
			<referrer name="getZoneName"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="DrwalTree"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="UpdateWP"/>
			<referrer name="UpdateSK"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="IsPlayerInArea"/>
			<referrer name="IsObjectInSphere"/>
			<referrer name="Is2DPointInRangeOfPoint"/>
			<referrer name="GetAngleToPool"/>
			<referrer name="AngleInRangeOfAngle"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="pr_ip_209"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="T3_NormalizeVector"/>
			<referrer name="T3_RotationInRange"/>
			<referrer name="T3_GetOrientation"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetRotationFor2Point3D"/>
			<referrer name="T3_GetDistancePointToLine"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_IsProbable"/>
			<referrer name="T3_RandomItemFromArray"/>
			<referrer name="T3_ShiftVectorRotation"/>
			<referrer name="T3_ShiftLineRotationVector"/>
			<referrer name="T3_ShiftSpeedToMoveTime"/>
			<referrer name="T3_ShiftMoveTimeToSpeed"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_IsPointInCylinder3D"/>
			<referrer name="T3_IsPointInCube"/>
			<referrer name="T3_IsPointInCube3D"/>
			<referrer name="T3_IsPointInCone3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInEllipse"/>
			<referrer name="T3_IsPointInEllipticalCylinder"/>
			<referrer name="T3_IsPointInCircle"/>
			<referrer name="T3_IsPointInSphere"/>
			<referrer name="T3_IsPointInRectangle"/>
			<referrer name="T3_GetPointInCube3D"/>
			<referrer name="T3_GetPointOnCube3D"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="PHY_SetObjectAirResistance"/>
			<referrer name="FixAngle"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="ac_Timer"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="InflictDamage"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="FishTimer"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="UpdateSM"/>
			<referrer name="_@yHOnPlayerWeaponShot@10"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<referrer name="GetRotationFor2Point3D"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="T3_GetPointInCube3D"/>
			<referrer name="T3_GetPointOnCube3D"/>
			<referrer name="PrivCarTimer"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="percent_float"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(__CompilerDefault:)" syntax="Float:operator=(__CompilerDefault:)(a)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:File:operator=(__CompilerDefault:)" syntax="File:operator=(__CompilerDefault:)(a)">
			<tagname value="File"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:_:operator=(__CompilerDefault:)" syntax="_:operator=(__CompilerDefault:)(a)">
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:bool:operator=(__CompilerDefault:)" syntax="bool:operator=(__CompilerDefault:)(a)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:filemode:operator=(__CompilerDefault:)" syntax="filemode:operator=(__CompilerDefault:)(a)">
			<tagname value="filemode"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:seek_whence:operator=(__CompilerDefault:)" syntax="seek_whence:operator=(__CompilerDefault:)(a)">
			<tagname value="seek_whence"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DB:operator=(__CompilerDefault:)" syntax="DB:operator=(__CompilerDefault:)(a)">
			<tagname value="DB"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DBResult:operator=(__CompilerDefault:)" syntax="DBResult:operator=(__CompilerDefault:)(a)">
			<tagname value="DBResult"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Text:operator=(__CompilerDefault:)" syntax="Text:operator=(__CompilerDefault:)(a)">
			<tagname value="Text"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PlayerText:operator=(__CompilerDefault:)" syntax="PlayerText:operator=(__CompilerDefault:)(a)">
			<tagname value="PlayerText"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Menu:operator=(__CompilerDefault:)" syntax="Menu:operator=(__CompilerDefault:)(a)">
			<tagname value="Menu"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Text3D:operator=(__CompilerDefault:)" syntax="Text3D:operator=(__CompilerDefault:)(a)">
			<tagname value="Text3D"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PlayerText3D:operator=(__CompilerDefault:)" syntax="PlayerText3D:operator=(__CompilerDefault:)(a)">
			<tagname value="PlayerText3D"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Language:operator=(__CompilerDefault:)" syntax="Language:operator=(__CompilerDefault:)(a)">
			<tagname value="Language"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Bit:operator=(__CompilerDefault:)" syntax="Bit:operator=(__CompilerDefault:)(a)">
			<tagname value="Bit"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Style:operator=(__CompilerDefault:)" syntax="Style:operator=(__CompilerDefault:)(a)">
			<tagname value="Style"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:XML:operator=(__CompilerDefault:)" syntax="XML:operator=(__CompilerDefault:)(a)">
			<tagname value="XML"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Bintree:operator=(__CompilerDefault:)" syntax="Bintree:operator=(__CompilerDefault:)(a)">
			<tagname value="Bintree"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Group:operator=(__CompilerDefault:)" syntax="Group:operator=(__CompilerDefault:)(a)">
			<tagname value="Group"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Timer:operator=(__CompilerDefault:)" syntax="Timer:operator=(__CompilerDefault:)(a)">
			<tagname value="Timer"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:INI:operator=(__CompilerDefault:)" syntax="INI:operator=(__CompilerDefault:)(a)">
			<tagname value="INI"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:String@Const:operator=(__CompilerDefault:)" syntax="String@Const:operator=(__CompilerDefault:)(a)">
			<tagname value="String@Const"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:String:operator=(__CompilerDefault:)" syntax="String:operator=(__CompilerDefault:)(a)">
			<tagname value="String"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:error_level:operator=(__CompilerDefault:)" syntax="error_level:operator=(__CompilerDefault:)(a)">
			<tagname value="error_level"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:locale_category:operator=(__CompilerDefault:)" syntax="locale_category:operator=(__CompilerDefault:)(a)">
			<tagname value="locale_category"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:filter_type:operator=(__CompilerDefault:)" syntax="filter_type:operator=(__CompilerDefault:)(a)">
			<tagname value="filter_type"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:handler_flags:operator=(__CompilerDefault:)" syntax="handler_flags:operator=(__CompilerDefault:)(a)">
			<tagname value="handler_flags"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Variant:operator=(__CompilerDefault:)" syntax="Variant:operator=(__CompilerDefault:)(a)">
			<tagname value="Variant"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Variant@Const:operator=(__CompilerDefault:)" syntax="Variant@Const:operator=(__CompilerDefault:)(a)">
			<tagname value="Variant@Const"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Iter:operator=(__CompilerDefault:)" syntax="Iter:operator=(__CompilerDefault:)(a)">
			<tagname value="Iter"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Handle:operator=(__CompilerDefault:)" syntax="Handle:operator=(__CompilerDefault:)(a)">
			<tagname value="Handle"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:tag_uid:operator=(__CompilerDefault:)" syntax="tag_uid:operator=(__CompilerDefault:)(a)">
			<tagname value="tag_uid"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Task:operator=(__CompilerDefault:)" syntax="Task:operator=(__CompilerDefault:)(a)">
			<tagname value="Task"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:LinkedList:operator=(__CompilerDefault:)" syntax="LinkedList:operator=(__CompilerDefault:)(a)">
			<tagname value="LinkedList"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:List:operator=(__CompilerDefault:)" syntax="List:operator=(__CompilerDefault:)(a)">
			<tagname value="List"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Map:operator=(__CompilerDefault:)" syntax="Map:operator=(__CompilerDefault:)(a)">
			<tagname value="Map"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:tag_op:operator=(__CompilerDefault:)" syntax="tag_op:operator=(__CompilerDefault:)(a)">
			<tagname value="tag_op"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:fork_level:operator=(__CompilerDefault:)" syntax="fork_level:operator=(__CompilerDefault:)(a)">
			<tagname value="fork_level"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Amx:operator=(__CompilerDefault:)" syntax="Amx:operator=(__CompilerDefault:)(a)">
			<tagname value="Amx"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Var:operator=(__CompilerDefault:)" syntax="Var:operator=(__CompilerDefault:)(a)">
			<tagname value="Var"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:amx_err:operator=(__CompilerDefault:)" syntax="amx_err:operator=(__CompilerDefault:)(a)">
			<tagname value="amx_err"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:str_create_mode:operator=(__CompilerDefault:)" syntax="str_create_mode:operator=(__CompilerDefault:)(a)">
			<tagname value="str_create_mode"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AmxString:operator=(__CompilerDefault:)" syntax="AmxString:operator=(__CompilerDefault:)(a)">
			<tagname value="AmxString"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:ConstAmxString:operator=(__CompilerDefault:)" syntax="ConstAmxString:operator=(__CompilerDefault:)(a)">
			<tagname value="ConstAmxString"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AmxStringBuffer:operator=(__CompilerDefault:)" syntax="AmxStringBuffer:operator=(__CompilerDefault:)(a)">
			<tagname value="AmxStringBuffer"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AmxVariant:operator=(__CompilerDefault:)" syntax="AmxVariant:operator=(__CompilerDefault:)(a)">
			<tagname value="AmxVariant"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:ConstAmxVariant:operator=(__CompilerDefault:)" syntax="ConstAmxVariant:operator=(__CompilerDefault:)(a)">
			<tagname value="ConstAmxVariant"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AmxVariantBuffer:operator=(__CompilerDefault:)" syntax="AmxVariantBuffer:operator=(__CompilerDefault:)(a)">
			<tagname value="AmxVariantBuffer"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Guard:operator=(__CompilerDefault:)" syntax="Guard:operator=(__CompilerDefault:)(a)">
			<tagname value="Guard"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:CallbackHandler:operator=(__CompilerDefault:)" syntax="CallbackHandler:operator=(__CompilerDefault:)(a)">
			<tagname value="CallbackHandler"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:NativeHook:operator=(__CompilerDefault:)" syntax="NativeHook:operator=(__CompilerDefault:)(a)">
			<tagname value="NativeHook"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Pool:operator=(__CompilerDefault:)" syntax="Pool:operator=(__CompilerDefault:)(a)">
			<tagname value="Pool"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Expression:operator=(__CompilerDefault:)" syntax="Expression:operator=(__CompilerDefault:)(a)">
			<tagname value="Expression"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Symbol:operator=(__CompilerDefault:)" syntax="Symbol:operator=(__CompilerDefault:)(a)">
			<tagname value="Symbol"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicObject:operator=(__CompilerDefault:)" syntax="DynamicObject:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicObject"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicPickup:operator=(__CompilerDefault:)" syntax="DynamicPickup:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicPickup"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicCP:operator=(__CompilerDefault:)" syntax="DynamicCP:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicCP"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicRaceCP:operator=(__CompilerDefault:)" syntax="DynamicRaceCP:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicRaceCP"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicMapIcon:operator=(__CompilerDefault:)" syntax="DynamicMapIcon:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicMapIcon"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicText3D:operator=(__CompilerDefault:)" syntax="DynamicText3D:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicText3D"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicArea:operator=(__CompilerDefault:)" syntax="DynamicArea:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicArea"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicActor:operator=(__CompilerDefault:)" syntax="DynamicActor:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicActor"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_REGEX_GRAMMAR:operator=(__CompilerDefault:)" syntax="E_REGEX_GRAMMAR:operator=(__CompilerDefault:)(a)">
			<tagname value="E_REGEX_GRAMMAR"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_REGEX_FLAG:operator=(__CompilerDefault:)" syntax="E_REGEX_FLAG:operator=(__CompilerDefault:)(a)">
			<tagname value="E_REGEX_FLAG"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_MATCH_FLAG:operator=(__CompilerDefault:)" syntax="E_MATCH_FLAG:operator=(__CompilerDefault:)(a)">
			<tagname value="E_MATCH_FLAG"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Regex:operator=(__CompilerDefault:)" syntax="Regex:operator=(__CompilerDefault:)(a)">
			<tagname value="Regex"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:regex:operator=(__CompilerDefault:)" syntax="regex:operator=(__CompilerDefault:)(a)">
			<tagname value="regex"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:RegexMatch:operator=(__CompilerDefault:)" syntax="RegexMatch:operator=(__CompilerDefault:)(a)">
			<tagname value="RegexMatch"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:match_results:operator=(__CompilerDefault:)" syntax="match_results:operator=(__CompilerDefault:)(a)">
			<tagname value="match_results"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PR_HandlerType:operator=(__CompilerDefault:)" syntax="PR_HandlerType:operator=(__CompilerDefault:)(a)">
			<tagname value="PR_HandlerType"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PR_ValueType:operator=(__CompilerDefault:)" syntax="PR_ValueType:operator=(__CompilerDefault:)(a)">
			<tagname value="PR_ValueType"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PR_PacketPriority:operator=(__CompilerDefault:)" syntax="PR_PacketPriority:operator=(__CompilerDefault:)(a)">
			<tagname value="PR_PacketPriority"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PR_PacketReliability:operator=(__CompilerDefault:)" syntax="PR_PacketReliability:operator=(__CompilerDefault:)(a)">
			<tagname value="PR_PacketReliability"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:BitStream:operator=(__CompilerDefault:)" syntax="BitStream:operator=(__CompilerDefault:)(a)">
			<tagname value="BitStream"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Opcode:operator=(__CompilerDefault:)" syntax="Opcode:operator=(__CompilerDefault:)(a)">
			<tagname value="Opcode"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AsmError:operator=(__CompilerDefault:)" syntax="AsmError:operator=(__CompilerDefault:)(a)">
			<tagname value="AsmError"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DisasmResult:operator=(__CompilerDefault:)" syntax="DisasmResult:operator=(__CompilerDefault:)(a)">
			<tagname value="DisasmResult"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_SORT_ORDER:operator=(__CompilerDefault:)" syntax="E_SORT_ORDER:operator=(__CompilerDefault:)(a)">
			<tagname value="E_SORT_ORDER"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Request:operator=(__CompilerDefault:)" syntax="Request:operator=(__CompilerDefault:)(a)">
			<tagname value="Request"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:RequestsClient:operator=(__CompilerDefault:)" syntax="RequestsClient:operator=(__CompilerDefault:)(a)">
			<tagname value="RequestsClient"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_HTTP_METHOD:operator=(__CompilerDefault:)" syntax="E_HTTP_METHOD:operator=(__CompilerDefault:)(a)">
			<tagname value="E_HTTP_METHOD"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_HTTP_STATUS:operator=(__CompilerDefault:)" syntax="E_HTTP_STATUS:operator=(__CompilerDefault:)(a)">
			<tagname value="E_HTTP_STATUS"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:JSON_NODE:operator=(__CompilerDefault:)" syntax="JSON_NODE:operator=(__CompilerDefault:)(a)">
			<tagname value="JSON_NODE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Headers:operator=(__CompilerDefault:)" syntax="Headers:operator=(__CompilerDefault:)(a)">
			<tagname value="Headers"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Node:operator=(__CompilerDefault:)" syntax="Node:operator=(__CompilerDefault:)(a)">
			<tagname value="Node"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:F@_@i:operator=(__CompilerDefault:)" syntax="F@_@i:operator=(__CompilerDefault:)(a)">
			<tagname value="F@_@i"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:F@_@s:operator=(__CompilerDefault:)" syntax="F@_@s:operator=(__CompilerDefault:)(a)">
			<tagname value="F@_@s"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:signed:operator=(_:)" syntax="signed:operator=(_:)(a)">
			<tagname value="signed"/>
			<stacksize value="1"/>
			<param name="a">
			</param>
		</member>
		<member name="M:unsigned:operator=(_:)" syntax="unsigned:operator=(_:)(a)">
			<tagname value="unsigned"/>
			<stacksize value="1"/>
			<param name="a">
			</param>
		</member>
		<member name="M:String:operator=(_:)" syntax="String:operator=(_:)(arg)">
			<tagname value="String"/>
			<stacksize value="1"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:String:operator=(Float:)" syntax="String:operator=(Float:)(arg)">
			<tagname value="String"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:String@Const:operator=(_:)" syntax="String@Const:operator=(_:)(arg)">
			<tagname value="String@Const"/>
			<stacksize value="1"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:String@Const:operator=(Float:)" syntax="String@Const:operator=(Float:)(arg)">
			<tagname value="String@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AmxString:operator=(_:)" syntax="AmxString:operator=(_:)(arg)">
			<tagname value="AmxString"/>
			<stacksize value="1"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:AmxString:operator=(Float:)" syntax="AmxString:operator=(Float:)(arg)">
			<tagname value="AmxString"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ConstAmxString:operator=(_:)" syntax="ConstAmxString:operator=(_:)(arg)">
			<tagname value="ConstAmxString"/>
			<stacksize value="1"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:ConstAmxString:operator=(Float:)" syntax="ConstAmxString:operator=(Float:)(arg)">
			<tagname value="ConstAmxString"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AmxStringBuffer:operator=(_:)" syntax="AmxStringBuffer:operator=(_:)(arg)">
			<tagname value="AmxStringBuffer"/>
			<stacksize value="1"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:AmxStringBuffer:operator=(Float:)" syntax="AmxStringBuffer:operator=(Float:)(arg)">
			<tagname value="AmxStringBuffer"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AmxVariant:operator=(_:)" syntax="AmxVariant:operator=(_:)(arg)">
			<tagname value="AmxVariant"/>
			<stacksize value="1"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:AmxVariant:operator=(Float:)" syntax="AmxVariant:operator=(Float:)(arg)">
			<tagname value="AmxVariant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ConstAmxVariant:operator=(_:)" syntax="ConstAmxVariant:operator=(_:)(arg)">
			<tagname value="ConstAmxVariant"/>
			<stacksize value="1"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:ConstAmxVariant:operator=(Float:)" syntax="ConstAmxVariant:operator=(Float:)(arg)">
			<tagname value="ConstAmxVariant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AmxVariantBuffer:operator=(_:)" syntax="AmxVariantBuffer:operator=(_:)(arg)">
			<tagname value="AmxVariantBuffer"/>
			<stacksize value="1"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:AmxVariantBuffer:operator=(Float:)" syntax="AmxVariantBuffer:operator=(Float:)(arg)">
			<tagname value="AmxVariantBuffer"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:String:operator=(AmxString:)" syntax="String:operator=(AmxString:)(arg)">
			<tagname value="String"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:String@Const:operator=(AmxString:)" syntax="String@Const:operator=(AmxString:)(arg)">
			<tagname value="String@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:String:operator=(ConstAmxString:)" syntax="String:operator=(ConstAmxString:)(arg)">
			<tagname value="String"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:String@Const:operator=(ConstAmxString:)" syntax="String@Const:operator=(ConstAmxString:)(arg)">
			<tagname value="String@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:String:operator=(AmxStringBuffer:)" syntax="String:operator=(AmxStringBuffer:)(arg)">
			<tagname value="String"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:String@Const:operator=(AmxStringBuffer:)" syntax="String@Const:operator=(AmxStringBuffer:)(arg)">
			<tagname value="String@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxStringBuffer </paraminfo>
			</param>
		</member>
		<member name="M:Variant:operator=(AmxVariant:)" syntax="Variant:operator=(AmxVariant:)(arg)">
			<tagname value="Variant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:Variant@Const:operator=(AmxVariant:)" syntax="Variant@Const:operator=(AmxVariant:)(arg)">
			<tagname value="Variant@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:Variant:operator=(ConstAmxVariant:)" syntax="Variant:operator=(ConstAmxVariant:)(arg)">
			<tagname value="Variant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:Variant@Const:operator=(ConstAmxVariant:)" syntax="Variant@Const:operator=(ConstAmxVariant:)(arg)">
			<tagname value="Variant@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:Variant:operator=(AmxVariantBuffer:)" syntax="Variant:operator=(AmxVariantBuffer:)(arg)">
			<tagname value="Variant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:Variant@Const:operator=(AmxVariantBuffer:)" syntax="Variant@Const:operator=(AmxVariantBuffer:)(arg)">
			<tagname value="Variant@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariantBuffer </paraminfo>
			</param>
		</member>
		<member name="M:String@Const:operator=(String:)" syntax="String@Const:operator=(String:)(arg)">
			<tagname value="String@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:String:operator=(String@Const:)" syntax="String:operator=(String@Const:)(arg)">
			<tagname value="String"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:ConstAmxString:operator=(AmxString:)" syntax="ConstAmxString:operator=(AmxString:)(arg)">
			<tagname value="ConstAmxString"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxString </paraminfo>
			</param>
		</member>
		<member name="M:AmxString:operator=(String@Const:)" syntax="AmxString:operator=(String@Const:)(arg)">
			<tagname value="AmxString"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:AmxString:operator=(ConstAmxString:)" syntax="AmxString:operator=(ConstAmxString:)(arg)">
			<tagname value="AmxString"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxString </paraminfo>
			</param>
		</member>
		<member name="M:ConstAmxVariant:operator=(AmxVariant:)" syntax="ConstAmxVariant:operator=(AmxVariant:)(arg)">
			<tagname value="ConstAmxVariant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>AmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:AmxVariant:operator=(Variant@Const:)" syntax="AmxVariant:operator=(Variant@Const:)(arg)">
			<tagname value="AmxVariant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Variant@Const </paraminfo>
			</param>
		</member>
		<member name="M:AmxVariant:operator=(ConstAmxVariant:)" syntax="AmxVariant:operator=(ConstAmxVariant:)(arg)">
			<tagname value="AmxVariant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>ConstAmxVariant </paraminfo>
			</param>
		</member>
		<member name="M:operator==(String:,String:)" syntax="operator==(String:,String:)(arg1, arg2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="operator!=(String:,String:)"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator==(String:,String@Const:)" syntax="operator==(String:,String@Const:)(arg1, arg2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="operator!=(String:,String@Const:)"/>
			<param name="arg1">
				<paraminfo>String </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator==(String@Const:,String:)" syntax="operator==(String@Const:,String:)(arg1, arg2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="operator!=(String@Const:,String:)"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String </paraminfo>
			</param>
		</member>
		<member name="M:operator==(String@Const:,String@Const:)" syntax="operator==(String@Const:,String@Const:)(arg1, arg2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="operator!=(String@Const:,String@Const:)"/>
			<param name="arg1">
				<paraminfo>String@Const </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>String@Const </paraminfo>
			</param>
		</member>
		<member name="M:Variant@Const:operator=(Variant:)" syntax="Variant@Const:operator=(Variant:)(arg)">
			<tagname value="Variant@Const"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Variant </paraminfo>
			</param>
		</member>
		<member name="M:Variant:operator=(Variant@Const:)" syntax="Variant:operator=(Variant@Const:)(arg)">
			<tagname value="Variant"/>
			<stacksize value="1"/>
			<param name="arg">
				<paraminfo>Variant@Const </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Iter:,Iter:)" syntax="operator==(Iter:,Iter:)(arg1, arg2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="operator!=(Iter:,Iter:)"/>
			<param name="arg1">
				<paraminfo>Iter </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Iter </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Handle:,Handle:)" syntax="operator==(Handle:,Handle:)(arg1, arg2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="operator!=(Handle:,Handle:)"/>
			<param name="arg1">
				<paraminfo>Handle </paraminfo>
			</param>
			<param name="arg2">
				<paraminfo>Handle </paraminfo>
			</param>
		</member>
		<member name="M:Expression:operator=(_:)" syntax="Expression:operator=(_:)(arg)">
			<tagname value="Expression"/>
			<stacksize value="4"/>
			<dependency name="expr_const"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:Expression:operator=(Float:)" syntax="Expression:operator=(Float:)(arg)">
			<tagname value="Expression"/>
			<stacksize value="4"/>
			<dependency name="expr_const"/>
			<param name="arg">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Expression:operator=(bool:)" syntax="Expression:operator=(bool:)(arg)">
			<tagname value="Expression"/>
			<stacksize value="4"/>
			<dependency name="expr_const"/>
			<param name="arg">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:F@_@iis:operator=(__CompilerDefault:)" syntax="F@_@iis:operator=(__CompilerDefault:)(a)">
			<tagname value="F@_@iis"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:F@_@iiiis:operator=(__CompilerDefault:)" syntax="F@_@iiiis:operator=(__CompilerDefault:)(a)">
			<tagname value="F@_@iiiis"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:@@Dialog_Set" syntax="@@Dialog_Set(playerid, dialogid, __m)">
			<tagname value="I@R"/>
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="@_"/>
			<dependency name="Dialog_Set"/>
			<dependency name="L@"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:@CO_CGen" syntax="@CO_CGen()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_Malloc"/>
			<dependency name="@CO_Iter"/>
		</member>
		<member name="M:@CO_Debug" syntax="@CO_Debug()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_Iter"/>
			<dependency name="@CO_YVers"/>
		</member>
		<member name="M:@CO_Inline" syntax="@CO_Inline()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_WC"/>
			<dependency name="@CO_Malloc"/>
		</member>
		<member name="M:@CO_Iter" syntax="@CO_Iter()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_CGen"/>
			<dependency name="@CO_Debug"/>
		</member>
		<member name="M:@CO_Malloc" syntax="@CO_Malloc()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_Inline"/>
			<dependency name="@CO_CGen"/>
		</member>
		<member name="M:@CO_ScriptInit" syntax="@CO_ScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="@CO_YVers"/>
		</member>
		<member name="M:@CO_WC" syntax="@CO_WC()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="@CO_Inline"/>
		</member>
		<member name="M:@CO_YVers" syntax="@CO_YVers()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_Debug"/>
			<dependency name="@CO_ScriptInit"/>
		</member>
		<member name="M:@_yHAction" syntax="@_yHAction()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHCheckpoint" syntax="@_yHCheckpoint()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHCollisions" syntax="@_yHCollisions()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHCommand" syntax="@_yHCommand()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHContainer" syntax="@_yHContainer()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHDynamic" syntax="@_yHDynamic()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHDynamicCP" syntax="@_yHDynamicCP()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHInventory" syntax="@_yHInventory()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHObject" syntax="@_yHObject()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHTextDraw" syntax="@_yHTextDraw()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHUpdate" syntax="@_yHUpdate()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yTMinuteTimer" syntax="@_yTMinuteTimer(__r)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="MinuteTimer"/>
			<dependency name="_Timer_F"/>
			<dependency name="_YSI_g_sCurrentTimer"/>
			<param name="__r">
				<paraminfo>Timer </paraminfo>
			</param>
		</member>
		<member name="M:@_yTSecondTimer" syntax="@_yTSecondTimer(__r)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SecondTimer"/>
			<dependency name="_Timer_F"/>
			<dependency name="_YSI_g_sCurrentTimer"/>
			<param name="__r">
				<paraminfo>Timer </paraminfo>
			</param>
		</member>
		<member name="M:@_y_cgen0_y_@" syntax="@_y_cgen0_y_@()">
			<attribute name="public"/>
			<stacksize value="55"/>
			<dependency name="CGEN"/>
		</member>
		<member name="M:@_y_cgen1_y_@" syntax="@_y_cgen1_y_@()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:@yH_DestroyVehicle@0K" syntax="@yH_DestroyVehicle@0K(&amp;vehicleid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="_@yHDestroyVehicle@0K"/>
			<dependency name="_yH@"/>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@01" syntax="@yH_OnDialogResponse@01(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@01"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@03" syntax="@yH_OnDialogResponse@03(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@03"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@04" syntax="@yH_OnDialogResponse@04(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@04"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0B" syntax="@yH_OnDialogResponse@0B(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0B"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0C" syntax="@yH_OnDialogResponse@0C(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0C"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0F" syntax="@yH_OnDialogResponse@0F(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0F"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0I" syntax="@yH_OnDialogResponse@0I(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0I"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0O" syntax="@yH_OnDialogResponse@0O(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0O"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0P" syntax="@yH_OnDialogResponse@0P(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0P"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0Q" syntax="@yH_OnDialogResponse@0Q(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0Q"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0b" syntax="@yH_OnDialogResponse@0b(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0b"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0d" syntax="@yH_OnDialogResponse@0d(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0d"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0g" syntax="@yH_OnDialogResponse@0g(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0g"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0h" syntax="@yH_OnDialogResponse@0h(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0h"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0l" syntax="@yH_OnDialogResponse@0l(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0l"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0o" syntax="@yH_OnDialogResponse@0o(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0o"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0y" syntax="@yH_OnDialogResponse@0y(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0y"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@0z" syntax="@yH_OnDialogResponse@0z(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@0z"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnDialogResponse@11" syntax="@yH_OnDialogResponse@11(&amp;playerid, &amp;dialogid, &amp;response, &amp;listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnDialogResponse@11"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dialogid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="listitem">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerClickTextDraw@0d" syntax="@yH_OnPlayerClickTextDraw@0d(&amp;playerid, &amp;clickedid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerClickTextDraw@0d"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="clickedid">
				<paraminfo>Text &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@02" syntax="@yH_OnPlayerConnect@02(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerConnect@02"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@06" syntax="@yH_OnPlayerDeath@06(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@06"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0@" syntax="@yH_OnPlayerDeath@0@(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0@"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0C" syntax="@yH_OnPlayerDeath@0C(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0C"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0F" syntax="@yH_OnPlayerDeath@0F(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0F"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0N" syntax="@yH_OnPlayerDeath@0N(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0N"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0S" syntax="@yH_OnPlayerDeath@0S(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0S"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0m" syntax="@yH_OnPlayerDeath@0m(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0m"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0p" syntax="@yH_OnPlayerDeath@0p(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0p"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0r" syntax="@yH_OnPlayerDeath@0r(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0r"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0t" syntax="@yH_OnPlayerDeath@0t(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0t"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0u" syntax="@yH_OnPlayerDeath@0u(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0u"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0v" syntax="@yH_OnPlayerDeath@0v(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0v"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0w" syntax="@yH_OnPlayerDeath@0w(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0w"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@0x" syntax="@yH_OnPlayerDeath@0x(&amp;playerid, &amp;killerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDeath@0x"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="killerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@000" syntax="@yH_OnPlayerDisconnect@000(&amp;playerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDisconnect@000"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@01" syntax="@yH_OnPlayerDisconnect@01(&amp;playerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDisconnect@01"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@02" syntax="@yH_OnPlayerDisconnect@02(&amp;playerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDisconnect@02"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@0A" syntax="@yH_OnPlayerDisconnect@0A(&amp;playerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDisconnect@0A"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@0F" syntax="@yH_OnPlayerDisconnect@0F(&amp;playerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDisconnect@0F"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@0o" syntax="@yH_OnPlayerDisconnect@0o(&amp;playerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDisconnect@0o"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@0x" syntax="@yH_OnPlayerDisconnect@0x(&amp;playerid, &amp;reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerDisconnect@0x"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="reason">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEditDynObject@0P" syntax="@yH_OnPlayerEditDynObject@0P(&amp;playerid, &amp;objectid, &amp;response, &amp;x, &amp;y, &amp;z, &amp;rx, &amp;ry, &amp;rz)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEditDynObject@0P"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="objectid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="response">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynArea@0O" syntax="@yH_OnPlayerEnterDynArea@0O(&amp;playerid, &amp;areaid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynArea@0O"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="areaid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynRaceCP@0C" syntax="@yH_OnPlayerEnterDynRaceCP@0C(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynRaceCP@0V" syntax="@yH_OnPlayerEnterDynRaceCP@0V(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynRaceCP@0s" syntax="@yH_OnPlayerEnterDynRaceCP@0s(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@08" syntax="@yH_OnPlayerEnterDynamicCP@08(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@08"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@09" syntax="@yH_OnPlayerEnterDynamicCP@09(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@09"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@0C" syntax="@yH_OnPlayerEnterDynamicCP@0C(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@0C"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@0F" syntax="@yH_OnPlayerEnterDynamicCP@0F(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@0M" syntax="@yH_OnPlayerEnterDynamicCP@0M(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@0U" syntax="@yH_OnPlayerEnterDynamicCP@0U(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@0W" syntax="@yH_OnPlayerEnterDynamicCP@0W(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@0e" syntax="@yH_OnPlayerEnterDynamicCP@0e(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@0e"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@0m" syntax="@yH_OnPlayerEnterDynamicCP@0m(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterDynamicCP@0v" syntax="@yH_OnPlayerEnterDynamicCP@0v(&amp;playerid, &amp;checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="checkpointid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterVehicle@0F" syntax="@yH_OnPlayerEnterVehicle@0F(&amp;playerid, &amp;vehicleid, &amp;ispassenger)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterVehicle@0F"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ispassenger">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterVehicle@0U" syntax="@yH_OnPlayerEnterVehicle@0U(&amp;playerid, &amp;vehicleid, &amp;ispassenger)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterVehicle@0U"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ispassenger">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterVehicle@0m" syntax="@yH_OnPlayerEnterVehicle@0m(&amp;playerid, &amp;vehicleid, &amp;ispassenger)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterVehicle@0m"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ispassenger">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterVehicle@0q" syntax="@yH_OnPlayerEnterVehicle@0q(&amp;playerid, &amp;vehicleid, &amp;ispassenger)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterVehicle@0q"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ispassenger">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterVehicle@0s" syntax="@yH_OnPlayerEnterVehicle@0s(&amp;playerid, &amp;vehicleid, &amp;ispassenger)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerEnterVehicle@0s"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ispassenger">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerExitVehicle@0C" syntax="@yH_OnPlayerExitVehicle@0C(&amp;playerid, &amp;vehicleid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerExitVehicle@0C"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerExitVehicle@0F" syntax="@yH_OnPlayerExitVehicle@0F(&amp;playerid, &amp;vehicleid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerExitVehicle@0F"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerExitVehicle@0V" syntax="@yH_OnPlayerExitVehicle@0V(&amp;playerid, &amp;vehicleid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerExitVehicle@0V"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerExitVehicle@0m" syntax="@yH_OnPlayerExitVehicle@0m(&amp;playerid, &amp;vehicleid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerExitVehicle@0m"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerExitVehicle@0s" syntax="@yH_OnPlayerExitVehicle@0s(&amp;playerid, &amp;vehicleid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerExitVehicle@0s"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@07" syntax="@yH_OnPlayerKeyStateChange@07(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@07"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@09" syntax="@yH_OnPlayerKeyStateChange@09(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@09"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0D" syntax="@yH_OnPlayerKeyStateChange@0D(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0D"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0J" syntax="@yH_OnPlayerKeyStateChange@0J(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0J"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0O" syntax="@yH_OnPlayerKeyStateChange@0O(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0O"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0S" syntax="@yH_OnPlayerKeyStateChange@0S(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0S"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0U" syntax="@yH_OnPlayerKeyStateChange@0U(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0U"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0Y" syntax="@yH_OnPlayerKeyStateChange@0Y(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0Y"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0Z" syntax="@yH_OnPlayerKeyStateChange@0Z(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0Z"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0c" syntax="@yH_OnPlayerKeyStateChange@0c(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0c"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0d" syntax="@yH_OnPlayerKeyStateChange@0d(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0d"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0i" syntax="@yH_OnPlayerKeyStateChange@0i(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0i"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0k" syntax="@yH_OnPlayerKeyStateChange@0k(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0k"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0m" syntax="@yH_OnPlayerKeyStateChange@0m(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0m"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0n" syntax="@yH_OnPlayerKeyStateChange@0n(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0n"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@0o" syntax="@yH_OnPlayerKeyStateChange@0o(&amp;playerid, &amp;newkeys, &amp;oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerKeyStateChange@0o"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="newkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="oldkeys">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerLeaveDynArea@0O" syntax="@yH_OnPlayerLeaveDynArea@0O(&amp;playerid, &amp;areaid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerLeaveDynArea@0O"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="areaid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerPickUpDynPickup@05" syntax="@yH_OnPlayerPickUpDynPickup@05(&amp;playerid, &amp;pickupid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerPickUpDynPickup@05"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pickupid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerPickUpPickup@0c" syntax="@yH_OnPlayerPickUpPickup@0c(&amp;playerid, &amp;pickupid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerPickUpPickup@0c"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pickupid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerShootDynObject@0H" syntax="@yH_OnPlayerShootDynObject@0H(&amp;playerid, &amp;weaponid, &amp;objectid, &amp;x, &amp;y, &amp;z)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerShootDynObject@0H"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weaponid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="objectid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerShootDynObject@0X" syntax="@yH_OnPlayerShootDynObject@0X(&amp;playerid, &amp;weaponid, &amp;objectid, &amp;x, &amp;y, &amp;z)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerShootDynObject@0X"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weaponid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="objectid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerUpdate@0G" syntax="@yH_OnPlayerUpdate@0G(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerUpdate@0G"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerUpdate@0J" syntax="@yH_OnPlayerUpdate@0J(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerUpdate@0J"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerUpdate@0o" syntax="@yH_OnPlayerUpdate@0o(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerUpdate@0o"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerWeaponShot@10" syntax="@yH_OnPlayerWeaponShot@10(&amp;playerid, &amp;weaponid, &amp;hittype, &amp;hitid, &amp;fX, &amp;fY, &amp;fZ)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnPlayerWeaponShot@10"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weaponid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="hittype">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="hitid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="fX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnScriptExit@000" syntax="@yH_OnScriptExit@000()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnScriptExit@000"/>
			<dependency name="true"/>
		</member>
		<member name="M:@yH_OnScriptInit@000" syntax="@yH_OnScriptInit@000()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnScriptInit@000"/>
			<dependency name="true"/>
		</member>
		<member name="M:@yH_OnVehicleMod@0L" syntax="@yH_OnVehicleMod@0L(&amp;playerid, &amp;vehicleid, &amp;componentid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnVehicleMod@0L"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="componentid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnVehiclePaintjob@0L" syntax="@yH_OnVehiclePaintjob@0L(&amp;playerid, &amp;vehicleid, &amp;paintjobid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="_@Hy"/>
			<dependency name="_@yHOnVehiclePaintjob@0L"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="vehicleid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="paintjobid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@04" syntax="@yH_ResetPlayerData@04(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@04"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@07" syntax="@yH_ResetPlayerData@07(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@07"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@08" syntax="@yH_ResetPlayerData@08(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@08"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0@" syntax="@yH_ResetPlayerData@0@(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0@"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0C" syntax="@yH_ResetPlayerData@0C(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0C"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0D" syntax="@yH_ResetPlayerData@0D(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0D"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0E" syntax="@yH_ResetPlayerData@0E(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0E"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0F" syntax="@yH_ResetPlayerData@0F(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0F"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0G" syntax="@yH_ResetPlayerData@0G(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0G"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0H" syntax="@yH_ResetPlayerData@0H(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0H"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0J" syntax="@yH_ResetPlayerData@0J(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0J"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0R" syntax="@yH_ResetPlayerData@0R(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0R"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0S" syntax="@yH_ResetPlayerData@0S(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0S"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0T" syntax="@yH_ResetPlayerData@0T(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0T"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0U" syntax="@yH_ResetPlayerData@0U(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0U"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0V" syntax="@yH_ResetPlayerData@0V(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0V"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0W" syntax="@yH_ResetPlayerData@0W(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0W"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0X" syntax="@yH_ResetPlayerData@0X(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0X"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0Y" syntax="@yH_ResetPlayerData@0Y(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0Y"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0Z" syntax="@yH_ResetPlayerData@0Z(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0Z"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0b" syntax="@yH_ResetPlayerData@0b(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0b"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0d" syntax="@yH_ResetPlayerData@0d(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0d"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0f" syntax="@yH_ResetPlayerData@0f(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0f"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0g" syntax="@yH_ResetPlayerData@0g(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0g"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0j" syntax="@yH_ResetPlayerData@0j(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0j"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0o" syntax="@yH_ResetPlayerData@0o(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0o"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@0x" syntax="@yH_ResetPlayerData@0x(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@0x"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@11" syntax="@yH_ResetPlayerData@11(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@11"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_ResetPlayerData@12" syntax="@yH_ResetPlayerData@12(&amp;playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="_@yHResetPlayerData@12"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@yH_SetPlayerColor@13" syntax="@yH_SetPlayerColor@13(&amp;playerid, &amp;color)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="_@yHSetPlayerColor@13"/>
			<dependency name="_yH@"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="color">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:@y_HOnPlayerCommandText" syntax="@y_HOnPlayerCommandText()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:@y_HOnRconCommand" syntax="@y_HOnRconCommand()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:@y_inlineTimerCount" syntax="@y_inlineTimerCount(func, time, count, due)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="GetTickCount"/>
			<dependency name="Indirect_Call"/>
			<dependency name="Indirect_Release_"/>
			<dependency name="Indirect_SetMeta_"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="false"/>
			<param name="func">
				<paraminfo>F@_@ </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="count">
			</param>
			<param name="due">
			</param>
		</member>
		<member name="M:@y_inlineTimerRepeat" syntax="@y_inlineTimerRepeat(func)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Indirect_Call"/>
			<param name="func">
				<paraminfo>F@_@ </paraminfo>
			</param>
		</member>
		<member name="M:@y_inlineTimerStart" syntax="@y_inlineTimerStart(func, time, due)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetTickCount"/>
			<dependency name="Indirect_Call"/>
			<dependency name="Indirect_SetMeta_"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="true"/>
			<param name="func">
				<paraminfo>F@_@ </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="due">
			</param>
		</member>
		<member name="M:AMX_Deref" syntax="AMX_Deref(addr)">
			<stacksize value="3"/>
			<dependency name="AMX_Deref"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:AMX_DoNothing" syntax="AMX_DoNothing()">
			<stacksize value="1"/>
			<referrer name="AMX_GetGlobal"/>
		</member>
		<member name="M:AMX_DumpHeader" syntax="AMX_DumpHeader()">
			<stacksize value="41"/>
			<dependency name="AMX_GetName"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strunpack"/>
		</member>
		<member name="M:AMX_GetBaseCount" syntax="AMX_GetBaseCount(table, &amp;base, &amp;count)">
			<stacksize value="1"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_TABLE_LIBRARIES"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="base">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetEntry" syntax="AMX_GetEntry(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="44"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetPointer"/>
			<referrer name="AMX_GetTagByValue"/>
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellmax"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="swapchars"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetEntryFromNativeIndex" syntax="AMX_GetEntryFromNativeIndex(index)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<param name="index">
			</param>
		</member>
		<member name="M:AMX_GetEntryFromPublicIndex" syntax="AMX_GetEntryFromPublicIndex(index)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<param name="index">
			</param>
		</member>
		<member name="M:AMX_GetEntryPointer" syntax="AMX_GetEntryPointer(tableEntry)">
			<stacksize value="1"/>
			<param name="tableEntry">
			</param>
		</member>
		<member name="M:AMX_GetEntryPrefix" syntax="AMX_GetEntryPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="10"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetPointerPrefix"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="Inline_OnCodeInit"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="swapchars"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetEntrySuffix" syntax="AMX_GetEntrySuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="10"/>
			<referrer name="AMX_GetNameSuffix"/>
			<referrer name="AMX_GetPointerSuffix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="YSI_gAMXAddress_"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetGlobal" syntax="AMX_GetGlobal()">
			<stacksize value="4"/>
			<referrer name="Debug_OnCodeInit"/>
			<dependency name="AMX_DoNothing"/>
			<dependency name="AMX_HEADER_COD"/>
		</member>
		<member name="M:AMX_GetGlobalAddress" syntax="AMX_GetGlobalAddress(...)">
			<stacksize value="2"/>
			<dependency name="AMX_REAL_DATA"/>
			<param name="...">
			</param>
		</member>
		<member name="M:AMX_GetLengthFromEntry" syntax="AMX_GetLengthFromEntry(tableEntry)">
			<stacksize value="4"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_ReadLength"/>
			<param name="tableEntry">
			</param>
		</member>
		<member name="M:AMX_GetName" syntax="AMX_GetName(table, idx, buffer[], pattern[], exact)">
			<stacksize value="9"/>
			<referrer name="AMX_DumpHeader"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="YSI_gAMXAddress_"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetNamePrefix" syntax="AMX_GetNamePrefix(table, idx, buffer[], pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="YSI_gAMXAddress_"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetNameSuffix" syntax="AMX_GetNameSuffix(table, idx, buffer[], pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="YSI_gAMXAddress_"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetNativeIndexFromEntry" syntax="AMX_GetNativeIndexFromEntry(tableEntry)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<param name="tableEntry">
			</param>
		</member>
		<member name="M:AMX_GetPointer" syntax="AMX_GetPointer(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="9"/>
			<referrer name="AMX_GetValue"/>
			<dependency name="AMX_GetEntry"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetPointerPrefix" syntax="AMX_GetPointerPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetValuePrefix"/>
			<referrer name="ScriptInit_PreInitFuncs_"/>
			<referrer name="ScriptInit_PostInitFuncs_"/>
			<referrer name="ScriptInit_PreExitFuncs_"/>
			<referrer name="ScriptInit_PostExitFuncs_"/>
			<referrer name="Inline_OnCodeInit"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetPointerSuffix" syntax="AMX_GetPointerSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetValueSuffix"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetPublicIndexFromEntry" syntax="AMX_GetPublicIndexFromEntry(tableEntry)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<param name="tableEntry">
			</param>
		</member>
		<member name="M:AMX_GetRelativeAddress" syntax="AMX_GetRelativeAddress(...)">
			<stacksize value="2"/>
			<param name="...">
			</param>
		</member>
		<member name="M:AMX_GetStringFromEntry" syntax="AMX_GetStringFromEntry(tableEntry, str[], size)">
			<stacksize value="6"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_ReadString"/>
			<param name="tableEntry">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_GetTagByValue" syntax="AMX_GetTagByValue(tag, name[], len)">
			<stacksize value="11"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<dependency name="strunpack"/>
			<param name="tag">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_GetValue" syntax="AMX_GetValue(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="9"/>
			<dependency name="AMX_GetPointer"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetValuePrefix" syntax="AMX_GetValuePrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetValueSuffix" syntax="AMX_GetValueSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointerSuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_OnCodeInit" syntax="AMX_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_g_sStack"/>
			<dependency name="YSI_g_sStackPtr"/>
			<remarks>  </remarks> 
		</member>
		<member name="M:AMX_ReadArray" syntax="AMX_ReadArray(addr, dest[], len)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_ReadLength" syntax="AMX_ReadLength(addr)">
			<stacksize value="3"/>
			<referrer name="AMX_GetLengthFromEntry"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:AMX_ReadString" syntax="AMX_ReadString(addr, str[], len)">
			<stacksize value="3"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<referrer name="AMX_GetStringFromEntry"/>
			<referrer name="AMX_GetTagByValue"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="Inline_OnCodeInit"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_ReadUnpackedString" syntax="AMX_ReadUnpackedString(addr, str[], len)">
			<stacksize value="2"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_TraceCode" syntax="AMX_TraceCode(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="3"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="YSI_gAMXAddress_"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_TraceMemory" syntax="AMX_TraceMemory(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="3"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_HEA"/>
			<dependency name="YSI_gAMXAddress_"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_WriteArray" syntax="AMX_WriteArray(addr, src[], len)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_WriteString" syntax="AMX_WriteString(addr, str[], len)">
			<stacksize value="4"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AbsToRel" syntax="AbsToRel(address)">
			<stacksize value="3"/>
			<referrer name="ReadPhysMemory"/>
			<referrer name="WritePhysMemory"/>
			<referrer name="ReadPhysMemoryCell"/>
			<referrer name="WritePhysMemoryCell"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetDat"/>
			<param name="address">
			</param>
			<library>amx_assembly phys_memory</library>
		</member>
		<member name="M:AddBusinessMoney" syntax="AddBusinessMoney(businessid, money)">
			<stacksize value="141"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<dependency name="BUSINESS_CASINO"/>
			<dependency name="BUSINESS_GUNSHOP"/>
			<dependency name="CheckPlayerOnline"/>
			<dependency name="GunShopDay"/>
			<dependency name="GunShopDay"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_reward"/>
			<dependency name="business_type"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pBusinessTimer"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_business"/>
			<dependency name="strdot"/>
			<dependency name="tdInfo"/>
			<param name="businessid">
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:AddCasinoTokens" syntax="AddCasinoTokens(playerid, tokens)">
			<stacksize value="1"/>
			<dependency name="pCasinoTokens"/>
			<param name="playerid">
			</param>
			<param name="tokens">
			</param>
		</member>
		<member name="M:AddDialogListitem" syntax="AddDialogListitem(playerid, itemstr[], ...)">
			<stacksize value="161"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="OnDialogHud"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="pc_cmd_interiory"/>
			<referrer name="OnBankDialog"/>
			<referrer name="pc_cmd_raporty"/>
			<referrer name="ShowTeleports"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowGangList"/>
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnFishDialog"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="pc_cmd_kolory"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="showPlayerCMD"/>
			<referrer name="pc_cmd_acmd"/>
			<dependency name="ClearDialogListitems"/>
			<dependency name="NDP_DialogInfo"/>
			<dependency name="NDP_DialogInfo"/>
			<dependency name="NDP_P"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<dependency name="ndp_dialogitemscount"/>
			<dependency name="ndp_dialogopened"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="itemstr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:AddMenuItem" syntax="AddMenuItem(menuid, column, text[])">
			<attribute name="native"/>
			<referrer name="va_AddMenuItem"/>
			<param name="menuid">
				<paraminfo>Menu </paraminfo>
				The menu ID to add an item to
			</param>
			<param name="column">
				The column to add the item to
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text for the new menu item
			</param>
			<library>a_samp</library>  <summary>Adds an item to a specified menu.</summary>        <remarks>  <ul>  <li>Crashes when passed an invalid menu ID.</li>  <li>You can only have <b><c>12</c></b> items per menu (13th goes to the right side of the header  of column name (coloured), 14th and higher not display at all).</li>  <li>You can only use <b><c>2</c></b> columns (<b><c>0</c></b> and <b><c>1</c></b>).</li>  <li>You can only add <b><c>8</c></b> colour codes per one item (<b><c>~r~</c></b>, <b><c>~g~</c></b>  etc.).</li>  <li>Maximum length of menu item is <b><c>31</c></b> symbols. </li>  </ul>  </remarks>  <returns>The index of the row this item was added to.</returns>  <seealso name="CreateMenu" />  <seealso name="SetMenuColumnHeader" />  <seealso name="DestroyMenu" />  <seealso name="OnPlayerSelectedMenuRow" />  <seealso name="OnPlayerExitedMenu" /> 
		</member>
		<member name="M:AddModelMenuItem" syntax="AddModelMenuItem(menulist, modelid, text[], usingrotation, rotx, roty, rotz, zoom, vehiclecolor1, vehiclecolor2)">
			<stacksize value="79"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="format"/>
			<dependency name="g_eItemRotX"/>
			<dependency name="g_eItemRotY"/>
			<dependency name="g_eItemRotZ"/>
			<dependency name="g_eItemUseRotation"/>
			<dependency name="g_eItemVehicleColor"/>
			<dependency name="g_eItemZoom"/>
			<dependency name="g_eMenuModel"/>
			<dependency name="g_eMenuModelData"/>
			<dependency name="g_eMenuModelText"/>
			<dependency name="list_add_arr"/>
			<param name="menulist">
				<paraminfo>List </paraminfo>
			</param>
			<param name="modelid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="usingrotation">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="rotx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="roty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zoom">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vehiclecolor1">
			</param>
			<param name="vehiclecolor2">
			</param>
		</member>
		<member name="M:AddPlayerClass" syntax="AddPlayerClass(modelid, spawnX, spawnY, spawnZ, angle, weapon1, ammo1, weapon2, ammo2, weapon3, ammo3)">
			<attribute name="native"/>
			<referrer name="acc_AddPlayerClass"/>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Skins">skin</a> which the player will  spawn with
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the spawnpoint of this class
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the spawnpoint of this class
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the spawnpoint of this class
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The direction in which the player should face after spawning
			</param>
			<param name="weapon1">
				The first spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo1">
				The amount of ammunition for the primary spawn weapon
			</param>
			<param name="weapon2">
				The second spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo2">
				The amount of ammunition for the second spawn weapon
			</param>
			<param name="weapon3">
				The third spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo3">
				The amount of ammunition for the third spawn weapon
			</param>
			<library>a_samp</library>  <summary>Adds a class to class selection.  Classes are used so players may spawn with a skin of their  choice.</summary>                        <returns>  <ul>  <li>The <b>ID of the class</b> which was just added.</li>  <li><b><c>319</c></b> if the class limit (<b><c>320</c></b>) was reached.  The highest possible  class ID is <b><c>319</c></b>.</li>  </ul>  </returns>  <remarks>  The maximum class ID is <b><c>319</c></b> (starting from <b><c>0</c></b>, so a total of <b><c>320</c></b>  classes).  When this limit is reached, any more classes that are added will replace ID <b><c>319</c></b>.  </remarks>  <seealso name="AddPlayerClassEx" />  <seealso name="SetSpawnInfo" />  <seealso name="SetPlayerSkin" /> 
		</member>
		<member name="M:AddPlayerClassEx" syntax="AddPlayerClassEx(teamid, modelid, spawnX, spawnY, spawnZ, angle, weapon1, ammo1, weapon2, ammo2, weapon3, ammo3)">
			<attribute name="native"/>
			<referrer name="acc_AddPlayerClassEx"/>
			<param name="teamid">
				The team you want the player to spawn in
			</param>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Skins">skin</a> which the player will  spawn with
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the spawnpoint of this class
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the spawnpoint of this class
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the spawnpoint of this class
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The direction in which the player should face after spawning
			</param>
			<param name="weapon1">
				The first spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo1">
				The amount of ammunition for the primary spawn weapon
			</param>
			<param name="weapon2">
				The second spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo2">
				The amount of ammunition for the second spawn weapon
			</param>
			<param name="weapon3">
				The third spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo3">
				The amount of ammunition for the third spawn weapon
			</param>
			<library>a_samp</library>  <summary>This function is exactly the same as the <a href="#AddPlayerClass">AddPlayerClass</a> function,  with the addition of a team parameter.</summary>                          <returns>  <ul>  <li>The <b>ID of the class</b> which was just added.</li>  <li><b><c>319</c></b> if the class limit (<b><c>320</c></b>) was reached.  The highest possible  class ID is <b><c>319</c></b>.</li>  </ul>  </returns>  <remarks>The maximum class ID is <b><c>319</c></b> (starting from <b><c>0</c></b>, so a total of  <b><c>320</c></b> classes).  When this limit is reached, any more classes that are added will replace  ID <b><c>319</c></b>.</remarks>  <seealso name="AddPlayerClass" />  <seealso name="SetSpawnInfo" />  <seealso name="SetPlayerTeam" />  <seealso name="SetPlayerSkin" /> 
		</member>
		<member name="M:AddPlayerGame" syntax="AddPlayerGame(playerid, gameid)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_zp"/>
			<referrer name="pc_cmd_da"/>
			<referrer name="pc_cmd_rc"/>
			<referrer name="pc_cmd_btr"/>
			<referrer name="pc_cmd_sm"/>
			<referrer name="pc_cmd_gg"/>
			<referrer name="pc_cmd_wp"/>
			<referrer name="pc_cmd_sk"/>
			<referrer name="pc_cmd_wg"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckPlayerGame"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GAME_CH"/>
			<dependency name="GAME_DA"/>
			<dependency name="GAME_GG"/>
			<dependency name="GAME_RC"/>
			<dependency name="GAME_SK"/>
			<dependency name="GAME_SM"/>
			<dependency name="GAME_WG"/>
			<dependency name="GAME_WP"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameDrawShowed"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetGameLimit"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="RECORD_BTR"/>
			<dependency name="RECORD_CH"/>
			<dependency name="RECORD_DA"/>
			<dependency name="RECORD_GG"/>
			<dependency name="RECORD_RC"/>
			<dependency name="RECORD_SK"/>
			<dependency name="RECORD_SM"/>
			<dependency name="RECORD_WG"/>
			<dependency name="RECORD_WP"/>
			<dependency name="RECORD_ZP"/>
			<dependency name="SetTimerEx"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_TextDrawShowForAll"/>
			<dependency name="checkRecord"/>
			<dependency name="false"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="random"/>
			<dependency name="sendError"/>
			<dependency name="sumoArenaID"/>
			<dependency name="sumoVehicleCount"/>
			<dependency name="tdGameZapisy"/>
			<dependency name="textDrawSetString"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="gameid">
			</param>
		</member>
		<member name="M:AddRaceArena" syntax="AddRaceArena(playerid, name[], modelid, cps)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="ResetRaceCreatorData"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="cache_insert_id"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pRaceCreatorCP"/>
			<dependency name="pRaceCreatorCP"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="modelid">
			</param>
			<param name="cps">
			</param>
		</member>
		<member name="M:AddRejectedHit" syntax="AddRejectedHit(playerid, damagedid, reason, weapon, i1, i2, i3)">
			<stacksize value="10"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ProcessDamage"/>
			<dependency name="GetPlayerName"/>
			<dependency name="OnRejectedHit"/>
			<dependency name="e_Hour"/>
			<dependency name="e_Info1"/>
			<dependency name="e_Info2"/>
			<dependency name="e_Info3"/>
			<dependency name="e_Minute"/>
			<dependency name="e_Name"/>
			<dependency name="e_Reason"/>
			<dependency name="e_Second"/>
			<dependency name="e_Time"/>
			<dependency name="e_Weapon"/>
			<dependency name="gettime"/>
			<dependency name="s_RejectedHits"/>
			<dependency name="s_RejectedHits"/>
			<dependency name="s_RejectedHitsIdx"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="reason">
			</param>
			<param name="weapon">
			</param>
			<param name="i1">
			</param>
			<param name="i2">
			</param>
			<param name="i3">
			</param>
		</member>
		<member name="M:AddServerRule" syntax="AddServerRule(name[], value[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_AddServerRule"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AddStaticVehicle" syntax="AddStaticVehicle(modelid, spawnX, spawnY, spawnZ, angle, colour1, colour2)">
			<attribute name="native"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">Model ID</a> for the  vehicle
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the spawnpoint of this vehicle
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the spawnpoint of this vehicle
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the spawnpoint of this vehicle
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				Direction of vehicle - angle
			</param>
			<param name="colour1">
				The primary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>. <b><c>-1</c></b>  for random (random colour chosen by client)
			</param>
			<param name="colour2">
				The secondary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>.  <b><c>-1</c></b> for random (random colour chosen by client)
			</param>
			<library>a_samp</library>  <summary>Adds a 'static' vehicle (models are pre-loaded for players) to the gamemode.</summary>                <returns>  <ul>  <li>The vehicle ID of the vehicle created (between <b><c>1</c></b> and <b><c>MAX_VEHICLES</c></b>).</li>  <li><b><c>INVALID_VEHICLE_ID</c></b> (<b><c>65535</c></b>) if vehicle was not created (vehicle  limit reached or invalid vehicle model ID passed).</li>  </ul>  </returns>  <remarks>Can only be used when the server first starts (under <a href="#OnGameModeInit">OnGameModeInit</a>).</remarks>  <seealso name="AddStaticVehicleEx" />  <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" /> 
		</member>
		<member name="M:AddStaticVehicleEx" syntax="AddStaticVehicleEx(modelid, spawnX, spawnY, spawnZ, angle, colour1, colour2, respawnDelay, addSiren)">
			<attribute name="native"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">Model ID</a> for the  vehicle
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the spawnpoint of this vehicle
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the spawnpoint of this vehicle
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the spawnpoint of this vehicle
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				Direction of vehicle - angle
			</param>
			<param name="colour1">
				The primary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>. <b><c>-1</c></b>  for random (random colour chosen by client)
			</param>
			<param name="colour2">
				The secondary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>.  <b><c>-1</c></b> for random (random colour chosen by client)
			</param>
			<param name="respawnDelay">
				The delay until the car is respawned without a driver, in seconds
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
				<b>Added in 0.3.7; will not work in earlier versions.</b> Enables the vehicle  to have a siren, providing the vehicle has a horn (optional=<b><c>0</c></b>)
			</param>
			<library>a_samp</library>  <summary>Adds a 'static' vehicle (models are pre-loaded for players)to the gamemode.  Differs from  <a href="#AddStaticVehicle">AddStaticVehicle</a> in only one way: allows a respawn time to be set  for when the vehicle is left unoccupied by the driver.</summary>                    <returns>  <ul>  <li>The vehicle ID of the vehicle created (between <b><c>1</c></b> and <b><c>MAX_VEHICLES</c></b>).</li>  <li><b><c>INVALID_VEHICLE_ID</c></b> (<b><c>65535</c></b>) if vehicle was not created (vehicle  limit reached or invalid vehicle model ID passed).</li>  </ul>  </returns>  <remarks>Can only be used when the server first starts (under <a href="#OnGameModeInit">OnGameModeInit</a>).</remarks>  <seealso name="AddStaticVehicle" />  <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" /> 
		</member>
		<member name="M:AddTeleport" syntax="AddTeleport(playerid, name[], cmd[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Teleports"/>
			<dependency name="Iterator@Teleports"/>
			<dependency name="ResetTeleportData"/>
			<dependency name="cache_insert_id"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="pTeleportCreatorCMD"/>
			<dependency name="pTeleportCreatorCMD"/>
			<dependency name="pTeleportCreatorInterior"/>
			<dependency name="pTeleportCreatorName"/>
			<dependency name="pTeleportCreatorName"/>
			<dependency name="pTeleportCreatorPos"/>
			<dependency name="pTeleportCreatorPos"/>
			<dependency name="pTeleportCreatorSpawn"/>
			<dependency name="pTeleportCreatorType"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="printf"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_a"/>
			<dependency name="teleport_category"/>
			<dependency name="teleport_cmd"/>
			<dependency name="teleport_interior"/>
			<dependency name="teleport_name"/>
			<dependency name="teleport_spawn"/>
			<dependency name="teleport_x"/>
			<dependency name="teleport_y"/>
			<dependency name="teleport_z"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AddVehicleComponent" syntax="AddVehicleComponent(vehicleid, componentid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="addVehicleComponent"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to add the component to.  Not to be confused with <a  href="http://wiki.sa-mp.com/wiki/Confuse_modelid">modelid</a>
			</param>
			<param name="componentid">
				The <a href="http://wiki.sa-mp.com/wiki/Car_Component_ID">ID of the component</a>  to add to the vehicle
			</param>
			<library>a_vehicles</library>  <summary>Adds a 'component' (often referred to as a 'mod' (modification)) to a vehicle.  Valid components  can be found <a href="http://wiki.sa-mp.com/wiki/Car_Component_ID">here</a>.</summary>      <returns>  <ul>  <li><b><c>0</c></b> - The component was not added because the vehicle does not exist.</li>  <li><b><c>1</c></b> - The component was successfully added to the vehicle.</li>  </ul>  </returns>  <remarks>Using an invalid <a href="http://wiki.sa-mp.com/wiki/Car_Component_ID">component ID</a>  crashes the player's game.  There are no internal checks for this.</remarks>  <seealso name="RemoveVehicleComponent" />  <seealso name="GetVehicleComponentInSlot" />  <seealso name="GetVehicleComponentType" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" /> 
		</member>
		<member name="M:AddVehicleToGielda" syntax="AddVehicleToGielda(playerid, privcarid)">
			<stacksize value="267"/>
			<referrer name="CreatePrivCar"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="SwitchVehicleEngine"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="acc_SetVehiclePos"/>
			<dependency name="catstr"/>
			<dependency name="false"/>
			<dependency name="gieldaSellLabel"/>
			<dependency name="gieldaSellOwned"/>
			<dependency name="gieldaSellPos"/>
			<dependency name="gieldaSellPos"/>
			<dependency name="pVeh"/>
			<dependency name="pVehSellCost"/>
			<dependency name="pVehSellPoint"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:AddressofResolve" syntax="AddressofResolve()">
			<stacksize value="761"/>
			<referrer name="Indirect_Init"/>
			<referrer name="Yield_OnCodeInit"/>
			<dependency name="AddressofResolveFoundEnd"/>
			<dependency name="AddressofResolveFoundStart"/>
			<dependency name="CodeScanAddMatcher"/>
			<dependency name="CodeScanInit"/>
			<dependency name="CodeScanMatcher"/>
			<dependency name="CodeScanMatcherInit_"/>
			<dependency name="CodeScanMatcherPattern_"/>
			<dependency name="CodeScanRunFast"/>
			<dependency name="CodeScanner"/>
			<dependency name="GetAmxJITBaseAddress"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_JUMP"/>
			<dependency name="OP_JZER"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="false"/>
			<dependency name="gCodeScanCallback_match"/>
			<dependency name="ref"/>
			<dependency name="true"/>
			<library>amx_assembly addressof_jit</library>
		</member>
		<member name="M:AddressofResolveFoundEnd" syntax="AddressofResolveFoundEnd(scanner[])">
			<stacksize value="27"/>
			<referrer name="AddressofResolve"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitConstPri"/>
			<dependency name="CodeScanGetMatchAsm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchLength"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly addressof_jit</library>
		</member>
		<member name="M:AddressofResolveFoundStart" syntax="AddressofResolveFoundStart(scanner[])">
			<stacksize value="44"/>
			<referrer name="AddressofResolve"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitJump"/>
			<dependency name="CodeScanGetMatchAsm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly addressof_jit</library>
		</member>
		<member name="M:AllowEventCMD" syntax="AllowEventCMD(playerid, cmd[])">
			<stacksize value="6"/>
			<referrer name="OnPlayerCommandReceived"/>
			<dependency name="EventLeader"/>
			<dependency name="EventStarted"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Android_OnAndroidTimer" syntax="Android_OnAndroidTimer(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Utils_ChaosMod"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Android_OnPlayerConnect" syntax="Android_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IPToInt"/>
			<dependency name="ScriptInit_OnPlayerConnect"/>
			<dependency name="YSI_gPlayerIP"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Android_OnPlayerDisconnect" syntax="Android_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="ScriptInit_OnPlayerDisconnect"/>
			<dependency name="YSI_gPlayerIP"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Android_OnYSIInit" syntax="Android_OnYSIInit()">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsActorStreamedIn"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="IsValidActor"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Init_Internal"/>
			<dependency name="Iter_OnYSIInit"/>
			<dependency name="Iter_Single@Actor"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@StreamedActor"/>
			<dependency name="Iter_Single@StreamedBot"/>
			<dependency name="Iter_Single@StreamedCharacter"/>
			<dependency name="Iter_Single@StreamedPlayer"/>
			<dependency name="Iter_Single@StreamedVehicle"/>
			<dependency name="Iter_Single@Vehicle"/>
			<dependency name="Iterator@Actor"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Iterator@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<dependency name="Iterator@Vehicle"/>
			<remarks>  Sets up all existing iterators.  Does nothing for "XXLocal" ones, since they  are by definition empty when a script starts.  </remarks> 
		</member>
		<member name="M:AngleBetweenPoints" syntax="AngleBetweenPoints(x1, y1, x2, y2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="MakePlayerFacePlayer"/>
			<referrer name="IsPlayerBehindPlayer"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="atan2"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AngleInRangeOfAngle" syntax="AngleInRangeOfAngle(x, y, range)">
			<stacksize value="1"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetAmmoInSlot" syntax="AntiCheatGetAmmoInSlot(playerid, slot)">
			<stacksize value="5"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetAmmoInSlot"/>
			<param name="playerid">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:AntiCheatGetAnimationIndex" syntax="AntiCheatGetAnimationIndex(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetAnimationIndex"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetArmour" syntax="AntiCheatGetArmour(playerid, &amp;armour)">
			<stacksize value="3"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ACInfo"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="acArmour"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetDialog" syntax="AntiCheatGetDialog(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetEnterVehicle" syntax="AntiCheatGetEnterVehicle(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetEnterVehicle"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetEnterVehicleSeat" syntax="AntiCheatGetEnterVehicleSeat(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetEnterVehicleSeat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetHealth" syntax="AntiCheatGetHealth(playerid, &amp;health)">
			<stacksize value="3"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ACInfo"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="acHealth"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetInterior" syntax="AntiCheatGetInterior(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetInterior"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetLastEnteredVehTime" syntax="AntiCheatGetLastEnteredVehTime(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetLastEnteredVehTi"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetLastPickup" syntax="AntiCheatGetLastPickup(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetLastPickup"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetLastReloadTime" syntax="AntiCheatGetLastReloadTime(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetLastReloadTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetLastShotTime" syntax="AntiCheatGetLastShotTime(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetLastShotTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetLastShotWeapon" syntax="AntiCheatGetLastShotWeapon(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetLastShotWeapon"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetLastSpawnTime" syntax="AntiCheatGetLastSpawnTime(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetLastSpawnTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetLastSpecialAction" syntax="AntiCheatGetLastSpecialAction(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetLastSpecialActio"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetLastUpdateTime" syntax="AntiCheatGetLastUpdateTime(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetLastUpdateTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetPickupPos" syntax="AntiCheatGetPickupPos(pickupid, &amp;x, &amp;y, &amp;z)">
			<stacksize value="1"/>
			<dependency name="ACPickInfo"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acType"/>
			<param name="pickupid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetPos" syntax="AntiCheatGetPos(playerid, &amp;x, &amp;y, &amp;z)">
			<stacksize value="3"/>
			<dependency name="ACInfo"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetSpawnPos" syntax="AntiCheatGetSpawnPos(playerid, &amp;x, &amp;y, &amp;z)">
			<stacksize value="3"/>
			<dependency name="ACInfo"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetSpawnWeapon" syntax="AntiCheatGetSpawnWeapon(playerid, &amp;weapon1, &amp;weapon1_ammo, &amp;weapon2, &amp;weapon2_ammo, &amp;weapon3, &amp;weapon3_ammo)">
			<stacksize value="3"/>
			<dependency name="ACInfo"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="acSpawnAmmo1"/>
			<dependency name="acSpawnAmmo2"/>
			<dependency name="acSpawnAmmo3"/>
			<dependency name="acSpawnWeapon1"/>
			<dependency name="acSpawnWeapon2"/>
			<dependency name="acSpawnWeapon3"/>
			<param name="playerid">
			</param>
			<param name="weapon1">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weapon1_ammo">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weapon2">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weapon2_ammo">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weapon3">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weapon3_ammo">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetSpecialAction" syntax="AntiCheatGetSpecialAction(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetSpecialAction"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetSpeed" syntax="AntiCheatGetSpeed(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetSpeed"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleDriver" syntax="AntiCheatGetVehicleDriver(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="ac_AntiCheatGetVehicleDriver"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleHealth" syntax="AntiCheatGetVehicleHealth(vehicleid, &amp;health)">
			<stacksize value="3"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="acHealth"/>
			<param name="vehicleid">
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleID" syntax="AntiCheatGetVehicleID(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetVehicleID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleInterior" syntax="AntiCheatGetVehicleInterior(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="ac_AntiCheatGetVehicleInterior"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:AntiCheatGetVehiclePaintjob" syntax="AntiCheatGetVehiclePaintjob(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="ac_AntiCheatGetVehiclePaintjob"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:AntiCheatGetVehiclePos" syntax="AntiCheatGetVehiclePos(vehicleid, &amp;x, &amp;y, &amp;z)">
			<stacksize value="3"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleSeat" syntax="AntiCheatGetVehicleSeat(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetVehicleSeat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleSpawnPos" syntax="AntiCheatGetVehicleSpawnPos(vehicleid, &amp;x, &amp;y, &amp;z)">
			<stacksize value="3"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleSpawnZAngle" syntax="AntiCheatGetVehicleSpawnZAngle(vehicleid, &amp;z_angle)">
			<stacksize value="3"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="acSpawnZAngle"/>
			<param name="vehicleid">
			</param>
			<param name="z_angle">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleSpeed" syntax="AntiCheatGetVehicleSpeed(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="ac_AntiCheatGetVehicleSpeed"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleVelocity" syntax="AntiCheatGetVehicleVelocity(vehicleid, &amp;x, &amp;y, &amp;z)">
			<stacksize value="3"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetVehicleZAngle" syntax="AntiCheatGetVehicleZAngle(vehicleid, &amp;z_angle)">
			<stacksize value="3"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="acZAngle"/>
			<param name="vehicleid">
			</param>
			<param name="z_angle">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetWeapon" syntax="AntiCheatGetWeapon(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetWeapon"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatGetWeaponData" syntax="AntiCheatGetWeaponData(playerid, slot, &amp;weapons, &amp;ammo)">
			<stacksize value="3"/>
			<dependency name="ACInfo"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="acAmmo"/>
			<dependency name="acWeapon"/>
			<param name="playerid">
			</param>
			<param name="slot">
			</param>
			<param name="weapons">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ammo">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AntiCheatGetWeaponInSlot" syntax="AntiCheatGetWeaponInSlot(playerid, slot)">
			<stacksize value="5"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatGetWeaponInSlot"/>
			<param name="playerid">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:AntiCheatIntEnterExitsIsEnabled" syntax="AntiCheatIntEnterExitsIsEnabled(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatIntEnterExitsIsEnab"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatIsConnected" syntax="AntiCheatIsConnected(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatIsConnected"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatIsDead" syntax="AntiCheatIsDead(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatIsDead"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatIsFrozen" syntax="AntiCheatIsFrozen(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatIsFrozen"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatIsInModShop" syntax="AntiCheatIsInModShop(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatIsInModShop"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatIsInSpectate" syntax="AntiCheatIsInSpectate(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatIsInSpectate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatIsKickedWithDesync" syntax="AntiCheatIsKickedWithDesync(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatIsKickedWithDesync"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AntiCheatIsVehicleSpawned" syntax="AntiCheatIsVehicleSpawned(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="ac_AntiCheatIsVehicleSpawned"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:AntiCheatKickWithDesync" syntax="AntiCheatKickWithDesync(playerid, code)">
			<stacksize value="5"/>
			<referrer name="ac_OnCheatDetected"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatKickWithDesync"/>
			<param name="playerid">
			</param>
			<param name="code">
			</param>
		</member>
		<member name="M:AntiCheatStuntBonusIsEnabled" syntax="AntiCheatStuntBonusIsEnabled(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_AntiCheatStuntBonusIsEnabled"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ApplyAnimation" syntax="ApplyAnimation(playerid, animationLibrary[], animationName[], delta, loop, lockX, lockY, freeze, time, forceSync)">
			<attribute name="native"/>
			<referrer name="WC_ApplyAnimation"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="PlayerDeath"/>
			<referrer name="WC_SecondKnifeAnim"/>
			<param name="playerid">
				The ID of the player to apply the animation to
			</param>
			<param name="animationLibrary">
				<paraminfo> [] </paraminfo>
				The animation library from which to apply an animation
			</param>
			<param name="animationName">
				<paraminfo> [] </paraminfo>
				The name of the animation to apply, within the specified library
			</param>
			<param name="delta">
				<paraminfo>Float </paraminfo>
				The speed to play the animation (use 4.1)
			</param>
			<param name="loop">
				<paraminfo>bool </paraminfo>
				If set to <b><c>1</c></b>, the animation will loop.  If set to <b><c>0</c></b>,  the animation will play once
			</param>
			<param name="lockX">
				<paraminfo>bool </paraminfo>
				If set to <b><c>0</c></b>, the player is returned to their old x coordinate once  the animation is complete (for animations that move the player such as walking). <b><c>1</c></b>  will not return them to their old position
			</param>
			<param name="lockY">
				<paraminfo>bool </paraminfo>
				Same as above but for the y axis.  Should be kept the same as the previous parameter
			</param>
			<param name="freeze">
				<paraminfo>bool </paraminfo>
				Setting this to <b><c>1</c></b> will freeze the player at the end of the animation.  <b><c>0</c></b> will not
			</param>
			<param name="time">
				Timer in milliseconds.  For a never-ending loop it should be <b><c>0</c></b>
			</param>
			<param name="forceSync">
				Set to <b><c>1</c></b> to make server sync the animation with all other players  in streaming radius. <b><c>2</c></b> works same as <b><c>1</c></b>, but will ONLY apply the animation  to streamed-in players, but NOT the actual player being animated (useful for npc animations and persistent  animations when players are being streamed) (optional=<b><c>0</c></b>)
			</param>
			<library>a_players</library>  <summary>Apply an animation to a player.</summary>                      <seealso name="ClearAnimations" />  <seealso name="SetPlayerSpecialAction" />  <remarks>The <paramref name="forceSync" /> optional parameter, which defaults to <b><c>0</c></b>,  in most cases is not needed since players sync animations themselves.  The <paramref name="forceSync"  /> parameter can force all players who can see <paramref name="playerid" /> to play the animation  regardless of whether the player is performing that animation.  This is useful in circumstances where  the player can't sync the animation themselves.  For example, they may be paused.</remarks>  <remarks>An invalid animation library will crash the player's game.</remarks>  <returns>This function always returns <b><c>1</c></b>, even if the player specified does not exist,  or any of the parameters are invalid (e.g.  invalid library).</returns> 
		</member>
		<member name="M:AsmClearError" syntax="AsmClearError(ctx[])">
			<stacksize value="5"/>
			<referrer name="CGen_OOM"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmSetError"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitAdd" syntax="AsmEmitAdd(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ADD"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitAddC" syntax="AsmEmitAddC(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Inline_GeneratePreamble"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ADD_C"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitAddrAlt" syntax="AsmEmitAddrAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ADDR_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitAddrPri" syntax="AsmEmitAddrPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ADDR_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitAlignAlt" syntax="AsmEmitAlignAlt(ctx[], number)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ALIGN_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="number">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitAlignPri" syntax="AsmEmitAlignPri(ctx[], number)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ALIGN_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="number">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitAnd" syntax="AsmEmitAnd(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_AND"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitBounds" syntax="AsmEmitBounds(ctx[], bound)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_BOUNDS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="bound">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitBreak" syntax="AsmEmitBreak(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_BREAK"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitCall" syntax="AsmEmitCall(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_CALL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitCallAbs" syntax="AsmEmitCallAbs(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="24"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="OP_CALL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitCallLabelStringize" syntax="AsmEmitCallLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_CALL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitCell" syntax="AsmEmitCell(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="AsmEmitJumpStringize"/>
			<referrer name="AsmEmitOpcode"/>
			<referrer name="AsmEmitOperand"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="ASM_ERROR_SPACE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<dependency name="AsmRaiseError"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitCmps" syntax="AsmEmitCmps(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_CMPS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitConstAlt" syntax="AsmEmitConstAlt(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_CONST_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitConstPri" syntax="AsmEmitConstPri(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AddressofResolveFoundEnd"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_CONST_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitDec" syntax="AsmEmitDec(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitDecAlt" syntax="AsmEmitDecAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitDecI" syntax="AsmEmitDecI(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitDecPri" syntax="AsmEmitDecPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitDecS" syntax="AsmEmitDecS(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC_S"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitEq" syntax="AsmEmitEq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_EQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitEqCAlt" syntax="AsmEmitEqCAlt(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_EQ_C_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitEqCPri" syntax="AsmEmitEqCPri(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_EQ_C_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitFill" syntax="AsmEmitFill(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_FILL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitGeq" syntax="AsmEmitGeq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_GEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitGrtr" syntax="AsmEmitGrtr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_GRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitHalt" syntax="AsmEmitHalt(ctx[], code)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_HALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="code">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitHeap" syntax="AsmEmitHeap(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_HEAP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitIdxaddr" syntax="AsmEmitIdxaddr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_IDXADDR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitIdxaddrB" syntax="AsmEmitIdxaddrB(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_IDXADDR_B"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitInc" syntax="AsmEmitInc(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitIncAlt" syntax="AsmEmitIncAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitIncI" syntax="AsmEmitIncI(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitIncPri" syntax="AsmEmitIncPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitIncS" syntax="AsmEmitIncS(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC_S"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitInstruction" syntax="AsmEmitInstruction(ctx[], opcode, ...)">
			<tagname value="AsmError"/>
			<stacksize value="8"/>
			<referrer name="AsmEmitJumpInstruction"/>
			<referrer name="AsmEmitAdd"/>
			<referrer name="AsmEmitAddC"/>
			<referrer name="AsmEmitAddrAlt"/>
			<referrer name="AsmEmitAddrPri"/>
			<referrer name="AsmEmitAlignAlt"/>
			<referrer name="AsmEmitAlignPri"/>
			<referrer name="AsmEmitAnd"/>
			<referrer name="AsmEmitBounds"/>
			<referrer name="AsmEmitBreak"/>
			<referrer name="AsmEmitCall"/>
			<referrer name="AsmEmitCallAbs"/>
			<referrer name="AsmEmitCmps"/>
			<referrer name="AsmEmitConstAlt"/>
			<referrer name="AsmEmitConstPri"/>
			<referrer name="AsmEmitDec"/>
			<referrer name="AsmEmitDecAlt"/>
			<referrer name="AsmEmitDecI"/>
			<referrer name="AsmEmitDecPri"/>
			<referrer name="AsmEmitDecS"/>
			<referrer name="AsmEmitEq"/>
			<referrer name="AsmEmitEqCAlt"/>
			<referrer name="AsmEmitEqCPri"/>
			<referrer name="AsmEmitFill"/>
			<referrer name="AsmEmitGeq"/>
			<referrer name="AsmEmitGrtr"/>
			<referrer name="AsmEmitHalt"/>
			<referrer name="AsmEmitHeap"/>
			<referrer name="AsmEmitIdxaddr"/>
			<referrer name="AsmEmitIdxaddrB"/>
			<referrer name="AsmEmitInc"/>
			<referrer name="AsmEmitIncAlt"/>
			<referrer name="AsmEmitIncI"/>
			<referrer name="AsmEmitIncPri"/>
			<referrer name="AsmEmitIncS"/>
			<referrer name="AsmEmitInvert"/>
			<referrer name="AsmEmitJeq"/>
			<referrer name="AsmEmitJgeq"/>
			<referrer name="AsmEmitJgrtr"/>
			<referrer name="AsmEmitJleq"/>
			<referrer name="AsmEmitJless"/>
			<referrer name="AsmEmitJneq"/>
			<referrer name="AsmEmitJnz"/>
			<referrer name="AsmEmitJsgeq"/>
			<referrer name="AsmEmitJsgrtr"/>
			<referrer name="AsmEmitJsleq"/>
			<referrer name="AsmEmitJsless"/>
			<referrer name="AsmEmitJump"/>
			<referrer name="AsmEmitJzer"/>
			<referrer name="AsmEmitLctrl"/>
			<referrer name="AsmEmitLeq"/>
			<referrer name="AsmEmitLess"/>
			<referrer name="AsmEmitLidx"/>
			<referrer name="AsmEmitLidxB"/>
			<referrer name="AsmEmitLoadAlt"/>
			<referrer name="AsmEmitLoadPri"/>
			<referrer name="AsmEmitLoad"/>
			<referrer name="AsmEmitLoadI"/>
			<referrer name="AsmEmitLoadSAlt"/>
			<referrer name="AsmEmitLoadSPri"/>
			<referrer name="AsmEmitLodbI"/>
			<referrer name="AsmEmitLrefAlt"/>
			<referrer name="AsmEmitLrefPri"/>
			<referrer name="AsmEmitLrefSAlt"/>
			<referrer name="AsmEmitLrefSPri"/>
			<referrer name="AsmEmitMoveAlt"/>
			<referrer name="AsmEmitMovePri"/>
			<referrer name="AsmEmitMovs"/>
			<referrer name="AsmEmitNeg"/>
			<referrer name="AsmEmitNeq"/>
			<referrer name="AsmEmitNop"/>
			<referrer name="AsmEmitNot"/>
			<referrer name="AsmEmitOr"/>
			<referrer name="AsmEmitPopAlt"/>
			<referrer name="AsmEmitPopPri"/>
			<referrer name="AsmEmitProc"/>
			<referrer name="AsmEmitPushAdr"/>
			<referrer name="AsmEmitPushAlt"/>
			<referrer name="AsmEmitPushC"/>
			<referrer name="AsmEmitPushPri"/>
			<referrer name="AsmEmitPush"/>
			<referrer name="AsmEmitPushS"/>
			<referrer name="AsmEmitRet"/>
			<referrer name="AsmEmitRetn"/>
			<referrer name="AsmEmitSctrl"/>
			<referrer name="AsmEmitSdiv"/>
			<referrer name="AsmEmitSdivAlt"/>
			<referrer name="AsmEmitSgeq"/>
			<referrer name="AsmEmitSgrtr"/>
			<referrer name="AsmEmitShl"/>
			<referrer name="AsmEmitShlCAlt"/>
			<referrer name="AsmEmitShlCPri"/>
			<referrer name="AsmEmitShrCAlt"/>
			<referrer name="AsmEmitShrCPri"/>
			<referrer name="AsmEmitShr"/>
			<referrer name="AsmEmitSignAlt"/>
			<referrer name="AsmEmitSignPri"/>
			<referrer name="AsmEmitSleq"/>
			<referrer name="AsmEmitSless"/>
			<referrer name="AsmEmitSmul"/>
			<referrer name="AsmEmitSmulC"/>
			<referrer name="AsmEmitSshr"/>
			<referrer name="AsmEmitSrefAlt"/>
			<referrer name="AsmEmitSrefPri"/>
			<referrer name="AsmEmitSrefSAlt"/>
			<referrer name="AsmEmitSrefSPri"/>
			<referrer name="AsmEmitStack"/>
			<referrer name="AsmEmitStorAlt"/>
			<referrer name="AsmEmitStorPri"/>
			<referrer name="AsmEmitStorI"/>
			<referrer name="AsmEmitStorSAlt"/>
			<referrer name="AsmEmitStorSPri"/>
			<referrer name="AsmEmitStrbI"/>
			<referrer name="AsmEmitSub"/>
			<referrer name="AsmEmitSubAlt"/>
			<referrer name="AsmEmitSwapAlt"/>
			<referrer name="AsmEmitSwapPri"/>
			<referrer name="AsmEmitSysreqC"/>
			<referrer name="AsmEmitSysreqD"/>
			<referrer name="AsmEmitSysreqPri"/>
			<referrer name="AsmEmitUdiv"/>
			<referrer name="AsmEmitUdivAlt"/>
			<referrer name="AsmEmitUmul"/>
			<referrer name="AsmEmitXchg"/>
			<referrer name="AsmEmitXor"/>
			<referrer name="AsmEmitZero"/>
			<referrer name="AsmEmitZeroAlt"/>
			<referrer name="AsmEmitZeroPri"/>
			<referrer name="AsmEmitZeroS"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmEmitOpcode"/>
			<dependency name="AsmEmitOperand"/>
			<dependency name="gPreviousWriteOffset"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<param name="...">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitInvert" syntax="AsmEmitInvert(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INVERT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJeq" syntax="AsmEmitJeq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJeqLabelStringize" syntax="AsmEmitJeqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJeqRel" syntax="AsmEmitJeqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJgeq" syntax="AsmEmitJgeq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJgeqLabelStringize" syntax="AsmEmitJgeqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJgeqRel" syntax="AsmEmitJgeqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJgrtr" syntax="AsmEmitJgrtr(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJgrtrLabelStringize" syntax="AsmEmitJgrtrLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJgrtrRel" syntax="AsmEmitJgrtrRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJleq" syntax="AsmEmitJleq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJleqLabelStringize" syntax="AsmEmitJleqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJleqRel" syntax="AsmEmitJleqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJless" syntax="AsmEmitJless(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJlessLabelStringize" syntax="AsmEmitJlessLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJlessRel" syntax="AsmEmitJlessRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJneq" syntax="AsmEmitJneq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JNEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJneqLabelStringize" syntax="AsmEmitJneqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JNEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJneqRel" syntax="AsmEmitJneqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JNEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJnz" syntax="AsmEmitJnz(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JNZ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJnzLabelStringize" syntax="AsmEmitJnzLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JNZ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJnzRel" syntax="AsmEmitJnzRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JNZ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJrel" syntax="AsmEmitJrel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JREL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJrelLabelStringize" syntax="AsmEmitJrelLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JREL"/>
			<dependency name="true"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsgeq" syntax="AsmEmitJsgeq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JSGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsgeqLabelStringize" syntax="AsmEmitJsgeqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JSGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsgeqRel" syntax="AsmEmitJsgeqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JSGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsgrtr" syntax="AsmEmitJsgrtr(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JSGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsgrtrLabelStringize" syntax="AsmEmitJsgrtrLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JSGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsgrtrRel" syntax="AsmEmitJsgrtrRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JSGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsleq" syntax="AsmEmitJsleq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JSLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsleqLabelStringize" syntax="AsmEmitJsleqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JSLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsleqRel" syntax="AsmEmitJsleqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JSLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJsless" syntax="AsmEmitJsless(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JSLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJslessLabelStringize" syntax="AsmEmitJslessLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JSLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJslessRel" syntax="AsmEmitJslessRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JSLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJump" syntax="AsmEmitJump(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AddressofResolveFoundStart"/>
			<referrer name="Inline_GeneratePostamble"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JUMP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJumpInstruction" syntax="AsmEmitJumpInstruction(ctx[], opcode, offset)">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="AsmEmitJeqRel"/>
			<referrer name="AsmEmitJgeqRel"/>
			<referrer name="AsmEmitJgrtrRel"/>
			<referrer name="AsmEmitJleqRel"/>
			<referrer name="AsmEmitJlessRel"/>
			<referrer name="AsmEmitJneqRel"/>
			<referrer name="AsmEmitJnzRel"/>
			<referrer name="AsmEmitJsgeqRel"/>
			<referrer name="AsmEmitJsgrtrRel"/>
			<referrer name="AsmEmitJsleqRel"/>
			<referrer name="AsmEmitJslessRel"/>
			<referrer name="AsmEmitJumpRel"/>
			<referrer name="AsmEmitJzerRel"/>
			<referrer name="AsmEmitJrel"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="AsmGetJumpAddressFromOffset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJumpLabelInstruction" syntax="AsmEmitJumpLabelInstruction(ctx[], opcode, label[], relative)">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="AsmEmitCallLabelStringize"/>
			<referrer name="AsmEmitJeqLabelStringize"/>
			<referrer name="AsmEmitJgeqLabelStringize"/>
			<referrer name="AsmEmitJgrtrLabelStringize"/>
			<referrer name="AsmEmitJleqLabelStringize"/>
			<referrer name="AsmEmitJlessLabelStringize"/>
			<referrer name="AsmEmitJneqLabelStringize"/>
			<referrer name="AsmEmitJnzLabelStringize"/>
			<referrer name="AsmEmitJsgeqLabelStringize"/>
			<referrer name="AsmEmitJsgrtrLabelStringize"/>
			<referrer name="AsmEmitJsleqLabelStringize"/>
			<referrer name="AsmEmitJslessLabelStringize"/>
			<referrer name="AsmEmitJumpLabelStringize"/>
			<referrer name="AsmEmitJzerLabelStringize"/>
			<referrer name="AsmEmitJrelLabelStringize"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmEmitJumpStringize"/>
			<dependency name="AsmEmitOpcode"/>
			<dependency name="gPreviousWriteOffset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="relative">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJumpLabelStringize" syntax="AsmEmitJumpLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JUMP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJumpRel" syntax="AsmEmitJumpRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JUMP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJumpStringize" syntax="AsmEmitJumpStringize(ctx[], label[], relative)">
			<tagname value="AsmError"/>
			<stacksize value="10"/>
			<referrer name="AsmEmitJumpLabelInstruction"/>
			<dependency name="ASM_ERROR_LABEL_OVERFLOW"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_label_names"/>
			<dependency name="AsmContext_labels"/>
			<dependency name="AsmEmitCell"/>
			<dependency name="AsmFindLabelIndex"/>
			<dependency name="AsmHashLabel"/>
			<dependency name="AsmRaiseError"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="relative">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJzer" syntax="AsmEmitJzer(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JZER"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJzerLabelStringize" syntax="AsmEmitJzerLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JZER"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitJzerRel" syntax="AsmEmitJzerRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JZER"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLabelStringize" syntax="AsmEmitLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="9"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Inline_GeneratePreamble"/>
			<dependency name="ASM_ERROR_LABEL_DUPLICATE"/>
			<dependency name="ASM_ERROR_LABEL_OVERFLOW"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_label_names"/>
			<dependency name="AsmContext_labels"/>
			<dependency name="AsmFindLabelIndex"/>
			<dependency name="AsmGetJumpAddressFromOffset"/>
			<dependency name="AsmHashLabel"/>
			<dependency name="AsmRaiseError"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLctrl" syntax="AsmEmitLctrl(ctx[], index)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Inline_GeneratePreamble"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LCTRL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="index">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLeq" syntax="AsmEmitLeq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLess" syntax="AsmEmitLess(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLidx" syntax="AsmEmitLidx(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LIDX"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLidxB" syntax="AsmEmitLidxB(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LIDX_B"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLoad" syntax="AsmEmitLoad(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLoadAlt" syntax="AsmEmitLoadAlt(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLoadI" syntax="AsmEmitLoadI(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLoadPri" syntax="AsmEmitLoadPri(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLoadSAlt" syntax="AsmEmitLoadSAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_S_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLoadSPri" syntax="AsmEmitLoadSPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Inline_FoundDestructor"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_S_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLodbI" syntax="AsmEmitLodbI(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LODB_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLrefAlt" syntax="AsmEmitLrefAlt(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LREF_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLrefPri" syntax="AsmEmitLrefPri(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LREF_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLrefSAlt" syntax="AsmEmitLrefSAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LREF_S_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitLrefSPri" syntax="AsmEmitLrefSPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LREF_S_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitMoveAlt" syntax="AsmEmitMoveAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_MOVE_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitMovePri" syntax="AsmEmitMovePri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_MOVE_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitMovs" syntax="AsmEmitMovs(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_MOVS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitNeg" syntax="AsmEmitNeg(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_NEG"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitNeq" syntax="AsmEmitNeq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_NEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitNop" syntax="AsmEmitNop(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Inline_FoundUsingInline"/>
			<referrer name="Inline_FoundDestructor"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_NOP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitNot" syntax="AsmEmitNot(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_NOT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitOpcode" syntax="AsmEmitOpcode(ctx[], opcode)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="AsmEmitInstruction"/>
			<referrer name="AsmEmitJumpLabelInstruction"/>
			<dependency name="ASM_ERROR_OPCODE"/>
			<dependency name="AsmEmitCell"/>
			<dependency name="AsmRaiseError"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="RelocateOpcode"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitOperand" syntax="AsmEmitOperand(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="AsmEmitInstruction"/>
			<dependency name="AsmEmitCell"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitOr" syntax="AsmEmitOr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_OR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPadding" syntax="AsmEmitPadding(ctx[], op)">
			<stacksize value="4"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Inline_DoCodeGen"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<dependency name="IsOpcodeValid"/>
			<dependency name="OP_NOP"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="gAMXOpcodeParameterCounts"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="op">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPopAlt" syntax="AsmEmitPopAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Inline_GenerateLocalsStore"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_POP_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPopArgs" syntax="AsmEmitPopArgs(ctx[], n)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitStack"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="n">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPopPri" syntax="AsmEmitPopPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="YVA2_CodeGenDeepCleanup"/>
			<referrer name="Inline_Found@return"/>
			<referrer name="Inline_GeneratePreamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_POP_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitProc" syntax="AsmEmitProc(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PROC"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPush" syntax="AsmEmitPush(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPushAdr" syntax="AsmEmitPushAdr(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_ADR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPushAlt" syntax="AsmEmitPushAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPushArg" syntax="AsmEmitPushArg(ctx[], n)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitPushS"/>
			<dependency name="AsmGetArgOffset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="n">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPushC" syntax="AsmEmitPushC(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitPushNumArgs"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_C"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPushNumArgs" syntax="AsmEmitPushNumArgs(ctx[], n)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitPushC"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="n">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPushPri" syntax="AsmEmitPushPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="Inline_FoundUsingInline"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitPushS" syntax="AsmEmitPushS(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitPushArg"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_S"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitRet" syntax="AsmEmitRet(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_RET"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitRetn" syntax="AsmEmitRetn(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Inline_Found@return"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_RETN"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSctrl" syntax="AsmEmitSctrl(ctx[], index)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Inline_GeneratePreamble"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SCTRL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="index">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSdiv" syntax="AsmEmitSdiv(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SDIV"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSdivAlt" syntax="AsmEmitSdivAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SDIV_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSgeq" syntax="AsmEmitSgeq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSgrtr" syntax="AsmEmitSgrtr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitShl" syntax="AsmEmitShl(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitShlCAlt" syntax="AsmEmitShlCAlt(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHL_C_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitShlCPri" syntax="AsmEmitShlCPri(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHL_C_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitShr" syntax="AsmEmitShr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitShrCAlt" syntax="AsmEmitShrCAlt(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHR_C_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitShrCPri" syntax="AsmEmitShrCPri(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHR_C_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSignAlt" syntax="AsmEmitSignAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SIGN_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSignPri" syntax="AsmEmitSignPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SIGN_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSleq" syntax="AsmEmitSleq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSless" syntax="AsmEmitSless(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSmul" syntax="AsmEmitSmul(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SMUL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSmulC" syntax="AsmEmitSmulC(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SMUL_C"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSrefAlt" syntax="AsmEmitSrefAlt(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SREF_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSrefPri" syntax="AsmEmitSrefPri(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SREF_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSrefSAlt" syntax="AsmEmitSrefSAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Inline_GenerateLocalsStore"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SREF_S_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSrefSPri" syntax="AsmEmitSrefSPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SREF_S_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSshr" syntax="AsmEmitSshr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SSHR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitStack" syntax="AsmEmitStack(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitPopArgs"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_CodeGenDeepCleanup"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="Inline_Found@return"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<referrer name="Inline_GenerateLocalsStore"/>
			<referrer name="Inline_GeneratePreamble"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STACK"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitStorAlt" syntax="AsmEmitStorAlt(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitStorI" syntax="AsmEmitStorI(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitStorPri" syntax="AsmEmitStorPri(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Inline_FoundDestructor"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitStorSAlt" syntax="AsmEmitStorSAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Inline_GeneratePreamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_S_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitStorSPri" syntax="AsmEmitStorSPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Inline_GeneratePreamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_S_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitStrbI" syntax="AsmEmitStrbI(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STRB_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSub" syntax="AsmEmitSub(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SUB"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSubAlt" syntax="AsmEmitSubAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SUB_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSwapAlt" syntax="AsmEmitSwapAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SWAP_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSwapPri" syntax="AsmEmitSwapPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SWAP_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSysreq" syntax="AsmEmitSysreq(ctx[], name[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitSysreqC"/>
			<dependency name="GetNativeIndexFromName"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSysreqC" syntax="AsmEmitSysreqC(ctx[], index)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitSysreq"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SYSREQ_C"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="index">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSysreqD" syntax="AsmEmitSysreqD(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="ASM_ERROR_OPCODE"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SYSREQ_D"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitSysreqPri" syntax="AsmEmitSysreqPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SYSREQ_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitUdiv" syntax="AsmEmitUdiv(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_UDIV"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitUdivAlt" syntax="AsmEmitUdivAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_UDIV_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitUmul" syntax="AsmEmitUmul(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_UMUL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitXchg" syntax="AsmEmitXchg(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Inline_GeneratePreamble"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_XCHG"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitXor" syntax="AsmEmitXor(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_XOR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitZero" syntax="AsmEmitZero(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ZERO"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitZeroAlt" syntax="AsmEmitZeroAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ZERO_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitZeroPri" syntax="AsmEmitZeroPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ZERO_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmEmitZeroS" syntax="AsmEmitZeroS(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ZERO_S"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmFindLabelIndex" syntax="AsmFindLabelIndex(ctx[], hash)">
			<stacksize value="2"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitJumpStringize"/>
			<dependency name="AsmContext_label_names"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="hash">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmGetArgOffset" syntax="AsmGetArgOffset(n)">
			<stacksize value="1"/>
			<referrer name="AsmEmitPushArg"/>
			<dependency name="ASM_ARGUMENTS_OFFSET"/>
			<param name="n">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmGetBufferSize" syntax="AsmGetBufferSize(ctx[])">
			<stacksize value="1"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmGetCode" syntax="AsmGetCode(ctx[])">
			<stacksize value="21"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="GetAmxHeader"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmGetCodeSize" syntax="AsmGetCodeSize(ctx[])">
			<stacksize value="1"/>
			<dependency name="AsmContext_buffer_offset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmGetError" syntax="AsmGetError(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="1"/>
			<referrer name="CGen_OOM"/>
			<referrer name="Inline_OnAsmError"/>
			<dependency name="AsmContext_error"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmGetErrorHandler" syntax="AsmGetErrorHandler(ctx[])">
			<stacksize value="1"/>
			<dependency name="AsmContext_error_handler"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmGetJumpAddressFromOffset" syntax="AsmGetJumpAddressFromOffset(ctx[], offset)">
			<stacksize value="22"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitJumpInstruction"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmGetPreviousWriteOffset" syntax="AsmGetPreviousWriteOffset()">
			<stacksize value="1"/>
			<dependency name="gPreviousWriteOffset"/>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmHashLabel" syntax="AsmHashLabel(label[])">
			<stacksize value="4"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitJumpStringize"/>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmInit" syntax="AsmInit(ctx[], buffer[], size)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="ref"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmInitPtr" syntax="AsmInitPtr(ctx[], buffer, size)">
			<tagname value="AsmError"/>
			<stacksize value="2"/>
			<referrer name="AsmInit"/>
			<referrer name="CodeScanGetFunctionAsm"/>
			<referrer name="CodeScanGetMatchAsm"/>
			<referrer name="CGen_UseCodeSpace"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="Inline_DoCodeGen"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<dependency name="AsmContext_error_handler"/>
			<dependency name="AsmContext_label_names"/>
			<dependency name="AsmContext_labels"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="buffer">
			</param>
			<param name="size">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmRaiseError" syntax="AsmRaiseError(ctx[], error)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitCell"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitJumpStringize"/>
			<referrer name="AsmEmitOpcode"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_error_handler"/>
			<dependency name="AsmSetError"/>
			<dependency name="CallFunction"/>
			<dependency name="ref"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error">
				<paraminfo>AsmError </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmSetError" syntax="AsmSetError(ctx[], error)">
			<stacksize value="1"/>
			<referrer name="AsmRaiseError"/>
			<referrer name="AsmClearError"/>
			<dependency name="AsmContext_error"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error">
				<paraminfo>AsmError </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmSetErrorHandler" syntax="AsmSetErrorHandler(ctx[], error_handler)">
			<tagname value="AsmError"/>
			<stacksize value="1"/>
			<referrer name="Inline_DoCodeGen"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_error_handler"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error_handler">
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AsmSetErrorHandlerName" syntax="AsmSetErrorHandlerName(ctx[], error_handler[])">
			<tagname value="AsmError"/>
			<stacksize value="4"/>
			<referrer name="CGen_UseCodeSpace"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_error_handler"/>
			<dependency name="GetPublicAddressFromName"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error_handler">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly asm</library>
		</member>
		<member name="M:AttachDynamicObjectToVehicle" syntax="AttachDynamicObjectToVehicle(objectid, vehicleid, offsetx, offsety, offsetz, rx, ry, rz)">
			<attribute name="native"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="LoadPrivCarAttachments"/>
			<param name="objectid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="offsetx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="offsety">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="offsetz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AverageHitRate" syntax="AverageHitRate(playerid, hits, &amp;multiple_weapons)">
			<stacksize value="8"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<dependency name="false"/>
			<dependency name="s_HitsIssued"/>
			<dependency name="s_LastHitIdx"/>
			<dependency name="s_LastHitTicks"/>
			<dependency name="s_LastHitWeapons"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="hits">
			</param>
			<param name="multiple_weapons">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AverageShootRate" syntax="AverageShootRate(playerid, shots, &amp;multiple_weapons)">
			<stacksize value="8"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<dependency name="false"/>
			<dependency name="s_LastShotIdx"/>
			<dependency name="s_LastShotTicks"/>
			<dependency name="s_LastShotWeapons"/>
			<dependency name="s_ShotsFired"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="shots">
			</param>
			<param name="multiple_weapons">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:BCrypt_CheckInline" syntax="BCrypt_CheckInline(password[], hash[], cb)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="hash">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@i </paraminfo>
			</param>
		</member>
		<member name="M:BCrypt_HashInline" syntax="BCrypt_HashInline(password[], cost, cb)">
			<stacksize value="1"/>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="cost">
			</param>
			<param name="cb">
				<paraminfo> {F@_@s,F@_@si} </paraminfo>
			</param>
		</member>
		<member name="M:BS_Delete" syntax="BS_Delete(&amp;bs)">
			<attribute name="native"/>
			<referrer name="SetVehicleFakePosForPlayer"/>
			<referrer name="SetVehicleFakeZAngleForPlayer"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<referrer name="SendLastSyncPacket"/>
			<referrer name="ClearAnimationsForPlayer"/>
			<param name="bs">
				<paraminfo>BitStream &amp; </paraminfo>
			</param>
		</member>
		<member name="M:BS_GetNumberOfBytesUsed" syntax="BS_GetNumberOfBytesUsed(bs, &amp;number)">
			<attribute name="native"/>
			<referrer name="BS_ReadWeaponsUpdate"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="number">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:BS_IgnoreBits" syntax="BS_IgnoreBits(bs, number_of_bits)">
			<attribute name="native"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="pr_ip_WC_VEHICLE_SYNC"/>
			<referrer name="pr_ip_WC_PASSENGER_SYNC"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
			<referrer name="pr_ip_209"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="number_of_bits">
			</param>
		</member>
		<member name="M:BS_New" syntax="BS_New()">
			<tagname value="BitStream"/>
			<attribute name="native"/>
			<referrer name="SetVehicleFakePosForPlayer"/>
			<referrer name="SetVehicleFakeZAngleForPlayer"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<referrer name="SendLastSyncPacket"/>
			<referrer name="ClearAnimationsForPlayer"/>
		</member>
		<member name="M:BS_PackAspectRatio" syntax="BS_PackAspectRatio(value)">
			<stacksize value="4"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="floatround"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:BS_PackCameraZoom" syntax="BS_PackCameraZoom(value)">
			<stacksize value="4"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="floatround"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:BS_PackHealthArmour" syntax="BS_PackHealthArmour(health, armour, &amp;healthArmour)">
			<stacksize value="1"/>
			<referrer name="BS_WriteOnFootSync"/>
			<referrer name="BS_WriteInCarSync"/>
			<param name="health">
			</param>
			<param name="armour">
			</param>
			<param name="healthArmour">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadAimSync" syntax="BS_ReadAimSync(bs, data[])">
			<stacksize value="28"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_BITS"/>
			<dependency name="PR_FLOAT"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_aimZ"/>
			<dependency name="PR_aspectRatio"/>
			<dependency name="PR_camFrontVec"/>
			<dependency name="PR_camMode"/>
			<dependency name="PR_camPos"/>
			<dependency name="PR_camZoom"/>
			<dependency name="PR_weaponState"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [11] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadBulletSync" syntax="BS_ReadBulletSync(bs, data[])">
			<stacksize value="21"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_hitId"/>
			<dependency name="PR_hitPos"/>
			<dependency name="PR_hitType"/>
			<dependency name="PR_offsets"/>
			<dependency name="PR_origin"/>
			<dependency name="PR_weaponId"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [12] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadInCarSync" syntax="BS_ReadInCarSync(bs, data[], outgoing)">
			<stacksize value="55"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_VEHICLE_SYNC"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="BS_UnpackHealthArmour"/>
			<dependency name="PR_BITS"/>
			<dependency name="PR_BOOL"/>
			<dependency name="PR_FLOAT"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_FLOAT4"/>
			<dependency name="PR_NORM_QUAT"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_VECTOR"/>
			<dependency name="PR_additionalKey"/>
			<dependency name="PR_armour"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_landingGearState"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_playerHealth"/>
			<dependency name="PR_position"/>
			<dependency name="PR_quaternion"/>
			<dependency name="PR_sirenState"/>
			<dependency name="PR_trailerId"/>
			<dependency name="PR_trainSpeed"/>
			<dependency name="PR_udKey"/>
			<dependency name="PR_vehicleHealth"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_velocity"/>
			<dependency name="PR_weaponId"/>
			<dependency name="float"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [23] </paraminfo>
			</param>
			<param name="outgoing">
			</param>
		</member>
		<member name="M:BS_ReadMarkersSync" syntax="BS_ReadMarkersSync(bs, data[])">
			<stacksize value="16"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_CBOOL"/>
			<dependency name="PR_INT16"/>
			<dependency name="PR_INT32"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_numberOfPlayers"/>
			<dependency name="PR_playerIsActive"/>
			<dependency name="PR_playerIsParticipant"/>
			<dependency name="PR_playerPositionX"/>
			<dependency name="PR_playerPositionY"/>
			<dependency name="PR_playerPositionZ"/>
			<dependency name="true"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [101] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadOnFootSync" syntax="BS_ReadOnFootSync(bs, data[], outgoing)">
			<stacksize value="52"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="BS_UnpackHealthArmour"/>
			<dependency name="PR_BITS"/>
			<dependency name="PR_BOOL"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_FLOAT4"/>
			<dependency name="PR_INT16"/>
			<dependency name="PR_NORM_QUAT"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_VECTOR"/>
			<dependency name="PR_additionalKey"/>
			<dependency name="PR_animationFlags"/>
			<dependency name="PR_animationId"/>
			<dependency name="PR_armour"/>
			<dependency name="PR_health"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_position"/>
			<dependency name="PR_quaternion"/>
			<dependency name="PR_specialAction"/>
			<dependency name="PR_surfingOffsets"/>
			<dependency name="PR_surfingVehicleId"/>
			<dependency name="PR_udKey"/>
			<dependency name="PR_velocity"/>
			<dependency name="PR_weaponId"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [24] </paraminfo>
			</param>
			<param name="outgoing">
			</param>
		</member>
		<member name="M:BS_ReadPassengerSync" syntax="BS_ReadPassengerSync(bs, data[])">
			<stacksize value="44"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_PASSENGER_SYNC"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_BITS"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_additionalKey"/>
			<dependency name="PR_driveBy"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_playerArmour"/>
			<dependency name="PR_playerHealth"/>
			<dependency name="PR_position"/>
			<dependency name="PR_seatId"/>
			<dependency name="PR_udKey"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_weaponId"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [13] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadRconCommand" syntax="BS_ReadRconCommand(bs, data[])">
			<stacksize value="8"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_STRING32"/>
			<dependency name="PR_command"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [256] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadSpectatingSync" syntax="BS_ReadSpectatingSync(bs, data[])">
			<stacksize value="15"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_position"/>
			<dependency name="PR_udKey"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [6] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadStatsUpdate" syntax="BS_ReadStatsUpdate(bs, data[])">
			<stacksize value="9"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_INT32"/>
			<dependency name="PR_drunkLevel"/>
			<dependency name="PR_money"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadTrailerSync" syntax="BS_ReadTrailerSync(bs, data[])">
			<stacksize value="18"/>
			<referrer name="OnIncomingPacket"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_FLOAT4"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_angularVelocity"/>
			<dependency name="PR_position"/>
			<dependency name="PR_quaternion"/>
			<dependency name="PR_trailerId"/>
			<dependency name="PR_velocity"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [14] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadUnoccupiedSync" syntax="BS_ReadUnoccupiedSync(bs, data[])">
			<stacksize value="27"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_209"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_FLOAT"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_angularVelocity"/>
			<dependency name="PR_direction"/>
			<dependency name="PR_position"/>
			<dependency name="PR_roll"/>
			<dependency name="PR_seatId"/>
			<dependency name="PR_vehicleHealth"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_velocity"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [18] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadValue" syntax="BS_ReadValue(bs, ...)">
			<attribute name="native"/>
			<referrer name="BS_ReadOnFootSync"/>
			<referrer name="BS_ReadInCarSync"/>
			<referrer name="BS_ReadTrailerSync"/>
			<referrer name="BS_ReadPassengerSync"/>
			<referrer name="BS_ReadUnoccupiedSync"/>
			<referrer name="BS_ReadAimSync"/>
			<referrer name="BS_ReadBulletSync"/>
			<referrer name="BS_ReadSpectatingSync"/>
			<referrer name="BS_ReadMarkersSync"/>
			<referrer name="BS_ReadWeaponsUpdate"/>
			<referrer name="BS_ReadStatsUpdate"/>
			<referrer name="BS_ReadRconCommand"/>
			<referrer name="pr_ir_103"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {PR_ValueType,Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:BS_ReadWeaponsUpdate" syntax="BS_ReadWeaponsUpdate(bs, data[])">
			<stacksize value="17"/>
			<dependency name="BS_GetNumberOfBytesUsed"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_slotUpdated"/>
			<dependency name="PR_slotWeaponAmmo"/>
			<dependency name="PR_slotWeaponId"/>
			<dependency name="PR_targetActorId"/>
			<dependency name="PR_targetId"/>
			<dependency name="true"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:BS_ResetReadPointer" syntax="BS_ResetReadPointer(bs)">
			<attribute name="native"/>
			<referrer name="OnIncomingPacket"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:BS_SetWriteOffset" syntax="BS_SetWriteOffset(bs, offset)">
			<attribute name="native"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="pr_ip_WC_VEHICLE_SYNC"/>
			<referrer name="pr_ip_WC_PASSENGER_SYNC"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:BS_UnpackAspectRatio" syntax="BS_UnpackAspectRatio(value)">
			<tagname value="Float"/>
			<stacksize value="3"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="float"/>
			<param name="value">
			</param>
		</member>
		<member name="M:BS_UnpackCameraZoom" syntax="BS_UnpackCameraZoom(value)">
			<tagname value="Float"/>
			<stacksize value="3"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="float"/>
			<param name="value">
			</param>
		</member>
		<member name="M:BS_UnpackHealthArmour" syntax="BS_UnpackHealthArmour(healthArmour, &amp;health, &amp;armour)">
			<stacksize value="1"/>
			<referrer name="BS_ReadOnFootSync"/>
			<referrer name="BS_ReadInCarSync"/>
			<param name="healthArmour">
			</param>
			<param name="health">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="armour">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteAimSync" syntax="BS_WriteAimSync(bs, data[])">
			<stacksize value="28"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_AIM_SYNC"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_BITS"/>
			<dependency name="PR_FLOAT"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_aimZ"/>
			<dependency name="PR_aspectRatio"/>
			<dependency name="PR_camFrontVec"/>
			<dependency name="PR_camMode"/>
			<dependency name="PR_camPos"/>
			<dependency name="PR_camZoom"/>
			<dependency name="PR_weaponState"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [11] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteBulletSync" syntax="BS_WriteBulletSync(bs, data[])">
			<stacksize value="21"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_hitId"/>
			<dependency name="PR_hitPos"/>
			<dependency name="PR_hitType"/>
			<dependency name="PR_offsets"/>
			<dependency name="PR_origin"/>
			<dependency name="PR_weaponId"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [12] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteInCarSync" syntax="BS_WriteInCarSync(bs, data[], outgoing)">
			<stacksize value="55"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_VEHICLE_SYNC"/>
			<dependency name="operator!(Float:)"/>
			<dependency name="BS_PackHealthArmour"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_BITS"/>
			<dependency name="PR_BOOL"/>
			<dependency name="PR_FLOAT"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_FLOAT4"/>
			<dependency name="PR_NORM_QUAT"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_VECTOR"/>
			<dependency name="PR_additionalKey"/>
			<dependency name="PR_armour"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_landingGearState"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_playerHealth"/>
			<dependency name="PR_position"/>
			<dependency name="PR_quaternion"/>
			<dependency name="PR_sirenState"/>
			<dependency name="PR_trailerId"/>
			<dependency name="PR_trainSpeed"/>
			<dependency name="PR_udKey"/>
			<dependency name="PR_vehicleHealth"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_velocity"/>
			<dependency name="PR_weaponId"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="true"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [23] </paraminfo>
			</param>
			<param name="outgoing">
			</param>
		</member>
		<member name="M:BS_WriteMarkersSync" syntax="BS_WriteMarkersSync(bs, data[])">
			<stacksize value="13"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_CBOOL"/>
			<dependency name="PR_INT16"/>
			<dependency name="PR_INT32"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_numberOfPlayers"/>
			<dependency name="PR_playerIsActive"/>
			<dependency name="PR_playerIsParticipant"/>
			<dependency name="PR_playerPositionX"/>
			<dependency name="PR_playerPositionY"/>
			<dependency name="PR_playerPositionZ"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [101] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteOnFootSync" syntax="BS_WriteOnFootSync(bs, data[], outgoing)">
			<stacksize value="52"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="SendLastSyncPacket"/>
			<dependency name="BS_PackHealthArmour"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_BITS"/>
			<dependency name="PR_BOOL"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_FLOAT4"/>
			<dependency name="PR_INT16"/>
			<dependency name="PR_NORM_QUAT"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_VECTOR"/>
			<dependency name="PR_additionalKey"/>
			<dependency name="PR_animationFlags"/>
			<dependency name="PR_animationId"/>
			<dependency name="PR_armour"/>
			<dependency name="PR_health"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_position"/>
			<dependency name="PR_quaternion"/>
			<dependency name="PR_specialAction"/>
			<dependency name="PR_surfingOffsets"/>
			<dependency name="PR_surfingVehicleId"/>
			<dependency name="PR_udKey"/>
			<dependency name="PR_velocity"/>
			<dependency name="PR_weaponId"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [24] </paraminfo>
			</param>
			<param name="outgoing">
			</param>
		</member>
		<member name="M:BS_WritePassengerSync" syntax="BS_WritePassengerSync(bs, data[])">
			<stacksize value="44"/>
			<referrer name="pr_ip_WC_PASSENGER_SYNC"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_BITS"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_additionalKey"/>
			<dependency name="PR_driveBy"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_playerArmour"/>
			<dependency name="PR_playerHealth"/>
			<dependency name="PR_position"/>
			<dependency name="PR_seatId"/>
			<dependency name="PR_udKey"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_weaponId"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [13] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteRconCommand" syntax="BS_WriteRconCommand(bs, data[])">
			<stacksize value="6"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_STRING32"/>
			<dependency name="PR_command"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [256] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteSpectatingSync" syntax="BS_WriteSpectatingSync(bs, data[])">
			<stacksize value="15"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_position"/>
			<dependency name="PR_udKey"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [6] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteStatsUpdate" syntax="BS_WriteStatsUpdate(bs, data[])">
			<stacksize value="9"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_INT32"/>
			<dependency name="PR_drunkLevel"/>
			<dependency name="PR_money"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteTrailerSync" syntax="BS_WriteTrailerSync(bs, data[])">
			<stacksize value="18"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_FLOAT4"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_angularVelocity"/>
			<dependency name="PR_position"/>
			<dependency name="PR_quaternion"/>
			<dependency name="PR_trailerId"/>
			<dependency name="PR_velocity"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [14] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteUnoccupiedSync" syntax="BS_WriteUnoccupiedSync(bs, data[])">
			<stacksize value="27"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_FLOAT"/>
			<dependency name="PR_FLOAT3"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_angularVelocity"/>
			<dependency name="PR_direction"/>
			<dependency name="PR_position"/>
			<dependency name="PR_roll"/>
			<dependency name="PR_seatId"/>
			<dependency name="PR_vehicleHealth"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_velocity"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [18] </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteValue" syntax="BS_WriteValue(bs, ...)">
			<attribute name="native"/>
			<referrer name="BS_WriteOnFootSync"/>
			<referrer name="BS_WriteInCarSync"/>
			<referrer name="BS_WriteTrailerSync"/>
			<referrer name="BS_WritePassengerSync"/>
			<referrer name="BS_WriteUnoccupiedSync"/>
			<referrer name="BS_WriteAimSync"/>
			<referrer name="BS_WriteBulletSync"/>
			<referrer name="BS_WriteSpectatingSync"/>
			<referrer name="BS_WriteMarkersSync"/>
			<referrer name="BS_WriteWeaponsUpdate"/>
			<referrer name="BS_WriteStatsUpdate"/>
			<referrer name="BS_WriteRconCommand"/>
			<referrer name="SetVehicleFakePosForPlayer"/>
			<referrer name="SetVehicleFakeZAngleForPlayer"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<referrer name="SendLastSyncPacket"/>
			<referrer name="ClearAnimationsForPlayer"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {PR_ValueType,Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:BS_WriteWeaponsUpdate" syntax="BS_WriteWeaponsUpdate(bs, data[])">
			<stacksize value="13"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_slotUpdated"/>
			<dependency name="PR_slotWeaponAmmo"/>
			<dependency name="PR_slotWeaponId"/>
			<dependency name="PR_targetActorId"/>
			<dependency name="PR_targetId"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:BanPlayer" syntax="BanPlayer(playerid, adminid, time, reason[])">
			<stacksize value="44"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="WarnPlayer"/>
			<referrer name="pc_cmd_ban"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="IsKicked"/>
			<dependency name="KickEx"/>
			<dependency name="LOG_PUNISH"/>
			<dependency name="Log"/>
			<dependency name="UnixTime"/>
			<dependency name="bans"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="gettime"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_adminPenalty"/>
			<dependency name="player_adminPoints"/>
			<dependency name="player_ipaddress"/>
			<dependency name="player_nickname"/>
			<dependency name="player_serial"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="time">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Bank_Pickup" syntax="Bank_Pickup(playerid, pickupid)">
			<stacksize value="12"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="EnterTeleport"/>
			<dependency name="Heist_Pickup"/>
			<dependency name="Teleport"/>
			<dependency name="VW_BANK"/>
			<dependency name="bankEnterPickup"/>
			<dependency name="bankExitPickup"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:Base64Decode" syntax="Base64Decode(dest[], src[], len, offset)">
			<stacksize value="4"/>
			<dependency name="min"/>
			<dependency name="strlen"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="offset">
			</param>
			<summary>  Base64Decode  </summary>  <remarks>  Decodes data using proper base64.  </remarks> 
		</member>
		<member name="M:Base64Encode" syntax="Base64Encode(dest[], src[], num, len, offset)">
			<stacksize value="5"/>
			<dependency name="__MACRO__ceildiv"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="num">
			</param>
			<param name="len">
			</param>
			<param name="offset">
			</param>
			<summary>  Base64Encode  </summary>  <remarks>  Encodes data using proper base64.  This code is complicated by the fact  that PAWN packed strings are backwards by cells in memory, so we need to do  the writes in what seems like a strange order.  </remarks> 
		</member>
		<member name="M:BeautifyProfilingTime" syntax="BeautifyProfilingTime(t, iters)">
			<stacksize value="27"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="BeautifyProfilingTime"/>
			<dependency name="float"/>
			<dependency name="format"/>
			<param name="t">
				The time in ms.
			</param>
			<param name="iters">
				The number of iterations completed in this time.
			</param>
			    <remarks>  Formats and returns a string representing the time taken for one iteration,  given the time required for many iterations.  This attempts to format the  number using a reasonable fraction of a second.  </remarks> 
		</member>
		<member name="M:BernsteinHash" syntax="BernsteinHash(str[])">
			<stacksize value="4"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string">the string to hash.</param>  <returns>  The bernstein hash of the input string  </returns>  <remarks>  This is a 32bit hash system so is not very secure, however we're only using  this as a string enumerator to uniquely identify strings easilly and allow  for a binary search of strings based on the hash of their name.  <em>crc32</em>, then <em>jenkins</em> were originally used however this is  far faster, if a little collision prone, but we're checking the strings  manually anyway.  This doesn't matter as it would be done regardless of  hash method, so this doesn't need to be accounted for.  Speed is all that  matters with at least least a bit of non collision (the number of strings  we're dealing with, this should have none-to-few collisions).  <p/>  I modified it slightly from the original code pasted by aru, to code closer  to <a href="http://www.burtleburtle.net/bob/hash/doobs.html">the code</a>  and to work with PAWN (and shaved 0.2us off the time for one call :D).  <p/>  Uber reduced version (just for fun):  <code>  b(s[]){new h=-1,i,j;while((j=s[i++]))h=h*33+j;return h;}  </code>  <p/>  Update: Contrary to what I said above this is also used to identify colour  strings for the updated text system involving file based styling and this  is not checked for collisions as it's unimportant.  But this doesn't affect  the function at all, I just mentioned it here for "interest".  </remarks> 
		</member>
		<member name="M:BiGramSimilarity" syntax="BiGramSimilarity(string1[], string2[])">
			<tagname value="Float"/>
			<stacksize value="1306"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="floatdiv"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
				The first string to compare.
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<summary>  BiGramSimilarity(const string1[], const string2[]);  </summary>    <param name="string1">The second string to compare.</param>  <returns>  The normalised similarity between the strings.  </returns>  <remarks>  Compares the pairs of letters and numbers in each string with each other to  find a measure of how much of one ordered string is in the other.  Useful  for seeing if two strings are similar to humans.  </remarks> 
		</member>
		<member name="M:BinStr" syntax="BinStr(str[])">
			<stacksize value="3"/>
			<referrer name="binstr"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string">String to try convert to a boolean.</param>  <returns>  bool: passed boolean.  </returns>  <remarks>  This takes a value in 0110101 (boolean) format and returns it as a  regular value.  </remarks> 
		</member>
		<member name="M:Bit_Bits" syntax="Bit_Bits(size)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="size">
				Number of bits required.
			</param>
			  <returns>  Number of cells required for the bit array.  </returns> 
		</member>
		<member name="M:Bit_Display" syntax="Bit_Display(array[], size)">
			<stacksize value="155"/>
			<dependency name="Bit_Display"/>
			<dependency name="format"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bit_FastSet" syntax="Bit_FastSet(array[], slot, set, size)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				State to set the slot to.
			</param>
			<param name="size">
				Size of array.
			</param>
			        <remarks>  Exactly the same as "Bit_Set", but as a macro not a function.  native Bit_FastSet(BitArray:array&lt;&gt;, slot, bool:set, size = sizeof (array));  </remarks> 
		</member>
		<member name="M:Bit_Get" syntax="Bit_Get(array[], slot)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <param name="size">Size of array.</param>  <returns>  State of the provided slot, 0 on fail.  </returns>  <remarks>  -  native Bit_Get(BitArray:array&lt;&gt;, slot);  </remarks> 
		</member>
		<member name="M:Bit_GetBit" syntax="Bit_GetBit(array[], slot)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <returns>  State of the provided slot, 0 on fail.  </returns>  <remarks>  Unsafe but faster for when you're sure you're within range.  </remarks> 
		</member>
		<member name="M:Bit_GetCount" syntax="Bit_GetCount(array[], size)">
			<stacksize value="6"/>
			<dependency name="Cell_CountBits"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array to count.
			</param>
			<param name="size">
				Size of array.
			</param>
			    <returns>  Number of 1s in the array.  </returns>  <remarks>  Code from:  <a href="http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel" />  native Bit_Count(BitArray:array&lt;&gt;, size = sizeof (array));  </remarks> 
		</member>
		<member name="M:Bit_Let" syntax="Bit_Let(array[], slot)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <remarks>  Sets the slot to 1.  </remarks> 
		</member>
		<member name="M:Bit_Mask" syntax="Bit_Mask(value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				Value to get the mask for
			</param>
			  <returns>  The bit in the array slot to use.  </returns> 
		</member>
		<member name="M:Bit_Set" syntax="Bit_Set(array[], slot, set)">
			<stacksize value="1"/>
			<dependency name="cellbits"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				State to set the slot to.
			</param>
			      <param name="size">Size of array.</param> 
		</member>
		<member name="M:Bit_SetAll" syntax="Bit_SetAll(array[], set, size)">
			<stacksize value="6"/>
			<dependency name="MemSet"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array to set all values of.
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				Wether to set them all 0 or 1.
			</param>
			<param name="size">
				Size of array.
			</param>
			     
		</member>
		<member name="M:Bit_Slot" syntax="Bit_Slot(value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				Value to get the slot for.
			</param>
			  <returns>  The true array slot for this value.  </returns> 
		</member>
		<member name="M:Bit_Toggle" syntax="Bit_Toggle(array[], slot)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <remarks>  Swaps the bit value.  </remarks> 
		</member>
		<member name="M:Bit_Vet" syntax="Bit_Vet(array[], slot)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <remarks>  Sets the slot to 0.  </remarks> 
		</member>
		<member name="M:BlockAdminTroll" syntax="BlockAdminTroll(playerid, targetid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_setrank"/>
			<dependency name="false"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_admin"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
		</member>
		<member name="M:BlockIpAddress" syntax="BlockIpAddress(ipAddress[], timeMS)">
			<attribute name="native"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="ac_OnCheatDetected"/>
			<param name="ipAddress">
				<paraminfo> [] </paraminfo>
				The IP to block
			</param>
			<param name="timeMS">
				The time (in milliseconds) that the connection will be blocked for. <b><c>0</c></b>  can be used for an indefinite block
			</param>
			<library>a_samp</library>  <summary>Blocks an IP address from further communication with the server for a set amount of time  (with wildcards allowed).  Players trying to connect to the server with a blocked IP address will  receive the generic "You are banned from this server." message.  Players that are online on the specified  IP before the block will timeout after a few seconds and, upon reconnect, will receive the same message.</summary>      <seealso name="UnBlockIpAddress" />  <seealso name="OnIncomingConnection" />  <remarks>This function was added in <b>SA-MP 0.3z R2-2</b> and will not work in earlier versions!</remarks>  <remarks>Wildcards can be used with this function, for example blocking the IP <b><c>6.9.*.*</c></b>  will block all IPs where the first two octets are <b><c>6</c></b> and <b><c>9</c></b> respectively.  Any number can be in place of an asterisk.</remarks> 
		</member>
		<member name="M:BombaExplode" syntax="BombaExplode()">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CreateExplosion"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="KillTimer"/>
			<dependency name="Streamer_GetItemPos"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="bombaOwner"/>
			<dependency name="bombaPickup"/>
			<dependency name="bombaTimer"/>
			<dependency name="msgAll"/>
		</member>
		<member name="M:BoolStr" syntax="BoolStr(str[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="boolstr"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string">String to try convert to a boolean.</param>  <returns>  bool: passed boolean.  </returns>  <remarks>  This can take a number of ways of representing booleans - 0, false and  nothing there.  Anything not one of those things (false is not case  sensitive) is assumed true.  </remarks> 
		</member>
		<member name="M:CA_CreateDynamicObjectEx_DC" syntax="CA_CreateDynamicObjectEx_DC(modelid, x, y, z, rx, ry, rz, streamdistance, drawdistance, worlds[], interiors[], players[], areas[], priority, maxworlds, maxinteriors, maxplayers, maxareas)">
			<stacksize value="21"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CA_CreateObject"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="ColdAndreadsID"/>
			<dependency name="CreateDynamicObjectEx"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@CA_Objects"/>
			<dependency name="Iterator@CA_Objects"/>
			<dependency name="ObjectID"/>
			<dependency name="ObjectType"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worlds">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interiors">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="players">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="areas">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="priority">
			</param>
			<param name="maxworlds">
			</param>
			<param name="maxinteriors">
			</param>
			<param name="maxplayers">
			</param>
			<param name="maxareas">
			</param>
		</member>
		<member name="M:CA_CreateDynamicObjectEx_SC" syntax="CA_CreateDynamicObjectEx_SC(modelid, x, y, z, rx, ry, rz, streamdistance, drawdistance, worlds[], interiors[], players[], areas[], priority, maxworlds, maxinteriors, maxplayers, maxareas)">
			<stacksize value="21"/>
			<dependency name="CA_CreateObject"/>
			<dependency name="CreateDynamicObjectEx"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worlds">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interiors">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="players">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="areas">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="priority">
			</param>
			<param name="maxworlds">
			</param>
			<param name="maxinteriors">
			</param>
			<param name="maxplayers">
			</param>
			<param name="maxareas">
			</param>
		</member>
		<member name="M:CA_CreateDynamicObject_DC" syntax="CA_CreateDynamicObject_DC(modelid, x, y, z, rx, ry, rz, vw, interior, playerid, streamdistance, drawdistance, areaid, priority)">
			<stacksize value="17"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CA_CreateObject"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="ColdAndreadsID"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@CA_Objects"/>
			<dependency name="Iterator@CA_Objects"/>
			<dependency name="ObjectID"/>
			<dependency name="ObjectType"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vw">
			</param>
			<param name="interior">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CA_CreateDynamicObject_SC" syntax="CA_CreateDynamicObject_SC(modelid, x, y, z, rx, ry, rz, vw, interior, playerid, streamdistance, drawdistance, areaid, priority)">
			<stacksize value="17"/>
			<dependency name="CA_CreateObject"/>
			<dependency name="CreateDynamicObject"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vw">
			</param>
			<param name="interior">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CA_CreateObject" syntax="CA_CreateObject(modelid, x, y, z, rx, ry, rz, add)">
			<attribute name="native"/>
			<referrer name="CA_CreateDynamicObjectEx_SC"/>
			<referrer name="CA_CreateDynamicObject_SC"/>
			<referrer name="CA_CreateObject_SC"/>
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CA_CreateObject_DC" syntax="CA_CreateObject_DC(modelid, x, y, z, rx, ry, rz, drawdistance)">
			<stacksize value="12"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CA_CreateObject"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="ColdAndreadsID"/>
			<dependency name="CreateObject"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@CA_Objects"/>
			<dependency name="Iterator@CA_Objects"/>
			<dependency name="ObjectID"/>
			<dependency name="ObjectType"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_CreateObject_SC" syntax="CA_CreateObject_SC(modelid, x, y, z, rx, ry, rz, drawdistance)">
			<stacksize value="11"/>
			<dependency name="CA_CreateObject"/>
			<dependency name="CreateObject"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_DestroyAllObjects_DC" syntax="CA_DestroyAllObjects_DC()">
			<stacksize value="5"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="ac_OnGameModeExit"/>
			<dependency name="CA_DestroyObject_DC"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="Iterator@CA_Objects"/>
			<dependency name="ObjectType"/>
		</member>
		<member name="M:CA_DestroyObject" syntax="CA_DestroyObject(index)">
			<attribute name="native"/>
			<referrer name="CA_DestroyObject_DC"/>
			<param name="index">
			</param>
		</member>
		<member name="M:CA_DestroyObject_DC" syntax="CA_DestroyObject_DC(index)">
			<stacksize value="9"/>
			<referrer name="CA_DestroyAllObjects_DC"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CA_DestroyObject"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="ColdAndreadsID"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="DestroyObject"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@CA_Objects"/>
			<dependency name="Iterator@CA_Objects"/>
			<dependency name="ObjectID"/>
			<dependency name="ObjectType"/>
			<param name="index">
			</param>
		</member>
		<member name="M:CA_FindZ_For2DCoord" syntax="CA_FindZ_For2DCoord(x, y, &amp;z)">
			<stacksize value="11"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="GetRandomCoord"/>
			<referrer name="GetGroundRotation"/>
			<dependency name="CA_RayCastLine"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CA_GetCollisionObjectID" syntax="CA_GetCollisionObjectID(index)">
			<stacksize value="3"/>
			<dependency name="CA_IsValidObject"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="ColdAndreadsID"/>
			<param name="index">
			</param>
		</member>
		<member name="M:CA_GetObjectID" syntax="CA_GetObjectID(index)">
			<stacksize value="3"/>
			<dependency name="CA_IsValidObject"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="ObjectID"/>
			<param name="index">
			</param>
		</member>
		<member name="M:CA_GetObjectType" syntax="CA_GetObjectType(index)">
			<stacksize value="3"/>
			<dependency name="CA_IsValidObject"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="ObjectType"/>
			<param name="index">
			</param>
		</member>
		<member name="M:CA_GetRoomCenter" syntax="CA_GetRoomCenter(x, y, z, &amp;m_x, &amp;m_y)">
			<tagname value="Float"/>
			<stacksize value="18"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="VectorSize"/>
			<dependency name="degrees"/>
			<dependency name="floatabs"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="m_x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="m_y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CA_GetRoomHeight" syntax="CA_GetRoomHeight(x, y, z)">
			<tagname value="Float"/>
			<stacksize value="17"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="floatsqroot"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_Init" syntax="CA_Init()">
			<attribute name="native"/>
			<referrer name="WC_OnGameModeInit"/>
		</member>
		<member name="M:CA_IsPlayerBlocked" syntax="CA_IsPlayerBlocked(playerid, dist, height)">
			<stacksize value="17"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="playerid">
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsPlayerFacingWater" syntax="CA_IsPlayerFacingWater(playerid, dist, height)">
			<stacksize value="16"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="playerid">
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsPlayerInWater" syntax="CA_IsPlayerInWater(playerid, &amp;depth, &amp;playerdepth)">
			<stacksize value="68"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="CA_RayCastMultiLine"/>
			<dependency name="GetPlayerPos"/>
			<param name="playerid">
			</param>
			<param name="depth">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="playerdepth">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsPlayerNearWater" syntax="CA_IsPlayerNearWater(playerid, dist, height)">
			<stacksize value="16"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="playerid">
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsPlayerOnSurface" syntax="CA_IsPlayerOnSurface(playerid, tolerance)">
			<stacksize value="14"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="GetPlayerPos"/>
			<param name="playerid">
			</param>
			<param name="tolerance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsValidObject" syntax="CA_IsValidObject(index)">
			<attribute name="native"/>
			<referrer name="CA_GetObjectID"/>
			<referrer name="CA_GetObjectType"/>
			<referrer name="CA_GetCollisionObjectID"/>
			<param name="index">
			</param>
		</member>
		<member name="M:CA_IsVehicleBlocked" syntax="CA_IsVehicleBlocked(vehicleid, dist, height)">
			<stacksize value="17"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="ac_GetVehicleZAngle"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="vehicleid">
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsVehicleFacingWater" syntax="CA_IsVehicleFacingWater(vehicleid, dist, height)">
			<stacksize value="16"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="ac_GetVehicleZAngle"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="vehicleid">
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsVehicleInWater" syntax="CA_IsVehicleInWater(vehicleid, &amp;depth, &amp;vehicledepth)">
			<stacksize value="68"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="CA_RayCastMultiLine"/>
			<dependency name="GetVehiclePos"/>
			<param name="vehicleid">
			</param>
			<param name="depth">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vehicledepth">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsVehicleNearWater" syntax="CA_IsVehicleNearWater(vehicleid, dist, height)">
			<stacksize value="16"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="vehicleid">
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_IsVehicleOnSurface" syntax="CA_IsVehicleOnSurface(vehicleid, tolerance)">
			<stacksize value="14"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="GetVehiclePos"/>
			<param name="vehicleid">
			</param>
			<param name="tolerance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_OnFilterScriptExit" syntax="CA_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="GEOLITE_init"/>
			<dependency name="geolite_close_dbs"/>
		</member>
		<member name="M:CA_OnGameModeExit" syntax="CA_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="GEOLITE_init"/>
			<dependency name="geolite_close_dbs"/>
		</member>
		<member name="M:CA_RayCastExplode" syntax="CA_RayCastExplode(cX, cY, cZ, Radius, intensity, collisions[][])">
			<stacksize value="19"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="floatcos"/>
			<dependency name="floatround"/>
			<dependency name="floatround_floor"/>
			<dependency name="floatsin"/>
			<param name="cX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="intensity">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="collisions">
				<paraminfo>Float [][3] </paraminfo>
			</param>
		</member>
		<member name="M:CA_RayCastLine" syntax="CA_RayCastLine(StartX, StartY, StartZ, EndX, EndY, EndZ, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="CA_FindZ_For2DCoord"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_IsPlayerOnSurface"/>
			<referrer name="CA_IsVehicleOnSurface"/>
			<referrer name="CA_IsPlayerNearWater"/>
			<referrer name="CA_IsVehicleNearWater"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="CA_GetRoomHeight"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="IsPosInWater"/>
			<referrer name="MovePointCol"/>
			<param name="StartX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="StartY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="StartZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CA_RayCastMultiLine" syntax="CA_RayCastMultiLine(StartX, StartY, StartZ, EndX, EndY, EndZ, retx[], rety[], retz[], retdist[], ModelIDs[], size)">
			<attribute name="native"/>
			<referrer name="CA_IsPlayerInWater"/>
			<referrer name="CA_IsVehicleInWater"/>
			<param name="StartX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="StartY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="StartZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="retx">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="rety">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="retz">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="retdist">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="ModelIDs">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:CA_RemoveBarriers" syntax="CA_RemoveBarriers()">
			<stacksize value="8"/>
			<dependency name="CA_RemoveBuilding"/>
		</member>
		<member name="M:CA_RemoveBreakableBuildings" syntax="CA_RemoveBreakableBuildings()">
			<stacksize value="8"/>
			<dependency name="CA_RemoveBuilding"/>
		</member>
		<member name="M:CA_RemoveBuilding" syntax="CA_RemoveBuilding(modelid, x, y, z, radius)">
			<attribute name="native"/>
			<referrer name="CA_RemoveBarriers"/>
			<referrer name="CA_RemoveBreakableBuildings"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_SetObjectPos" syntax="CA_SetObjectPos(index, x, y, z)">
			<attribute name="native"/>
			<referrer name="CA_SetObjectPos_DC"/>
			<param name="index">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_SetObjectPos_DC" syntax="CA_SetObjectPos_DC(index, x, y, z)">
			<stacksize value="6"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="CA_SetObjectPos"/>
			<dependency name="ColdAndreadsID"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@CA_Objects"/>
			<dependency name="ObjectID"/>
			<dependency name="ObjectType"/>
			<dependency name="SetDynamicObjectPos"/>
			<dependency name="SetObjectPos"/>
			<param name="index">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_SetObjectRot" syntax="CA_SetObjectRot(index, rx, ry, rz)">
			<attribute name="native"/>
			<referrer name="CA_SetObjectRot_DC"/>
			<param name="index">
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CA_SetObjectRot_DC" syntax="CA_SetObjectRot_DC(index, rx, ry, rz)">
			<stacksize value="6"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="CA_ObjectList"/>
			<dependency name="CA_SetObjectRot"/>
			<dependency name="ColdAndreadsID"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@CA_Objects"/>
			<dependency name="ObjectID"/>
			<dependency name="ObjectType"/>
			<dependency name="SetDynamicObjectRot"/>
			<dependency name="SetObjectRot"/>
			<param name="index">
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CGEN" syntax="CGEN(&amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f, &amp;g, &amp;h, &amp;i, &amp;j, &amp;k, &amp;l, &amp;m, &amp;n, &amp;o, &amp;p, &amp;q, &amp;r, &amp;ss, &amp;t, &amp;u, &amp;v, &amp;w, &amp;x, &amp;y, &amp;z)">
			<stacksize value="1"/>
			<referrer name="@_y_cgen0_y_@"/>
			<param name="a">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="b">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="c">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="d">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="e">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="f">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="g">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="h">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="i">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="j">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="k">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="l">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="m">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="n">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="o">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="p">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="q">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="r">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ss">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="t">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="u">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="v">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="w">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="x">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CGen_AddCodeSpace" syntax="CGen_AddCodeSpace(num)">
			<stacksize value="4"/>
			<referrer name="Hooks_GenerateCode"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_g_sCodeSpace"/>
			<param name="num">
			</param>
		</member>
		<member name="M:CGen_GetAddr" syntax="CGen_GetAddr(func[])">
			<stacksize value="3"/>
			<referrer name="CGen_SetupCodeSpace"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="funcidx"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CGen_GetCodeSpace" syntax="CGen_GetCodeSpace()">
			<stacksize value="1"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="YSI_g_sCodeSpace"/>
		</member>
		<member name="M:CGen_OOM" syntax="CGen_OOM(ctx[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="ASM_ERROR_LABEL_DUPLICATE"/>
			<dependency name="ASM_ERROR_LABEL_OVERFLOW"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="ASM_ERROR_OPCODE"/>
			<dependency name="ASM_ERROR_OPERAND"/>
			<dependency name="ASM_ERROR_SPACE"/>
			<dependency name="AsmClearError"/>
			<dependency name="AsmGetError"/>
			<dependency name="Debug_Kill_"/>
			<dependency name="Debug_Print0"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:CGen_OnCodeInit" syntax="CGen_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="609"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_GetLengthFromEntry"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="E_CHAIN_HOOK"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="GetAmxHeapTop"/>
			<dependency name="HeapAllocCells"/>
			<dependency name="HeapRelease"/>
			<dependency name="Hooks_Collate"/>
			<dependency name="Hooks_CompressPublics"/>
			<dependency name="Hooks_GenerateContinue"/>
			<dependency name="Hooks_GetPreloadLibraries"/>
			<dependency name="Hooks_InvalidatePointer"/>
			<dependency name="Hooks_RepairJITInit"/>
			<dependency name="Hooks_SortReplacements"/>
			<dependency name="IsOpcodeRelocationRequired"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_NOP"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="Server_JITExists"/>
			<dependency name="UnrelocateOpcode"/>
			<dependency name="YHNPS_Find"/>
			<dependency name="YHNPS_Push"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sBlockEnd"/>
			<dependency name="YSI_g_sBlockStart"/>
			<dependency name="YSI_g_sInitFSIdx"/>
			<dependency name="YSI_g_sInitGMIdx"/>
			<dependency name="YSI_g_sNPSBaseCall"/>
			<dependency name="YSI_g_sNPSReplace"/>
			<dependency name="YSI_g_sNPSStack"/>
			<dependency name="YSI_g_sNPSTrampoline"/>
			<dependency name="YSI_g_sTempRet"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="funcidx"/>
			<dependency name="gAMXOpcodeBaseSizes"/>
			<dependency name="true"/>
			<remarks>  Call the main hook run code, then advance the ALS chain.  </remarks>  <transition keep="true" target="_ALS : _ALS_go"/>  <transition target="y_malloc_finalise_disabled"/>
 <transition target="_ALS_go"/>
 <transition target="y_hooks_scan_determine_type"/>
 <transition target="y_hooks_scan_legacy_hook"/>
 <transition target="y_malloc_finalise_enabled"/>

		</member>
		<member name="M:CGen_SetupCodeSpace" syntax="CGen_SetupCodeSpace()">
			<stacksize value="4"/>
			<referrer name="ThirdParty_OnCodeInit"/>
			<dependency name="CGen_GetAddr"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_RETN"/>
			<dependency name="OP_ZERO_PRI"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sCodeEnd"/>
			<dependency name="YSI_g_sCodeSpace"/>
		</member>
		<member name="M:CGen_UseCodeSpace" syntax="CGen_UseCodeSpace(ctx[])">
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="AsmSetErrorHandlerName"/>
			<dependency name="YSI_g_sCodeEnd"/>
			<dependency name="YSI_g_sCodeSpace"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:CIEMultiply" syntax="CIEMultiply(r, g, b, &amp;x, &amp;y, &amp;z)">
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="r">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="g">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="b">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CIEToSRGB" syntax="CIEToSRGB(a, x, y, z)">
			<stacksize value="10"/>
			<referrer name="InterpolateColourSRGB"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<param name="a">
				The alpha to add on.
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x return value.
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y return value.
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z return value.
			</param>
			<summary>  SRGBToCIE(colour, &amp;Float:x, &amp;Float:y, &amp;Float:z);  </summary>          <remarks>  Converts a colour from CIE XYZ colour space to sRGB colour space.  See:  https://en.wikipedia.org/wiki/SRGB#The_forward_transformation_(CIE_XYZ_to_sRGB)  </remarks> 
		</member>
		<member name="M:CONST_PAWNDOC" syntax="CONST_PAWNDOC(symbol[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  Creates fake constants that Pawndoc comments can be attached to in the first  compilation phase, before the real macros are created.  Macros can't have  documentation comments, but why not?  They need documenting...  <p/>  Used internally as <c>YSI_CONST_PAWNDOC</c>.  <p/>  This creates a static stock of the same name to attach the documentation to,  before actually defining the macro.  <p/>  <code>  #if defined MACRO_NAME                                                   <br /><indent />  // `#define MACRO_NAME` exists previously, don't document it here.   <br /><indent />  _FIXES_HIDE_PAWNDOC(SIMILAR_NAME);                                   <br />  #else                                                                    <br /><indent />  // Doesn't exist.  Document it and define it.                        <br /><indent />  _FIXES_CONST_PAWNDOC(MACRO_NAME);                                    <br /><indent />  #define MACRO_NAME(%0) (%0)                                          <br />  #endif  </code>  <br />  </remarks> 
		</member>
		<member name="M:Call" syntax="Call(address, auto_pop)">
			<stacksize value="5"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="address">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:CallFunction" syntax="CallFunction(address, ...)">
			<stacksize value="5"/>
			<referrer name="AsmRaiseError"/>
			<param name="address">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="OnScriptInit@E"/>
			<referrer name="Iter_OnPlayerConnect"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="Callback_LocalHandler_"/>
			<referrer name="NDP_ProcessDialogResponse"/>
			<referrer name="ac_OnGameModeInit"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="ac_OnGameModeExit"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
				Public function's name
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				Tag/format of each variable
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
				'Indefinite' number of arguments of any tag
			</param>
			<library>a_samp</library>  <summary>Calls a public function from the script in which it is used.</summary>        <seealso name="CallRemoteFunction" />  <returns>The value that the <b>only</b> public function returned.</returns>  <remarks>CallLocalFunction crashes the server if it's passing an empty string.</remarks>  <remarks>  Format string placeholders:<br />  <ul>  <li><b><c>c</c></b> - a single character</li>  <li><b><c>d</c></b> - an integer (whole) number</li>  <li><b><c>i</c></b> - an integer (whole) number</li>  <li><b><c>x</c></b> - a number in hexadecimal notation</li>  <li><b><c>f</c></b> - a floating point number</li>  <li><b><c>s</c></b> - a string</li>  </ul>  </remarks> 
		</member>
		<member name="M:CallN" syntax="CallN(address, args_to_push, auto_pop)">
			<stacksize value="6"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="address">
			</param>
			<param name="args_to_push">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:CallNative" syntax="CallNative(index, ...)">
			<stacksize value="8"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<param name="index">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:CallNativeByAddress" syntax="CallNativeByAddress(address, ...)">
			<stacksize value="8"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<param name="address">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library> <remarks> Unlike CallNative(), this function calls natives directly via SYSREQ.D. </remarks>
		</member>
		<member name="M:CallRemoteFunction" syntax="CallRemoteFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="OnAndroidTimer"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="Callback_RemoteHandler_"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
				Public function's name
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				Tag/format of each variable
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
				'Indefinite' number of arguments of any tag
			</param>
			<library>a_samp</library>  <summary>Calls a public function in any script that is loaded.</summary>        <seealso name="CallLocalFunction" />  <returns>The value that the last public function returned.</returns>  <remarks>CallRemoteFunction crashes the server if it's passing an empty string.</remarks>  <remarks>  Format string placeholders:<br />  <ul>  <li><b><c>c</c></b> - a single character</li>  <li><b><c>d</c></b> - an integer (whole) number</li>  <li><b><c>i</c></b> - an integer (whole) number</li>  <li><b><c>x</c></b> - a number in hexadecimal notation</li>  <li><b><c>f</c></b> - a floating point number</li>  <li><b><c>s</c></b> - a string</li>  </ul>  </remarks> 
		</member>
		<member name="M:CallStoredFunction" syntax="CallStoredFunction(func, ...)">
			<stacksize value="14"/>
			<dependency name="Indirect_Call"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="func">
				<paraminfo>F@_@ </paraminfo>
				Function pointer to call.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The function's parameters.
			</param>
			    <remarks>  Call the function in the given pointer with the given parameters.  </remarks> 
		</member>
		<member name="M:Callback_Array" syntax="Callback_Array(func[], params[], num)">
			<stacksize value="7"/>
			<dependency name="E_CALLBACK_DATA_ALLOC"/>
			<dependency name="Indirect_Array"/>
			<param name="func">
				<paraminfo> [1] </paraminfo>
				Info on the function to be called.
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
				Array of data pointers.
			</param>
			<param name="num">
				Size of the array.
			</param>
			      <remarks>  This is very similar to Callback_Call, but takes an array of ADDRESSES  instead of normal parameters.  This is designed to help support some  experimental OO code I was working on...  If the target is a public function, the parameters are resolved and passed  normally.  If the target is an inline function we are optimised for the  common case, so move the data on to the stack (currently done value-by-value  not all at once) and call "Callback_Call".  </remarks> 
		</member>
		<member name="M:Callback_Call" syntax="Callback_Call(func[], ...)">
			<stacksize value="14"/>
			<dependency name="E_CALLBACK_DATA_ALLOC"/>
			<dependency name="Indirect_Call"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="func">
				<paraminfo> [1] </paraminfo>
				Info on the function to be called.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			  <remarks>  Takes an inline function handler and parameters, and either calls the  public function while passing through the parameters, or just jumps to the  carefully crafted inline function code.  </remarks> 
		</member>
		<member name="M:Callback_CallHandler_" syntax="Callback_CallHandler_(...)">
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<dependency name="I@"/>
			<dependency name="INDIRECTION_DATA"/>
			<dependency name="memcpy"/>
			<param name="...">
				The parameters passed to this function via <see>@</see>.
			</param>
			  <remarks>  When you call an inline function using <c>@.name</c>, the underlying  <c>Indirect_Call</c> function jumps to a handler.  This is that handler.  The code here copies the function closure then jumps to the start of the  inline code.  Once that is completed, the inline jumps back to midway  through this function to store the closure back again (if required).  </remarks> 
		</member>
		<member name="M:Callback_Claim_" syntax="Callback_Claim_(func[])">
			<stacksize value="8"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<dependency name="E_INLINE_CALL_NULL"/>
			<dependency name="E_INLINE_CALL_TIMER"/>
			<dependency name="KillTimer"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="false"/>
			<param name="func">
				<paraminfo> [11] </paraminfo>
			</param>
		</member>
		<member name="M:Callback_Find_" syntax="Callback_Find_(name[], &amp;dest, remote, tag)">
			<tagname value="bool"/>
			<stacksize value="38"/>
			<referrer name="Callback_Get"/>
			<dependency name="Callback_InlineByName"/>
			<dependency name="GetLocalFunction"/>
			<dependency name="GetRemoteFunction"/>
			<dependency name="GetTagNameFromID"/>
			<dependency name="funcidx"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				Callback to find by name.
			</param>
			<param name="dest">
				<paraminfo> &amp; </paraminfo>
				Where to store the function.
			</param>
			<param name="remote">
				<paraminfo>bool </paraminfo>
				Is this function called on one or all scripts?
			</param>
			<param name="tag">
				The tag of the return value for type reasons.
			</param>
			        <remarks>  Replacement for <c>Callback_Get</c>.  Just returns a pointer, and no longer  relies on strict control of where is called from.  </remarks> 
		</member>
		<member name="M:Callback_Get" syntax="Callback_Get(...)">
			<tagname value="bool"/>
			<stacksize value="74"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="Callback_Find_"/>
			<dependency name="Callback_LocalHandler_"/>
			<dependency name="Callback_RemoteHandler_"/>
			<dependency name="Callback_Strcat_"/>
			<dependency name="E_PUBLIC_CALL_HANDLER"/>
			<dependency name="E_PUBLIC_CALL_SPECIFIER"/>
			<dependency name="GetTagIDFromName"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="Indirect_DePtr_"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="getarg"/>
			<dependency name="setarg"/>
			<dependency name="true"/>
			<dependency name="va_getstring"/>
			<param name="...">
				<paraminfo> {F@_@,_} </paraminfo>
			</param>
			<remarks>  Looks up the callback by name.  If the name has the correct data embedded  within it that's great and we use that directly.  Otherwise this function  loops backwards over the callbacks currently in scope (mostly) to the start  of the parent function.  If a match is still not found this looks for a  public function of the same name.  If that isn't found either it gives up.  The new "remote" parameter returns instantly with a remote public function  stub, and no stored data.  </remarks> 
		</member>
		<member name="M:Callback_InlineByName" syntax="Callback_InlineByName(name[], tag)">
			<stacksize value="14"/>
			<referrer name="Callback_Find_"/>
			<dependency name="Callback_CallHandler_"/>
			<dependency name="Callback_Claim_"/>
			<dependency name="Callback_Release_"/>
			<dependency name="E_INLINE_CALL"/>
			<dependency name="E_INLINE_CALL_CLAIM"/>
			<dependency name="E_INLINE_CALL_FLAGS"/>
			<dependency name="E_INLINE_CALL_FUNCTION"/>
			<dependency name="E_INLINE_CALL_HANDLER"/>
			<dependency name="E_INLINE_CALL_METADATA"/>
			<dependency name="E_INLINE_CALL_NULL"/>
			<dependency name="E_INLINE_CALL_PARAMS"/>
			<dependency name="E_INLINE_CALL_RELEASE"/>
			<dependency name="E_INLINE_CALL_SIZE"/>
			<dependency name="E_INLINE_CALL_SOURCE"/>
			<dependency name="E_INLINE_CALL_TIMER"/>
			<dependency name="Indirect_Ptr_"/>
			<dependency name="Inline_NumArgs"/>
			<dependency name="Inline_Strcmp"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="Malloc_Resolve"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="RawMemCpy_"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFakeE_INLINE_CALL"/>
			<dependency name="YSI_g_sInlineLinkedList"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="charbits"/>
			<dependency name="e_INLINE_FLAG_CONST"/>
			<dependency name="false"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				Inline to find by name.
			</param>
			<param name="tag">
			</param>
			  <remarks>  Traverses up the stack to find an in-scope inline with the same name AND  SIGNATURE.  </remarks> 
		</member>
		<member name="M:Callback_LocalHandler_" syntax="Callback_LocalHandler_(...)">
			<stacksize value="1"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_Get"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="INDIRECTION_DATA"/>
			<dependency name="memcpy"/>
			<param name="...">
				The parameters passed to this function via <see>@</see>.
			</param>
			  <remarks>  When you call a local function using <c>@.name</c>, the underlying  <c>Indirect_Call</c> function jumps to a handler.  This is that handler.  The code here simply wraps <c>CallLocalFunction</c>, passing the specifier  and function name stored in <c>INDIRECTION_DATA</c>.  </remarks> 
		</member>
		<member name="M:Callback_Release" syntax="Callback_Release(input[])">
			<stacksize value="4"/>
			<dependency name="E_CALLBACK_DATA_ALLOC"/>
			<dependency name="Indirect_Release_"/>
			<param name="input">
				<paraminfo> [1] </paraminfo>
				Callback to release.
			</param>
			  <remarks>  Releases all the data associated with a given callback (closure storage).  </remarks> 
		</member>
		<member name="M:Callback_Release_" syntax="Callback_Release_(a)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<dependency name="E_INLINE_CALL_TIMER"/>
			<dependency name="KillTimer"/>
			<dependency name="Malloc_Free"/>
			<dependency name="Malloc_Reconcile"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="a">
				<paraminfo>ResolvedAlloc </paraminfo>
			</param>
		</member>
		<member name="M:Callback_RemoteHandler_" syntax="Callback_RemoteHandler_(...)">
			<stacksize value="1"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="Callback_Get"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="INDIRECTION_DATA"/>
			<dependency name="memcpy"/>
			<param name="...">
				The parameters passed to this function via <see>@</see>.
			</param>
			  <remarks>  When you call a remote function using <c>@.name</c>, the underlying  <c>Indirect_Call</c> function jumps to a handler.  This is that handler.  The code here simply wraps <c>CallRemoteFunction</c>, passing the specifier  and function name stored in <c>INDIRECTION_DATA</c>, which is  assumed to be  a pointer to <c>enum E_PUBLIC_CALL</c>.  </remarks> 
		</member>
		<member name="M:Callback_Restore_" syntax="Callback_Restore_(...)">
			<stacksize value="12"/>
			<dependency name="E_INLINE_CALL_FLAGS"/>
			<dependency name="E_INLINE_CALL_PARAMS"/>
			<dependency name="E_INLINE_CALL_SIZE"/>
			<dependency name="E_INLINE_CALL_SOURCE"/>
			<dependency name="E_INLINE_CALL_TIMER"/>
			<dependency name="GetFramePreviousFrame"/>
			<dependency name="GetFrameReturn"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="Indirect_DePtr_"/>
			<dependency name="RawMemCpy_"/>
			<dependency name="SetFramePreviousFrame"/>
			<dependency name="SetFrameReturn"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="getarg"/>
			<dependency name="true"/>
			<param name="...">
				Info on the restoration function.
			</param>
			  <remarks>  Makes variables referenced, instead of valued.  When used after  "Callback_Call" the values of any variables in the enclosing function that  were modified in the inline function will be propgated so that their new  values are seen by the original parent function (rather than that function  still seeing the original values prior to the inline function modifying  them).  Note that this does no checks at all at the minute - if you call an  inline function whose parent is not currently on the stack, this will  probably fail catastrophically!  </remarks> 
		</member>
		<member name="M:Callback_Return_" syntax="Callback_Return_(value)">
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<param name="value">
			</param>
		</member>
		<member name="M:Callback_Strcat_" syntax="Callback_Strcat_(dest, src[], len)">
			<attribute name="native"/>
			<referrer name="Callback_Get"/>
			<param name="dest">
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:CancelGangWar" syntax="CancelGangWar(gangid, enemyid, zoneid)">
			<stacksize value="60"/>
			<referrer name="GangWarTimer"/>
			<dependency name="CheckBet"/>
			<dependency name="KillTimer"/>
			<dependency name="ZoneStopFlashForAll"/>
			<dependency name="false"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_battleZone"/>
			<dependency name="gang_name"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="msgAll"/>
			<dependency name="pGangWarAttacker"/>
			<dependency name="pGangWarDefender"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarTime"/>
			<dependency name="pGangWarTimer"/>
			<dependency name="pGangZone"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="true"/>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:CancelMining" syntax="CancelMining(playerid)">
			<stacksize value="6"/>
			<referrer name="OnPlayerMining"/>
			<dependency name="MineStarted"/>
			<dependency name="RemovePlayerWeapon"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="WEAPON_SHOVEL"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="pWeapons"/>
			<dependency name="pWeapons"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CancelSelectTextDraw" syntax="CancelSelectTextDraw(playerid)">
			<attribute name="native"/>
			<referrer name="HideModelSelectionMenu"/>
			<param name="playerid">
				The ID of the player that should be the textdraw selection disabled
			</param>
			<library>a_players</library>  <summary>Cancel textdraw selection with the mouse.</summary>    <seealso name="SelectTextDraw" />  <seealso name="TextDrawSetSelectable" />  <seealso name="OnPlayerClickTextDraw" />  <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>This function calls <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a> with <b><c>INVALID_TEXT_DRAW</c></b>  (<b><c>65535</c></b>).  Using this function inside <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a>  without catching this case will cause clients to go into an infinite loop.</remarks> 
		</member>
		<member name="M:Cell_Abs" syntax="Cell_Abs(number, tag)">
			<stacksize value="1"/>
			<param name="number">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the absolute value of.
			</param>
			<param name="tag">
				The tag of the number, in case its <c>Float</c>.
			</param>
			<summary>  Cell_Abs(GLOBAL_TAG_TYPES:x, m)  </summary>      <returns>  The absolute value of a number.  </returns>  <remarks>  Get the absolute value of a number.  Floats just remove MSB.  For ints,  multiply the whole number by the MSB shifted OR 1 (1 or -1).  </remarks> 
		</member>
		<member name="M:Cell_CompressRight" syntax="Cell_CompressRight(x, m)">
			<stacksize value="12"/>
			<dependency name="Cell_CompressRightPrecomputed"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="x">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to compress.
			</param>
			<param name="m">
				The mask for which bits to compress.
			</param>
			<summary>  Cell_CompressRight(GLOBAL_TAG_TYPES:x, m);  </summary>      <returns>  Selected bits from "x", shifted to be LSBs.  </returns>  <remarks>  Doesn't require precomputation.  </remarks> 
		</member>
		<member name="M:Cell_CompressRightPrecomputed" syntax="Cell_CompressRightPrecomputed(x, m, masks[])">
			<stacksize value="2"/>
			<referrer name="Cell_CompressRight"/>
			<param name="x">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to compress.
			</param>
			<param name="m">
				The mask for which bits to compress.
			</param>
			<param name="masks">
				<paraminfo> [5] </paraminfo>
				Precomputed constants for the compression.
			</param>
			<summary>  Cell_CompressRightPrecomputed(GLOBAL_TAG_TYPES:x, m, masks[5]);  </summary>        <returns>  Selected bits from "x", shifted to be LSBs.  </returns>  <remarks>  Very briefly, do "x &amp; m", to select certain bits, then shift those bits  by various amounts so that they are consecutive:  x = 0b110011  m = 0b011010  x &amp; m = 0b010010  From here, because the mask was three bits we know we want just those three  bits in the LSBs, so the answer becomes:  0b000101  Just read this question, it has a diagram:  <a href="http://stackoverflow.com/questions/28282869/shift-masked-bits-to-the-lsb" />  </remarks> 
		</member>
		<member name="M:Cell_CountBits" syntax="Cell_CountBits(data)">
			<stacksize value="1"/>
			<referrer name="Bit_GetCount"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the number of 1s in.
			</param>
			<summary>  Cell_CountBits(number);  </summary>    <returns>  The number of 1s (set bits) in the input.  </returns>  <remarks>  1)  Example: 0  Returns: 0  2)  Example: 1  Returns: 1  3)  Example: 0x01010101  Returns: 4  I rewrote this in assembly just to see if I could pretty much.  I also  rewrote the lookup version in assembly.  In theory it should be faster, but  the marshalling of data was a little awkward.  </remarks> 
		</member>
		<member name="M:Cell_CountBlanks" syntax="Cell_CountBlanks(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the number of 0s in.
			</param>
			<summary>  Cell_CountBlanks(number);  </summary>    <returns>  The number of 0s (unset bits) in the input.  </returns>  <remarks>  Like Cell_CountBits, but for 0s not 1s.  </remarks> 
		</member>
		<member name="M:Cell_ExpandLeft" syntax="Cell_ExpandLeft(x, m)">
			<stacksize value="12"/>
			<dependency name="Cell_ExpandLeftPrecomputed"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="x">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to expand.
			</param>
			<param name="m">
				The mask for which bits to expand to.
			</param>
			<summary>  Cell_ExpandLeft(GLOBAL_TAG_TYPES:x, m)  </summary>      <returns>  LSBs from "x", shifted to selected bit positions.  </returns>  <remarks>  Doesn't require precomputation.  </remarks> 
		</member>
		<member name="M:Cell_ExpandLeftPrecomputed" syntax="Cell_ExpandLeftPrecomputed(x, m, masks[])">
			<stacksize value="2"/>
			<referrer name="Cell_ExpandLeft"/>
			<param name="x">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to expand.
			</param>
			<param name="m">
				The mask for which bits to expand to.
			</param>
			<param name="masks">
				<paraminfo> [5] </paraminfo>
				Precomputed constants for the expansion.
			</param>
			<summary>  Cell_ExpandLeftPrecomputed(GLOBAL_TAG_TYPES:x, m, masks[5])  </summary>        <returns>  LSBs from "x", shifted to selected bit positions.  </returns>  <remarks>  The reverse of "Cell_CompressRightPrecomputed".  Doesn't return exactly the  original number before a compression, just the original number ANDed with  the mask "m".  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBit" syntax="Cell_GetLowestBit(data)">
			<stacksize value="1"/>
			<referrer name="Iter_Func@Bits"/>
			<referrer name="Iter_Func@Blanks"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest set bit of.
			</param>
			<summary>  Cell_GetLowestBit(number);  </summary>    <returns>  The integer position of the lowest set bit.  </returns>  <remarks>  1)  Example: 0b00000000000000000000000000000001  Returns: 0  2)  Example: 0b00000000000000000000000000001000  Returns: 3  3)  Example: 0b00010001100011000011100010001000  Returns: 3  NOTE: This function returns "0" for both numbers with the "1" bit set AND  the number "0", which has NO bits set.  Check that the number is valid  before passing it to this function.  See: <a href="http://supertech.csail.mit.edu/papers/debruijn.pdf" />  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBitEx" syntax="Cell_GetLowestBitEx(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest set bit of PLUS ONE.
			</param>
			<summary>  Cell_GetLowestBitEx(number);  </summary>    <returns>  The integer position of the lowest set bit PLUS ONE.  </returns>  <remarks>  This function is identical to "Cell_GetLowestBit", but gives different  results for 0 and non-zero numbers.  The examples below all have a result  one higher than the "Cell_GetLowestBit" function.  1)  Example: 0b00000000000000000000000000000001  Returns: 1  2)  Example: 0b00000000000000000000000000001000  Returns: 4  3)  Example: 0b00010001100011000011100010001000  Returns: 4  4)  Example: 0  Returns: 0  See: <a href="http://supertech.csail.mit.edu/papers/debruijn.pdf" />  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBlank" syntax="Cell_GetLowestBlank(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest unset bit of.
			</param>
			<summary>  Cell_GetLowestBlank(number);  </summary>    <returns>  The integer position of the lowest unset bit.  </returns>  <remarks>  Like Cell_GetLowestBit, but for 0s not 1s.  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBlankEx" syntax="Cell_GetLowestBlankEx(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest unset bit of PLUS ONE.
			</param>
			<summary>  Cell_GetLowestBlankEx(number);  </summary>    <returns>  The integer position of the lowest unset bit PLUS ONE.  </returns>  <remarks>  Like Cell_GetLowestBitEx, but for 0s not 1s.  </remarks> 
		</member>
		<member name="M:Cell_PrecomputeMaskPermutation" syntax="Cell_PrecomputeMaskPermutation(m)">
			<stacksize value="10"/>
			<referrer name="Cell_CompressRight"/>
			<referrer name="Cell_ExpandLeft"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="m">
				The mask.
			</param>
			<summary>  Cell_PrecomputeMaskPermutation(m)  </summary>    <returns>  Five precomputed constants to help expand or contract this mask.  </returns>  <remarks>  The full maths for generalised expansion and contraction is quite complex;  however, much of the inner loop relies only on the mask and not on the value  being manipulated.  Given this we can do a lot of work in advance, say  outside a loop, to avoid repeated calculations.  </remarks> 
		</member>
		<member name="M:Cell_ReverseBits" syntax="Cell_ReverseBits(data)">
			<stacksize value="1"/>
			<dependency name="swapchars"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to manipulate.
			</param>
			<summary>  Cell_ReverseBits(number);  </summary>    <returns>  All the bits in the input reversed.  </returns>  <remarks>  1)  Example: 0b11110000000000000000000000000000  Becomes: 0b00000000000000000000000000001111  2)  Example: 0b10110011100011110000111110000010  Becomes: 0b01000001111100001111000111001101  3)  Example: 0b01010101010101010101010101010101  Becomes: 0b10101010101010101010101010101010  </remarks> 
		</member>
		<member name="M:Cell_ReverseNibbles" syntax="Cell_ReverseNibbles(data)">
			<stacksize value="1"/>
			<dependency name="swapchars"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to manipulate.
			</param>
			<summary>  Cell_ReverseNibbles(number);  </summary>    <returns>  All the nibbles (4-bit chunks) in the input reversed.  </returns>  <remarks>  1)  Example: 0x12345678  Becomes: 0x87654321  2)  Example: 0x010F0703  Becomes: 0x3070F010  3)  Example: 0xF0F0F0F0  Becomes: 0x0F0F0F0F  </remarks> 
		</member>
		<member name="M:ChangePrivCarModel" syntax="ChangePrivCarModel(playerid, privcarid, modelid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="DestroyPrivCar"/>
			<dependency name="RunPrivCarManage"/>
			<dependency name="SetTimerEx"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="pVehModel"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ChangeVehicleColor" syntax="ChangeVehicleColor(vehicleid, colour1, colour2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="pc_cmd_lakier"/>
			<param name="vehicleid">
				The ID of the vehicle to change the colours of
			</param>
			<param name="colour1">
				The new vehicle's primary <a href="http://wiki.sa-mp.com/wiki/Color_ID">Color  ID</a>
			</param>
			<param name="colour2">
				The new vehicle's secondary <a href="http://wiki.sa-mp.com/wiki/Color_ID">Color  ID</a>
			</param>
			<library>a_vehicles</library>  <summary>Change a vehicle's primary and secondary colours.</summary>        <seealso name="ChangeVehiclePaintjob" />  <seealso name="OnVehicleRespray" />  <remarks>Some vehicles have only a primary colour and some can not have the colour changed at all.  A few (cement, squallo) have 4 colours, of which 2 can not be changed in SA:MP</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  The vehicle's colour was successfully changed.<br  />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:ChangeVehiclePaintjob" syntax="ChangeVehiclePaintjob(vehicleid, paintjobid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_ChangeVehiclePaintjob"/>
			<referrer name="orig_ChangeVehiclePaintjob"/>
			<param name="vehicleid">
				The ID of the vehicle to change the paintjob of
			</param>
			<param name="paintjobid">
				The ID of the Paintjob to apply.  Use <b><c>3</c></b> to remove a paintjob
			</param>
			<library>a_vehicles</library>  <summary>Change a vehicle's paintjob (for plain colours see <a href="#ChangeVehicleColor">ChangeVehicleColor</a>).</summary>      <seealso name="ChangeVehicleColor" />  <seealso name="OnVehiclePaintjob" />  <remarks>  <b>Known Bugs:</b><br />  This function calls <a href="#OnVehicleRespray">OnVehicleRespray</a>.<br />  Vehicles change their colour to white anymore when a paintjob is removed.  </remarks>  <returns>This function always returns <b><c>1</c></b> (success), even if the vehicle passed is not  created.</returns> 
		</member>
		<member name="M:CheckAdminList" syntax="CheckAdminList(rankid, count)">
			<stacksize value="280"/>
			<referrer name="pc_cmd_admins"/>
			<dependency name="CheckAdminList"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="catstr"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_isFake"/>
			<dependency name="player_nickname"/>
			<param name="rankid">
			</param>
			<param name="count">
			</param>
		</member>
		<member name="M:CheckBaseTimer" syntax="CheckBaseTimer(playerid)">
			<stacksize value="8"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GangBaseOwner"/>
			<dependency name="GangBaseSettings"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="player_gangbase"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckBet" syntax="CheckBet(betid, typeid, winner)">
			<stacksize value="12"/>
			<referrer name="CheckDuel"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PLAYER_STATE_SPECTATING"/>
			<dependency name="SpecToggle"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="addLevelScore"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="pBetAccept"/>
			<dependency name="pBetGang"/>
			<dependency name="pBetReward"/>
			<dependency name="pBetTarget"/>
			<dependency name="pBetType"/>
			<dependency name="pSpectate"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<param name="betid">
			</param>
			<param name="typeid">
			</param>
			<param name="winner">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CheckDuel" syntax="CheckDuel(playerid, killerid, surrender_playerid)">
			<stacksize value="16"/>
			<referrer name="CheckDuelKiller"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="ACH_DUEL"/>
			<dependency name="CheckBet"/>
			<dependency name="CheckDuelRank"/>
			<dependency name="CheckQuest"/>
			<dependency name="GetTickCount"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="ResetDuelData"/>
			<dependency name="WC_GetPlayerArmour"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="achievement"/>
			<dependency name="false"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pDuelPoints"/>
			<dependency name="pDuelRoundCount"/>
			<dependency name="pDuelTick"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="surrender_playerid">
			</param>
		</member>
		<member name="M:CheckDuelKiller" syntax="CheckDuelKiller(playerid, killerid)">
			<stacksize value="5"/>
			<referrer name="WC_OnPlayerDeath"/>
			<dependency name="CheckDuel"/>
			<dependency name="UpdateDuelBox"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pDuelRoundCount"/>
			<dependency name="pDuelRounds"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:CheckDuelRank" syntax="CheckDuelRank(playerid, score, lost_score)">
			<stacksize value="35"/>
			<referrer name="CheckDuel"/>
			<dependency name="DUEL_RANK_BRONZE"/>
			<dependency name="DUEL_RANK_CHAMPION"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getDuelName"/>
			<dependency name="getDuelName"/>
			<dependency name="getDuelPoints"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pDuelPoints"/>
			<dependency name="pDuelRank"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<param name="playerid">
			</param>
			<param name="score">
			</param>
			<param name="lost_score">
			</param>
		</member>
		<member name="M:CheckEvent" syntax="CheckEvent(playerid)">
			<stacksize value="1"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evtdmspawn"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evczas"/>
			<referrer name="pc_cmd_evpogoda"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="pc_cmd_evzone"/>
			<referrer name="pc_cmd_evpanel"/>
			<referrer name="pc_cmd_evsettings"/>
			<dependency name="EventLeader"/>
			<dependency name="EventStarted"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckGangAchievement" syntax="CheckGangAchievement(gangid, achievementid)">
			<stacksize value="10"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="WC_OnPlayerDeath"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GetGangAchievementStatus"/>
			<dependency name="GetGangAchievements"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="addGangScore"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="gangAchievementData"/>
			<dependency name="gangAchievementData"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_achievement_name"/>
			<dependency name="gang_achievement_needed"/>
			<dependency name="gang_achievement_reward"/>
			<dependency name="gang_color"/>
			<dependency name="gang_tag"/>
			<dependency name="giveGangBudget"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGangAchievement"/>
			<dependency name="pGangAchievement"/>
			<dependency name="pGangAchievementStatus"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<param name="gangid">
			</param>
			<param name="achievementid">
			</param>
		</member>
		<member name="M:CheckGangBase" syntax="CheckGangBase(gangid)">
			<stacksize value="3"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_brama"/>
			<referrer name="pc_cmd_tspawn"/>
			<referrer name="pc_cmd_baza"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="GangBaseOwner"/>
			<dependency name="GangBaseSell"/>
			<dependency name="Iterator@GangBases"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:CheckGangWar" syntax="CheckGangWar(gangid, enemyid, zoneid)">
			<stacksize value="263"/>
			<referrer name="GangWarTimer"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="CheckBet"/>
			<dependency name="CheckGangAchievement"/>
			<dependency name="ConquestGangReward"/>
			<dependency name="HideZoneForAll"/>
			<dependency name="IsPlayerInDynamicArea"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="ShowZoneForAll"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdateGangZoneLabel"/>
			<dependency name="UpdateGangZoneLabel"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="ZoneStopFlashForAll"/>
			<dependency name="addGangScore"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_battleZone"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="giveGangBudget"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGangWarAttacker"/>
			<dependency name="pGangWarDamage"/>
			<dependency name="pGangWarDefender"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarTime"/>
			<dependency name="pGangWarTimer"/>
			<dependency name="pGangZone"/>
			<dependency name="pGangZoneArea"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneLabel"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZoneRectangle"/>
			<dependency name="true"/>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:CheckGrzybiarzZone" syntax="CheckGrzybiarzZone(playerid)">
			<stacksize value="8"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="pJob"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckHeistVault" syntax="CheckHeistVault(playerid)">
			<stacksize value="8"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="VW_HEIST"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="bankHeistGas"/>
			<dependency name="false"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_vault"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckMysliwyZone" syntax="CheckMysliwyZone(playerid)">
			<stacksize value="8"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="pJob"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckPlayerAFK" syntax="CheckPlayerAFK(playerid)">
			<stacksize value="6"/>
			<referrer name="SecondTimer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="dialogBox"/>
			<dependency name="pAFK"/>
			<dependency name="pAFKPosition"/>
			<dependency name="pAFKPosition"/>
			<dependency name="pAFKTime"/>
			<dependency name="pc_cmd_zw"/>
			<dependency name="playerData"/>
			<dependency name="player_logged"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckPlayerBanned" syntax="CheckPlayerBanned(playerid, accountID)">
			<stacksize value="430"/>
			<referrer name="FindAccount"/>
			<dependency name="ConvertTime"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="KickEx"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="mysql_pquery"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_ipaddress"/>
			<dependency name="player_serial"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="accountID">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CheckPlayerBattle" syntax="CheckPlayerBattle(playerid)">
			<stacksize value="137"/>
			<referrer name="OnPlayerCommandReceived"/>
			<dependency name="ConvertTime"/>
			<dependency name="ConvertTime"/>
			<dependency name="gettime"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_battleTimer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckPlayerGame" syntax="CheckPlayerGame(playerid)">
			<stacksize value="6"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="pc_cmd_sparspec"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="pc_cmd_ev"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="false"/>
			<dependency name="pArena"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pGame"/>
			<dependency name="pGlitchArena"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckPlayerMuted" syntax="CheckPlayerMuted(playerid)">
			<stacksize value="10"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="ConvertTime"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_mutetime"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckPlayerOnline" syntax="CheckPlayerOnline(aid)">
			<stacksize value="3"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<dependency name="Iterator@Player"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<param name="aid">
			</param>
		</member>
		<member name="M:CheckPlayerRaported" syntax="CheckPlayerRaported(playerid)">
			<stacksize value="5"/>
			<referrer name="pc_cmd_raport"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="RaportCount"/>
			<dependency name="false"/>
			<dependency name="raportData"/>
			<dependency name="raportData"/>
			<dependency name="raport_active"/>
			<dependency name="raport_targetid"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckPlayerTeleport" syntax="CheckPlayerTeleport(cmd[])">
			<stacksize value="8"/>
			<referrer name="EnterTeleport"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<dependency name="Iterator@Teleports"/>
			<dependency name="strmatch"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_cmd"/>
			<dependency name="true"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CheckQuest" syntax="CheckQuest(playerid, questid)">
			<stacksize value="136"/>
			<referrer name="CheckDuel"/>
			<referrer name="_@yHOnPlayerDeath@06"/>
			<referrer name="MagazynPacked"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="GetQuestName"/>
			<dependency name="GetQuestName"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="addLevelScore"/>
			<dependency name="daily_required"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyMoney"/>
			<dependency name="pDailyQuest"/>
			<dependency name="pDailyStatus"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="questListData"/>
			<dependency name="strdot"/>
			<dependency name="tdQuest"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="questid">
			</param>
		</member>
		<member name="M:CheckRankedLevel" syntax="CheckRankedLevel(gangid, score, lost_score)">
			<stacksize value="37"/>
			<referrer name="CheckRankedMatch"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="SPARING_RANK_BRONZE"/>
			<dependency name="SPARING_RANK_CHAMPION"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_tag"/>
			<dependency name="getRankingName"/>
			<dependency name="getRankingName"/>
			<dependency name="getRankingPoints"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGangSparRank"/>
			<dependency name="pGangSparRankedScore"/>
			<param name="gangid">
			</param>
			<param name="score">
			</param>
			<param name="lost_score">
			</param>
		</member>
		<member name="M:CheckRankedMatch" syntax="CheckRankedMatch(winner, losser, win_score, lost_score)">
			<stacksize value="10"/>
			<referrer name="CheckSparing"/>
			<dependency name="CheckGangAchievement"/>
			<dependency name="CheckRankedLevel"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="false"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budgetDraw"/>
			<dependency name="pGangSparRankedScore"/>
			<dependency name="textDrawSetString"/>
			<param name="winner">
			</param>
			<param name="losser">
			</param>
			<param name="win_score">
			</param>
			<param name="lost_score">
			</param>
		</member>
		<member name="M:CheckSparing" syntax="CheckSparing(winner, losser, initiator, rivality, remis)">
			<stacksize value="20"/>
			<referrer name="SparingTimer"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckBet"/>
			<dependency name="CheckRankedMatch"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SORT_DESC"/>
			<dependency name="SortDeepArray_Entry"/>
			<dependency name="StopSparing"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="g_sort_cmp_array"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_spar_loss"/>
			<dependency name="gang_spar_remis"/>
			<dependency name="gang_spar_win"/>
			<dependency name="gang_tag"/>
			<dependency name="giveGangBudget"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="pGang"/>
			<dependency name="pGangSparLimit"/>
			<dependency name="pGangSparPoints"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sparingKillerData"/>
			<dependency name="sparingKillerData"/>
			<dependency name="sparing_damage"/>
			<dependency name="sparing_kills"/>
			<dependency name="sparing_playerid"/>
			<dependency name="true"/>
			<param name="winner">
			</param>
			<param name="losser">
			</param>
			<param name="initiator">
			</param>
			<param name="rivality">
			</param>
			<param name="remis">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CheckTruckTimer" syntax="CheckTruckTimer(playerid)">
			<stacksize value="9"/>
			<referrer name="SecondTimer"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsTrailerAttachedToVehicle"/>
			<dependency name="SetPVarInt"/>
			<dependency name="Truck_Stop"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="pTruck"/>
			<dependency name="pTruckTowar"/>
			<dependency name="pTruckVehicle"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CheckVaultNear" syntax="CheckVaultNear(playerid)">
			<stacksize value="9"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="vaultPositionData"/>
			<dependency name="vaultPositionData"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ChrFind" syntax="ChrFind(needle, haystack[], start)">
			<stacksize value="8"/>
			<referrer name="chrfind"/>
			<referrer name="chrfindp"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<param name="needle">
				The character to find.
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
				The string to find it in.
			</param>
			<param name="start">
				The offset to start from.
			</param>
			      <returns>  Fail - -1, Success - pos  </returns> 
		</member>
		<member name="M:ClearAnimations" syntax="ClearAnimations(playerid, forceSync)">
			<attribute name="native"/>
			<referrer name="WC_ClearAnimations"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="WC_CbugPunishment"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="PlayerDeath"/>
			<param name="playerid">
				The ID of the player to clear the animations of
			</param>
			<param name="forceSync">
				Set to <b><c>1</c></b> to force playerid to sync the animation with other  players in streaming radius (optional=<b><c>0</c></b>)
			</param>
			<library>a_players</library>  <summary>Clears all animations for the given player (it also cancels all current tasks such as jetpacking,parachuting,entering  vehicles, driving (removes player out of vehicle), swimming, etc.. ).</summary>      <seealso name="ApplyAnimation" />  <remarks>ClearAnimations doesn't do anything when the animation ends if we pass 1 for the freeze  parameter in <a href="#ApplyAnimation">ApplyAnimation</a>.</remarks>  <remarks>Unlike some other ways to remove player from a vehicle, this will also reset the vehicle's  velocity to zero, instantly stopping the car.  Player will appear on top of the vehicle with the  same location as he was in his car seat.</remarks>  <returns>This function always returns <b><c>1</c></b>, even when the player specified is not connected.</returns> 
		</member>
		<member name="M:ClearAnimationsForPlayer" syntax="ClearAnimationsForPlayer(playerid, forplayerid)">
			<stacksize value="9"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<dependency name="BS_Delete"/>
			<dependency name="BS_New"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PR_SendRPC"/>
			<dependency name="PR_UINT16"/>
			<dependency name="WC_RPC_CLEAR_ANIMATIONS"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:ClearDialogListitems" syntax="ClearDialogListitems(playerid)">
			<stacksize value="1"/>
			<referrer name="AddDialogListitem"/>
			<referrer name="NDP_DialogInvoke"/>
			<referrer name="pc_cmd_osiagniecia"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<dependency name="NDP_P"/>
			<dependency name="NDP_P"/>
			<dependency name="false"/>
			<dependency name="ndp_backbutton"/>
			<dependency name="ndp_button1"/>
			<dependency name="ndp_button2"/>
			<dependency name="ndp_caption"/>
			<dependency name="ndp_dialogName"/>
			<dependency name="ndp_dialogitemscount"/>
			<dependency name="ndp_dialogopened"/>
			<dependency name="ndp_nextbutton"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CodeScanAddJumpTarget" syntax="CodeScanAddJumpTarget(cip, stk, hea, jumpTargets[], num)">
			<stacksize value="4"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_jump_heap"/>
			<dependency name="CodeScanner_jump_stack"/>
			<dependency name="CodeScanner_jump_switch"/>
			<dependency name="CodeScanner_jump_target"/>
			<dependency name="CodeScanner_minn"/>
			<dependency name="min"/>
			<param name="cip">
			</param>
			<param name="stk">
			</param>
			<param name="hea">
			</param>
			<param name="jumpTargets">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="num">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanAddMatcher" syntax="CodeScanAddMatcher(scanner[], searcher[])">
			<stacksize value="4"/>
			<referrer name="AddressofResolve"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanner_first"/>
			<dependency name="ref"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="searcher">
				<paraminfo> [171] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanAddSwitchTarget" syntax="CodeScanAddSwitchTarget(dctx[], stk, hea, jumpTargets[], num)">
			<stacksize value="6"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="CodeScanner_jump_heap"/>
			<dependency name="CodeScanner_jump_stack"/>
			<dependency name="CodeScanner_jump_switch"/>
			<dependency name="CodeScanner_jump_target"/>
			<dependency name="CodeScanner_minn"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gBase"/>
			<dependency name="gHdr"/>
			<dependency name="gOP_CASETBL"/>
			<dependency name="min"/>
			<param name="dctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="stk">
			</param>
			<param name="hea">
			</param>
			<param name="jumpTargets">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="num">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanCall" syntax="CodeScanCall(cs[], matcher__, csState[])">
			<stacksize value="3"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanRun"/>
			<dependency name="CodeScanMatcher_flags"/>
			<dependency name="CodeScanMatcher_func"/>
			<dependency name="CodeScanMatcher_user_data"/>
			<param name="cs">
				<paraminfo> [171] </paraminfo>
			</param>
			<param name="matcher__">
			</param>
			<param name="csState">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanCheck" syntax="CodeScanCheck(op, dctx[], cs[], matcher__, fctx[], &amp;next)">
			<tagname value="bool"/>
			<stacksize value="12"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanRun"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="CodeScanMatch_hole_count"/>
			<dependency name="CodeScanMatch_holes"/>
			<dependency name="CodeScanMatch_size"/>
			<dependency name="CodeScanMatcher_code"/>
			<dependency name="CodeScanMatcher_flags"/>
			<dependency name="CodeScanMatcher_holeidx"/>
			<dependency name="CodeScanMatcher_holes"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanMatcher_offset"/>
			<dependency name="CodeScanMatcher_start"/>
			<dependency name="CodeScanMatcher_type"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="OP_BOUNDS"/>
			<dependency name="OP_BREAK"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_HALT"/>
			<dependency name="OP_NOP"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="gAMXOpcodeParameterCounts"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="memcpy"/>
			<dependency name="true"/>
			<param name="op">
				<paraminfo>Opcode </paraminfo>
			</param>
			<param name="dctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="cs">
				<paraminfo> [171] </paraminfo>
			</param>
			<param name="matcher__">
			</param>
			<param name="fctx">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanCheckJumpTarget" syntax="CodeScanCheckJumpTarget(cip, deloc, &amp;stk, &amp;hea, jumpTargets[], num)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_jump_heap"/>
			<dependency name="CodeScanner_jump_stack"/>
			<dependency name="CodeScanner_jump_switch"/>
			<dependency name="CodeScanner_jump_target"/>
			<dependency name="CodeScanner_minn"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="true"/>
			<param name="cip">
			</param>
			<param name="deloc">
			</param>
			<param name="stk">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="hea">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="jumpTargets">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="num">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanClone" syntax="CodeScanClone(dest[], src[])">
			<stacksize value="1"/>
			<dependency name="CodeScanner_first"/>
			<param name="dest">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="src">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanFindOneFastPattern2" syntax="CodeScanFindOneFastPattern2(matcher[], matcher__, &amp;addr)">
			<tagname value="bool"/>
			<stacksize value="10"/>
			<referrer name="CodeScanRunFast"/>
			<dependency name="CodeScanFindOneFastPattern3"/>
			<dependency name="CodeScanMatcher_code"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanMatcher_type"/>
			<dependency name="OP_CALL"/>
			<dependency name="false"/>
			<dependency name="gFakeMatcher"/>
			<dependency name="true"/>
			<param name="matcher">
				<paraminfo> [171] </paraminfo>
			</param>
			<param name="matcher__">
			</param>
			<param name="addr">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanFindOneFastPattern3" syntax="CodeScanFindOneFastPattern3(matcher[], matcher__, addr, &amp;cur)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<referrer name="CodeScanFindOneFastPattern2"/>
			<dependency name="CodeScanMatcher_code"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanMatcher_type"/>
			<dependency name="OP_CALL"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="matcher">
				<paraminfo> [171] </paraminfo>
			</param>
			<param name="matcher__">
			</param>
			<param name="addr">
			</param>
			<param name="cur">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetFuncName" syntax="CodeScanGetFuncName(addr, name[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<referrer name="CodeScanGetMatchType"/>
			<dependency name="GetPublicIndexFromAddress"/>
			<dependency name="GetPublicNameFromIndex"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="addr">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetFunctionAsm" syntax="CodeScanGetFunctionAsm(csm[], ctx[], offset)">
			<stacksize value="6"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="cellmax"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetFunctionDisasm" syntax="CodeScanGetFunctionDisasm(csm[], ctx[], offset)">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetFunctionScanner" syntax="CodeScanGetFunctionScanner(csm[], ret[], ctx[])">
			<stacksize value="4"/>
			<referrer name="CodeScanGetMatchScanner"/>
			<dependency name="CodeScanInit"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="CodeScanMatch_type"/>
			<dependency name="CodeScanner_state"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="ret">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetHoleCount" syntax="CodeScanGetHoleCount(csm[])">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_hole_count"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchAddress" syntax="CodeScanGetMatchAddress(csm[])">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_FoundStart"/>
			<referrer name="Inline_FoundEnd"/>
			<referrer name="Inline_FoundDestructor"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="gDat"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchAddressData" syntax="CodeScanGetMatchAddressData(csm[])">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="CodeScanMatch_cip"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchAsm" syntax="CodeScanGetMatchAsm(csm[], ctx[], offset)">
			<stacksize value="6"/>
			<referrer name="AddressofResolveFoundStart"/>
			<referrer name="AddressofResolveFoundEnd"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_FoundUsingInline"/>
			<referrer name="Inline_FoundDestructor"/>
			<referrer name="Inline_Found@return"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="cellmax"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchDisasm" syntax="CodeScanGetMatchDisasm(csm[], ctx[], offset)">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="offset">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchFunc" syntax="CodeScanGetMatchFunc(csm[])">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="gDat"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchFuncData" syntax="CodeScanGetMatchFuncData(csm[])">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_func"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchHeap" syntax="CodeScanGetMatchHeap(csm[])">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_heap"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchHole" syntax="CodeScanGetMatchHole(csm[], idx)">
			<stacksize value="1"/>
			<referrer name="AddressofResolveFoundStart"/>
			<referrer name="AddressofResolveFoundEnd"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_FoundStart"/>
			<referrer name="Inline_FoundMid"/>
			<referrer name="Inline_FoundConst"/>
			<referrer name="Inline_FoundRef"/>
			<referrer name="Inline_FoundUsingInline"/>
			<referrer name="Inline_FoundDestructor"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="CodeScanMatch_holes"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="idx">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchLength" syntax="CodeScanGetMatchLength(csm[])">
			<stacksize value="1"/>
			<referrer name="AddressofResolveFoundEnd"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_FoundEnd"/>
			<referrer name="Inline_FoundUsingInline"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="CodeScanMatch_size"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchName" syntax="CodeScanGetMatchName(csm[], name[])">
			<stacksize value="5"/>
			<dependency name="CodeScanGetMatchType"/>
			<dependency name="CodeScanMatch_name"/>
			<dependency name="CodeScanMatch_type"/>
			<dependency name="strcat"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchScanner" syntax="CodeScanGetMatchScanner(csm[], ret[], ctx[], accurate)">
			<stacksize value="7"/>
			<dependency name="CodeScanGetFunctionScanner"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_param"/>
			<dependency name="CodeScanner_state"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="ret">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="accurate">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchStack" syntax="CodeScanGetMatchStack(csm[])">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_FoundStart"/>
			<referrer name="Inline_FoundMid"/>
			<referrer name="Inline_Found@return"/>
			<dependency name="CodeScanMatch_stack"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanGetMatchType" syntax="CodeScanGetMatchType(csm[])">
			<stacksize value="5"/>
			<referrer name="CodeScanGetMatchName"/>
			<dependency name="CodeScanGetFuncName"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="CodeScanMatch_name"/>
			<dependency name="CodeScanMatch_type"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanInit" syntax="CodeScanInit(scanner[])">
			<stacksize value="5"/>
			<referrer name="CodeScanGetFunctionScanner"/>
			<referrer name="AddressofResolve"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="CodeScanMatch_heap"/>
			<dependency name="CodeScanMatch_name"/>
			<dependency name="CodeScanMatch_params"/>
			<dependency name="CodeScanMatch_stack"/>
			<dependency name="CodeScanMatch_type"/>
			<dependency name="CodeScanResetJumpTargets"/>
			<dependency name="CodeScanner_first"/>
			<dependency name="CodeScanner_param"/>
			<dependency name="CodeScanner_state"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_NOP"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="gBase"/>
			<dependency name="gCodBase"/>
			<dependency name="gDat"/>
			<dependency name="gHdr"/>
			<dependency name="gOP_CASETBL"/>
			<dependency name="gOP_NOP"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanMatcherData" syntax="CodeScanMatcherData(searcher[], val)">
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanMatcher_flags"/>
			<dependency name="CodeScanMatcher_user_data"/>
			<param name="searcher">
				<paraminfo> [171] </paraminfo>
			</param>
			<param name="val">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanMatcherInit_" syntax="CodeScanMatcherInit_(searcher[], address, flags)">
			<stacksize value="3"/>
			<referrer name="AddressofResolve"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanMatcher_flags"/>
			<dependency name="CodeScanMatcher_func"/>
			<dependency name="CodeScanMatcher_holeidx"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanMatcher_offset"/>
			<dependency name="CodeScanMatcher_user_data"/>
			<dependency name="DisasmInitUnsafe"/>
			<dependency name="IsOpcodeRelocationRequired"/>
			<dependency name="gRelocateRequired"/>
			<param name="searcher">
				<paraminfo> [171] </paraminfo>
			</param>
			<param name="address">
			</param>
			<param name="flags">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanMatcherPattern_" syntax="CodeScanMatcherPattern_(searcher[], ...)">
			<stacksize value="11"/>
			<referrer name="AddressofResolve"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanMatcher_code"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_type"/>
			<dependency name="gAMXOpcodeParameterCounts"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<param name="searcher">
				<paraminfo> [171] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Opcode,Float,_} </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanNOPMatch" syntax="CodeScanNOPMatch(csm[])">
			<stacksize value="3"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="CodeScanMatch_size"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="gOP_NOP"/>
			<param name="csm">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanReset" syntax="CodeScanReset(cs[], matcher__, &amp;next)">
			<stacksize value="1"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanRun"/>
			<dependency name="CodeScanMatcher_func"/>
			<dependency name="CodeScanMatcher_holeidx"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanMatcher_offset"/>
			<param name="cs">
				<paraminfo> [171] </paraminfo>
			</param>
			<param name="matcher__">
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanResetJumpTargets" syntax="CodeScanResetJumpTargets(jumpTargets[], num)">
			<stacksize value="1"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanInit"/>
			<dependency name="CodeScanner_jump_target"/>
			<dependency name="CodeScanner_minn"/>
			<param name="jumpTargets">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="num">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanRun" syntax="CodeScanRun(csState[])">
			<tagname value="bool"/>
			<stacksize value="18"/>
			<referrer name="CodeScanRunFast"/>
			<dependency name="CodeScanCall"/>
			<dependency name="CodeScanCheck"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="CodeScanReset"/>
			<dependency name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_first"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmContext_start_ip"/>
			<dependency name="OP_NONE"/>
			<dependency name="cellmin"/>
			<dependency name="gFakeMatcher"/>
			<dependency name="true"/>
			<param name="csState">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanRunFast" syntax="CodeScanRunFast(csState[], searchFuncAddr)">
			<tagname value="bool"/>
			<stacksize value="21"/>
			<referrer name="AddressofResolve"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanCall"/>
			<dependency name="CodeScanCheck"/>
			<dependency name="CodeScanFindOneFastPattern2"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="CodeScanReset"/>
			<dependency name="CodeScanRun"/>
			<dependency name="CodeScanRunFastPrescanLocated"/>
			<dependency name="CodeScanRunFastPrescanRelocate"/>
			<dependency name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_first"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmContext_start_ip"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="OP_NONE"/>
			<dependency name="OP_PROC"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="gDat"/>
			<dependency name="gFakeMatcher"/>
			<dependency name="gRelocateRequired"/>
			<dependency name="print"/>
			<dependency name="true"/>
			<param name="csState">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="searchFuncAddr">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanRunFastPrescanLocated" syntax="CodeScanRunFastPrescanLocated(&amp;proc, &amp;nextaddr, searchFuncAddr)">
			<stacksize value="3"/>
			<referrer name="CodeScanRunFast"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_NONE"/>
			<dependency name="OP_PROC"/>
			<dependency name="false"/>
			<dependency name="gAMXOpcodeBaseSizes"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gCodBase"/>
			<dependency name="true"/>
			<param name="proc">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="nextaddr">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="searchFuncAddr">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanRunFastPrescanRelocate" syntax="CodeScanRunFastPrescanRelocate(&amp;proc, &amp;nextaddr, searchFuncAddr)">
			<stacksize value="6"/>
			<referrer name="CodeScanRunFast"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_NONE"/>
			<dependency name="OP_PROC"/>
			<dependency name="UnrelocateOpcode"/>
			<dependency name="false"/>
			<dependency name="gAMXOpcodeBaseSizes"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gCodBase"/>
			<dependency name="true"/>
			<param name="proc">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="nextaddr">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="searchFuncAddr">
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanStep" syntax="CodeScanStep(dctx[], csState[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_param"/>
			<dependency name="CodeScanner_state"/>
			<param name="dctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="csState">
				<paraminfo> [172] </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CodeScanStepInternal" syntax="CodeScanStepInternal(dctx[], csState[], &amp;parseState, &amp;parseParam)">
			<tagname value="bool"/>
			<stacksize value="13"/>
			<referrer name="CodeScanStep"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="CodeScanRun"/>
			<referrer name="CodeScanGetMatchScanner"/>
			<dependency name="CodeScanAddJumpTarget"/>
			<dependency name="CodeScanAddSwitchTarget"/>
			<dependency name="CodeScanCheckJumpTarget"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="CodeScanMatch_heap"/>
			<dependency name="CodeScanMatch_stack"/>
			<dependency name="CodeScanMatch_type"/>
			<dependency name="CodeScanResetJumpTargets"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmDecodeInsnUnsafe"/>
			<dependency name="OP_ADD_C"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CALL_PRI"/>
			<dependency name="OP_HALT"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_JEQ"/>
			<dependency name="OP_JGEQ"/>
			<dependency name="OP_JGRTR"/>
			<dependency name="OP_JLEQ"/>
			<dependency name="OP_JLESS"/>
			<dependency name="OP_JNEQ"/>
			<dependency name="OP_JNZ"/>
			<dependency name="OP_JREL"/>
			<dependency name="OP_JSGEQ"/>
			<dependency name="OP_JSGRTR"/>
			<dependency name="OP_JSLEQ"/>
			<dependency name="OP_JSLESS"/>
			<dependency name="OP_JUMP"/>
			<dependency name="OP_JZER"/>
			<dependency name="OP_LCTRL"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_POP_ALT"/>
			<dependency name="OP_POP_PRI"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_PUSH"/>
			<dependency name="OP_PUSH_ADR"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="OP_PUSH_PRI"/>
			<dependency name="OP_PUSH_R"/>
			<dependency name="OP_PUSH_S"/>
			<dependency name="OP_SCTRL"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_SWITCH"/>
			<dependency name="cellbits"/>
			<dependency name="cellmin"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gBase"/>
			<dependency name="true"/>
			<param name="dctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="csState">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="parseState">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="parseParam">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>amx_assembly codescan</library>
		</member>
		<member name="M:CollectDisk" syntax="CollectDisk(playerid, pickupid)">
			<stacksize value="11"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="EOS"/>
			<dependency name="GetClosestDisk"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="addLevelScore"/>
			<dependency name="catstr"/>
			<dependency name="diskActive"/>
			<dependency name="diskLabel"/>
			<dependency name="diskPickup"/>
			<dependency name="diskReward"/>
			<dependency name="false"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:CollectFigure" syntax="CollectFigure(playerid, pickupid)">
			<stacksize value="12"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="EOS"/>
			<dependency name="GetClosestFigure"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="addLevelScore"/>
			<dependency name="catstr"/>
			<dependency name="false"/>
			<dependency name="figureActive"/>
			<dependency name="figureLabel"/>
			<dependency name="figurePickup"/>
			<dependency name="giveMoney"/>
			<dependency name="givePremium"/>
			<dependency name="math_random"/>
			<dependency name="percent"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_job_points"/>
			<dependency name="player_levelPoints"/>
			<dependency name="random"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:CompareEx" syntax="CompareEx(comp[], with[], up)">
			<stacksize value="265"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="false"/>
			<dependency name="strlen"/>
			<dependency name="toLowerCase"/>
			<dependency name="true"/>
			<param name="comp">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="with">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="up">
			</param>
		</member>
		<member name="M:CompressRotation" syntax="CompressRotation(rotation)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="GetRotationFor2Point3D"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="floatround"/>
			<dependency name="floatround_floor"/>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ConquestGangReward" syntax="ConquestGangReward(gangid, winner)">
			<stacksize value="5"/>
			<referrer name="CheckGangWar"/>
			<dependency name="GANG_ULEP_ZONES"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="math_random"/>
			<param name="gangid">
			</param>
			<param name="winner">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:ConvertTime" syntax="ConvertTime(time, type)">
			<stacksize value="184"/>
			<referrer name="pc_cmd_vpozostalo"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@09"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="Fortune_Start"/>
			<referrer name="UpdateBTR"/>
			<referrer name="CheckPlayerMuted"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="ShowBanManage"/>
			<referrer name="IsBlockCommand"/>
			<referrer name="CheckPlayerBattle"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<dependency name="ConvertTime"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="strx"/>
			<param name="time">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:ConvertTimeFormat" syntax="ConvertTimeFormat(time, format0[], format1[], format2[], format3[])">
			<stacksize value="38"/>
			<referrer name="StopQuiz"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="ShowGieldaPanel"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="UpdateMineLabel"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartDA"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StartGG"/>
			<referrer name="StartWP"/>
			<referrer name="StartWG"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="ConvertTime"/>
			<referrer name="MinuteTimer"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="strcopy"/>
			<param name="time">
			</param>
			<param name="format0">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format3">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CountAdminList" syntax="CountAdminList()">
			<stacksize value="6"/>
			<referrer name="pc_cmd_apanel"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="mysql_query"/>
		</member>
		<member name="M:CountDynamicObjects" syntax="CountDynamicObjects()">
			<attribute name="native"/>
			<referrer name="pc_cmd_autor"/>
		</member>
		<member name="M:CountFreeBusiness" syntax="CountFreeBusiness()">
			<stacksize value="3"/>
			<referrer name="pc_cmd_wolnybiznes"/>
			<dependency name="Iterator@Business"/>
			<dependency name="businessData"/>
			<dependency name="business_ownerid"/>
		</member>
		<member name="M:CountGangMembers" syntax="CountGangMembers(gangid)">
			<stacksize value="10"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_slots"/>
			<dependency name="mysql_query"/>
			<dependency name="strx"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:CountGangZones" syntax="CountGangZones(gangid)">
			<stacksize value="3"/>
			<referrer name="ZonesReward"/>
			<dependency name="Iterator@GangZones"/>
			<dependency name="pGangZoneOwner"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:CountJobUlepszenia" syntax="CountJobUlepszenia(playerid)">
			<stacksize value="3"/>
			<referrer name="RunJobPanel"/>
			<dependency name="pJobUlepszenia"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CountPlayerBaits" syntax="CountPlayerBaits(playerid)">
			<stacksize value="3"/>
			<referrer name="pc_cmd_low"/>
			<dependency name="pFishBait"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CountPlayerHeist" syntax="CountPlayerHeist()">
			<stacksize value="10"/>
			<referrer name="Heist_Pickup"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="Iterator@Player"/>
			<dependency name="VW_HEIST"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
		</member>
		<member name="M:CountPojazdUlepszenia" syntax="CountPojazdUlepszenia(privcarid)">
			<stacksize value="3"/>
			<referrer name="RunPrivCarManage"/>
			<dependency name="pVehUlepszenie"/>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:CountServerPrivCars" syntax="CountServerPrivCars()">
			<stacksize value="9"/>
			<referrer name="pc_cmd_serverstats"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:CountVehicleSellPlayer" syntax="CountVehicleSellPlayer(playerid)">
			<stacksize value="8"/>
			<referrer name="ShowGieldaPanel"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CountVehicleToSell" syntax="CountVehicleToSell()">
			<stacksize value="3"/>
			<referrer name="ShowGieldaPanel"/>
			<dependency name="gieldaSellOwned"/>
		</member>
		<member name="M:Create3DTextLabel" syntax="Create3DTextLabel(text[], colour, x, y, z, drawDistance, virtualWorld, testLOS)">
			<tagname value="Text3D"/>
			<attribute name="native"/>
			<referrer name="va_Create3DTextLabel"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The initial text string
			</param>
			<param name="colour">
				The text Color, as an integer or hex in <b>RGBA</b> colour format
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x-Coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y-Coordinate
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				z-Coordinate
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance from where you are able to see the 3D Text Label
			</param>
			<param name="virtualWorld">
				The virtual world in which you are able to see the 3D Text
			</param>
			<param name="testLOS">
				<paraminfo>bool </paraminfo>
				Test the line-of-sight so this text can't be seen through objects (optional=<b><c>0</c></b>)
			</param>
			<library>a_samp</library>  <summary>Creates a 3D Text Label at a specific location in the world.</summary>                  <seealso name="Delete3DTextLabel" />  <seealso name="Attach3DTextLabelToPlayer" />  <seealso name="Attach3DTextLabelToVehicle" />  <seealso name="Update3DTextLabelText" />  <seealso name="CreatePlayer3DTextLabel" />  <seealso name="DeletePlayer3DTextLabel" />  <seealso name="UpdatePlayer3DTextLabelText" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>  If <paramref name="text" /> is empty, the server/clients next to the text might crash!<br />  If the virtualWorld is set as <b><c>-1</c></b> the text will not appear.  </remarks>  <remarks>drawdistance seems to be a lot smaller when spectating.</remarks>  <remarks>Use <a href="http://wiki.sa-mp.com/wiki/Colors_List#Inline_colour_embedding">colour embedding</a>  for multiple colours in the text.</remarks>  <returns>The ID of the newly created 3D Text Label, or <b><c>INVALID_3DTEXT_ID</c></b> if the 3D  Text Label limit (<b><c>MAX_3DTEXT_GLOBAL</c></b>) was reached.</returns> 
		</member>
		<member name="M:CreateActor" syntax="CreateActor(modelid, x, y, z, angle)">
			<attribute name="native"/>
			<referrer name="Iter_CreateActor"/>
			<param name="modelid">
				The model ID (skin ID) the actor should have
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the actor at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the actor at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the actor at
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The facing angle (rotation) for the actor to have
			</param>
			<library>a_actor</library>  <summary>Create a static 'actor' in the world.  These 'actors' are like NPCs, however they have limited  functionality.  They do not take up server player slots.</summary>            <seealso name="DestroyActor" />  <seealso name="SetActorPos" />  <seealso name="GetActorPos" />  <seealso name="SetActorFacingAngle" />  <seealso name="GetActorFacingAngle" />  <seealso name="SetActorVirtualWorld" />  <seealso name="GetActorVirtualWorld" />  <seealso name="ApplyActorAnimation" />  <seealso name="ClearActorAnimations" />  <seealso name="GetPlayerCameraTargetActor" />  <seealso name="IsActorStreamedIn" />  <seealso name="SetActorHealth" />  <seealso name="GetActorHealth" />  <seealso name="SetActorInvulnerable" />  <seealso name="IsActorInvulnerable" />  <seealso name="IsValidActor" />  <seealso name="GetActorPoolSize" />  <seealso name="GetPlayerTargetActor" />  <seealso name="OnActorStreamIn" />  <seealso name="OnActorStreamOut" />  <seealso name="OnPlayerGiveDamageActor" />  <remarks>This function was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <remarks>  Actors are completely separate from NPCs.  They do NOT use player IDs/slots on the server and CANNOT  be handled like NPCs.<br />  Actors are limited to <b><c>1000</c></b> (<b><c>MAX_ACTORS</c></b>).<br />  Actors can be pushed by vehicles, use a timer to put them back at their positions.<br />  As of <b>0.3.7 R2</b> actors default to being <a href="http://wiki.sa-mp.com/wiki/SetActorInvulnerable">invulnerable</a>.  </remarks>  <returns>  The created Actor ID (start at <b><c>0</c></b>).<br />  <b><c>INVALID_ACTOR_ID</c></b> (<b><c>65535</c></b>) If the actor limit (<b><c>1000</c></b>) is  reached.  </returns> 
		</member>
		<member name="M:CreateBusiness" syntax="CreateBusiness(businessid, loopid, query)">
			<stacksize value="98"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="Init_Business"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Business"/>
			<dependency name="Iterator@Business"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_cost"/>
			<dependency name="business_license"/>
			<dependency name="business_name"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_position"/>
			<dependency name="business_price"/>
			<dependency name="business_reward"/>
			<dependency name="business_type"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="mysql_query"/>
			<dependency name="sscanf"/>
			<dependency name="strx"/>
			<param name="businessid">
			</param>
			<param name="loopid">
			</param>
			<param name="query">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CreateDesign" syntax="CreateDesign()">
			<stacksize value="7"/>
			<referrer name="Init_Map"/>
			<dependency name="EOS"/>
			<dependency name="WC_TextDrawAlignment"/>
			<dependency name="WC_TextDrawBackgroundColor"/>
			<dependency name="WC_TextDrawBoxColor"/>
			<dependency name="WC_TextDrawColor"/>
			<dependency name="WC_TextDrawCreate"/>
			<dependency name="WC_TextDrawFont"/>
			<dependency name="WC_TextDrawLetterSize"/>
			<dependency name="WC_TextDrawSetOutline"/>
			<dependency name="WC_TextDrawSetProportional"/>
			<dependency name="WC_TextDrawSetSelectable"/>
			<dependency name="WC_TextDrawSetShadow"/>
			<dependency name="WC_TextDrawTextSize"/>
			<dependency name="WC_TextDrawUseBox"/>
			<dependency name="false"/>
			<dependency name="s"/>
			<dependency name="strcat"/>
			<dependency name="tdAnnounce"/>
			<dependency name="tdAreny"/>
			<dependency name="tdBomba"/>
			<dependency name="tdBox"/>
			<dependency name="tdCasinoButton"/>
			<dependency name="tdDate"/>
			<dependency name="tdEvent"/>
			<dependency name="tdEventAnn"/>
			<dependency name="tdGameLimit"/>
			<dependency name="tdGameZapisy"/>
			<dependency name="tdLogo"/>
			<dependency name="tdMessage"/>
			<dependency name="tdNoDM"/>
			<dependency name="tdOnline"/>
			<dependency name="tdPasek"/>
			<dependency name="tdSlotButton"/>
			<dependency name="tdSlotButton"/>
			<dependency name="tdWalizka"/>
			<dependency name="tdWelcome"/>
			<dependency name="true"/>
		</member>
		<member name="M:CreateDynamic3DTextLabel" syntax="CreateDynamic3DTextLabel(text[], color, x, y, z, drawdistance, attachedplayer, attachedvehicle, testlos, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<tagname value="Text3D"/>
			<attribute name="native"/>
			<referrer name="Init_Bank"/>
			<referrer name="Heist_Init"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="Init_Driving"/>
			<referrer name="Init_Truck"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="CreateKurczak"/>
			<referrer name="Init_Teleports"/>
			<referrer name="Init_Stations"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="Init_Gielda"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Init_Jobs"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Taxi_Random"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="FetchCasino"/>
			<referrer name="FetchGunShop"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="Init_Fishing"/>
			<referrer name="Init_Mining"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="Init_Map"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="attachedplayer">
			</param>
			<param name="attachedvehicle">
			</param>
			<param name="testlos">
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicActor" syntax="CreateDynamicActor(modelid, x, y, z, r, invulnerable, health, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="Init_Bank"/>
			<referrer name="Init_Driving"/>
			<referrer name="Init_Jobs"/>
			<referrer name="Taxi_Random"/>
			<referrer name="FetchCasino"/>
			<referrer name="FetchGunShop"/>
			<referrer name="Init_Map"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="r">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="invulnerable">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicCP" syntax="CreateDynamicCP(x, y, z, size, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="Init_Bank"/>
			<referrer name="Heist_Init"/>
			<referrer name="Init_Driving"/>
			<referrer name="Init_Truck"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Init_Gielda"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="FetchGunShop"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="StartWP"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicMapIcon" syntax="CreateDynamicMapIcon(x, y, z, type, color, worldid, interiorid, playerid, streamdistance, style, areaid, priority)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="FetchCasino"/>
			<referrer name="FetchGunShop"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="type">
			</param>
			<param name="color">
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="style">
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicObject" syntax="CreateDynamicObject(modelid, x, y, z, rx, ry, rz, worldid, interiorid, playerid, streamdistance, drawdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="CA_CreateDynamicObject_SC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="Heist_Init"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="CreateKurczak"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="Init_GangBases"/>
			<referrer name="FetchBaseObjects"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="Init_Mining"/>
			<referrer name="StartSK"/>
			<referrer name="CreateSumoObjects"/>
			<referrer name="Init_Map"/>
			<referrer name="RunObjects"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicObjectEx" syntax="CreateDynamicObjectEx(modelid, x, y, z, rx, ry, rz, streamdistance, drawdistance, worlds[], interiors[], players[], areas[], priority, maxworlds, maxinteriors, maxplayers, maxareas)">
			<attribute name="native"/>
			<referrer name="CA_CreateDynamicObjectEx_SC"/>
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="RunObjects"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worlds">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interiors">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="players">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="areas">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="priority">
			</param>
			<param name="maxworlds">
			</param>
			<param name="maxinteriors">
			</param>
			<param name="maxplayers">
			</param>
			<param name="maxareas">
			</param>
		</member>
		<member name="M:CreateDynamicPickup" syntax="CreateDynamicPickup(modelid, type, x, y, z, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="acc_CreateDynamicPickup"/>
			<param name="modelid">
			</param>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicPickupEx" syntax="CreateDynamicPickupEx(modelid, type, x, y, z, streamdistance, worlds[], interiors[], players[], areas[], priority, maxworlds, maxinteriors, maxplayers, maxareas)">
			<attribute name="native"/>
			<referrer name="acc_CreateDynamicPickupEx"/>
			<param name="modelid">
			</param>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worlds">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interiors">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="players">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="areas">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="priority">
			</param>
			<param name="maxworlds">
			</param>
			<param name="maxinteriors">
			</param>
			<param name="maxplayers">
			</param>
			<param name="maxareas">
			</param>
		</member>
		<member name="M:CreateDynamicRaceCP" syntax="CreateDynamicRaceCP(type, x, y, z, nextx, nexty, nextz, size, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="nextx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="nexty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="nextz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicRectangle" syntax="CreateDynamicRectangle(minx, miny, maxx, maxy, worldid, interiorid, playerid, priority)">
			<attribute name="native"/>
			<referrer name="Init_NoDM"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateExplosion" syntax="CreateExplosion(x, y, z, type, radius)">
			<tagname value="void"/>
			<attribute name="native"/>
			<referrer name="BombaExplode"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate of the explosion
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate of the explosion
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate of the explosion
			</param>
			<param name="type">
				The type of explosion
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The explosion radius
			</param>
			<library>a_samp</library>  <summary>Create an explosion at the specified coordinates.</summary>            <seealso name="CreateExplosionForPlayer" />  <remarks>There is a limit as to how many explosions can be seen at once by a player.  This is roughly  10.</remarks>  <returns>This function always returns <b><c>1</c></b>, even when the explosion type and/or radius  values are invalid.</returns> 
		</member>
		<member name="M:CreateGangDesign" syntax="CreateGangDesign(i)">
			<stacksize value="6"/>
			<referrer name="FetchGang"/>
			<dependency name="WC_TextDrawAlignment"/>
			<dependency name="WC_TextDrawBackgroundColor"/>
			<dependency name="WC_TextDrawBoxColor"/>
			<dependency name="WC_TextDrawColor"/>
			<dependency name="WC_TextDrawCreate"/>
			<dependency name="WC_TextDrawFont"/>
			<dependency name="WC_TextDrawLetterSize"/>
			<dependency name="WC_TextDrawSetOutline"/>
			<dependency name="WC_TextDrawSetProportional"/>
			<dependency name="WC_TextDrawSetShadow"/>
			<dependency name="WC_TextDrawTextSize"/>
			<dependency name="WC_TextDrawUseBox"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budgetDraw"/>
			<dependency name="gang_color"/>
			<dependency name="gang_draw"/>
			<dependency name="true"/>
			<param name="i">
			</param>
		</member>
		<member name="M:CreateGangZoneDraw" syntax="CreateGangZoneDraw(zoneid)">
			<stacksize value="6"/>
			<referrer name="Init_GangZones"/>
			<dependency name="WC_TextDrawAlignment"/>
			<dependency name="WC_TextDrawBackgroundColor"/>
			<dependency name="WC_TextDrawColor"/>
			<dependency name="WC_TextDrawCreate"/>
			<dependency name="WC_TextDrawFont"/>
			<dependency name="WC_TextDrawLetterSize"/>
			<dependency name="WC_TextDrawSetOutline"/>
			<dependency name="WC_TextDrawSetProportional"/>
			<dependency name="WC_TextDrawSetShadow"/>
			<dependency name="WC_TextDrawTextSize"/>
			<dependency name="false"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="true"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:CreateKurczak" syntax="CreateKurczak(health, money)">
			<stacksize value="184"/>
			<referrer name="MinuteTimer"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="KurczakEnabled"/>
			<dependency name="KurczakHealth"/>
			<dependency name="KurczakLabel"/>
			<dependency name="KurczakObject"/>
			<dependency name="KurczakPositionType"/>
			<dependency name="KurczakPositions"/>
			<dependency name="KurczakPositions"/>
			<dependency name="KurczakReward"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="chicken_object"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="random"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:CreateMenu" syntax="CreateMenu(title[], columns, x, y, col1width, col2width)">
			<tagname value="Menu"/>
			<attribute name="native"/>
			<referrer name="va_CreateMenu"/>
			<param name="title">
				<paraminfo> [] </paraminfo>
				The title for the new menu
			</param>
			<param name="columns">
				How many colums shall the new menu have
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x position of the menu (640x460 canvas - <b><c>0</c></b> would put the menu at  the far left)
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y position of the menu (640x460 canvas - <b><c>0</c></b> would put the menu at  the far top)
			</param>
			<param name="col1width">
				<paraminfo>Float </paraminfo>
				The width for the first column
			</param>
			<param name="col2width">
				<paraminfo>Float </paraminfo>
				The width for the second column (optional=<b><c>0.0</c></b>)
			</param>
			<library>a_samp</library>  <summary>Creates a menu.</summary>              <seealso name="AddMenuItem" />  <seealso name="SetMenuColumnHeader" />  <seealso name="DestroyMenu" />  <seealso name="ShowMenuForPlayer" />  <seealso name="HideMenuForPlayer" />  <seealso name="OnPlayerSelectedMenuRow" />  <seealso name="OnPlayerExitedMenu" />  <remarks>  This function merely CREATES the menu - <a href="#ShowMenuForPlayer">ShowMenuForPlayer</a> must  be used to show it.<br />  You can only create and access <b><c>2</c></b> columns (<b><c>0</c></b> and <b><c>1</c></b>).<br  />  If the title's length is equal to or greater than <b><c>32</c></b> chars the title is truncated  to <b><c>30</c></b> characters.  </remarks>  <remarks>There is a limit of <b><c>12</c></b> items per menu, and a limit of <b><c>128</c></b> menus  in total.</remarks>  <returns>The ID of the new menu or <b><c>-1</c></b> on failure.</returns> 
		</member>
		<member name="M:CreateModelSelectionPlayerTDs" syntax="CreateModelSelectionPlayerTDs(playerid)">
			<stacksize value="10"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="PlayerTextDrawAlignment"/>
			<dependency name="PlayerTextDrawBackgroundColor"/>
			<dependency name="PlayerTextDrawBoxColor"/>
			<dependency name="PlayerTextDrawColor"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetProportional"/>
			<dependency name="PlayerTextDrawSetSelectable"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="g_MenuHeaderText"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuPageNumber"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CreateObject" syntax="CreateObject(modelid, x, y, z, rotX, rotY, rotZ, drawDistance)">
			<attribute name="native"/>
			<referrer name="CA_CreateObject_SC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="CreateVendingMachines"/>
			<referrer name="RunObjects"/>
			<param name="modelid">
				The model to create
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the object at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the object at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the object at
			</param>
			<param name="rotX">
				<paraminfo>Float </paraminfo>
				The x rotation of the object
			</param>
			<param name="rotY">
				<paraminfo>Float </paraminfo>
				The y rotation of the object
			</param>
			<param name="rotZ">
				<paraminfo>Float </paraminfo>
				The z rotation of the object
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance that San Andreas renders objects at. <b><c>0.0</c></b> will  cause objects to render at their default distances. <b>Usable since 0.3b, limited to <c>300</c> prior  to 0.3x</b> (optional=<b><c>0.0</c></b>)
			</param>
			<library>a_objects</library>  <summary>Creates an object at specified coordinates in the game world.</summary>                  <seealso name="DestroyObject" />  <seealso name="IsValidObject" />  <seealso name="CreatePlayerObject" />  <seealso name="MoveObject" />  <seealso name="SetObjectPos" />  <seealso name="SetObjectRot" />  <seealso name="GetObjectPos" />  <seealso name="GetObjectRot" />  <seealso name="AttachObjectToPlayer" />  <seealso name="SetObjectMaterialText" />  <seealso name="SetObjectMaterial" />  <remarks>  Objects that emit light (lampposts, police lights, bollard lights, neons etc.) that have a greater  rotation than <b><c>16.26</c></b> degrees (or <b><c>-16.26</c></b>) on either the x or y axis will  stop shining.  This effect also applies to light objects attached to other objects, players and vehicles.  If a light object is attached to a car and the car is rotated over <b><c>16.26</c></b> degrees  (like in a rollover), the object will also stop emitting light.  This is a GTA:SA issue and is not  caused by a bug in SA-MP.  </remarks>  <remarks>In case the light is attached to another object, one fix for this is to set <b>SyncRotation</b>  to false in <a href="#AttachObjectToObject">AttachObjectToObject</a>.  This will ensure the light  stays at <b><c>0</c></b> rotation.  This would only really work for objects that consist ONLY of  light, so wouldn't work for the police light for example. </remarks>  <remarks>There is a limit of <a href="http://wiki.sa-mp.com/wiki/Limits"><b><c>1000</c></b> objects  (<b><c>MAX_OBJECTS</c></b>)</a>.  To circumvent this limit, you can use a  <a href="http://forum.sa-mp.com/showthread.php?t=102865">streamer</a></remarks>  <returns>The ID of the object that was created, or <b><c>INVALID_OBJECT_ID</c></b> if the object  limit (<b><c>MAX_OBJECTS</c></b>) was reached.</returns> 
		</member>
		<member name="M:CreatePickup" syntax="CreatePickup(model, type, x, y, z, virtualWorld)">
			<attribute name="native"/>
			<referrer name="acc_AddStaticPickup"/>
			<referrer name="acc_CreatePickup"/>
			<param name="model">
				The <a href="http://wiki.sa-mp.com/wiki/Pickup_IDs">model</a> of the pickup
			</param>
			<param name="type">
				The pickup spawn type (see table under remarks)
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the pickup at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the pickup at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the pickup at
			</param>
			<param name="virtualWorld">
				The virtual world ID of the pickup.  Use <b><c>-1</c></b> to make the  pickup show in all worlds (optional=<b><c>0</c></b>)
			</param>
			<library>a_samp</library>  <summary>This function does exactly the same as AddStaticPickup, except it returns a pickup ID which  can be used to destroy it afterwards and be tracked using <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>.</summary>              <seealso name="AddStaticPickup" />  <seealso name="DestroyPickup" />  <seealso name="OnPlayerPickUpPickup" />  <remarks>  <b>Known Bugs:</b><br />  Pickups that have a x or y lower than <b><c>-4096.0</c></b> or bigger than <b><c>4096.0</c></b>  won't show up and won't trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a> either.  </remarks>  <remarks>  The only type of pickup that can be picked up from inside a vehicle is <b><c>14</c></b> (except  for special pickups such as bribes).<br />  Pickups are shown to, and can be picked up by all players.<br />  It is possible that if <a href="#DestroyPickup">DestroyPickup</a> is used when a pickup is picked  up, more than one player can pick up the pickup, due to lag.  This can be circumvented through the  use of variables.<br />  Certain pickup types come with 'automatic responses', for example using an M4 model in the pickup  will automatically give the player the weapon and some ammo.  For fully scripted pickups, type <b><c>1</c></b>  should be used. <br />  </remarks>  <remarks>  <b>Available Pickup Types</b><br />  Most other IDs are either undocumented or are similar to type <b><c>1</c></b> (but do not use them  just because they seem similar to ID <b><c>1</c></b>, they might have side-effects like ID <b><c>18</c></b>  and <b><c>20</c></b>).  <ul>  <li><b><c>0</c></b> - The pickup does not always display.  If displayed, it can't be picked up  and does not trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a> and it will stay after  server shutdown.</li>  <li><b><c>1</c></b> - Exists always.  Disables pickup scripts such as horseshoes and oysters  to allow for scripted actions ONLY.  Will trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>  every few seconds.</li>  <li><b><c>2</c></b> - Disappears after pickup, respawns after 30 seconds if the player is at  a distance of at least 15 meters.</li>  <li><b><c>3</c></b> - Disappears after pickup, respawns after death.</li>  <li><b><c>4</c></b> - Disappears after 15 to 20 seconds.  Respawns after death.</li>  <li><b><c>8</c></b> - Disappears after pickup, but has no effect.</li>  <li><b><c>11</c></b> - Blows up a few seconds after being created (bombs?)</li>  <li><b><c>12</c></b> - Blows up a few seconds after being created.</li>  <li><b><c>13</c></b> - Invisible.  Triggers checkpoint sound when picked up with a vehicle, but  doesn't trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>.</li>  <li><b><c>14</c></b> - Disappears after pickup, can only be picked up with a vehicle.  Triggers  checkpoint sound.</li>  <li><b><c>15</c></b> - Same as type <b><c>2</c></b>.</li>  <li><b><c>18</c></b> - Similar to type <b><c>1</c></b>.  Pressing Tab (<b><c>KEY_ACTION</c></b>)  makes it disappear but the key press doesn't trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>.</li>  <li><b><c>19</c></b> - Disappears after pickup, but doesn't respawn.  Makes "cash pickup" sound  if picked up.</li>  <li><b><c>20</c></b> - Similar to type <b><c>1</c></b>.  Disappears when you take a picture of  it with the Camera weapon, which triggers "Snapshot # out of 0" message.  Taking a picture doesn't  trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>.</li>  <li><b><c>22</c></b> - Same as type <b><c>3</c></b>.</li>  </ul>  </remarks>  <returns>The ID of the created pickup, <b><c>-1</c></b> on failure (<a href="http://wiki.sa-mp.com/wiki/Limits">pickup  max limit</a>).</returns> 
		</member>
		<member name="M:CreatePlayer3DTextLabel" syntax="CreatePlayer3DTextLabel(playerid, text[], colour, x, y, z, drawDistance, parentPlayerid, parentVehicleid, testLOS)">
			<tagname value="PlayerText3D"/>
			<attribute name="native"/>
			<referrer name="va_CreatePlayer3DTextLabel"/>
			<param name="playerid">
				The player which should see the newly created 3DText Label
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text to display
			</param>
			<param name="colour">
				The text colour
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x Coordinate (or offset if attached)
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y Coordinate (or offset if attached)
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				z Coordinate (or offset if attached)
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance where you are able to see the 3D Text Label
			</param>
			<param name="parentPlayerid">
				The player you want to attach the 3D Text Label to. (optional=<b><c>INVALID_PLAYER_ID</c></b>)
			</param>
			<param name="parentVehicleid">
				The vehicle you want to attach the 3D Text Label to. (optional=<b><c>INVALID_VEHICLE_ID</c></b>)
			</param>
			<param name="testLOS">
				<paraminfo>bool </paraminfo>
				Test the line-of-sight so this text can't be seen through walls (optional=<b><c>0</c></b>)
			</param>
			<library>a_players</library>  <summary>Creates a 3D Text Label only for a specific player.</summary>                      <seealso name="Create3DTextLabel" />  <seealso name="Delete3DTextLabel" />  <seealso name="Attach3DTextLabelToPlayer" />  <seealso name="Attach3DTextLabelToVehicle" />  <seealso name="Update3DTextLabelText" />  <seealso name="DeletePlayer3DTextLabel" />  <seealso name="UpdatePlayer3DTextLabelText" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>If <paramref name="text" /> is empty, the server/clients next to the text might crash!</remarks>  <remarks>drawdistance seems to be a lot smaller when spectating.</remarks>  <returns>The ID of the newly created Player 3D Text Label, or <b><c>INVALID_3DTEXT_ID</c></b> if  the Player 3D Text Label limit (<b><c>MAX_3DTEXT_PLAYER</c></b>) was reached.</returns> 
		</member>
		<member name="M:CreatePlayerDesign" syntax="CreatePlayerDesign(playerid)">
			<stacksize value="7"/>
			<referrer name="WC_OnPlayerConnect"/>
			<dependency name="RefreshGameList"/>
			<dependency name="WC_CreatePlayerTextDraw"/>
			<dependency name="WC_PlayerTextDrawAlignment"/>
			<dependency name="WC_PlayerTextDrawBackgroundColo"/>
			<dependency name="WC_PlayerTextDrawBoxColor"/>
			<dependency name="WC_PlayerTextDrawColor"/>
			<dependency name="WC_PlayerTextDrawFont"/>
			<dependency name="WC_PlayerTextDrawLetterSize"/>
			<dependency name="WC_PlayerTextDrawSetOutline"/>
			<dependency name="WC_PlayerTextDrawSetProportiona"/>
			<dependency name="WC_PlayerTextDrawSetSelectable"/>
			<dependency name="WC_PlayerTextDrawSetShadow"/>
			<dependency name="WC_PlayerTextDrawTextSize"/>
			<dependency name="WC_PlayerTextDrawUseBox"/>
			<dependency name="false"/>
			<dependency name="tdAchievement"/>
			<dependency name="tdCasinoSlot"/>
			<dependency name="tdFishing"/>
			<dependency name="tdFortune"/>
			<dependency name="tdFuel"/>
			<dependency name="tdGameDraw"/>
			<dependency name="tdGameList"/>
			<dependency name="tdInfo"/>
			<dependency name="tdLevel"/>
			<dependency name="tdLicznik"/>
			<dependency name="tdLoginTime"/>
			<dependency name="tdMissionDraw"/>
			<dependency name="tdMoney"/>
			<dependency name="tdPerformance"/>
			<dependency name="tdPlayer"/>
			<dependency name="tdPosition"/>
			<dependency name="tdQuest"/>
			<dependency name="tdQuiz"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CreatePlayerProgressBar" syntax="CreatePlayerProgressBar(playerid, x, y, width, height, colour, max, direction)">
			<tagname value="PlayerBar"/>
			<stacksize value="8"/>
			<referrer name="WC_OnPlayerConnect"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@pbar_Index"/>
			<dependency name="Iterator@pbar_Index"/>
			<dependency name="Iterator@pbar_Index"/>
			<dependency name="_progress2_renderBar"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_back"/>
			<dependency name="pbar_colour"/>
			<dependency name="pbar_direction"/>
			<dependency name="pbar_fill"/>
			<dependency name="pbar_height"/>
			<dependency name="pbar_main"/>
			<dependency name="pbar_maxValue"/>
			<dependency name="pbar_posX"/>
			<dependency name="pbar_posY"/>
			<dependency name="pbar_progressValue"/>
			<dependency name="pbar_show"/>
			<dependency name="pbar_width"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="colour">
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="direction">
			</param>
		</member>
		<member name="M:CreatePlayerTextDraw" syntax="CreatePlayerTextDraw(playerid, x, y, text[])">
			<tagname value="PlayerText"/>
			<attribute name="native"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_CreatePlayerTextDraw"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player to create the textdraw for
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x-Coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y-Coordinate
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text in the textdraw
			</param>
			<library>a_players</library>  <summary>Creates a textdraw for a single player.  This can be used as a way around the <a href="#TextDrawCreate">global</a>  text-draw limit.</summary>          <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks>  <remarks>  If you choose values for y that are less than 1, the first text row will be invisible and only  the shadow is visible.<br />  <paramref name="text" /> must <b>NOT</b> be empty or the server will crash! If you need a textdraw  that shows nothing, use " " (a space) or _ (underscore)<br />  If the last character in the text is a space (" "), the text will all be blank.<br />  If part of the text is off-screen, the colour of the text will not show, only the shadow (if enabled)  will. <br />  </remarks>  <remarks>  This applies ONLY to sa-mp versions before <b>0.3z</b>:<br /><br />  Maximum length of textdraw is <b><c>800</c></b> characters.  Longer text will crash the client  in older versions.<br />  If you use colour codes (such as <b><c>~R~ ~G~</c></b>) beyond 255th character the client will  crash trying to display the textdraw. <br />  </remarks>  <remarks>Keyboard key mapping codes (such as <b><c>~k~~VEHICLE_ENTER_EXIT~</c></b> Doesn't work beyond  255th character. </remarks>  <remarks>  The x, y coordinate is the top left coordinate for the text draw area based on a <b><c>640x480</c></b>  "canvas" (irrespective of screen resolution).  If you plan on using <a href="#PlayerTextDrawAlignment">PlayerTextDrawAlignment</a>  with alignment <b><c>3</c></b> (right), the x, y coordinate is the top right coordinate for the text  draw.<br />  This function merely CREATES the textdraw, you must use <a href="#PlayerTextDrawShow">PlayerTextDrawShow</a>  to show it to a player.<br />  It is recommended to use WHOLE numbers instead of decimal positions when creating player textdraws  to ensure resolution friendly design. <br />  </remarks>  <remarks>Player-textdraws are automatically destroyed when a player disconnects.</remarks>  <returns>The ID of the created textdraw.</returns> 
		</member>
		<member name="M:CreatePrivCar" syntax="CreatePrivCar(playerid, privcarid, buy, type)">
			<attribute name="public"/>
			<stacksize value="148"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="OnPlayerBuyPrivCar"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="SetVehicleToSell"/>
			<dependency name="ACH_PRIVCAR"/>
			<dependency name="AddVehicleToGielda"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPrivCarSlot"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="SavePrivCar"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="SetVehiclePosition"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="UpdatePrivCarLabel"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehiclePrivate"/>
			<dependency name="VehiclePrivateID"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="acc_ChangeVehiclePaintjob"/>
			<dependency name="acc_LinkVehicleToInterior"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="achievement"/>
			<dependency name="addLevelScore"/>
			<dependency name="addVehicleComponent"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPosition"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pVeh"/>
			<dependency name="pVehColor"/>
			<dependency name="pVehColor"/>
			<dependency name="pVehComponent"/>
			<dependency name="pVehComponent"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehDist"/>
			<dependency name="pVehEngine"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuelAmount"/>
			<dependency name="pVehGas"/>
			<dependency name="pVehGasEnabled"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehLabel"/>
			<dependency name="pVehModel"/>
			<dependency name="pVehOwner"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehPaintJob"/>
			<dependency name="pVehPosition"/>
			<dependency name="pVehPosition"/>
			<dependency name="pVehRegisterColor"/>
			<dependency name="pVehRegisterName"/>
			<dependency name="pVehRegisterName"/>
			<dependency name="pVehSell"/>
			<dependency name="pVehSellCost"/>
			<dependency name="pVehSpawned"/>
			<dependency name="pVehUlepszenie"/>
			<dependency name="pVehUlepszenie"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
			<param name="buy">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:CreateRoyaleWeapons" syntax="CreateRoyaleWeapons(arenaid)">
			<stacksize value="19"/>
			<referrer name="StartBTR"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CA_FindZ_For2DCoord"/>
			<dependency name="GetWeaponModelById"/>
			<dependency name="IsPosInWater"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="RoyaleWeaponID"/>
			<dependency name="RoyaleWeaponPickup"/>
			<dependency name="VW_BTR"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="printf"/>
			<dependency name="random"/>
			<dependency name="randomPositionArea"/>
			<dependency name="royaleDataAreny"/>
			<dependency name="royaleDataAreny"/>
			<dependency name="royaleWeaponData"/>
			<dependency name="royale_zone"/>
			<param name="arenaid">
			</param>
		</member>
		<member name="M:CreateSumoObjects" syntax="CreateSumoObjects()">
			<stacksize value="17"/>
			<referrer name="RunObjects"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="VW_SM"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="sumoCar"/>
			<dependency name="sumoCar"/>
		</member>
		<member name="M:CreateVehicle" syntax="CreateVehicle(modelid, x, y, z, rotation, colour1, colour2, respawnDelay, addSiren)">
			<attribute name="native"/>
			<referrer name="Iter_CreateVehicle"/>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">model</a> for the vehicle
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate for the vehicle
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate for the vehicle
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate for the vehicle
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
				The facing angle for the vehicle
			</param>
			<param name="colour1">
				The primary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>
			</param>
			<param name="colour2">
				The secondary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>
			</param>
			<param name="respawnDelay">
				The delay until the car is respawned without a driver in <b>seconds</b>.  Using <b><c>-1</c></b> will prevent the vehicle from respawning
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
				<b>Added in 0.3.7; will not work in earlier versions</b>.  Enables the vehicle  to have a siren, providing the vehicle has a horn (optional=<b><c>false</c></b>)
			</param>
			<library>a_vehicles</library>  <summary>Creates a vehicle in the world.  Can be used in place of <a href="#AddStaticVehicleEx">AddStaticVehicleEx</a>  at any time in the script.</summary>                    <seealso name="DestroyVehicle" />  <seealso name="AddStaticVehicle" />  <seealso name="AddStaticVehicleEx" />  <seealso name="GetVehicleParamsSirenState" />  <seealso name="OnVehicleSpawn" />  <seealso name="OnVehicleSirenStateChange" />  <remarks>Trains can only be added with AddStaticVehicle and AddStaticVehicleEx.</remarks>  <returns>  The vehicle ID of the vehicle created (<b><c>1</c></b> to <b><c>MAX_VEHICLES</c></b>).<br />  <b><c>INVALID_VEHICLE_ID (65535)</c></b> if vehicle was not created (vehicle limit reached or invalid  vehicle model ID passed).  </returns> 
		</member>
		<member name="M:CreateVehicleZP" syntax="CreateVehicleZP()">
			<stacksize value="12"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SwitchVehicleDoors"/>
			<dependency name="SwitchVehicleEngine"/>
			<dependency name="SwitchZP"/>
			<dependency name="VW_ZP"/>
			<dependency name="VehicleModelZP"/>
			<dependency name="VehicleZP"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="vehicleDataZP"/>
		</member>
		<member name="M:CreateVendingMachines" syntax="CreateVendingMachines()">
			<stacksize value="11"/>
			<referrer name="SetCustomVendingMachines"/>
			<referrer name="ScriptInit"/>
			<dependency name="CreateObject"/>
			<dependency name="DestroyVendingMachines"/>
			<dependency name="e_Model"/>
			<dependency name="e_PosX"/>
			<dependency name="e_PosY"/>
			<dependency name="e_PosZ"/>
			<dependency name="e_RotX"/>
			<dependency name="e_RotY"/>
			<dependency name="e_RotZ"/>
			<dependency name="false"/>
			<dependency name="s_VendingMachineObject"/>
			<dependency name="sc_VendingMachines"/>
			<dependency name="sc_VendingMachines"/>
		</member>
		<member name="M:CreateZone" syntax="CreateZone(gzMinX, gzMinY, gzMaxX, gzMaxY)">
			<stacksize value="7"/>
			<referrer name="Init_NoDM"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StartWG"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="true"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZonesCreated"/>
			<dependency name="zMainID"/>
			<dependency name="zPosCords"/>
			<param name="gzMinX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="gzMinY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="gzMaxX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="gzMaxY">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CreateZoneBorders" syntax="CreateZoneBorders(zoneid)">
			<stacksize value="10"/>
			<referrer name="Init_NoDM"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="border"/>
			<dependency name="true"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<dependency name="zPosCords"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:CreateZoneNumber" syntax="CreateZoneNumber(zoneid, gznumber, numsize)">
			<stacksize value="17"/>
			<referrer name="Init_GangZones"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="agz_GangZoneCreateFirstNumber"/>
			<dependency name="agz_GangZoneCreateSecondNumber"/>
			<dependency name="format"/>
			<dependency name="strmid"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingNumbers"/>
			<dependency name="zPosCords"/>
			<param name="zoneid">
			</param>
			<param name="gznumber">
			</param>
			<param name="numsize">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:D@" syntax="D@(function[], fmat[], ...)">
			<stacksize value="9"/>
			<referrer name="_@Dialog_Set"/>
			<dependency name="@_"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="YSI_g_sCallData"/>
			<dependency name="YSI_g_sPropCaller"/>
			<dependency name="YSI_g_sPropEmpty"/>
			<dependency name="YSI_g_sPropReturn"/>
			<dependency name="YSI_g_sPropVarArg"/>
			<dependency name="getproperty"/>
			<dependency name="setarg"/>
			<dependency name="setproperty"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:DB_Close" syntax="DB_Close(db)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="geolite_close_dbs"/>
			<param name="db">
				<paraminfo>DB </paraminfo>
				The handle of the database connection to close (returned by <a href="#db_open">db_open</a>)
			</param>
			<library>a_sampdb</library>  <summary>Closes an SQLite database that was opened with <a href="#db_open">db_open</a>.</summary>    <remarks>Using an <b>invalid handle</b> will crash your server! Get a <b>valid handle</b> by using  <a href="#db_open">db_open</a>.  But it's protected against <b><c>NULL</c></b> references</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  May mean that the database handle specified is  not open.  </returns> 
		</member>
		<member name="M:DB_FreeResult" syntax="DB_FreeResult(result)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="GetIpAutonomousSystem"/>
			<referrer name="GetIpCountry"/>
			<referrer name="GetIpCity"/>
			<referrer name="GetIpProvince"/>
			<referrer name="GetIpUTC"/>
			<referrer name="geolite_open_dbs"/>
			<param name="result">
				<paraminfo>DBResult </paraminfo>
				The result to free
			</param>
			<library>a_sampdb</library>  <summary>Frees result memory allocated from <a href="#db_query">db_query</a>.</summary>    <returns>If <b><c>DBResult:dbhandle</c></b> is a valid handle, it returns <b><c>1</c></b>, otherwise  <b><c>0</c></b> if <b><c>DBResult:dbhandle</c></b> is a <b><c>NULL</c></b> reference.</returns> 
		</member>
		<member name="M:DB_GetField" syntax="DB_GetField(result, field, output[], size)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="GetIpAutonomousSystem"/>
			<referrer name="GetIpCountry"/>
			<referrer name="GetIpCity"/>
			<referrer name="GetIpProvince"/>
			<referrer name="GetIpUTC"/>
			<param name="result">
				<paraminfo>DBResult </paraminfo>
				The result to get the data from
			</param>
			<param name="field">
				The field to get the data from
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
				The returned value
			</param>
			<param name="size">
				The max length of the field
			</param>
			<library>a_sampdb</library>  <summary>Get the content of a field from <a href="#db_query">db_query</a>.</summary>          <remarks>Using an <b>invalid handle</b> will crash your server! Get a <b>valid handle</b> by using  <a href="#db_open">db_open</a>.  But it's protected against <b><c>NULL</c></b> references</remarks>  <returns>Returns <b><c>1</c></b> if successful, otherwise <b><c>0</c></b> if <b><c>DBResult:result</c></b>  is a <b><c>NULL</c></b> reference or the column index not available.</returns> 
		</member>
		<member name="M:DB_Open" syntax="DB_Open(name[])">
			<tagname value="DB"/>
			<attribute name="native"/>
			<referrer name="geolite_open_dbs"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				File name of the database
			</param>
			<library>a_sampdb</library>  <summary>This function is used to open a connection to a SQLite database, which is inside the <b><c>/scriptfiles</c></b>  folder.</summary>    <remarks>Return type for this function has changed since version <b>0.3.7 R2</b>.</remarks>  <remarks>  It will create a new SQLite database, if there is no SQLite database with the same file name available.<br  />  <b>Close</b> your database connection with <a href="#db_close">db_close</a>!  </remarks>  <returns>Returns index (starting at <b><c>1</c></b>) of the database connection .</returns> 
		</member>
		<member name="M:DB_Query" syntax="DB_Query(db, query[])">
			<tagname value="DBResult"/>
			<attribute name="native"/>
			<referrer name="GetIpAutonomousSystem"/>
			<referrer name="GetIpCountry"/>
			<referrer name="GetIpCity"/>
			<referrer name="GetIpProvince"/>
			<referrer name="GetIpUTC"/>
			<referrer name="geolite_open_dbs"/>
			<param name="db">
				<paraminfo>DB </paraminfo>
				The database handle to query
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
				The query to execute
			</param>
			<library>a_sampdb</library>  <summary>This function is used to execute an SQL query on an opened SQLite database.</summary>      <remarks>Return type for this function has changed since version <b>0.3.7 R2</b>.</remarks>  <remarks><b>Always</b> free the result by using <a href="#db_free_result">db_free_result</a>!</remarks>  <returns>The query result index (<b>starting at 1</b>).</returns> 
		</member>
		<member name="M:DONT_USE_SCM" syntax="DONT_USE_SCM(a, b, c[])">
			<stacksize value="1"/>
			<param name="a">
			</param>
			<param name="b">
			</param>
			<param name="c">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DamageFeedAddHit" syntax="DamageFeedAddHit(arr[][], playerid, issuerid, amount, weapon)">
			<stacksize value="8"/>
			<referrer name="DamageFeedAddHitGiven"/>
			<referrer name="DamageFeedAddHitTaken"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="DamageFeedRemoveHit"/>
			<dependency name="DamageFeedUpdate"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsDamageFeedActive"/>
			<dependency name="e_Amount"/>
			<dependency name="e_Issuer"/>
			<dependency name="e_Name"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Weapon"/>
			<dependency name="s_DamageFeedHideDelay"/>
			<dependency name="true"/>
			<param name="arr">
				<paraminfo> [5][28] </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon">
			</param>
		</member>
		<member name="M:DamageFeedAddHitGiven" syntax="DamageFeedAddHitGiven(playerid, issuerid, amount, weapon)">
			<stacksize value="9"/>
			<referrer name="OnPlayerDamageDone"/>
			<dependency name="DamageFeedAddHit"/>
			<dependency name="Iterator@Player"/>
			<dependency name="s_DamageFeedHitsGiven"/>
			<dependency name="s_DamageFeedHitsGiven"/>
			<dependency name="s_Spectating"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon">
			</param>
		</member>
		<member name="M:DamageFeedAddHitTaken" syntax="DamageFeedAddHitTaken(playerid, issuerid, amount, weapon)">
			<stacksize value="9"/>
			<referrer name="OnPlayerDamageDone"/>
			<dependency name="DamageFeedAddHit"/>
			<dependency name="Iterator@Player"/>
			<dependency name="s_DamageFeedHitsTaken"/>
			<dependency name="s_DamageFeedHitsTaken"/>
			<dependency name="s_Spectating"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon">
			</param>
		</member>
		<member name="M:DamageFeedRemoveHit" syntax="DamageFeedRemoveHit(arr[][], idx)">
			<stacksize value="2"/>
			<referrer name="DamageFeedAddHit"/>
			<dependency name="e_Tick"/>
			<param name="arr">
				<paraminfo> [5][28] </paraminfo>
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:DamageFeedUpdate" syntax="DamageFeedUpdate(playerid, modified)">
			<stacksize value="9"/>
			<referrer name="SetDamageFeedForPlayer"/>
			<referrer name="SetDamageFeed"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ScriptInit"/>
			<referrer name="WC_DamageFeedUpdate"/>
			<referrer name="DamageFeedAddHit"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="DamageFeedUpdateText"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsDamageFeedActive"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerTextDrawAlignment"/>
			<dependency name="PlayerTextDrawBackgroundColor"/>
			<dependency name="PlayerTextDrawColor"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetProportional"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="SetTimerEx"/>
			<dependency name="e_Tick"/>
			<dependency name="false"/>
			<dependency name="printf"/>
			<dependency name="s_DamageFeedGiven"/>
			<dependency name="s_DamageFeedHideDelay"/>
			<dependency name="s_DamageFeedHitsGiven"/>
			<dependency name="s_DamageFeedHitsGiven"/>
			<dependency name="s_DamageFeedHitsTaken"/>
			<dependency name="s_DamageFeedHitsTaken"/>
			<dependency name="s_DamageFeedLastUpdate"/>
			<dependency name="s_DamageFeedMaxUpdateRate"/>
			<dependency name="s_DamageFeedTaken"/>
			<dependency name="s_DamageFeedTimer"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="modified">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:DamageFeedUpdateText" syntax="DamageFeedUpdateText(playerid)">
			<stacksize value="364"/>
			<referrer name="DamageFeedUpdate"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="WC_GetWeaponName"/>
			<dependency name="e_Amount"/>
			<dependency name="e_Issuer"/>
			<dependency name="e_Name"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Weapon"/>
			<dependency name="format"/>
			<dependency name="printf"/>
			<dependency name="s_DamageFeedGiven"/>
			<dependency name="s_DamageFeedHitsGiven"/>
			<dependency name="s_DamageFeedHitsGiven"/>
			<dependency name="s_DamageFeedHitsTaken"/>
			<dependency name="s_DamageFeedHitsTaken"/>
			<dependency name="s_DamageFeedTaken"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_PlayerHealth"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DamagePlayer" syntax="DamagePlayer(playerid, amount, issuerid, weaponid, bodypart, ignore_armour)">
			<stacksize value="9"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="InflictDamage"/>
			<dependency name="IsPlayerConnected"/>
			<param name="playerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="issuerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
			<param name="ignore_armour">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Debug_Code1" syntax="Debug_Code1(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code1{if (bla == 2) { bla++; YSI_PrintF__("%d", bla); }}  </code>  Or:  <code>  C:1{if (bla == 2) { bla++; YSI_PrintF__("%d", bla); }}  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 1</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code2" syntax="Debug_Code2(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code2(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:2(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 2</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code3" syntax="Debug_Code3(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code3(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:3(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 3</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code4" syntax="Debug_Code4(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code4(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:4(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 4</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code5" syntax="Debug_Code5(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code5(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:5(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 5</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code6" syntax="Debug_Code6(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code6(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:6(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 6</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code7" syntax="Debug_Code7(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code7(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:7(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 7</c>.  </remarks> 
		</member>
		<member name="M:Debug_Disable" syntax="Debug_Disable()">
			<stacksize value="1"/>
			<remarks>  Turn off level 0 prints.  </remarks>  <transition target="off"/>

		</member>
		<member name="M:Debug_Enable" syntax="Debug_Enable()">
			<stacksize value="1"/>
			<remarks>  Turn on level 0 prints.  </remarks>  <transition target="on"/>

		</member>
		<member name="M:Debug_IsStringLike" syntax="Debug_IsStringLike(addr, len)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<param name="addr">
				A pointer to a thing that might be a string.
			</param>
			<param name="len">
			</param>
			  <returns>  Prints a string passed as a vararg to the calling function.  </returns> 
		</member>
		<member name="M:Debug_Kill_" syntax="Debug_Kill_()">
			<stacksize value="1"/>
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="CGen_OOM"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="_@Hy"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_FoundDescriptor"/>
		</member>
		<member name="M:Debug_Level" syntax="Debug_Level(level)">
			<stacksize value="1"/>
			<dependency name="YSI_gDebugLevel"/>
			<param name="level">
			</param>
			<remarks>  Set the debug level when the code is compiled with <c>_DEBUG=-1</c>, which  means full run-time selection.  </remarks> 
		</member>
		<member name="M:Debug_OnCodeInit" syntax="Debug_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetGlobal"/>
			<dependency name="AMX_HEADER_AMX_VERSION"/>
			<dependency name="AMX_HEADER_CIP"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_DEFSIZE"/>
			<dependency name="AMX_HEADER_FILE_VERSION"/>
			<dependency name="AMX_HEADER_FLAGS"/>
			<dependency name="AMX_HEADER_HEA"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_MAGIC"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_SIZE"/>
			<dependency name="AMX_HEADER_STP"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_REAL_DATA"/>
		</member>
		<member name="M:Debug_Print0" syntax="Debug_Print0(str[], ...)">
			<stacksize value="1"/>
			<automaton name="ysi_debug"/>
			<referrer name="OnJITCompile"/>
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="y_rconfix_Load"/>
			<referrer name="DumpProfilingTime"/>
			<referrer name="InterpolateColorLinear"/>
			<referrer name="InterpolateColorGamma"/>
			<referrer name="InterpolateColorSRGB"/>
			<referrer name="LevenshteinDistance"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="CGen_OOM"/>
			<referrer name="CGen_AddCodeSpace"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="_@Hy"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="YVA2_DummyPush"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Inline_FoundDescriptor"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="Dialog_ShowPlayerDialog"/>
			<dependency name="printf"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				
			</param>
			<param name="YSI_Format__">str.</param>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print0("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print0("variables: %d, %d", i, j);  </code>  <c>_DEBUG</c> level 0 prints are ALWAYS compiled, but are runtime switched  using the automata <c>ysi_debug</c>.  When then state is <c>ysi_debug :  on</c>, the prints are executed.  When then state is <c>ysi_debug : off</c>,  they aren't.  </remarks> 
		</member>
		<member name="M:Debug_Print1" syntax="Debug_Print1(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print1("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print1("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 1</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print2" syntax="Debug_Print2(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print2("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print2("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 2</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print3" syntax="Debug_Print3(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print3("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print3("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 3</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print4" syntax="Debug_Print4(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print4("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print4("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 4</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print5" syntax="Debug_Print5(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print5("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print5("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 5</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print6" syntax="Debug_Print6(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print6("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print6("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 6</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print7" syntax="Debug_Print7(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print7("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print7("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 7</c>.  </remarks> 
		</member>
		<member name="M:Debug_PrintArray" syntax="Debug_PrintArray(arr[], size)">
			<stacksize value="108"/>
			<dependency name="Debug_PrintArray"/>
			<dependency name="YSI_Format__"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Debug_PrintQ_IMPL" syntax="Debug_PrintQ_IMPL(tag, size, expr[], file[], line, ...)">
			<stacksize value="150"/>
			<dependency name="AMX_GetTagByValue"/>
			<dependency name="Debug_IsStringLike"/>
			<dependency name="Debug_PrintQ_PRINT"/>
			<dependency name="YSI_PrintF__"/>
			<dependency name="fclose"/>
			<dependency name="format"/>
			<dependency name="ftemporary"/>
			<dependency name="fwrite"/>
			<dependency name="getarg"/>
			<param name="tag">
				<paraminfo>Debug_PrintQ_TAG </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Debug_PrintQ_SIZEOF </paraminfo>
			</param>
			<param name="expr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="file">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="line">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<remarks>  Try and print a wide range of variables, with their source expression.  Examples:  new arr[] = {33, 33, 33};  new Float:farr[] = {11.0, 11.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0};  new MyCustomTag:mctarr[] = { MyCustomTag:6, MyCustomTag:7 };  new str[] = "hello";  new var1 = 2;  new Float:f = 5.5;  Debug_Q(str);  Debug_Q(var1);  Debug_Q(f);  Debug_Q(arr);  Debug_Q(farr, 7);  Debug_Q(mctarr);  If an array length cannot be determined you can pass it as a second arg.  All tags are supported, the output from the above is:  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:16  str[6] = "hello"  (full data dumped to: _fgdjkeGjAz.tmp)  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:17  var1 = 2  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:18  Float:f = 5.500  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:19  arr[3] = { 33, 33, 33 }  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:20  Float:farr[7] = { 11.000, 11.000, 11.000, 12.000, 13.000, ... }  (full data dumped to: _HOf6OQgcC8.tmp)  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:21  MyCustomTag:mctarr[2] = { 6, 7 }  Note: Temporary files are automatically deleted after a month.  </remarks> 
		</member>
		<member name="M:Debug_PrintQ_PRINT" syntax="Debug_PrintQ_PRINT(str[], expr[], &amp;size, addr)">
			<attribute name="native"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="expr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Debug_PrintQ_SIZEOF &amp; </paraminfo>
			</param>
			<param name="addr">
			</param>
		</member>
		<member name="M:Debug_SetState" syntax="Debug_SetState()">
			<stacksize value="1"/>
			<automaton name="ysi_debug"/>
			<referrer name="ScriptInit_OnCodeInit"/>
			<transition keep="true" target="ysi_debug : on" source="ysi_debug : "/>  <remarks>  Mostly exists to define the full range of <c>ysi_debug</c> states.  </remarks> <p/> <transition target="on"/>

		</member>
		<member name="M:DelayedGangInvite" syntax="DelayedGangInvite(playerid, gangid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="KillTimer"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="pGang"/>
			<dependency name="pGangInviteTimer"/>
			<dependency name="pGangInvites"/>
			<dependency name="pGangInvites"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
		</member>
		<member name="M:DelayedPrivCarPut" syntax="DelayedPrivCarPut(playerid, privcarid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="pVeh"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:DeleteGodDA" syntax="DeleteGodDA(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DeletePolish" syntax="DeletePolish(buffer[])">
			<stacksize value="262"/>
			<referrer name="Fortune_Start"/>
			<referrer name="EnterBusiness"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<dependency name="DeletePolish"/>
			<dependency name="format"/>
			<dependency name="strlen"/>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DeleteSVar" syntax="DeleteSVar(svar[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Logger_ToggleDebug"/>
			<param name="svar">
				<paraminfo> [] </paraminfo>
				The name of the server variable to delete
			</param>
			<library>a_samp</library>  <summary>Deletes a previously set server variable.</summary>    <seealso name="SetSVarInt" />  <seealso name="GetSVarInt" />  <seealso name="SetSVarString" />  <seealso name="GetSVarString" />  <seealso name="SetSVarFloat" />  <seealso name="GetSVarFloat" />  <remarks>Once a variable is deleted, attempts to retrieve the value will return <b><c>0</c></b> (for  integers and floats and <b><c>NULL</c></b> for strings.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  There is no variable set with the given name.  </returns> 
		</member>
		<member name="M:DeniedVehicle" syntax="DeniedVehicle(model)">
			<stacksize value="1"/>
			<referrer name="pc_cmd_v"/>
			<param name="model">
			</param>
		</member>
		<member name="M:DestroyActor" syntax="DestroyActor(actorid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Iter_DestroyActor"/>
			<param name="actorid">
				The ID of the actor to destroy.  Returned by <a href="#CreateActor">CreateActor</a>
			</param>
			<library>a_actor</library>  <summary>Destroy an actor which was created with <a href="#CreateActor">CreateActor</a>.</summary>    <seealso name="CreateActor" />  <remarks>This function was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The actor with the ID specified does not exist.  </returns> 
		</member>
		<member name="M:DestroyAllPlayerProgressBars" syntax="DestroyAllPlayerProgressBars(playerid)">
			<stacksize value="6"/>
			<referrer name="_@yHOnScriptExit@000"/>
			<dependency name="DestroyPlayerProgressBar"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DestroyDynamic3DTextLabel" syntax="DestroyDynamic3DTextLabel(id)">
			<attribute name="native"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="Truck_Stop"/>
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="Init_Mining"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<param name="id">
				<paraminfo>Text3D </paraminfo>
			</param>
		</member>
		<member name="M:DestroyDynamicActor" syntax="DestroyDynamicActor(actorid)">
			<attribute name="native"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="ExitPraca"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:DestroyDynamicArea" syntax="DestroyDynamicArea(areaid)">
			<attribute name="native"/>
			<referrer name="pc_cmd_evend"/>
			<param name="areaid">
			</param>
		</member>
		<member name="M:DestroyDynamicCP" syntax="DestroyDynamicCP(checkpointid)">
			<attribute name="native"/>
			<referrer name="Truck_Stop"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="ExitPraca"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="StartWP"/>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:DestroyDynamicMapIcon" syntax="DestroyDynamicMapIcon(iconid)">
			<attribute name="native"/>
			<referrer name="Truck_Stop"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="ExitPraca"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
			<param name="iconid">
			</param>
		</member>
		<member name="M:DestroyDynamicObject" syntax="DestroyDynamicObject(objectid)">
			<attribute name="native"/>
			<referrer name="CA_DestroyObject_DC"/>
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="_@yHDestroyVehicle@0K"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
			<referrer name="Init_Mining"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="StartSK"/>
			<referrer name="StopSK"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:DestroyDynamicPickup" syntax="DestroyDynamicPickup(pickupid)">
			<attribute name="native"/>
			<referrer name="ac_DestroyDynamicPickup"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:DestroyDynamicRaceCP" syntax="DestroyDynamicRaceCP(checkpointid)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="ExitPraca"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:DestroyKurczak" syntax="DestroyKurczak()">
			<stacksize value="3"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="KurczakEnabled"/>
			<dependency name="KurczakHealth"/>
			<dependency name="KurczakLabel"/>
			<dependency name="KurczakObject"/>
			<dependency name="KurczakReward"/>
			<dependency name="false"/>
		</member>
		<member name="M:DestroyModelSelectionPlayerTDs" syntax="DestroyModelSelectionPlayerTDs(playerid)">
			<stacksize value="5"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="HideModelSelectionMenu"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="g_MenuHeaderText"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuPageNumber"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DestroyObject" syntax="DestroyObject(objectid)">
			<attribute name="native"/>
			<referrer name="CA_DestroyObject_DC"/>
			<referrer name="DestroyVendingMachines"/>
			<param name="objectid">
				The ID of the object to destroy.  Returned by <a href="#CreateObject">CreateObject</a>
			</param>
			<library>a_objects</library>  <summary>Destroys (removes) an object that was created using <a href="#CreateObject">CreateObject</a>.</summary>    <seealso name="CreateObject" />  <seealso name="IsValidObject" />  <seealso name="DestroyPlayerObject" /> 
		</member>
		<member name="M:DestroyPickup" syntax="DestroyPickup(pickup)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_DestroyPickup"/>
			<param name="pickup">
				The ID of the pickup to destroy (returned by <a href="#CreatePickup">CreatePickup</a>)
			</param>
			<library>a_samp</library>  <summary>Destroys a pickup created with <a href="#CreatePickup">CreatePickup</a>.</summary>    <seealso name="CreatePickup" />  <seealso name="OnPlayerPickUpPickup" /> 
		</member>
		<member name="M:DestroyPlayerProgressBar" syntax="DestroyPlayerProgressBar(playerid, barid)">
			<stacksize value="7"/>
			<referrer name="DestroyAllPlayerProgressBars"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@pbar_Index"/>
			<dependency name="Iterator@pbar_Index"/>
			<dependency name="Iterator@pbar_Index"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_back"/>
			<dependency name="pbar_fill"/>
			<dependency name="pbar_main"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:DestroyPrivCar" syntax="DestroyPrivCar(privcarid)">
			<stacksize value="4"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ChangePrivCarModel"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SavePrivCar"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="false"/>
			<dependency name="pVeh"/>
			<dependency name="pVehLabel"/>
			<dependency name="pVehSpawned"/>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:DestroyVehicle" syntax="DestroyVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Iter_DestroyVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle to destroy
			</param>
			<library>a_vehicles</library>  <summary>Destroy a vehicle.  It will disappear instantly.</summary>    <seealso name="CreateVehicle" />  <seealso name="RemovePlayerFromVehicle" />  <seealso name="SetVehicleToRespawn" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:DestroyVendingMachines" syntax="DestroyVendingMachines()">
			<stacksize value="4"/>
			<referrer name="SetCustomVendingMachines"/>
			<referrer name="ScriptExit"/>
			<referrer name="CreateVendingMachines"/>
			<dependency name="DestroyObject"/>
			<dependency name="false"/>
			<dependency name="s_VendingMachineObject"/>
		</member>
		<member name="M:DestroyZone" syntax="DestroyZone(zoneid)">
			<stacksize value="4"/>
			<referrer name="StopChowany"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="StartWG"/>
			<dependency name="GangZoneDestroy"/>
			<dependency name="border"/>
			<dependency name="false"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZonesCreated"/>
			<dependency name="zIsUsingBorders"/>
			<dependency name="zIsUsingNumbers"/>
			<dependency name="zMainID"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:DestroyZoneBorders" syntax="DestroyZoneBorders(zoneid)">
			<stacksize value="4"/>
			<dependency name="GangZoneDestroy"/>
			<dependency name="border"/>
			<dependency name="false"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:DestroyZoneNumber" syntax="DestroyZoneNumber(zoneid)">
			<stacksize value="4"/>
			<dependency name="GangZoneDestroy"/>
			<dependency name="false"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingNumbers"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:Dialog_Get" syntax="Dialog_Get(playerid)">
			<stacksize value="1"/>
			<dependency name="YSI_g_sPlayerDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Dialog_Hide" syntax="Dialog_Hide(playerid)">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="HidePlayerDialog"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="_@Dialog_Set"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Dialog_Set" syntax="Dialog_Set(playerid, dialogid)">
			<stacksize value="4"/>
			<referrer name="@@Dialog_Set"/>
			<dependency name="Indirect_Release_"/>
			<dependency name="YSI_g_sPlayerCallback"/>
			<dependency name="YSI_g_sPlayerDialog"/>
			<dependency name="cellmax"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
		</member>
		<member name="M:Dialog_Show" syntax="Dialog_Show(playerid, style, title[], caption[], button1[], button2[])">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<dependency name="Dialog_ShowPlayerNative"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="YSI_g_sPlayerCallback"/>
			<dependency name="_@Dialog_Set"/>
			<dependency name="cellmin"/>
			<param name="playerid">
			</param>
			<param name="style">
			</param>
			<param name="title">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Dialog_ShowCallback" syntax="Dialog_ShowCallback(playerid, callback, style, title[], caption[], button1[], button2[], tag)">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<referrer name="Dialog_ShowCallbackData"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<dependency name="Dialog_ShowPlayerNative"/>
			<dependency name="I@"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="Indirect_SetMeta_"/>
			<dependency name="J@"/>
			<dependency name="YSI_g_sPlayerCallback"/>
			<dependency name="_@Dialog_Set"/>
			<param name="playerid">
			</param>
			<param name="callback">
				<paraminfo> {F@_@iiiis,F@_@iis} </paraminfo>
			</param>
			<param name="style">
			</param>
			<param name="title">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="tag">
			</param>
		</member>
		<member name="M:Dialog_ShowCallbackData" syntax="Dialog_ShowCallbackData(playerid, callback[], style, title[], caption[], button1[], button2[])">
			<tagname value="bool"/>
			<stacksize value="11"/>
			<dependency name="Dialog_ShowCallback"/>
			<param name="playerid">
			</param>
			<param name="callback">
				<paraminfo> [1] </paraminfo>
			</param>
			<param name="style">
			</param>
			<param name="title">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Dialog_ShowPlayerDialog" syntax="Dialog_ShowPlayerDialog(playerid, dialog, style, title[], caption[], button1[], button2[])">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<referrer name="_NDP_ShowPlayerDialog_"/>
			<referrer name="NDP_ShowDialogPage"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Dialog_ShowPlayerNative"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="YSI_g_sPlayerCallback"/>
			<dependency name="_@Dialog_Set"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="dialog">
			</param>
			<param name="style">
			</param>
			<param name="title">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Dialog_ShowPlayerNative" syntax="Dialog_ShowPlayerNative(playerid, dialogid, style, caption[], info[], button1[], button2[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_ShowPlayerDialog"/>
			<referrer name="Dialog_ShowCallback"/>
			<referrer name="Dialog_Show"/>
			<referrer name="Dialog_ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="style">
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="info">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DisableInteriorEnterExits" syntax="DisableInteriorEnterExits()">
			<attribute name="native"/>
			<referrer name="ac_DisableInteriorEnterExits"/>
			<library>a_samp</library>  <summary>Disable all the interior entrances and exits in the game (the yellow arrows at doors).</summary>  <seealso name="AllowInteriorWeapons" />  <remarks>If the gamemode is changed after this function has been used, and the new gamemode doesn't  disable markers, the markers will NOT reappear for already-connected players (but will for newly  connected players).</remarks>  <remarks>This function will only work if it has been used BEFORE a player connects (it is recommended  to use it in OnGameModeInit).  It will not remove a connected player's markers.</remarks>  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:DisableNameTagLOS" syntax="DisableNameTagLOS()">
			<attribute name="native"/>
			<referrer name="WC_OnGameModeInit"/>
			<library>a_samp</library>  <summary>Disables the nametag Line-Of-Sight checking so that players can see nametags through objects.</summary>  <seealso name="ShowNameTags" />  <seealso name="ShowPlayerNameTagForPlayer" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This can not be reversed until the server restarts.</remarks> 
		</member>
		<member name="M:DisableRemoteVehicleCollisions" syntax="DisableRemoteVehicleCollisions(playerid, disable)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerDeath@0C"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Stop"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
			<param name="playerid">
				The ID of the player for whom you want to disable collisions
			</param>
			<param name="disable">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to disable collisions, <b><c>0</c></b> to enable collisions
			</param>
			<library>a_players</library>  <summary>Disables collisions between occupied vehicles for a player.</summary>      <remarks>This function was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:DisasmDecodeInsn" syntax="DisasmDecodeInsn(ctx[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="DisasmNext"/>
			<referrer name="DisasmNextInsn"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_NONE"/>
			<dependency name="UnrelocateOpcode"/>
			<dependency name="false"/>
			<dependency name="gAMXOpcodeBaseSizes"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="true"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmDecodeInsnUnsafe" syntax="DisasmDecodeInsnUnsafe(ctx[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_NONE"/>
			<dependency name="UnrelocateOpcode"/>
			<dependency name="false"/>
			<dependency name="gAMXOpcodeBaseSizes"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="true"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmDump" syntax="DisasmDump(filename[])">
			<stacksize value="4"/>
			<dependency name="DisasmWrite"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmGetCurIp" syntax="DisasmGetCurIp(ctx[])">
			<stacksize value="1"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="DisasmContext_cip"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmGetInsnName" syntax="DisasmGetInsnName(ctx[], name[], size)">
			<stacksize value="21"/>
			<referrer name="DisasmWriteCode"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="GetOpcodeInstructionName"/>
			<dependency name="GetOpcodeInstructionName"/>
			<dependency name="strcat"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmGetNextIp" syntax="DisasmGetNextIp(ctx[])">
			<stacksize value="1"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<dependency name="DisasmContext_nip"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmGetNumOperands" syntax="DisasmGetNumOperands(ctx[])">
			<stacksize value="2"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="gAMXOpcodeParameterCounts"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmGetOpcode" syntax="DisasmGetOpcode(ctx[])">
			<tagname value="Opcode"/>
			<stacksize value="1"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="DisasmContext_opcode"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmGetOperand" syntax="DisasmGetOperand(ctx[], index)">
			<stacksize value="1"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="O@B_"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="index">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmGetOperandReloc" syntax="DisasmGetOperandReloc(ctx[], index)">
			<stacksize value="3"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="O@A_"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="gAMXOpcodeNeedsReloc"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gCodBase"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="index">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmGetRemaining" syntax="DisasmGetRemaining(ctx[])">
			<stacksize value="1"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmInit" syntax="DisasmInit(ctx[], start, end)">
			<stacksize value="21"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="O@A_"/>
			<referrer name="O@B_"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="ThirdParty_OnCodeInit"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="gCodBase"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmInitUnsafe" syntax="DisasmInitUnsafe()">
			<stacksize value="1"/>
			<referrer name="CodeScanMatcherInit_"/>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmNeedReloc" syntax="DisasmNeedReloc(ctx[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="GetOpcodeInstructionRelocatable"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmNext" syntax="DisasmNext(ctx[])">
			<tagname value="DisasmResult"/>
			<stacksize value="4"/>
			<referrer name="O@A_"/>
			<referrer name="O@B_"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="DISASM_DONE"/>
			<dependency name="DISASM_NOP"/>
			<dependency name="DISASM_OK"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="NUM_OPCODES"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmNextInsn" syntax="DisasmNextInsn(ctx[])">
			<tagname value="Opcode"/>
			<stacksize value="4"/>
			<referrer name="ThirdParty_OnCodeInit"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="OP_NONE"/>
			<param name="ctx">
				<paraminfo> [5] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmReloc" syntax="DisasmReloc(addr)">
			<stacksize value="1"/>
			<dependency name="gCodBase"/>
			<param name="addr">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmWrite" syntax="DisasmWrite(filename[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="DisasmDump"/>
			<dependency name="DisasmWriteFile"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="io_write"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmWriteCode" syntax="DisasmWriteCode(file)">
			<stacksize value="159"/>
			<referrer name="DisasmWriteFile"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_CIP"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="DisasmGetCurIp"/>
			<dependency name="DisasmGetInsnName"/>
			<dependency name="DisasmGetNextIp"/>
			<dependency name="DisasmGetNumOperands"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="DisasmInit"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="GetNativeIndexFromAddress"/>
			<dependency name="GetNativeNameFromIndex"/>
			<dependency name="GetPublicIndexFromAddress"/>
			<dependency name="GetPublicNameFromIndex"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="ToHexStr"/>
			<dependency name="ToHexStr"/>
			<dependency name="fwrite"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gCodBase"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmWriteData" syntax="DisasmWriteData(file)">
			<stacksize value="38"/>
			<referrer name="DisasmWriteFile"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_HEA"/>
			<dependency name="DisasmWriteDataRowChar"/>
			<dependency name="DisasmWriteDataRowHex"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="ToHexStr"/>
			<dependency name="ToHexStr"/>
			<dependency name="fwrite"/>
			<dependency name="min"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmWriteDataRowChar" syntax="DisasmWriteDataRowChar(file, start, num, max)">
			<stacksize value="13"/>
			<referrer name="DisasmWriteData"/>
			<dependency name="ToPrintableAscii"/>
			<dependency name="fwrite"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="num">
			</param>
			<param name="max">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmWriteDataRowHex" syntax="DisasmWriteDataRowHex(file, start, num, max)">
			<stacksize value="19"/>
			<referrer name="DisasmWriteData"/>
			<dependency name="ToHexStr"/>
			<dependency name="ToHexStr"/>
			<dependency name="fwrite"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="num">
			</param>
			<param name="max">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DisasmWriteFile" syntax="DisasmWriteFile(file)">
			<stacksize value="4"/>
			<referrer name="DisasmWrite"/>
			<dependency name="DisasmWriteCode"/>
			<dependency name="DisasmWriteData"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:DoLevenshteinDistance" syntax="DoLevenshteinDistance(a[], lenA, b[], lenB)">
			<stacksize value="154"/>
			<referrer name="LevenshteinDistance"/>
			<dependency name="min"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenA">
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenB">
			</param>
		</member>
		<member name="M:DoLevenshteinDistancePackA" syntax="DoLevenshteinDistancePackA(a[], lenA, b[], lenB)">
			<stacksize value="154"/>
			<referrer name="LevenshteinDistance"/>
			<dependency name="min"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenA">
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenB">
			</param>
		</member>
		<member name="M:DoLevenshteinDistancePackAB" syntax="DoLevenshteinDistancePackAB(a[], lenA, b[], lenB)">
			<stacksize value="154"/>
			<referrer name="LevenshteinDistance"/>
			<dependency name="min"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenA">
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenB">
			</param>
		</member>
		<member name="M:DoLevenshteinDistancePackB" syntax="DoLevenshteinDistancePackB(a[], lenA, b[], lenB)">
			<stacksize value="154"/>
			<referrer name="LevenshteinDistance"/>
			<dependency name="min"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenA">
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenB">
			</param>
		</member>
		<member name="M:DriveExamTimer" syntax="DriveExamTimer(playerid)">
			<stacksize value="13"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="pDriveCP"/>
			<dependency name="pDriveExam"/>
			<dependency name="pDriveStatus"/>
			<dependency name="pDriveTimer"/>
			<dependency name="pDriveType"/>
			<dependency name="pDriveVehicle"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DrwalTree" syntax="DrwalTree(playerid, treeid)">
			<attribute name="public"/>
			<stacksize value="139"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Y"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ACH_DRWAL"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DrwalCount"/>
			<dependency name="DrwalCutted"/>
			<dependency name="DrwalCutted"/>
			<dependency name="DrwalHealth"/>
			<dependency name="DrwalHealth"/>
			<dependency name="DrwalLabel"/>
			<dependency name="DrwalLabel"/>
			<dependency name="DrwalMapIcon"/>
			<dependency name="DrwalMapIcon"/>
			<dependency name="DrwalObject"/>
			<dependency name="DrwalObject"/>
			<dependency name="DrwalReward"/>
			<dependency name="DrwalTreeCount"/>
			<dependency name="Drwal_Spawn"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetPlayerKeys"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="achievement"/>
			<dependency name="addJobScore"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="math_random_float"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_holding"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="treeid">
			</param>
		</member>
		<member name="M:Drwal_Spawn" syntax="Drwal_Spawn(playerid)">
			<stacksize value="145"/>
			<referrer name="Drwal_Start"/>
			<referrer name="DrwalTree"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CA_FindZ_For2DCoord"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="DrwalCutted"/>
			<dependency name="DrwalCutted"/>
			<dependency name="DrwalHealth"/>
			<dependency name="DrwalHealth"/>
			<dependency name="DrwalLabel"/>
			<dependency name="DrwalLabel"/>
			<dependency name="DrwalMapIcon"/>
			<dependency name="DrwalMapIcon"/>
			<dependency name="DrwalObject"/>
			<dependency name="DrwalObject"/>
			<dependency name="DrwalTreeCount"/>
			<dependency name="DrwalTreePosition"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsPosInWater"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Drwal_Start" syntax="Drwal_Start(playerid)">
			<stacksize value="12"/>
			<referrer name="OnDialogJob"/>
			<dependency name="DrwalCount"/>
			<dependency name="DrwalReward"/>
			<dependency name="DrwalTreeCount"/>
			<dependency name="DrwalVehicle"/>
			<dependency name="Drwal_Spawn"/>
			<dependency name="GetPVarInt"/>
			<dependency name="JobDay"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WEAPON_CHAINSAW"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="giveWeapon"/>
			<dependency name="math_random"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DuelRespawn" syntax="DuelRespawn(playerid, enemyid)">
			<stacksize value="13"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateDuelBox"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="math_random"/>
			<dependency name="pDuelWeapon"/>
			<dependency name="pDuelWeapon"/>
			<param name="playerid">
			</param>
			<param name="enemyid">
			</param>
		</member>
		<member name="M:DumpAMX_EncodeBytes" syntax="DumpAMX_EncodeBytes(c, buffer[])">
			<stacksize value="2"/>
			<referrer name="DumpAMX_WriteEncoded"/>
			<param name="c">
			</param>
			<param name="buffer">
				<paraminfo> [5] </paraminfo>
			</param>
		</member>
		<member name="M:DumpAMX_Included_" syntax="DumpAMX_Included_()">
			<stacksize value="1"/>
		</member>
		<member name="M:DumpAMX_Write" syntax="DumpAMX_Write(filename[])">
			<tagname value="bool"/>
			<stacksize value="36"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_FLAGS"/>
			<dependency name="DumpAMX_WriteAMXCode"/>
			<dependency name="DumpAMX_WriteAMXData"/>
			<dependency name="DumpAMX_WriteAMXHeader"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="false"/>
			<dependency name="fblockwrite"/>
			<dependency name="fclose"/>
			<dependency name="flength"/>
			<dependency name="fopen"/>
			<dependency name="fseek"/>
			<dependency name="io_write"/>
			<dependency name="seek_start"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DumpAMX_WriteAMXCode" syntax="DumpAMX_WriteAMXCode(file, data[], &amp;offset, compact)">
			<tagname value="bool"/>
			<stacksize value="27"/>
			<referrer name="DumpAMX_Write"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="DisasmGetNextIp"/>
			<dependency name="DisasmGetNumOperands"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="DisasmInit"/>
			<dependency name="DumpAMX_WriteEncoded"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="GetNativeIndexFromAddress"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="true"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="offset">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="compact">
			</param>
		</member>
		<member name="M:DumpAMX_WriteAMXData" syntax="DumpAMX_WriteAMXData(file, data[], &amp;offset, compact)">
			<tagname value="bool"/>
			<stacksize value="27"/>
			<referrer name="DumpAMX_Write"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_HEA"/>
			<dependency name="DumpAMX_WriteEncoded"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="true"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="offset">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="compact">
			</param>
		</member>
		<member name="M:DumpAMX_WriteAMXHeader" syntax="DumpAMX_WriteAMXHeader(file, data[], &amp;offset, compact)">
			<tagname value="bool"/>
			<stacksize value="22"/>
			<referrer name="DumpAMX_Write"/>
			<dependency name="AMX_HDR_OFFSET_COD"/>
			<dependency name="AMX_HDR_OFFSET_DAT"/>
			<dependency name="AMX_HDR_OFFSET_LIBRARIES"/>
			<dependency name="AMX_HDR_OFFSET_NATIVES"/>
			<dependency name="GetRawAmxHeader"/>
			<dependency name="false"/>
			<dependency name="fblockwrite"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="true"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="offset">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="compact">
			</param>
		</member>
		<member name="M:DumpAMX_WriteEncoded" syntax="DumpAMX_WriteEncoded(file, data[], &amp;offset, compact, c)">
			<stacksize value="11"/>
			<referrer name="DumpAMX_WriteAMXData"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<dependency name="DumpAMX_EncodeBytes"/>
			<dependency name="fblockwrite"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="offset">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="compact">
			</param>
			<param name="c">
			</param>
		</member>
		<member name="M:DumpProfilingTime" syntax="DumpProfilingTime(name[], timings[], iters, size)">
			<stacksize value="11"/>
			<dependency name="Debug_Print0"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="fwrite"/>
			<dependency name="gettime"/>
			<dependency name="io_append"/>
			<dependency name="io_write"/>
			<dependency name="va_fprintf"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name of the profile.
			</param>
			<param name="timings">
				<paraminfo> [] </paraminfo>
				The raw profiling results.
			</param>
			<param name="iters">
				The number of iterations per run.
			</param>
			<param name="size">
				The number of repeats.
			</param>
			        <remarks>  "WTF" here stands for "Write To File".  The output looks like:  <code>  timestamp,runs,repeats,results (ms)  1546082820,10,1000000,122,121,121,120,121,121,121,119,119,121  1546082822,10,1000000,123,124,123,123,121,121,121,120,122,122  </code>  The timestamp is the unix timestamp at which the line was WRITTEN, not the  time at which the profilings started or ended.  "runs" is the number of times the whole profile was repeated.  "repeats" is the number of times the code was run for each repeat.  "results" are the total times for each repeat, in milliseconds.  The time  for an individual piece of code is <c>result[n] / repeats</c>.  This is  equivalent to:  <code>  for (new i = 0; i != runs; ++i)  {  start = GetTickCount();  for (new i = 0; i != repeats; ++i)  {  USER_CODE_HERE();  }  end = GetTickCount();  WriteToFile(end - start);  }  </code>  The repeats help to time very short pieces of code.  The runs help to  average.  The console reports average results (mean, mode, median, range).  Thus the even more accurate result for a single iteration would be:  <c>sum(results) / (runs * repeats)</c>.  </remarks> 
		</member>
		<member name="M:ENUM_PAWNDOC" syntax="ENUM_PAWNDOC(symbol[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  There's a bug with the pawndoc for enums.  They loose the documentation, or  get some other documentation unless they're immediately followed by another  declaration, most notably a function.  This uses the same  <c>PAWNDOC&lt;&gt;</c> trick as <c>FUNC_PAWNDOC</c> to use the <c>enum</c>  name as a symbol, this time passing it to a function that should always  exist.  This ensures the docs are attached to the correct symbol and the  additional function is well documented.  </remarks> 
		</member>
		<member name="M:EditDynamicObject" syntax="EditDynamicObject(playerid, objectid)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:EnableAntiCheat" syntax="EnableAntiCheat(code, enable)">
			<stacksize value="5"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="ac_EnableAntiCheat"/>
			<param name="code">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:EnableAntiCheatForPlayer" syntax="EnableAntiCheatForPlayer(playerid, code, enable)">
			<stacksize value="6"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_EnableAntiCheatForPlayer"/>
			<param name="playerid">
			</param>
			<param name="code">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:EnableAntiNOP" syntax="EnableAntiNOP(nopcode, enable)">
			<stacksize value="5"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="ac_EnableAntiNOP"/>
			<param name="nopcode">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:EnableAntiNOPForPlayer" syntax="EnableAntiNOPForPlayer(playerid, nopcode, enable)">
			<stacksize value="6"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_EnableAntiNOPForPlayer"/>
			<param name="playerid">
			</param>
			<param name="nopcode">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:EnableHealthBarForPlayer" syntax="EnableHealthBarForPlayer(playerid, enable)">
			<stacksize value="5"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SetHealthBarVisible"/>
			<dependency name="false"/>
			<dependency name="s_EnableHealthBar"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="enable">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:EnableSpawnKill" syntax="EnableSpawnKill(playerid)">
			<stacksize value="6"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_antySK"/>
			<dependency name="player_god"/>
			<dependency name="showGameDraw"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:EnableStuntBonusForAll" syntax="EnableStuntBonusForAll(enable)">
			<attribute name="native"/>
			<referrer name="ac_EnableStuntBonusForAll"/>
			<param name="enable">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable stunt bonuses or <b><c>0</c></b> to disable them
			</param>
			<library>a_players</library>  <summary>Enables or disables stunt bonuses for all players.  If enabled, players will receive monetary  rewards when performing a stunt in a vehicle (e.g.  a wheelie).</summary>    <seealso name="EnableStuntBonusForPlayer" /> 
		</member>
		<member name="M:EnableStuntBonusForPlayer" syntax="EnableStuntBonusForPlayer(playerid, enable)">
			<attribute name="native"/>
			<referrer name="ac_EnableStuntBonusForPlayer"/>
			<param name="playerid">
				The ID of the player to toggle stunt bonuses for
			</param>
			<param name="enable">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable stunt bonuses and <b><c>0</c></b> to disable them
			</param>
			<library>a_players</library>  <summary>Toggle stunt bonuses for a player.  Enabled by default.</summary>      <seealso name="EnableStuntBonusForAll" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player is not connected.  </returns> 
		</member>
		<member name="M:EnableVehicleFriendlyFire" syntax="EnableVehicleFriendlyFire()">
			<tagname value="void"/>
			<attribute name="native"/>
			<referrer name="ac_EnableVehicleFriendlyFire"/>
			<library>a_samp</library>  <summary>Enable friendly fire for team vehicles.  Players will be unable to damage teammates' vehicles  (<a href="#SetPlayerTeam">SetPlayerTeam</a> must be used!).</summary>  <seealso name="SetPlayerTeam" />  <remarks>This function was added in <b>SA-MP 0.3x</b> and will not work in earlier versions!</remarks> 
		</member>
		<member name="M:EndOfLine" syntax="EndOfLine(line[], pos)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<referrer name="endofline"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="strlen"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
				String to check.
			</param>
			<param name="pos">
				Postion to start from.
			</param>
			    <remarks>  Checks if the current point in a line is the end of non-whitespace data.  </remarks> 
		</member>
		<member name="M:EnterBusiness" syntax="EnterBusiness(playerid, businessid)">
			<stacksize value="166"/>
			<referrer name="OnBusinessResponse"/>
			<dependency name="BUSINESS_CASINO"/>
			<dependency name="BUSINESS_GUNSHOP"/>
			<dependency name="DeletePolish"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessWorld"/>
			<dependency name="GunShopDay"/>
			<dependency name="GunShopDay"/>
			<dependency name="SaveWeaponData"/>
			<dependency name="Teleport"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_reward"/>
			<dependency name="business_type"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_accountID"/>
			<dependency name="player_business"/>
			<dependency name="strdot"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
		</member>
		<member name="M:EnterTeleport" syntax="EnterTeleport(playerid, cmd[])">
			<stacksize value="12"/>
			<referrer name="Bank_Pickup"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="OnDialogTeleport"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_lowisko"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<dependency name="CheckPlayerTeleport"/>
			<dependency name="Teleport"/>
			<dependency name="false"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_a"/>
			<dependency name="teleport_interior"/>
			<dependency name="teleport_x"/>
			<dependency name="teleport_y"/>
			<dependency name="teleport_z"/>
			<param name="playerid">
			</param>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:EventError" syntax="EventError(playerid)">
			<stacksize value="5"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evtdmspawn"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evczas"/>
			<referrer name="pc_cmd_evpogoda"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="pc_cmd_evzone"/>
			<referrer name="pc_cmd_evpanel"/>
			<referrer name="pc_cmd_evsettings"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:EventStartTimer" syntax="EventStartTimer()">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="EVENT_TYPE_NONE"/>
			<dependency name="EventCountDown"/>
			<dependency name="EventInterior"/>
			<dependency name="EventLeader"/>
			<dependency name="EventName"/>
			<dependency name="EventPosition"/>
			<dependency name="EventStarted"/>
			<dependency name="EventTimer"/>
			<dependency name="EventType"/>
			<dependency name="Iter_Single@Event"/>
			<dependency name="Iterator@Event"/>
			<dependency name="KillTimer"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetHealth"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="Teleport"/>
			<dependency name="VW_EVENT"/>
			<dependency name="WC_TextDrawHideForAll"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="giveWeapon"/>
			<dependency name="math_random_float"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="tdEvent"/>
			<dependency name="textDrawSetString"/>
			<dependency name="true"/>
		</member>
		<member name="M:ExchangeArraySlots" syntax="ExchangeArraySlots(array[][], slot1, slot2)">
			<stacksize value="3"/>
			<referrer name="_SortDeepArray"/>
			<referrer name="SortArrayUsingComparator_QS"/>
			<param name="array">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="slot1">
			</param>
			<param name="slot2">
			</param>
		</member>
		<member name="M:ExitGlitchArena" syntax="ExitGlitchArena(playerid)">
			<stacksize value="6"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="pGlitchArena"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ExitPlayerArena" syntax="ExitPlayerArena(playerid, arenaid)">
			<stacksize value="33"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GetArenaName"/>
			<dependency name="GetArenaName"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Areny"/>
			<dependency name="Iterator@Areny"/>
			<dependency name="Iterator@Areny"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="UpdateArenaDraw"/>
			<dependency name="UpdateAreny"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="msg"/>
			<dependency name="pArena"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaKills"/>
			<dependency name="pArenaKills"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="printf"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
			<param name="arenaid">
			</param>
		</member>
		<member name="M:ExitPraca" syntax="ExitPraca(playerid)">
			<stacksize value="190"/>
			<referrer name="_@yHOnPlayerDeath@0S"/>
			<referrer name="_@yHOnPlayerExitVehicle@0V"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicActor"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="DrwalCutted"/>
			<dependency name="DrwalCutted"/>
			<dependency name="DrwalHealth"/>
			<dependency name="DrwalHealth"/>
			<dependency name="DrwalLabel"/>
			<dependency name="DrwalLabel"/>
			<dependency name="DrwalMapIcon"/>
			<dependency name="DrwalMapIcon"/>
			<dependency name="DrwalObject"/>
			<dependency name="DrwalObject"/>
			<dependency name="DrwalVehicle"/>
			<dependency name="EOS"/>
			<dependency name="GrzybAlive"/>
			<dependency name="GrzybAlive"/>
			<dependency name="GrzybLabel"/>
			<dependency name="GrzybLabel"/>
			<dependency name="GrzybObject"/>
			<dependency name="GrzybObject"/>
			<dependency name="HuntingAlive"/>
			<dependency name="HuntingAlive"/>
			<dependency name="HuntingHealth"/>
			<dependency name="HuntingHealth"/>
			<dependency name="HuntingLabel"/>
			<dependency name="HuntingLabel"/>
			<dependency name="HuntingObject"/>
			<dependency name="HuntingObject"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicActor"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="TaxiActor"/>
			<dependency name="TaxiCP"/>
			<dependency name="TaxiLabel"/>
			<dependency name="TaxiVehicle"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="ZrzutCP"/>
			<dependency name="ZrzutMapIcon"/>
			<dependency name="ZrzutVehicle"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getJobLevel"/>
			<dependency name="getJobLevel"/>
			<dependency name="getJobName"/>
			<dependency name="getJobName"/>
			<dependency name="getJobScore"/>
			<dependency name="getJobScore"/>
			<dependency name="grabarzCP"/>
			<dependency name="grabarzLabel"/>
			<dependency name="grabarzMapIcon"/>
			<dependency name="grabarzVehicle"/>
			<dependency name="magazynCP"/>
			<dependency name="magazynLabel"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pJob"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:F@" syntax="F@(calltype, master, heapptr)">
			<stacksize value="1"/>
			<referrer name="_@Dialog_Set"/>
			<dependency name="YSI_g_sCallData"/>
			<param name="calltype">
			</param>
			<param name="master">
			</param>
			<param name="heapptr">
			</param>
		</member>
		<member name="M:FIXES_OnClientCheckResponse" syntax="FIXES_OnClientCheckResponse(playerid, actionid, memaddr, retndata)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<automaton name="OnClientCheckResponse"/>
			<referrer name="OnClientCheckResponse"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="KillTimer"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="YSI_g_sTimers"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
			<param name="memaddr">
			</param>
			<param name="retndata">
			</param>
		</member>
		<member name="M:FUNC_PAWNDOC" syntax="FUNC_PAWNDOC(symbol[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  Creates fake functions that Pawndoc comments can be attached to in the first  compilation phase, before the real macros are created.  Macros can't have  documentation comments, but why not?  They need documenting...  <p/>  Used internally as <c>YSI_FUNC_PAWNDOC</c>.  <p/>  This creates a native of the same name, then calls it from a special function  (called <c>PAWNDOC</c>) with a state set to the name of this function, to  avoid declaring multiple functions in the XML while ensuring that this fake  function is in the XML.  Natives aren't in the output unless they are called,  but we don't have to call them correctly because the container function is  never called.  You do need a fallback version of `PAWNDOC` to catch all other  state variations declared elsewhere in your script.  <p/>  <code>  #if defined MACRO_NAME                                                   <br /><indent />  // `#define MACRO_NAME` exists previously, don't document it here.   <br /><indent />  _FIXES_HIDE_PAWNDOC(SIMILAR_NAME);                                   <br />  #else                                                                    <br /><indent />  // Doesn't exist.  Document it and define it.                        <br /><indent />  _FIXES_FUNC_PAWNDOC(MACRO_NAME(parameters));                         <br /><indent />  #define MACRO_NAME(%0) (%0)                                          <br />  #endif  </code>  <br />  </remarks> 
		</member>
		<member name="M:FetchBaseObjects" syntax="FetchBaseObjects(gangid, baseid)">
			<attribute name="public"/>
			<stacksize value="25"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="GangBaseObjectCount"/>
			<dependency name="GangBaseObjectData"/>
			<dependency name="GangBaseObjectData"/>
			<dependency name="GangBaseObjectID"/>
			<dependency name="GangBaseObjectID"/>
			<dependency name="GangBaseObjectIndex"/>
			<dependency name="GangBaseObjectIndex"/>
			<dependency name="GangBaseObjectPosition"/>
			<dependency name="GangBaseObjectPosition"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="base_obj_modelid"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<param name="gangid">
			</param>
			<param name="baseid">
			</param>
		</member>
		<member name="M:FetchBusinessName" syntax="FetchBusinessName(businessid)">
			<attribute name="public"/>
			<stacksize value="273"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="BUSINESS_CASINO"/>
			<dependency name="BUSINESS_GUNSHOP"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="FetchCasino"/>
			<dependency name="FetchGunShop"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="UpdateBusinessLabel"/>
			<dependency name="UpdateBusinessLabel"/>
			<dependency name="VW_BUSINESS"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_icon"/>
			<dependency name="business_label"/>
			<dependency name="business_ownername"/>
			<dependency name="business_pickup"/>
			<dependency name="business_position"/>
			<dependency name="business_type"/>
			<dependency name="business_worldid"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_num_rows"/>
			<param name="businessid">
			</param>
		</member>
		<member name="M:FetchCasino" syntax="FetchCasino(businessid)">
			<stacksize value="18"/>
			<referrer name="FetchBusinessName"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicActor"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="GetBusinessWorld"/>
			<dependency name="SetPickupVirtualWorld"/>
			<dependency name="acc_CreatePickup"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_icon"/>
			<dependency name="business_pickupExit"/>
			<dependency name="business_position"/>
			<dependency name="business_worldid"/>
			<dependency name="format"/>
			<dependency name="fortuneLabel"/>
			<dependency name="fortuneLabel"/>
			<dependency name="fortunePlayer"/>
			<dependency name="fortunePlayer"/>
			<dependency name="fortunePosition"/>
			<dependency name="fortunePosition"/>
			<dependency name="rouletteLabel"/>
			<dependency name="rouletteLabel"/>
			<dependency name="roulettePlayer"/>
			<dependency name="roulettePlayer"/>
			<dependency name="roulettePosition"/>
			<dependency name="roulettePosition"/>
			<dependency name="slotsLabel"/>
			<dependency name="slotsLabel"/>
			<dependency name="slotsPlayer"/>
			<dependency name="slotsPlayer"/>
			<dependency name="slotsPosition"/>
			<dependency name="slotsPosition"/>
			<dependency name="strx"/>
			<param name="businessid">
			</param>
		</member>
		<member name="M:FetchGang" syntax="FetchGang(gangid, loopid, query)">
			<stacksize value="99"/>
			<referrer name="Init_Gangs"/>
			<referrer name="OnDialogGangCreator"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CreateGangDesign"/>
			<dependency name="FALSE"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Gangs"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="Sparing_Init"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gangRankingPlace"/>
			<dependency name="gang_battleZone"/>
			<dependency name="gang_budget"/>
			<dependency name="gang_color"/>
			<dependency name="gang_deaths"/>
			<dependency name="gang_kills"/>
			<dependency name="gang_level"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_place"/>
			<dependency name="gang_rankDefault"/>
			<dependency name="gang_respect"/>
			<dependency name="gang_respect_needed"/>
			<dependency name="gang_slots"/>
			<dependency name="gang_spar_loss"/>
			<dependency name="gang_spar_remis"/>
			<dependency name="gang_spar_win"/>
			<dependency name="gang_tag"/>
			<dependency name="mysql_query"/>
			<dependency name="pGangAchievement"/>
			<dependency name="pGangAchievement"/>
			<dependency name="pGangAchievementStatus"/>
			<dependency name="pGangAchievementStatus"/>
			<dependency name="pGangSparRank"/>
			<dependency name="pGangSparRankedScore"/>
			<dependency name="sscanf"/>
			<dependency name="strx"/>
			<param name="gangid">
			</param>
			<param name="loopid">
			</param>
			<param name="query">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:FetchGunShop" syntax="FetchGunShop(businessid)">
			<stacksize value="17"/>
			<referrer name="FetchBusinessName"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicActor"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="GetBusinessWorld"/>
			<dependency name="GunShopActor"/>
			<dependency name="GunShopCP"/>
			<dependency name="GunShop_RandomGun"/>
			<dependency name="SetPickupVirtualWorld"/>
			<dependency name="acc_CreatePickup"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_icon"/>
			<dependency name="business_pickupExit"/>
			<dependency name="business_position"/>
			<param name="businessid">
			</param>
		</member>
		<member name="M:Files_Copy" syntax="Files_Copy(src[], dst[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="Files_CopyRange"/>
			<dependency name="I@"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="flength"/>
			<dependency name="fopen"/>
			<dependency name="io_read"/>
			<param name="src">
				<paraminfo> [] </paraminfo>
				The name of the input file.
			</param>
			<param name="dst">
				<paraminfo> [] </paraminfo>
				The name of the output file.
			</param>
			    <remarks>  Copies a file from <c>src</c> to <c>dst</c>.  </remarks> 
		</member>
		<member name="M:Files_CopyRange" syntax="Files_CopyRange(i, end, dst[])">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="Files_DoCopy"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="_YSI_FGetChar__"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="fblockread"/>
			<dependency name="fblockwrite"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="fputchar"/>
			<dependency name="io_write"/>
			<dependency name="min"/>
			<param name="i">
				<paraminfo>File </paraminfo>
				Handle to the file to copy.
			</param>
			<param name="end">
				How much of the file to copy.
			</param>
			<param name="dst">
				<paraminfo> [] </paraminfo>
				The name of the output file.
			</param>
			      <remarks>  Copy part of a file from the current read pointer, for <c>end</c> bytes.  </remarks> 
		</member>
		<member name="M:Files_DoCopy" syntax="Files_DoCopy(i, dst[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="Files_CopyRange"/>
			<dependency name="I@"/>
			<dependency name="fclose"/>
			<dependency name="flength"/>
			<dependency name="fseek"/>
			<dependency name="seek_start"/>
			<param name="i">
				<paraminfo>File </paraminfo>
				Handle to the file to copy.
			</param>
			<param name="dst">
				<paraminfo> [] </paraminfo>
				The name of the output file.
			</param>
			    <remarks>  Fast file copy routine.  Surprisingly widely used in YSI, in places where  temp files were used and <c>fseek</c>ed to the start.  Closes the file.  </remarks> 
		</member>
		<member name="M:Files_Move" syntax="Files_Move(src[], dst[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="Files_CopyRange"/>
			<dependency name="I@"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="flength"/>
			<dependency name="fopen"/>
			<dependency name="fremove"/>
			<dependency name="io_read"/>
			<param name="src">
				<paraminfo> [] </paraminfo>
				The name of the input file.
			</param>
			<param name="dst">
				<paraminfo> [] </paraminfo>
				The name of the output file.
			</param>
			    <remarks>  Moves a file from <c>src</c> to <c>dst</c>.  </remarks> 
		</member>
		<member name="M:FindAccount" syntax="FindAccount(playerid)">
			<stacksize value="8"/>
			<referrer name="WC_OnPlayerConnect"/>
			<dependency name="CheckPlayerBanned"/>
			<dependency name="LoadPlayerStats"/>
			<dependency name="ShowLoginPanel"/>
			<dependency name="ShowRegisterPanel"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="mysql_query"/>
			<dependency name="pSecretAnswer"/>
			<dependency name="pSecretAnswer"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_datelast"/>
			<dependency name="player_iplast"/>
			<dependency name="player_loginTime"/>
			<dependency name="player_nickname"/>
			<dependency name="strx"/>
			<dependency name="tdLoginTime"/>
			<dependency name="tdWelcome"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:FindKeyPlayer" syntax="FindKeyPlayer(privcarid, playerid)">
			<stacksize value="3"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<dependency name="false"/>
			<dependency name="pVehKeys"/>
			<dependency name="true"/>
			<param name="privcarid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:FishTimer" syntax="FishTimer(playerid)">
			<stacksize value="6"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="FishBar"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="pFishBaitUsed"/>
			<dependency name="pFishStatus"/>
			<dependency name="pFishing"/>
			<dependency name="tdFishing"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:FixAngle" syntax="FixAngle(&amp;x)">
			<stacksize value="1"/>
			<referrer name="FixRot"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:FixRot" syntax="FixRot(&amp;x, &amp;y, &amp;z)">
			<stacksize value="4"/>
			<dependency name="FixAngle"/>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:FloatAbs" syntax="FloatAbs(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<summary>  Float:FloatAbs(Float:number);  </summary>  <param name="number">The number to get the absolute value of.</param>  <returns>  The absolute value of a number.  </returns>  <remarks>  Get the absolute value of a number.  Easy in IEEE754, just remove the MSB.  </remarks> 
		</member>
		<member name="M:ForceClassSelection" syntax="ForceClassSelection(playerid)">
			<attribute name="native"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<param name="playerid">
				The player to send back to class selection
			</param>
			<library>a_players</library>  <summary>Forces a player to go back to class selection.</summary>    <seealso name="AddPlayerClass" />  <seealso name="SetPlayerSkin" />  <seealso name="GetPlayerSkin" />  <seealso name="OnPlayerRequestClass" />  <remarks>The player will not return to class selection until they re-spawn.  This can be achieved  with <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>, as seen in the below example.</remarks> 
		</member>
		<member name="M:Fortune_Hide" syntax="Fortune_Hide(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="tdCasinoButton"/>
			<dependency name="tdFortune"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Fortune_Start" syntax="Fortune_Start(playerid, businessid, fortuneid)">
			<stacksize value="8"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ConvertTime"/>
			<dependency name="DeletePolish"/>
			<dependency name="SelectTextDraw"/>
			<dependency name="WC_PlayerTextDrawBoxColor"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="fortunePlayer"/>
			<dependency name="gettime"/>
			<dependency name="pFortuneBlock"/>
			<dependency name="pFortuneID"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="tdCasinoButton"/>
			<dependency name="tdFortune"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
			<param name="fortuneid">
			</param>
		</member>
		<member name="M:Fortune_Timer" syntax="Fortune_Timer(playerid, businessid, fortuneid)">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="AddBusinessMoney"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="UnixTime"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="fortuneLabel"/>
			<dependency name="fortuneLabel"/>
			<dependency name="fortunePlayer"/>
			<dependency name="fortunePlayer"/>
			<dependency name="gettime"/>
			<dependency name="giveMoney"/>
			<dependency name="givePremium"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pFortuneBlock"/>
			<dependency name="pFortuneCount"/>
			<dependency name="pFortuneTimer"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_accountID"/>
			<dependency name="player_job_points"/>
			<dependency name="player_level"/>
			<dependency name="player_nickname"/>
			<dependency name="random"/>
			<dependency name="strdot"/>
			<dependency name="tdFortune"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
			<param name="fortuneid">
			</param>
		</member>
		<member name="M:FreezePlayer" syntax="FreezePlayer(playerid, time)">
			<stacksize value="7"/>
			<referrer name="StartChowany"/>
			<referrer name="StartRC"/>
			<referrer name="StartSM"/>
			<referrer name="StartGG"/>
			<referrer name="StartWP"/>
			<referrer name="StartWG"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="Teleport"/>
			<dependency name="KillTimer"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="Log"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="pFreezeTimer"/>
			<param name="playerid">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:FreezeSyncPacket" syntax="FreezeSyncPacket(playerid, toggle)">
			<stacksize value="3"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="WC_CbugPunishment"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ScriptExit"/>
			<referrer name="PlayerDeath"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_lrKey"/>
			<dependency name="PR_specialAction"/>
			<dependency name="PR_udKey"/>
			<dependency name="PR_velocity"/>
			<dependency name="s_LastSyncData"/>
			<dependency name="s_LastSyncData"/>
			<dependency name="s_SyncDataFrozen"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:G@" syntax="G@(...)">
			<stacksize value="1"/>
			<dependency name="G@"/>
			<dependency name="Q@"/>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:GEOLITE_OnFilterScriptExit" syntax="GEOLITE_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptExit"/>
			<dependency name="WC_OnFilterScriptExit"/>
		</member>
		<member name="M:GEOLITE_OnFilterScriptInit" syntax="GEOLITE_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit"/>
			<dependency name="WC_OnFilterScriptInit"/>
			<transition target="_ALS_go"/>

		</member>
		<member name="M:GEOLITE_OnGameModeExit" syntax="GEOLITE_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptExit"/>
			<dependency name="WC_OnGameModeExit"/>
		</member>
		<member name="M:GEOLITE_OnGameModeInit" syntax="GEOLITE_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit"/>
			<dependency name="WC_OnGameModeInit"/>
			<transition target="_ALS_go"/>

		</member>
		<member name="M:GG_GetWeapon" syntax="GG_GetWeapon(playerid)">
			<stacksize value="1"/>
			<referrer name="StartGG"/>
			<referrer name="RespawnGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<dependency name="GunGameAllowed"/>
			<dependency name="GunGameLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GG_GetWinner" syntax="GG_GetWinner()">
			<stacksize value="4"/>
			<referrer name="UpdateGameStatus"/>
			<dependency name="GAME_GG"/>
			<dependency name="GunGameLevel"/>
			<dependency name="Iterator@Game"/>
		</member>
		<member name="M:GPCI" syntax="GPCI(playerid, serial[], len)">
			<attribute name="native"/>
			<referrer name="WC_OnPlayerConnect"/>
			<param name="playerid">
				The player to get the unique ID of
			</param>
			<param name="serial">
				<paraminfo> [] </paraminfo>
				Where to save the unique ID
			</param>
			<param name="len">
				The size of "serial" (the serial)
			</param>
			<library>a_samp</library>  <summary>Get a players unique ID.</summary>       
		</member>
		<member name="M:GameStartedTimer" syntax="GameStartedTimer(gameid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CreateVehicleZP"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GAME_CH"/>
			<dependency name="GAME_DA"/>
			<dependency name="GAME_GG"/>
			<dependency name="GAME_RC"/>
			<dependency name="GAME_SK"/>
			<dependency name="GAME_SM"/>
			<dependency name="GAME_WG"/>
			<dependency name="GAME_WP"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="StopChowany"/>
			<dependency name="StopDA"/>
			<dependency name="StopRC"/>
			<dependency name="StopSK"/>
			<dependency name="StopSM"/>
			<dependency name="StopWG"/>
			<dependency name="UpdateBTR"/>
			<dependency name="UpdateChowany"/>
			<dependency name="UpdateDA"/>
			<dependency name="UpdateGG"/>
			<dependency name="UpdateRC"/>
			<dependency name="UpdateSK"/>
			<dependency name="UpdateSM"/>
			<dependency name="UpdateWG"/>
			<dependency name="UpdateWP"/>
			<dependency name="UpdateZP"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="gameid">
			</param>
		</member>
		<member name="M:GameTextForAll" syntax="GameTextForAll(string[], time, style)">
			<tagname value="void"/>
			<attribute name="native"/>
			<referrer name="va_GameTextForAll"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The text to be displayed
			</param>
			<param name="time">
				The duration of the text being shown in milliseconds
			</param>
			<param name="style">
				The style of text to be displayed
			</param>
			<library>a_samp</library>  <summary>Shows 'game text' (on-screen text) for a certain length of time for all players.</summary>        <seealso name="GameTextForPlayer" />  <seealso name="TextDrawShowForAll" />  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:GameTextForPlayer" syntax="GameTextForPlayer(playerid, string[], time, style)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="CheckBaseTimer"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="CheckMysliwyZone"/>
			<referrer name="CheckGrzybiarzZone"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="PrepareMining"/>
			<referrer name="_@yHOnPlayerExitVehicle@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="UpdateChowany"/>
			<referrer name="UpdateZP"/>
			<referrer name="UpdateBTR"/>
			<referrer name="UpdateWG"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="SecondTimer"/>
			<param name="playerid">
				The ID of the player to show the gametext for
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The text to be displayed
			</param>
			<param name="time">
				The duration of the text being shown in milliseconds
			</param>
			<param name="style">
				The style of text to be displayed
			</param>
			<library>a_samp</library>  <summary>Shows 'game text' (on-screen text) for a certain length of time for a specific player.</summary>          <seealso name="GameTextForAll" />  <seealso name="TextDrawShowForPlayer" />  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is reported when the style and/or  time is invalid.  Nothing will happen though (no text displayed).  May also cause game crashes.<br  />  <b><c>0</c></b>: The function failed to execute.  This means either the string is null or the player  is not connected.  </returns> 
		</member>
		<member name="M:GangMemberEdit" syntax="GangMemberEdit(playerid, gangid, userid)">
			<tagname value="Task"/>
			<stacksize value="90"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_GANG_MANAGE_MEMBER"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_ownerid"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strx"/>
			<dependency name="task_new"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
			<param name="userid">
			</param>
		</member>
		<member name="M:GangWarTimer" syntax="GangWarTimer(gangid, enemyid, zoneid)">
			<attribute name="public"/>
			<stacksize value="2559"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CancelGangWar"/>
			<dependency name="CheckGangWar"/>
			<dependency name="FALSE"/>
			<dependency name="GetZoneDamageId"/>
			<dependency name="IsPlayerInDynamicArea"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="false"/>
			<dependency name="pGang"/>
			<dependency name="pGangWarDamage"/>
			<dependency name="pGangWarDamage"/>
			<dependency name="pGangWarDefenderDef"/>
			<dependency name="pGangWarDefenderExit"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarTime"/>
			<dependency name="pGangZoneDamageId"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneRectangle"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="player_zone_damage"/>
			<dependency name="textDrawSetString"/>
			<dependency name="true"/>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:GangZoneCreate" syntax="GangZoneCreate(minX, minY, maxX, maxY)">
			<attribute name="native"/>
			<referrer name="CreateZone"/>
			<referrer name="CreateZoneBorders"/>
			<referrer name="agz_GangZoneCreateFirstNumber"/>
			<referrer name="agz_GangZoneCreateSecondNumber"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<param name="minX">
				<paraminfo>Float </paraminfo>
				The x coordinate for the west side of the gangzone
			</param>
			<param name="minY">
				<paraminfo>Float </paraminfo>
				The y coordinate for the south side of the gangzone
			</param>
			<param name="maxX">
				<paraminfo>Float </paraminfo>
				The x coordinate for the east side of the gangzone
			</param>
			<param name="maxY">
				<paraminfo>Float </paraminfo>
				The y coordinate for the north side of the gangzone
			</param>
			<library>a_samp</library>  <summary>Create a gangzone (coloured radar area).</summary>          <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" />  <remarks>  There is a limit of <b><c>1024</c></b> gangzones.<br />  Putting the parameters in the wrong order results in glitchy behavior.  </remarks>  <remarks>This function merely CREATES the gangzone, you must use <a href="#GangZoneShowForPlayer">GangZoneShowForPlayer</a>  or <a href="#GangZoneShowForAll">GangZoneShowForAll</a> to show it.</remarks>  <returns>The ID of the created zone, returns <b><c>-1</c></b> if not created.</returns> 
		</member>
		<member name="M:GangZoneDestroy" syntax="GangZoneDestroy(zone)">
			<attribute name="native"/>
			<referrer name="DestroyZone"/>
			<referrer name="DestroyZoneNumber"/>
			<referrer name="DestroyZoneBorders"/>
			<referrer name="_@yHOnPlayerDisconnect@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="pc_cmd_evend"/>
			<param name="zone">
				The ID of the zone to destroy
			</param>
			<library>a_samp</library>  <summary>Destroy a gangzone.</summary>    <seealso name="GangZoneCreate" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" /> 
		</member>
		<member name="M:GangZoneFlashForAll" syntax="GangZoneFlashForAll(zone, flashColour)">
			<attribute name="native"/>
			<referrer name="ZoneFlashForAll"/>
			<referrer name="ZoneBordersFlashForAll"/>
			<referrer name="ZoneNumberFlashForAll"/>
			<param name="zone">
				The zone to flash
			</param>
			<param name="flashColour">
				The colour to flash the gang zone, as an integer or hex in <b>RGBA</b>  colour format.  Alpha transparency supported
			</param>
			<library>a_samp</library>  <summary>GangZoneFlashForAll flashes a gangzone for all players.</summary>      <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" /> 
		</member>
		<member name="M:GangZoneFlashForPlayer" syntax="GangZoneFlashForPlayer(playerid, zone, flashColour)">
			<attribute name="native"/>
			<referrer name="ZoneFlashForPlayer"/>
			<referrer name="ZoneBordersFlashForPlayer"/>
			<referrer name="ZoneNumberFlashForPlayer"/>
			<param name="playerid">
				The ID of the player to flash the gangzone for
			</param>
			<param name="zone">
				The ID of the zone to flash
			</param>
			<param name="flashColour">
				The colour to flash the gang zone, as an integer or hex in <b>RGBA</b>  colour format.  Alpha transparency supported
			</param>
			<library>a_samp</library>  <summary>Makes a gangzone flash for a player.</summary>        <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" /> 
		</member>
		<member name="M:GangZoneHideForAll" syntax="GangZoneHideForAll(zone)">
			<attribute name="native"/>
			<referrer name="HideZoneForAll"/>
			<param name="zone">
				The zone to hide
			</param>
			<library>a_samp</library>  <summary>GangZoneHideForAll hides a gangzone from all players.</summary>    <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" /> 
		</member>
		<member name="M:GangZoneHideForPlayer" syntax="GangZoneHideForPlayer(playerid, zone)">
			<attribute name="native"/>
			<referrer name="HideZoneForPlayer"/>
			<param name="playerid">
				The ID of the player to hide the gangzone for
			</param>
			<param name="zone">
				The ID of the zone to hide
			</param>
			<library>a_samp</library>  <summary>Hides a gangzone for a player.</summary>      <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" /> 
		</member>
		<member name="M:GangZoneShowForAll" syntax="GangZoneShowForAll(zone, colour)">
			<attribute name="native"/>
			<referrer name="ShowZoneForAll"/>
			<param name="zone">
				The ID of the gangzone to show (returned by <a href="# GangZoneCreate">GangZoneCreate</a>)
			</param>
			<param name="colour">
				The colour to show the gang zone, as an integer or hex in <b>RGBA</b> colour  format.  Alpha transparency supported
			</param>
			<library>a_samp</library>  <summary>Shows a gangzone with the desired colour to all players.</summary>      <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" />  <returns>  <b><c>1</c></b>: The function executed successfully.  The gang zone was shown for all players.<br  />  <b><c>0</c></b>: The function failed to execute.  The gangzone does not exist.  </returns> 
		</member>
		<member name="M:GangZoneShowForPlayer" syntax="GangZoneShowForPlayer(playerid, zone, colour)">
			<attribute name="native"/>
			<referrer name="ShowZoneForPlayer"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<param name="playerid">
				The ID of the player you would like to show the gangzone for.
			</param>
			<param name="zone">
				The ID of the gang zone to show for the player.  Returned by <a href="#GangZoneCreate">GangZoneCreate</a>
			</param>
			<param name="colour">
				The colour to show the gang zone, as an integer or hex in <b>RGBA</b> colour  format.  Alpha transparency supported
			</param>
			<library>a_samp</library>  <summary>Show a gangzone for a player.  Must be created with <a href="#GangZoneCreate">GangZoneCreate</a>  first.</summary>        <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" />  <returns><b><c>1</c></b> if the gangzone was shown, otherwise <b><c>0</c></b> (non-existant).</returns> 
		</member>
		<member name="M:GangZoneStopFlashForAll" syntax="GangZoneStopFlashForAll(zone)">
			<attribute name="native"/>
			<referrer name="ZoneStopFlashForAll"/>
			<referrer name="ZoneBordersStopFlashForAll"/>
			<referrer name="ZoneNumberStopFlashForAll"/>
			<param name="zone">
				The ID of the zone to stop flashing.  Returned by <a href="#GangZoneCreate">GangZoneCreate</a>
			</param>
			<library>a_samp</library>  <summary>Stops a gangzone flashing for all players.</summary>    <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is reported even if the gang zone  wasn't flashing to begin with.<br />  <b><c>0</c></b>: The function failed to execute.  The gangzone specified does not exist.  </returns> 
		</member>
		<member name="M:GangZoneStopFlashForPlayer" syntax="GangZoneStopFlashForPlayer(playerid, zone)">
			<attribute name="native"/>
			<referrer name="ZoneStopFlashForPlayer"/>
			<referrer name="ZoneBordersStopFlashForPlayer"/>
			<referrer name="ZoneNumberStopFlashForPlayer"/>
			<param name="playerid">
				The ID of the player to stop the gangzone flashing for
			</param>
			<param name="zone">
				The ID of the gangzonezone to stop flashing
			</param>
			<library>a_samp</library>  <summary>Stops a gangzone flashing for a player.</summary>      <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForAll" /> 
		</member>
		<member name="M:Get2DBehindObjectInAngle" syntax="Get2DBehindObjectInAngle(objectid, a, &amp;x, &amp;y, dist)">
			<stacksize value="7"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetObjectPos"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="objectid">
			</param>
			<param name="a">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Get2DInFrontOfPos" syntax="Get2DInFrontOfPos(x, y, a, &amp;_x, &amp;_y, dist)">
			<stacksize value="4"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="a">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="_x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="_y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetAchievement" syntax="GetAchievement(playerid, achievementid)">
			<stacksize value="1"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="GetPlayerBudget"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="SecondTimer"/>
			<dependency name="pAchievement"/>
			<param name="playerid">
			</param>
			<param name="achievementid">
			</param>
		</member>
		<member name="M:GetAchievementCount" syntax="GetAchievementCount(playerid)">
			<stacksize value="521"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="GetAchievementCount"/>
			<dependency name="format"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievement"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetAchievementDone" syntax="GetAchievementDone(playerid)">
			<stacksize value="521"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="GetAchievementDone"/>
			<dependency name="format"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementDone"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetAchievementLevel" syntax="GetAchievementLevel(playerid)">
			<stacksize value="521"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="GetAchievementLevel"/>
			<dependency name="format"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetAchievementStatus" syntax="GetAchievementStatus(playerid)">
			<stacksize value="521"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="GetAchievementStatus"/>
			<dependency name="format"/>
			<dependency name="pAchievementStatus"/>
			<dependency name="pAchievementStatus"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetAmxAddress" syntax="GetAmxAddress()">
			<stacksize value="5"/>
			<referrer name="ReadAmxCell"/>
			<referrer name="WriteAmxCell"/>
			<dependency name="RunShellcode"/>
			<dependency name="refabs"/>
			<library>amx_assembly amx</library> <summary> Returns the address of the AMX struct instance in memory that corresponds to this script.  This function works only on Windows! </summary>
		</member>
		<member name="M:GetAmxBaseAddress" syntax="GetAmxBaseAddress()">
			<stacksize value="3"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmInit"/>
			<referrer name="AsmGetJumpAddressFromOffset"/>
			<referrer name="AsmEmitCallAbs"/>
			<referrer name="CodeScanInit"/>
			<referrer name="AddressofResolveFoundStart"/>
			<referrer name="AbsToRel"/>
			<referrer name="RelToAbs"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="GetAmxBaseAddressNow"/>
			<library>amx_assembly amx_base</library>
		</member>
		<member name="M:GetAmxBaseAddressNow" syntax="GetAmxBaseAddressNow()">
			<stacksize value="9"/>
			<referrer name="GetAmxBaseAddress"/>
			<dependency name="GetAmxBaseAddress_helper"/>
			<library>amx_assembly amx_base</library> <summary> Returns the AMX base address i.e. <c>amx-&gt;base</c>. </summary>
		</member>
		<member name="M:GetAmxBaseAddress_helper" syntax="GetAmxBaseAddress_helper()">
			<stacksize value="1"/>
			<referrer name="GetAmxBaseAddressNow"/>
			<library>amx_assembly amx_base</library>
		</member>
		<member name="M:GetAmxFrame" syntax="GetAmxFrame()">
			<stacksize value="1"/>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:GetAmxHeader" syntax="GetAmxHeader(amxhdr[])">
			<stacksize value="3"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmInit"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteData"/>
			<referrer name="AsmGetJumpAddressFromOffset"/>
			<referrer name="AsmGetCode"/>
			<referrer name="AsmEmitCallAbs"/>
			<referrer name="CodeScanInit"/>
			<referrer name="AddressofResolveFoundStart"/>
			<referrer name="Indirect_Init"/>
			<referrer name="DumpAMX_WriteAMXData"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<referrer name="DumpAMX_Write"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetAmxHeaderComponent" syntax="GetAmxHeaderComponent(comp)">
			<stacksize value="3"/>
			<referrer name="PrintAmxNameTable"/>
			<referrer name="GetPublicNameFromIndex"/>
			<referrer name="GetNativeNameFromIndex"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<referrer name="GetTagNameFromIndex"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="comp">
				<paraminfo>AMX_HDR </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetAmxHeaderNow" syntax="GetAmxHeaderNow(amxhdr[])">
			<stacksize value="20"/>
			<referrer name="ResetStaticAmxHeader"/>
			<dependency name="AMX_HDR_AMX_VERSION"/>
			<dependency name="AMX_HDR_CIP"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_FILE_VERSION"/>
			<dependency name="AMX_HDR_FLAGS"/>
			<dependency name="AMX_HDR_HEA"/>
			<dependency name="AMX_HDR_LIBRARIES"/>
			<dependency name="AMX_HDR_MAGIC"/>
			<dependency name="AMX_HDR_NAMETABLE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_OFFSET_AMX_VERSION"/>
			<dependency name="AMX_HDR_OFFSET_CIP"/>
			<dependency name="AMX_HDR_OFFSET_COD"/>
			<dependency name="AMX_HDR_OFFSET_DAT"/>
			<dependency name="AMX_HDR_OFFSET_DEFSIZE"/>
			<dependency name="AMX_HDR_OFFSET_FILE_VERSION"/>
			<dependency name="AMX_HDR_OFFSET_FLAGS"/>
			<dependency name="AMX_HDR_OFFSET_HEA"/>
			<dependency name="AMX_HDR_OFFSET_LIBRARIES"/>
			<dependency name="AMX_HDR_OFFSET_MAGIC"/>
			<dependency name="AMX_HDR_OFFSET_NAMETABLE"/>
			<dependency name="AMX_HDR_OFFSET_NATIVES"/>
			<dependency name="AMX_HDR_OFFSET_PUBLICS"/>
			<dependency name="AMX_HDR_OFFSET_PUBVARS"/>
			<dependency name="AMX_HDR_OFFSET_SIZE"/>
			<dependency name="AMX_HDR_OFFSET_STP"/>
			<dependency name="AMX_HDR_OFFSET_TAGS"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="AMX_HDR_SIZE"/>
			<dependency name="AMX_HDR_STP"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="GetRawAmxHeader"/>
			<dependency name="copy_1"/>
			<dependency name="copy_2"/>
			<dependency name="copy_4"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetAmxHeapBase" syntax="GetAmxHeapBase()">
			<stacksize value="1"/>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:GetAmxHeapTop" syntax="GetAmxHeapTop()">
			<stacksize value="1"/>
			<referrer name="CGen_OnCodeInit"/>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:GetAmxJITBaseAddress" syntax="GetAmxJITBaseAddress()">
			<stacksize value="1"/>
			<referrer name="AddressofResolve"/>
			<library>amx_assembly amx_jit</library>
		</member>
		<member name="M:GetAmxNextInstructionPointer" syntax="GetAmxNextInstructionPointer()">
			<stacksize value="1"/>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:GetAmxStackBase" syntax="GetAmxStackBase()">
			<stacksize value="1"/>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:GetAmxStackBottom" syntax="GetAmxStackBottom()">
			<stacksize value="1"/>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:GetAngleToPool" syntax="GetAngleToPool(x, y, _x, _y, &amp;angle)">
			<stacksize value="4"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="atan2"/>
			<dependency name="floatadd"/>
			<dependency name="floatsub"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetArenaName" syntax="GetArenaName(arenaid)">
			<stacksize value="26"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<dependency name="GetArenaName"/>
			<param name="arenaid">
			</param>
		</member>
		<member name="M:GetBagAmount" syntax="GetBagAmount(playerid)">
			<stacksize value="2"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<dependency name="MineBagLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetBagLevel" syntax="GetBagLevel(playerid)">
			<stacksize value="31"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<dependency name="GetBagLevel"/>
			<dependency name="MineBagLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetBagWeight" syntax="GetBagWeight(playerid)">
			<stacksize value="3"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<dependency name="MineWeight"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetBaseObjectCount" syntax="GetBaseObjectCount(baseid)">
			<stacksize value="1"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="ShowBaseObjectShop"/>
			<dependency name="GangBaseObjectCount"/>
			<param name="baseid">
			</param>
		</member>
		<member name="M:GetBusinessType" syntax="GetBusinessType(typeid)">
			<stacksize value="31"/>
			<referrer name="UpdateBusinessLabel"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="pc_cmd_wolnybiznes"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="EnterBusiness"/>
			<dependency name="BUSINESS_BROTHEL"/>
			<dependency name="BUSINESS_CASINO"/>
			<dependency name="BUSINESS_CLOTHES"/>
			<dependency name="BUSINESS_GUNSHOP"/>
			<dependency name="GetBusinessType"/>
			<param name="typeid">
			</param>
		</member>
		<member name="M:GetBusinessWorld" syntax="GetBusinessWorld(businessid)">
			<stacksize value="1"/>
			<referrer name="FetchCasino"/>
			<referrer name="FetchGunShop"/>
			<referrer name="EnterBusiness"/>
			<dependency name="businessData"/>
			<dependency name="business_worldid"/>
			<param name="businessid">
			</param>
		</member>
		<member name="M:GetCallerFrame" syntax="GetCallerFrame()">
			<stacksize value="1"/>
			<referrer name="GetCurrentFramePreviousFrame"/>
			<referrer name="GetCurrentFrameReturn"/>
			<referrer name="GetCurrentFrameTotalSize"/>
			<referrer name="GetCurrentFrameTotalCount"/>
			<referrer name="GetCurrentFrameLocalSize"/>
			<referrer name="GetCurrentFrameLocalCount"/>
			<referrer name="GetCurrentFrameHeaderSize"/>
			<referrer name="GetCurrentFrameHeaderCount"/>
			<referrer name="GetCurrentFrameParameterSize"/>
			<referrer name="GetCurrentFrameParameter"/>
			<referrer name="GetCurrentFrameLocal"/>
			<referrer name="GetCurrentFrameParameterCount"/>
			<referrer name="SetCurrentFrameReturn"/>
			<referrer name="SetCurrentFramePreviousFrame"/>
			<referrer name="SetCurrentParameterSize"/>
			<referrer name="SetCurrentParameterCount"/>
			<referrer name="GetCurrentFrameFunction"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCasinoTokens" syntax="GetCasinoTokens(playerid)">
			<stacksize value="1"/>
			<dependency name="pCasinoTokens"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetCbugAllowed" syntax="GetCbugAllowed(playerid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="s_CbugAllowed"/>
			<dependency name="s_CbugGlobal"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetClosestDisk" syntax="GetClosestDisk(pickupid)">
			<stacksize value="3"/>
			<referrer name="CollectDisk"/>
			<dependency name="diskActive"/>
			<dependency name="diskPickup"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:GetClosestFigure" syntax="GetClosestFigure(pickupid)">
			<stacksize value="3"/>
			<referrer name="CollectFigure"/>
			<dependency name="figureActive"/>
			<dependency name="figureCount"/>
			<dependency name="figurePickup"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:GetColSphereOffset" syntax="GetColSphereOffset(objectmodel, &amp;x, &amp;y, &amp;z)">
			<stacksize value="1"/>
			<dependency name="MODELS_gColOffset"/>
			<param name="objectmodel">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetColSphereRadius" syntax="GetColSphereRadius(objectmodel)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="PHY_InitObject"/>
			<dependency name="MODELS_gColRadius"/>
			<param name="objectmodel">
			</param>
		</member>
		<member name="M:GetColorRGBA" syntax="GetColorRGBA(color)">
			<stacksize value="17"/>
			<dependency name="GetColorRGBA"/>
			<dependency name="format"/>
			<param name="color">
			</param>
		</member>
		<member name="M:GetConsoleVarAsBool" syntax="GetConsoleVarAsBool(cvar[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<param name="cvar">
				<paraminfo> [] </paraminfo>
				The name of the boolean variable to get the value of
			</param>
			<library>a_samp</library>  <summary>Get the boolean value of a console variable.</summary>    <seealso name="GetConsoleVarAsString" />  <seealso name="GetConsoleVarAsInt" />  <remarks>Type <b><c>varlist</c></b> in the server console to display a list of available console  variables and their types.</remarks>  <returns>The value of the specified console variable. <b><c>0</c></b> if the specified console variable  is not a boolean or doesn't exist.</returns> 
		</member>
		<member name="M:GetConsoleVarAsInt" syntax="GetConsoleVarAsInt(cvar[])">
			<attribute name="native"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="ScriptInit"/>
			<param name="cvar">
				<paraminfo> [] </paraminfo>
				The name of the integer variable to get the value of
			</param>
			<library>a_samp</library>  <summary>Get the integer value of a console variable.</summary>    <seealso name="GetConsoleVarAsString" />  <seealso name="GetConsoleVarAsBool" />  <remarks>Type <b><c>varlist</c></b> in the server console to display a list of available console  variables and their types.</remarks>  <returns>The value of the specified console variable. <b><c>0</c></b> if the specified console variable  is not an integer or doesn't exist.</returns> 
		</member>
		<member name="M:GetConsoleVarAsString" syntax="GetConsoleVarAsString(cvar[], buffer[], len)">
			<attribute name="native"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<param name="cvar">
				<paraminfo> [] </paraminfo>
				The name of the string variable to get the value of
			</param>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
				An array into which to store the value, passed by reference
			</param>
			<param name="len">
				The length of the string that should be stored
			</param>
			<library>a_samp</library>  <summary>Get the string value of a console variable.</summary>        <seealso name="GetConsoleVarAsInt" />  <seealso name="GetConsoleVarAsBool" />  <remarks>Type <b><c>varlist</c></b> in the server console to display a list of available console  variables and their types.</remarks>  <remarks>When filterscripts or plugins are specified as the cvar, this function only returns the  name of the first specified filterscript or plugin.</remarks>  <remarks>Using this function with anything other than a <b>string</b> (integer, boolean or float)  will cause your server to crash.  Using it with a nonexistent console variable will also cause your  server to crash.</remarks>  <returns>The length of the returned string. <b><c>0</c></b> if the specified console variable is  not a string or doesn't exist.</returns> 
		</member>
		<member name="M:GetCurrentFrame" syntax="GetCurrentFrame()">
			<stacksize value="1"/>
			<referrer name="GetFrameNextFrame"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameFunction" syntax="GetCurrentFrameFunction()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameFunction"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameHeaderCount" syntax="GetCurrentFrameHeaderCount()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameHeaderCount"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameHeaderSize" syntax="GetCurrentFrameHeaderSize()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameHeaderSize"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameLocal" syntax="GetCurrentFrameLocal(param)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameLocal"/>
			<param name="param">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameLocalCount" syntax="GetCurrentFrameLocalCount()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameLocalCount"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameLocalSize" syntax="GetCurrentFrameLocalSize()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameLocalSize"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameParameter" syntax="GetCurrentFrameParameter(param, idx)">
			<stacksize value="6"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameParameter"/>
			<param name="param">
			</param>
			<param name="idx">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameParameterCount" syntax="GetCurrentFrameParameterCount()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameParameterCount"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameParameterSize" syntax="GetCurrentFrameParameterSize()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameParameterSize"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFramePreviousFrame" syntax="GetCurrentFramePreviousFrame()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFramePreviousFrame"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameReturn" syntax="GetCurrentFrameReturn()">
			<stacksize value="4"/>
			<referrer name="O@A_"/>
			<referrer name="O@B_"/>
			<referrer name="Hooks_RegisterNPSHook"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameReturn"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameTotalCount" syntax="GetCurrentFrameTotalCount()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameTotalCount"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetCurrentFrameTotalSize" syntax="GetCurrentFrameTotalSize()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameTotalSize"/>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetDat" syntax="GetDat()">
			<stacksize value="1"/>
			<referrer name="AbsToRel"/>
			<referrer name="RelToAbs"/>
			<library>amx_assembly phys_memory</library>
		</member>
		<member name="M:GetDistance3D" syntax="GetDistance3D(x1, y1, z1, x2, y2, z2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="GetRotationFor2Point3D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetDistanceBetweenPoints3D" syntax="GetDistanceBetweenPoints3D(x1, y1, z1, x2, y2, z2)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="VectorSize"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetDynamicObjectPos" syntax="GetDynamicObjectPos(objectid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="pc_cmd_brama"/>
			<referrer name="GetNearestTree"/>
			<referrer name="DrwalTree"/>
			<referrer name="GetNearestGrzyb"/>
			<referrer name="GetNearestOre"/>
			<referrer name="StartSK"/>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetEngineColor" syntax="GetEngineColor(engineid)">
			<stacksize value="2"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<param name="engineid">
			</param>
		</member>
		<member name="M:GetEngineName" syntax="GetEngineName(engineid)">
			<stacksize value="11"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="pc_cmd_pbuy"/>
			<dependency name="GetEngineName"/>
			<param name="engineid">
			</param>
		</member>
		<member name="M:GetEtykietaColor" syntax="GetEtykietaColor(privcarid)">
			<stacksize value="265"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="SavePrivCar"/>
			<dependency name="GetEtykietaColor"/>
			<dependency name="format"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykieta"/>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:GetEventType" syntax="GetEventType(typeid)">
			<stacksize value="11"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<dependency name="EVENT_TYPE_10HP"/>
			<dependency name="EVENT_TYPE_1V1"/>
			<dependency name="EVENT_TYPE_DM"/>
			<dependency name="EVENT_TYPE_NODM"/>
			<dependency name="EVENT_TYPE_NONE"/>
			<dependency name="EVENT_TYPE_TDM"/>
			<dependency name="GetEventType"/>
			<param name="typeid">
			</param>
		</member>
		<member name="M:GetFishBaits" syntax="GetFishBaits(playerid)">
			<stacksize value="137"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="GetFishBaits"/>
			<dependency name="format"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishBait"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetFishClass" syntax="GetFishClass(fishid, alt)">
			<stacksize value="21"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<dependency name="GetFishClass"/>
			<dependency name="fishData"/>
			<dependency name="fish_class"/>
			<param name="fishid">
			</param>
			<param name="alt">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:GetFishUlepszenia" syntax="GetFishUlepszenia(playerid)">
			<stacksize value="137"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<dependency name="GetFishUlepszenia"/>
			<dependency name="format"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="pFishUlepszenia"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetFrameFunction" syntax="GetFrameFunction(frm_addr)">
			<stacksize value="26"/>
			<referrer name="GetCurrentFrameFunction"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_CIP"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="GetFrameNextFrame"/>
			<dependency name="GetFramePreviousFrame"/>
			<dependency name="GetFrameReturn"/>
			<dependency name="GetFrameVariable"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_LOAD_S_PRI"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_RETN"/>
			<dependency name="OP_SCTRL"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="UnrelocateOpcode"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameHeaderCount" syntax="GetFrameHeaderCount(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetCurrentFrameHeaderCount"/>
			<dependency name="GetFrameHeaderSize"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameHeaderSize" syntax="GetFrameHeaderSize(frm_addr)">
			<stacksize value="1"/>
			<referrer name="GetFrameTotalSize"/>
			<referrer name="GetFrameLocalSize"/>
			<referrer name="GetFrameHeaderCount"/>
			<referrer name="GetCurrentFrameHeaderSize"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameLocal" syntax="GetFrameLocal(frm_addr, param)">
			<stacksize value="1"/>
			<referrer name="GetCurrentFrameLocal"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameLocalCount" syntax="GetFrameLocalCount(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetCurrentFrameLocalCount"/>
			<dependency name="GetFrameLocalSize"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameLocalSize" syntax="GetFrameLocalSize(frm_addr)">
			<stacksize value="6"/>
			<referrer name="GetFrameTotalSize"/>
			<referrer name="GetFrameLocalCount"/>
			<referrer name="GetCurrentFrameLocalSize"/>
			<dependency name="GetFrameHeaderSize"/>
			<dependency name="GetFrameNextFrame"/>
			<dependency name="GetFrameParameterSize"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameNextFrame" syntax="GetFrameNextFrame(frm_addr)">
			<stacksize value="6"/>
			<referrer name="GetFrameLocalSize"/>
			<referrer name="GetFrameFunction"/>
			<dependency name="GetCurrentFrame"/>
			<dependency name="GetFramePreviousFrame"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameParameter" syntax="GetFrameParameter(frm_addr, param, idx)">
			<stacksize value="1"/>
			<referrer name="GetCurrentFrameParameter"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="idx">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameParameterCount" syntax="GetFrameParameterCount(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetCurrentFrameParameterCount"/>
			<dependency name="GetFrameParameterSize"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameParameterSize" syntax="GetFrameParameterSize(frm_addr)">
			<stacksize value="1"/>
			<referrer name="GetFrameTotalSize"/>
			<referrer name="GetFrameLocalSize"/>
			<referrer name="GetFrameParameterCount"/>
			<referrer name="GetCurrentFrameParameterSize"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFramePreviousFrame" syntax="GetFramePreviousFrame(frm_addr)">
			<stacksize value="1"/>
			<referrer name="GetFrameNextFrame"/>
			<referrer name="GetCurrentFramePreviousFrame"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="Callback_Restore_"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameReturn" syntax="GetFrameReturn(frm_addr)">
			<stacksize value="1"/>
			<referrer name="GetCurrentFrameReturn"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="Callback_Restore_"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameTotalCount" syntax="GetFrameTotalCount(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetCurrentFrameTotalCount"/>
			<dependency name="GetFrameTotalSize"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameTotalSize" syntax="GetFrameTotalSize(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetFrameTotalCount"/>
			<referrer name="GetCurrentFrameTotalSize"/>
			<dependency name="GetFrameHeaderSize"/>
			<dependency name="GetFrameLocalSize"/>
			<dependency name="GetFrameParameterSize"/>
			<param name="frm_addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFrameVariable" syntax="GetFrameVariable(frm_addr, param, idx)">
			<stacksize value="1"/>
			<referrer name="GetFrameFunction"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="idx">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:GetFreeGieldaPoint" syntax="GetFreeGieldaPoint()">
			<stacksize value="3"/>
			<referrer name="SetVehicleToSell"/>
			<dependency name="gieldaSellOwned"/>
		</member>
		<member name="M:GetFuelingColor" syntax="GetFuelingColor(playerid)">
			<stacksize value="11"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<dependency name="GetFuelingColor"/>
			<dependency name="PlayerFuelingType"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetFuelingName" syntax="GetFuelingName(playerid)">
			<stacksize value="11"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<dependency name="GetFuelingName"/>
			<dependency name="PlayerFuelingType"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetFunctionAddress" syntax="GetFunctionAddress(funcname[])">
			<stacksize value="5"/>
			<referrer name="SortArrayUsingComparator_Entry"/>
			<referrer name="SortArrayUsingCompInto_Entry"/>
			<dependency name="funcidx"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetGameLimit" syntax="GetGameLimit(gameid)">
			<stacksize value="2"/>
			<referrer name="UpdateGameDraw"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GAME_CH"/>
			<dependency name="GAME_DA"/>
			<dependency name="GAME_GG"/>
			<dependency name="GAME_RC"/>
			<dependency name="GAME_SK"/>
			<dependency name="GAME_SM"/>
			<dependency name="GAME_WG"/>
			<dependency name="GAME_WP"/>
			<dependency name="GAME_ZP"/>
			<param name="gameid">
			</param>
		</member>
		<member name="M:GetGangAchievementStatus" syntax="GetGangAchievementStatus(gangid)">
			<stacksize value="265"/>
			<referrer name="CheckGangAchievement"/>
			<dependency name="GetGangAchievementStatus"/>
			<dependency name="format"/>
			<dependency name="pGangAchievementStatus"/>
			<dependency name="pGangAchievementStatus"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:GetGangAchievements" syntax="GetGangAchievements(gangid)">
			<stacksize value="265"/>
			<referrer name="CheckGangAchievement"/>
			<dependency name="GetGangAchievements"/>
			<dependency name="format"/>
			<dependency name="pGangAchievement"/>
			<dependency name="pGangAchievement"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:GetGangUlepszenia" syntax="GetGangUlepszenia(gangid)">
			<stacksize value="265"/>
			<referrer name="SaveGang"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="GetGangUlepszenia"/>
			<dependency name="format"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:GetGroundRotation" syntax="GetGroundRotation(x, y, size, &amp;rx, &amp;ry)">
			<stacksize value="18"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="Grzybiarz_Random"/>
			<dependency name="CA_FindZ_For2DCoord"/>
			<dependency name="GetPointInFront2D"/>
			<dependency name="GetRotationFor2Point3D"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetIP" syntax="GetIP(playerid)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="playerid">
				Player to get IP of.
			</param>
			  <returns>  IP as a 32bit int.  </returns> 
		</member>
		<member name="M:GetIpAutonomousSystem" syntax="GetIpAutonomousSystem(geolite_ip[], geolite_dest[], geolite_len)">
			<stacksize value="342"/>
			<referrer name="GetPlayerAutonomousSystem"/>
			<dependency name="DB_FreeResult"/>
			<dependency name="DB_GetField"/>
			<dependency name="DB_Query"/>
			<dependency name="GEOLITE_asn_db"/>
			<dependency name="format"/>
			<dependency name="sscanf"/>
			<param name="geolite_ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetIpCity" syntax="GetIpCity(geolite_ip[], geolite_dest[], geolite_len)">
			<stacksize value="272"/>
			<referrer name="IsIpProxy"/>
			<referrer name="GetPlayerCity"/>
			<dependency name="DB_FreeResult"/>
			<dependency name="DB_GetField"/>
			<dependency name="DB_Query"/>
			<dependency name="GEOLITE_city_db"/>
			<dependency name="format"/>
			<dependency name="sscanf"/>
			<param name="geolite_ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetIpCountry" syntax="GetIpCountry(geolite_ip[], geolite_dest[], geolite_len)">
			<stacksize value="282"/>
			<referrer name="IsIpProxy"/>
			<referrer name="GetPlayerCountry"/>
			<dependency name="DB_FreeResult"/>
			<dependency name="DB_GetField"/>
			<dependency name="DB_Query"/>
			<dependency name="GEOLITE_country_db"/>
			<dependency name="format"/>
			<dependency name="sscanf"/>
			<param name="geolite_ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetIpProvince" syntax="GetIpProvince(geolite_ip[], geolite_dest[], geolite_len)">
			<stacksize value="298"/>
			<referrer name="GetPlayerProvince"/>
			<dependency name="DB_FreeResult"/>
			<dependency name="DB_GetField"/>
			<dependency name="DB_Query"/>
			<dependency name="GEOLITE_province_db"/>
			<dependency name="format"/>
			<dependency name="sscanf"/>
			<param name="geolite_ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetIpUTC" syntax="GetIpUTC(geolite_ip[], geolite_dest[], geolite_len)">
			<stacksize value="271"/>
			<referrer name="GetPlayerUTC"/>
			<dependency name="DB_FreeResult"/>
			<dependency name="DB_GetField"/>
			<dependency name="DB_Query"/>
			<dependency name="GEOLITE_city_db"/>
			<dependency name="format"/>
			<dependency name="sscanf"/>
			<param name="geolite_ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetJITGeneratorVersion" syntax="GetJITGeneratorVersion()">
			<stacksize value="1"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
			<referrer name="CallNative"/>
			<referrer name="CallNativeByAddress"/>
			<library>amx_assembly amx_jit</library>
		</member>
		<member name="M:GetJobUlepszenia" syntax="GetJobUlepszenia(playerid)">
			<stacksize value="137"/>
			<referrer name="OnDialogJob"/>
			<dependency name="GetJobUlepszenia"/>
			<dependency name="format"/>
			<dependency name="pJobUlepszenia"/>
			<dependency name="pJobUlepszenia"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetKeyCount" syntax="GetKeyCount(privcarid)">
			<stacksize value="3"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<dependency name="pVehKeys"/>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:GetLastDamageArmour" syntax="GetLastDamageArmour(playerid)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="OnPlayerDamageDone"/>
			<dependency name="s_DamageDoneArmour"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetLastDamageHealth" syntax="GetLastDamageHealth(playerid)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="OnPlayerDamageDone"/>
			<dependency name="s_DamageDoneHealth"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetLocalFunction" syntax="GetLocalFunction(func[], spec[])">
			<tagname value="F@_@"/>
			<stacksize value="41"/>
			<referrer name="Callback_Find_"/>
			<referrer name="Inline_UP_"/>
			<dependency name="Callback_Claim_"/>
			<dependency name="Callback_LocalHandler_"/>
			<dependency name="Callback_Release_"/>
			<dependency name="E_PUBLIC_CALL"/>
			<dependency name="E_PUBLIC_CALL_CLAIM"/>
			<dependency name="E_PUBLIC_CALL_FLAGS"/>
			<dependency name="E_PUBLIC_CALL_FUNCTION"/>
			<dependency name="E_PUBLIC_CALL_HANDLER"/>
			<dependency name="E_PUBLIC_CALL_METADATA"/>
			<dependency name="E_PUBLIC_CALL_NULL"/>
			<dependency name="E_PUBLIC_CALL_RELEASE"/>
			<dependency name="E_PUBLIC_CALL_SPECIFIER"/>
			<dependency name="E_PUBLIC_CALL_TIMER"/>
			<dependency name="Indirect_Ptr_"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="Malloc_GetS"/>
			<dependency name="Malloc_Resolve"/>
			<dependency name="Malloc_SetS"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFakeE_INLINE_CALL"/>
			<dependency name="e_INLINE_FLAG_PUBLIC"/>
			<dependency name="false"/>
			<dependency name="funcidx"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
				Public function to get.
			</param>
			<param name="spec">
				<paraminfo> [] </paraminfo>
				The structure of the function's parameters.
			</param>
			    <returns>  A pointer to the function.  </returns>  <remarks>  Accepts the following parameter specifiers:  i - Integer (also x/c/d/h)  f - Float (also g)  s - String  ai - Array (followed by length)  v - Reference (&amp;var, any tag)  </remarks> 
		</member>
		<member name="M:GetMaxPlayers" syntax="GetMaxPlayers()">
			<attribute name="native"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
			<library>a_samp</library>  <summary>Returns the maximum number of players that can join the server, as set by the server variable  'maxplayers' in server.cfg.</summary>  <seealso name="GetPlayerPoolSize" />  <seealso name="IsPlayerConnected" />  <remarks>This function can not be used in place of <b><c>MAX_PLAYERS</c></b>.  It can not be used  at compile time (e.g.  for array sizes). <b><c>MAX_PLAYERS</c></b> should always be re-defined to  what the 'maxplayers' var will be, or higher.</remarks>  <returns>The maximum number of players that can join the server.</returns> 
		</member>
		<member name="M:GetMineName" syntax="GetMineName(mineid)">
			<stacksize value="36"/>
			<referrer name="OnPlayerMining"/>
			<dependency name="GetMineName"/>
			<param name="mineid">
			</param>
		</member>
		<member name="M:GetMineStatus" syntax="GetMineStatus(mineid)">
			<stacksize value="36"/>
			<referrer name="UpdateMineLabel"/>
			<dependency name="GetMineStatus"/>
			<dependency name="MineLevel"/>
			<param name="mineid">
			</param>
		</member>
		<member name="M:GetMineWeight" syntax="GetMineWeight(playerid)">
			<stacksize value="265"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="GetMineWeight"/>
			<dependency name="MineWeight"/>
			<dependency name="MineWeight"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNativeAddressFromIndex" syntax="GetNativeAddressFromIndex(index)">
			<stacksize value="7"/>
			<referrer name="GetNativeAddressFromName"/>
			<referrer name="YHNPS_Push"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetNativeInfo"/>
			<param name="index">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNativeAddressFromName" syntax="GetNativeAddressFromName(name[])">
			<stacksize value="4"/>
			<dependency name="GetNativeAddressFromIndex"/>
			<dependency name="GetNativeIndexFromName"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNativeIndexFromAddress" syntax="GetNativeIndexFromAddress(address)">
			<stacksize value="5"/>
			<referrer name="GetNativeNameFromAddress"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DumpAMX_WriteAMXCode"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="GetNumNatives"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="address">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNativeIndexFromName" syntax="GetNativeIndexFromName(name[])">
			<stacksize value="10"/>
			<referrer name="GetNativeAddressFromName"/>
			<referrer name="AsmEmitSysreq"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="GetNumNatives"/>
			<dependency name="NtCompare"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNativeInfo" syntax="GetNativeInfo(index, info[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="GetNativeAddressFromIndex"/>
			<referrer name="GetNativeNameFromIndex"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="GetNumNatives"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="false"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="info">
				<paraminfo> [2] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNativeNameFromAddress" syntax="GetNativeNameFromAddress(address, name[], size)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="GetNativeIndexFromAddress"/>
			<dependency name="GetNativeNameFromIndex"/>
			<param name="address">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNativeNameFromIndex" syntax="GetNativeNameFromIndex(index, name[], size)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="GetNativeNameFromAddress"/>
			<referrer name="DisasmWriteCode"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="GetNativeInfo"/>
			<dependency name="NtCopy"/>
			<dependency name="false"/>
			<param name="index">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNearestBase" syntax="GetNearestBase(playerid, dist)">
			<stacksize value="9"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0O"/>
			<referrer name="pc_cmd_brama"/>
			<dependency name="GangBaseRectangle"/>
			<dependency name="IsPlayerInDynamicArea"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iterator@GangBases"/>
			<dependency name="base_pickup"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangBasesData"/>
			<param name="playerid">
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetNearestBusiness" syntax="GetNearestBusiness(playerid)">
			<stacksize value="9"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0c"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iterator@Business"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_position"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNearestColourGamma" syntax="GetNearestColourGamma(colour, options[], count)">
			<stacksize value="13"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo> [] </paraminfo>
				The list of valid RGB(A) colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<summary>  GetNearestColourGamma(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses gamma  colour space for slightly more accuracy.  </remarks> 
		</member>
		<member name="M:GetNearestColourGammaCached" syntax="GetNearestColourGammaCached(colour, options[][], count)">
			<stacksize value="10"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo>Float [][3] </paraminfo>
				The list of valid gamma colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<summary>  GetNearestColourGammaCached(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses gamma  colour space for slightly more accuracy.  Options are in gamma format.  </remarks> 
		</member>
		<member name="M:GetNearestColourLinear" syntax="GetNearestColourLinear(colour, options[], count)">
			<stacksize value="10"/>
			<dependency name="cellmax"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo> [] </paraminfo>
				The list of valid RGB(A) colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<summary>  GetNearestColourLinear(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses RGB colour  space for the distance function, which is not very accurate.  </remarks> 
		</member>
		<member name="M:GetNearestColourSRGB" syntax="GetNearestColourSRGB(colour, options[], count)">
			<stacksize value="16"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="SRGBToCIE"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo> [] </paraminfo>
				The list of valid RGB(A) colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<summary>  GetNearestColourGamma(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses SRGB  colour space for the most accuracy.  </remarks> 
		</member>
		<member name="M:GetNearestColourSRGBCached" syntax="GetNearestColourSRGBCached(colour, options[][], count)">
			<stacksize value="16"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="SRGBToCIE"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo>Float [][3] </paraminfo>
				The list of valid SRGB colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<summary>  GetNearestColourSRGBCached(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses SRGB  colour space for the most accuracy.  Options are in SRGB format.  </remarks> 
		</member>
		<member name="M:GetNearestFortune" syntax="GetNearestFortune(playerid)">
			<stacksize value="9"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="fortunePosition"/>
			<dependency name="fortunePosition"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNearestGrzyb" syntax="GetNearestGrzyb(playerid)">
			<stacksize value="12"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Z"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GrzybAlive"/>
			<dependency name="GrzybObject"/>
			<dependency name="GrzybObject"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNearestOre" syntax="GetNearestOre(playerid)">
			<stacksize value="12"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="MineCreated"/>
			<dependency name="MineObject"/>
			<dependency name="MineObject"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNearestRoulette" syntax="GetNearestRoulette(playerid)">
			<stacksize value="9"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="roulettePosition"/>
			<dependency name="roulettePosition"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNearestSlots" syntax="GetNearestSlots(playerid)">
			<stacksize value="9"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="slotsPosition"/>
			<dependency name="slotsPosition"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNearestStation" syntax="GetNearestStation(playerid)">
			<stacksize value="9"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<dependency name="FuelStations"/>
			<dependency name="FuelStations"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNearestTree" syntax="GetNearestTree(playerid)">
			<stacksize value="12"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Y"/>
			<dependency name="DrwalCutted"/>
			<dependency name="DrwalObject"/>
			<dependency name="DrwalObject"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNumNatives" syntax="GetNumNatives(amxhdr[])">
			<stacksize value="1"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_LIBRARIES"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNumPubVars" syntax="GetNumPubVars(amxhdr[])">
			<stacksize value="1"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="AMX_HDR_TAGS"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNumPublics" syntax="GetNumPublics(amxhdr[])">
			<stacksize value="2"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetNumTags" syntax="GetNumTags(amxhdr[])">
			<stacksize value="1"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NAMETABLE"/>
			<dependency name="AMX_HDR_TAGS"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetObjectPos" syntax="GetObjectPos(objectid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_InitObject"/>
			<referrer name="PHY_UseColAndreas"/>
			<referrer name="IsObjectInSphere"/>
			<referrer name="Get2DBehindObjectInAngle"/>
			<param name="objectid">
				The ID of the object to get the position of.
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A variable in which to store the x coordinate, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A variable in which to store the y coordinate, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A variable in which to store the z coordinate, passed by reference
			</param>
			<library>a_objects</library>  <summary>Get the position of an object.</summary>          <seealso name="SetObjectPos" />  <seealso name="GetObjectRot" />  <seealso name="SetPlayerObjectPos" />  <seealso name="CreateObject" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The specified object does not exist.  </returns> 
		</member>
		<member name="M:GetObjectRot" syntax="GetObjectRot(objectid, &amp;rotX, &amp;rotY, &amp;rotZ)">
			<attribute name="native"/>
			<referrer name="PHY_RollObject"/>
			<referrer name="PHY_ApplyRotation"/>
			<param name="objectid">
				The objectid of the object you want to get the rotation from
			</param>
			<param name="rotX">
				<paraminfo>Float &amp; </paraminfo>
				The variable to store the x rotation, passed by reference
			</param>
			<param name="rotY">
				<paraminfo>Float &amp; </paraminfo>
				The variable to store the y rotation, passed by reference
			</param>
			<param name="rotZ">
				<paraminfo>Float &amp; </paraminfo>
				The variable to store the z rotation, passed by reference
			</param>
			<library>a_objects</library>  <summary>Use this function to get the objects current rotation.  The rotation is saved by reference  in three rotX/rotY/rotZ variables.</summary>          <seealso name="SetObjectRot" />  <seealso name="SetObjectPos" />  <seealso name="SetPlayerObjectRot" />  <seealso name="CreateObject" />  <returns>The object's rotation is stored in the referenced variables, not in the return value.</returns> 
		</member>
		<member name="M:GetOpcodeInstructionName" syntax="GetOpcodeInstructionName(opcode)">
			<stacksize value="1"/>
			<referrer name="DisasmGetInsnName"/>
			<dependency name="GetOpcodeInstructionName"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="gAMXOpcodeNames"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:GetOpcodeInstructionParameters" syntax="GetOpcodeInstructionParameters(opcode)">
			<stacksize value="1"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="gAMXOpcodeParameterCounts"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:GetOpcodeInstructionRelocatable" syntax="GetOpcodeInstructionRelocatable(opcode)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="DisasmNeedReloc"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="false"/>
			<dependency name="gAMXOpcodeNeedsReloc"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:GetOreCost" syntax="GetOreCost(playerid)">
			<stacksize value="3"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<dependency name="MineWeight"/>
			<dependency name="OreDay"/>
			<dependency name="mineData"/>
			<dependency name="mine_money"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPVarFloat" syntax="GetPVarFloat(playerid, pvar[])">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<param name="playerid">
				The ID of the player whose player variable you want to get
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<library>a_players</library>  <summary>Gets a player variable as a float.</summary>      <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="DeletePVar" />  <returns>The float from the specified player variable.</returns> 
		</member>
		<member name="M:GetPVarInt" syntax="GetPVarInt(playerid, pvar[])">
			<attribute name="native"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@09"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="SparingRespawn"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="Drwal_Start"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="OnDialogJob"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_obiekty"/>
			<referrer name="IsBlockCommand"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="ac_OnDialogResponse"/>
			<param name="playerid">
				The ID of the player whose player variable to get
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable (case-insensitive).  Assigned in SetPVarInt
			</param>
			<library>a_players</library>  <summary>Gets an integer player variable's value.</summary>      <seealso name="SetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <returns>The integer value of the specified player variable.  It will still return <b><c>0</c></b>  if the variable is not set, or the player does not exist.</returns> 
		</member>
		<member name="M:GetPVarString" syntax="GetPVarString(playerid, pvar[], output[], len)">
			<attribute name="native"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="OnPlayerRegistered"/>
			<param name="playerid">
				The ID of the player whose player variable to get
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable, set by <a href="#SetPVarString">SetPVarString</a>
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
				The array in which to store the string value in, passed by reference
			</param>
			<param name="len">
				The maximum length of the returned string
			</param>
			<library>a_players</library>  <summary>Gets a player variable as a string.</summary>          <seealso name="SetPVarString" />  <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <remarks>If length of string is zero (value not set), output text will not be updated or set to anything  and will remain with old data, neccesying that you clear the variable to blank value if <a href="#GetPVarString">GetPVarString</a>  returns <b><c>0</c></b> if that behavior is undesired </remarks>  <returns>The length of the string.</returns> 
		</member>
		<member name="M:GetPickaxeLevel" syntax="GetPickaxeLevel(playerid)">
			<stacksize value="36"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<dependency name="GetPickaxeLevel"/>
			<dependency name="MinePickaxeLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerAmmo" syntax="GetPlayerAmmo(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<param name="playerid">
				The ID of the player whose ammo to get
			</param>
			<library>a_players</library>  <summary>Gets the amount of ammo in a player's current weapon.</summary>    <seealso name="SetPlayerAmmo" />  <seealso name="GetPlayerWeaponData" />  <remarks>The ammo can hold 16-bit values, therefore values over <b><c>32767</c></b> will return erroneous  values.</remarks>  <returns>The amount of ammo in the player's current weapon.</returns> 
		</member>
		<member name="M:GetPlayerAnimationIndex" syntax="GetPlayerAnimationIndex(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="InflictDamage"/>
			<referrer name="IsPlayerSwimming"/>
			<param name="playerid">
				ID of the player of whom you want to get the animation index of
			</param>
			<library>a_players</library>  <summary>Returns the index of any running applied animations.</summary>    <seealso name="GetAnimationName" />  <remarks>This function was added in <b>SA-MP 0.3b</b> and will not work in earlier versions!</remarks>  <returns><b><c>0</c></b> if there is no animation applied.</returns> 
		</member>
		<member name="M:GetPlayerArmour" syntax="GetPlayerArmour(playerid, &amp;armour)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ScriptInit"/>
			<referrer name="SaveSyncData"/>
			<param name="playerid">
				The ID of the player that you want to get the armour of
			</param>
			<param name="armour">
				<paraminfo>Float &amp; </paraminfo>
				The float to to store the armour in, passed by reference
			</param>
			<library>a_players</library>  <summary>This function stores the armour of a player into a variable.</summary>      <seealso name="SetPlayerArmour" />  <seealso name="GetPlayerHealth" />  <seealso name="GetVehicleHealth" />  <remarks>Even though the armour can be set to near infinite values on the server side, the individual  clients will only report values up to <b><c>255</c></b>.  Anything higher will wrap around; <b><c>256</c></b>  becomes <b><c>0</c></b>, <b><c>257</c></b> becomes <b><c>1</c></b>, etc. </remarks>  <remarks>Armour is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b>  </remarks>  <remarks>The function's name is armour, not armor (Americanized).  This is inconsistent with the  rest of SA-MP, so remember that.</remarks>  <returns>  <b><c>1</c></b> - success.<br />  <b><c>0</c></b> - failure (i.e.  player not connected).<br />  </returns> 
		</member>
		<member name="M:GetPlayerAutonomousSystem" syntax="GetPlayerAutonomousSystem(playerid, geolite_dest[], geolite_len)">
			<stacksize value="22"/>
			<referrer name="WC_OnPlayerConnect"/>
			<dependency name="GetIpAutonomousSystem"/>
			<dependency name="GetPlayerIp"/>
			<param name="playerid">
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetPlayerBudget" syntax="GetPlayerBudget(playerid)">
			<stacksize value="5"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="RunPlayerStats"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ACH_DEATHS"/>
			<dependency name="ACH_KILLS"/>
			<dependency name="GetAchievement"/>
			<dependency name="floatround"/>
			<dependency name="floatround_round"/>
			<dependency name="pDuelRank"/>
			<dependency name="playerData"/>
			<dependency name="player_level"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerCameraMode" syntax="GetPlayerCameraMode(playerid)">
			<attribute name="native"/>
			<referrer name="ac_Timer"/>
			<param name="playerid">
				The ID of the player whose camera mode to retrieve
			</param>
			<library>a_players</library>  <summary>Returns the current GTA camera mode for the requested player.  The camera modes are useful  in determining whether a player is aiming, doing a passenger driveby etc.</summary>    <seealso name="GetPlayerCameraPos" />  <seealso name="GetPlayerCameraFrontVector" />  <seealso name="SetPlayerCameraPos" />  <seealso name="SetPlayerCameraLookAt" />  <seealso name="SetCameraBehindPlayer" />  <remarks>This function was added in <b>SA-MP 0.3c R3</b> and will not work in earlier versions!</remarks>  <returns>The camera mode as an integer (or <b><c>-1</c></b> if player is not connected).</returns> 
		</member>
		<member name="M:GetPlayerCity" syntax="GetPlayerCity(playerid, geolite_dest[], geolite_len)">
			<stacksize value="22"/>
			<referrer name="WC_OnPlayerConnect"/>
			<dependency name="GetIpCity"/>
			<dependency name="GetPlayerIp"/>
			<param name="playerid">
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetPlayerColor" syntax="GetPlayerColor(playerid)">
			<attribute name="native"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="getMentioned"/>
			<referrer name="OnBankDialog"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_invisible"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="SavePlayerPosition"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="pc_cmd_exit"/>
			<param name="playerid">
				The ID of the player to get the colour of
			</param>
			<library>a_players</library>  <summary>Gets the colour of the player's name and radar marker.  Only works after <a href="#SetPlayerColor">SetPlayerColor</a>.</summary>    <seealso name="SetPlayerColor" />  <seealso name="ChangeVehicleColor" />  <remarks>GetPlayerColor will return <b><c>0</c></b> unless <a href="#SetPlayerColor">SetPlayerColor</a>  has been used first.</remarks>  <returns>The player's colour. <b><c>0</c></b> if no colour set or player not connected.</returns> 
		</member>
		<member name="M:GetPlayerCountry" syntax="GetPlayerCountry(playerid, geolite_dest[], geolite_len)">
			<stacksize value="22"/>
			<referrer name="WC_OnPlayerConnect"/>
			<dependency name="GetIpCountry"/>
			<dependency name="GetPlayerIp"/>
			<param name="playerid">
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetPlayerDistanceFromPoint" syntax="GetPlayerDistanceFromPoint(playerid, x, y, z)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ProcessDamage"/>
			<param name="playerid">
				The ID of the player to calculate the distance from
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x map coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y map coordinate
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z map coordinate
			</param>
			<library>a_players</library>  <summary>Calculate the distance between a player and a map coordinate.</summary>          <seealso name="IsPlayerInRangeOfPoint" />  <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="GetPlayerPos" />  <remarks>This function was added in <b>SA-MP 0.3c R3</b> and will not work in earlier versions!</remarks>  <returns>The distance between the player and the point as a float.</returns> 
		</member>
		<member name="M:GetPlayerDrunkLevel" syntax="GetPlayerDrunkLevel(playerid)">
			<attribute name="native"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<param name="playerid">
				The player you want to check the drunkenness level of
			</param>
			<library>a_players</library>  <summary>  Checks the player's level of drunkenness.  If the level is less than <b><c>2000</c></b>, the player  is sober.  The player's level of drunkness goes down slowly automatically (1 level per frame) but  will always reach <b><c>2000</c></b> at the end (in <b>0.3b</b> it will stop at <b><c>0</c></b>).  The higher drunkenness levels affect the player's camera, and the car driving handling.  The level  of drunkenness increases when the player drinks from a bottle (You can use <a href="#SetPlayerSpecialAction">SetPlayerSpecialAction</a>  to give them bottles).  </summary>    <seealso name="SetPlayerDrunkLevel" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <returns>An integer with the level of drunkenness of the player.</returns> 
		</member>
		<member name="M:GetPlayerFacingAngle" syntax="GetPlayerFacingAngle(playerid, &amp;ang)">
			<attribute name="native"/>
			<referrer name="ac_GetPlayerFacingAngle"/>
			<param name="playerid">
				The player you want to get the angle of
			</param>
			<param name="ang">
				<paraminfo>Float &amp; </paraminfo>
				The Float to store the angle in, passed by reference
			</param>
			<library>a_players</library>  <summary>Gets the angle a player is facing.</summary>      <seealso name="GetVehicleZAngle" />  <seealso name="SetPlayerFacingAngle" />  <remarks>Angles are reversed in GTA:SA; 90 degrees would be East in the real world, but in GTA:SA  90 degrees is in fact West.  North and South are still 0/360 and 180.  To convert this, simply do  <b>360 - angle</b>.</remarks>  <remarks>Angles returned when inside a vehicle is rarely correct.  To get the correct facing angle  while inside a vehicle, use <a href="#GetVehicleZAngle">GetVehicleZAngle</a>.</remarks> 
		</member>
		<member name="M:GetPlayerFightingStyle" syntax="GetPlayerFightingStyle(playerid)">
			<attribute name="native"/>
			<referrer name="ProcessDamage"/>
			<param name="playerid">
				The ID of the player to get the fighting style of
			</param>
			<library>a_players</library>  <summary>Get the fighting style the player currently using.</summary>    <seealso name="SetPlayerFightingStyle" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>  <b>Fighting styles:</b><br />  <ul>  <li><b><c>FIGHT_STYLE_NORMAL</c></b></li>  <li><b><c>FIGHT_STYLE_BOXING</c></b></li>  <li><b><c>FIGHT_STYLE_KUNGFU</c></b></li>  <li><b><c>FIGHT_STYLE_KNEEHEAD</c></b></li>  <li><b><c>FIGHT_STYLE_GRABKICK</c></b></li>  <li><b><c>FIGHT_STYLE_ELBOW</c></b></li>  </ul>  </remarks>  <returns>The ID of the fighting style of the player.</returns> 
		</member>
		<member name="M:GetPlayerGangPerms" syntax="GetPlayerGangPerms(playerid)">
			<stacksize value="137"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="GetPlayerGangPerms"/>
			<dependency name="format"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangRankPerm"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerHealth" syntax="GetPlayerHealth(playerid, &amp;health)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ScriptInit"/>
			<referrer name="SaveSyncData"/>
			<param name="playerid">
				The ID of the player
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
				Float to store health, passed by reference
			</param>
			<library>a_players</library>  <summary>The function GetPlayerHealth allows you to retrieve the health of a player.  Useful for  cheat detection, among other things.</summary>      <seealso name="SetPlayerHealth" />  <seealso name="GetVehicleHealth" />  <seealso name="GetPlayerArmour" />  <remarks>  Even though the health can be set to near infinite values on the server side, the individual clients  will only report values up to <b><c>255</c></b>.  Anything higher will wrap around; <b><c>256</c></b>  becomes <b><c>0</c></b>, <b><c>257</c></b> becomes <b><c>1</c></b>, etc.<br />  Health is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b>  </remarks>  <returns>  <b><c>1</c></b> - success.<br />  <b><c>0</c></b> - failure (i.e.  player not connected).<br />  </returns> 
		</member>
		<member name="M:GetPlayerInterior" syntax="GetPlayerInterior(playerid)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="SavePlayerPosition"/>
			<param name="playerid">
				The player to get the interior ID of
			</param>
			<library>a_players</library>  <summary>Retrieves the player's current interior.  A list of currently known interiors with their  positions can be found on <a href="http://wiki.sa-mp.com/wiki/Interiorids">this</a> page.</summary>    <seealso name="SetPlayerInterior" />  <seealso name="GetPlayerVirtualWorld" />  <remarks>Always returns <b><c>0</c></b> for NPCs.</remarks>  <returns>The interior ID the player is currently in.</returns> 
		</member>
		<member name="M:GetPlayerIp" syntax="GetPlayerIp(playerid, ip[], len)">
			<attribute name="native"/>
			<referrer name="Android_OnPlayerConnect"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="GetPlayerAutonomousSystem"/>
			<referrer name="GetPlayerCountry"/>
			<referrer name="GetPlayerCity"/>
			<referrer name="GetPlayerProvince"/>
			<referrer name="GetPlayerUTC"/>
			<referrer name="IsPlayerUsingProxy"/>
			<referrer name="WC_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player to get the IP address of
			</param>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				An array into which to store the player's IP address, passed by reference
			</param>
			<param name="len">
				The maximum length of the IP address (recommended 16)
			</param>
			<library>a_players</library>  <summary>Get the specified player's IP address and store it in a string.</summary>        <seealso name="NetStats_GetIpPort" />  <seealso name="GetPlayerName" />  <seealso name="GetPlayerPing" />  <seealso name="GetPlayerVersion" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <remarks>This function does not work when used in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  because the player is already disconnected.  It will return an invalid IP (<b><c>255.255.255.255</c></b>).  Save players' IPs under <a href="#OnPlayerConnect">OnPlayerConnect</a> if they need to be used under  <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>. </remarks>  <returns><b><c>1</c></b> on success and <b><c>0</c></b> on failure.</returns> 
		</member>
		<member name="M:GetPlayerKeys" syntax="GetPlayerKeys(playerid, &amp;keys, &amp;updown, &amp;leftright)">
			<attribute name="native"/>
			<referrer name="DrwalTree"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<param name="playerid">
				The ID of the player to get the keys of
			</param>
			<param name="keys">
				<paraminfo> &amp; </paraminfo>
				Bitmask containing the player's key states. <a href="http://wiki.sa-mp.com/wiki/Keys">List  of keys</a>
			</param>
			<param name="updown">
				<paraminfo> &amp; </paraminfo>
				Up/down state
			</param>
			<param name="leftright">
				<paraminfo> &amp; </paraminfo>
				Left/right state
			</param>
			<library>a_players</library>  <summary>Check which keys a player is pressing.</summary>          <seealso name="OnPlayerKeyStateChange" />  <remarks>Only the FUNCTION of keys can be detected; not actual keys.  For example, it is not possible  to detect if a player presses <b>SPACE</b>, but you can detect if they press <b>SPRINT</b> (which  can be mapped (assigned/binded) to ANY key (but is space by default)). </remarks>  <remarks>As of update <b>0.3.7</b>, the keys "A" and "D" are not recognized when in a vehicle.  However,  keys "W" and "S" can be detected with the "keys" parameter. </remarks>  <returns>The keys are stored in the specified variables.</returns> 
		</member>
		<member name="M:GetPlayerLastShotVectors" syntax="GetPlayerLastShotVectors(playerid, &amp;originX, &amp;originY, &amp;originZ, &amp;hitPosX, &amp;hitPosY, &amp;hitPosZ)">
			<attribute name="native"/>
			<referrer name="T3_GetWeaponShotPos"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<param name="playerid">
				The ID of the player to get the last bullet shot information of
			</param>
			<param name="originX">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to save the x coordinate of where the bullet originated  from
			</param>
			<param name="originY">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to save the y coordinate of where the bullet originated  from
			</param>
			<param name="originZ">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to save the z coordinate of where the bullet originated  from
			</param>
			<param name="hitPosX">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to save the x coordinate of where the bullet hit
			</param>
			<param name="hitPosY">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to save the y coordinate of where the bullet hit
			</param>
			<param name="hitPosZ">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to save the z coordinate of where the bullet hit
			</param>
			<library>a_players</library>  <summary>Retrieves the start and end (hit) position of the last bullet a player fired.</summary>                <seealso name="GetPlayerWeaponData" />  <seealso name="GetPlayerWeapon" />  <seealso name="VectorSize" />  <seealso name="OnPlayerWeaponShot" />  <remarks>This function was added in <b>SA-MP 0.3z</b> and will not work in earlier versions!</remarks>  <remarks>This function will only work when <a href="http://wiki.sa-mp.com/wiki/Lag_Compensation">lag  compensation</a> is <b>enabled</b>. </remarks>  <remarks>If the player hit nothing, the hit positions will be <b><c>0</c></b>.  This means you can't  currently calculate how far a bullet travels through open air. </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.<br />  </returns> 
		</member>
		<member name="M:GetPlayerMaxArmour" syntax="GetPlayerMaxArmour(playerid)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="s_PlayerMaxArmour"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerMaxHealth" syntax="GetPlayerMaxHealth(playerid)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="s_PlayerMaxHealth"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerMoney" syntax="GetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="orig_GetPlayerMoney"/>
			<param name="playerid">
				The ID of the player to get the money of
			</param>
			<library>a_players</library>  <summary>Retrieves the amount of money a player has.</summary>    <seealso name="GivePlayerMoney" />  <seealso name="ResetPlayerMoney" />  <returns>The amount of money the player has.</returns> 
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="ReturnPlayerName"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="HasRPName"/>
			<referrer name="Logger_P"/>
			<referrer name="DamageFeedAddHit"/>
			<referrer name="AddRejectedHit"/>
			<referrer name="getMentioned"/>
			<referrer name="WC_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player to get the name of
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				An array into which to store the name, passed by reference
			</param>
			<param name="len">
				The length of the string that should be stored.  Recommended to be <b><c>MAX_PLAYER_NAME</c></b>
			</param>
			<library>a_players</library>  <summary>Get a player's name.</summary>        <seealso name="SetPlayerName" />  <seealso name="GetPlayerIp" />  <seealso name="GetPlayerPing" />  <seealso name="GetPlayerScore" />  <seealso name="GetPlayerVersion" />  <remarks>A player's name can be up to 24 characters long (as of <b>0.3d R2</b>) by using <a href="#SetPlayerName">SetPlayerName</a>.  This is defined as <b><c>24</c></b> by default.  However, the client can  only join with a nickname between 3 and 20 characters, otherwise the connection will be rejected  and the player has to quit to choose a valid name.</remarks>  <returns>The length of the player's name. <b><c>0</c></b> if player specified doesn't exist.</returns> 
		</member>
		<member name="M:GetPlayerNetworkStats" syntax="GetPlayerNetworkStats(playerid, output[], size)">
			<attribute name="native"/>
			<referrer name="getLost"/>
			<param name="playerid">
				The ID of the player you want to get the networkstats of
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
				The string to store the networkstats in, passed by reference
			</param>
			<param name="size">
				The length of the string that should be stored
			</param>
			<library>a_samp</library>  <summary>Gets a player's network stats and saves them into a string.</summary>        <seealso name="GetNetworkStats" />  <seealso name="NetStats_GetConnectedTime" />  <seealso name="NetStats_MessagesReceived" />  <seealso name="NetStats_BytesReceived" />  <seealso name="NetStats_MessagesSent" />  <seealso name="NetStats_BytesSent" />  <seealso name="NetStats_MessagesRecvPerSecond" />  <seealso name="NetStats_PacketLossPercent" />  <seealso name="NetStats_ConnectionStatus" />  <seealso name="NetStats_GetIpPort" />  <remarks>This function was added in <b>SA-MP 0.3c R4</b> and will not work in earlier versions!</remarks>  <remarks>This function may not return accurate data when used under <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  if the player has quit normally.  It usually returns accurate data if the player has been kicked  or has timed out.</remarks> 
		</member>
		<member name="M:GetPlayerPing" syntax="GetPlayerPing(playerid)">
			<attribute name="native"/>
			<referrer name="ac_AntiCheatKickWithDesync"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="KickEx"/>
			<referrer name="SecondTimer"/>
			<param name="playerid">
				The ID of the player to get the ping of
			</param>
			<library>a_players</library>  <summary>Get the ping of a player.  The ping measures the amount of time it takes for the server  to 'ping' the client and for the client to send the message back.</summary>    <seealso name="GetPlayerIp" />  <seealso name="GetPlayerName" />  <seealso name="GetPlayerVersion" />  <remarks>Player's ping may be <b><c>65535</c></b> for a while after a player connects</remarks>  <returns>The current ping of the player (expressed in milliseconds).</returns> 
		</member>
		<member name="M:GetPlayerPos" syntax="GetPlayerPos(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="CA_IsPlayerOnSurface"/>
			<referrer name="CA_IsPlayerInWater"/>
			<referrer name="CA_IsPlayerNearWater"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="SpawnPlayerInPlace"/>
			<referrer name="ProcessDamage"/>
			<referrer name="SaveSyncData"/>
			<referrer name="MakePlayerFacePlayer"/>
			<referrer name="IsPlayerBehindPlayer"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="SendLocalMessage"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerUpdate@0G"/>
			<referrer name="CheckPlayerAFK"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="UpdateSM"/>
			<referrer name="UpdateWP"/>
			<referrer name="UpdateSK"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="pc_cmd_evzone"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="getPosition"/>
			<referrer name="IsPlayerInArea"/>
			<referrer name="SecondTimer"/>
			<param name="playerid">
				The ID of the player to get the position of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the x coordinate in, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the y coordinate in, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the z coordinate in, passed by reference
			</param>
			<library>a_players</library>  <summary>Get the position of a player, represented by x, y and z coordinates.</summary>          <seealso name="SetPlayerPos" />  <seealso name="GetVehiclePos" />  <seealso name="IsPlayerInRangeOfPoint" />  <seealso name="GetPlayerDistanceFromPoint" />  <remarks>This function is known to return unreliable values when used in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  and <a href="#OnPlayerRequestClass">OnPlayerRequestClass</a>.  This is because the player is not  spawned.</remarks>  <returns><b><c>true</c></b> on success, <b><c>false</c></b> on failure (i.e.  player not connected).</returns> 
		</member>
		<member name="M:GetPlayerProgressBarColour" syntax="GetPlayerProgressBarColour(playerid, barid)">
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_colour"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerProgressBarDirection" syntax="GetPlayerProgressBarDirection(playerid, barid)">
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_direction"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerProgressBarHeight" syntax="GetPlayerProgressBarHeight(playerid, barid)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_height"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerProgressBarMaxValue" syntax="GetPlayerProgressBarMaxValue(playerid, barid)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_maxValue"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerProgressBarPos" syntax="GetPlayerProgressBarPos(playerid, barid, &amp;x, &amp;y)">
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_posX"/>
			<dependency name="pbar_posY"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerProgressBarValue" syntax="GetPlayerProgressBarValue(playerid, barid)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_progressValue"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerProgressBarWidth" syntax="GetPlayerProgressBarWidth(playerid, barid)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_width"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerProvince" syntax="GetPlayerProvince(playerid, geolite_dest[], geolite_len)">
			<stacksize value="22"/>
			<dependency name="GetIpProvince"/>
			<dependency name="GetPlayerIp"/>
			<param name="playerid">
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetPlayerRPName" syntax="GetPlayerRPName(playerid, name[], len)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="ReturnPlayerRPName"/>
			<dependency name="GetPlayerName"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="playerid">
				Player whose name you want to get.
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<summary>  GetPlayerRPName  </summary>    <remarks>  Get a player's name, with <c>_</c> replaced by <c> </c>.  </remarks> 
		</member>
		<member name="M:GetPlayerSkin" syntax="GetPlayerSkin(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="SpawnPlayerInPlace"/>
			<referrer name="SaveSyncData"/>
			<referrer name="SavePlayerPosition"/>
			<param name="playerid">
				The player you want to get the skin from
			</param>
			<library>a_players</library>  <summary>Returns the class of the players skin.</summary>    <seealso name="SetPlayerSkin" />  <remarks>Returns the new skin after <a href="#SetSpawnInfo">SetSpawnInfo</a> is called but before  the player actually respawns to get the new skin. </remarks>  <remarks>Returns the old skin if the player was spawned through <a href="#SpawnPlayer">SpawnPlayer</a>  function. </remarks>  <returns>The skin ID (<b><c>0</c></b> if invalid).</returns> 
		</member>
		<member name="M:GetPlayerSpecialAction" syntax="GetPlayerSpecialAction(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="T3_OnPlayerKeyStateChange"/>
			<referrer name="InflictDamage"/>
			<referrer name="PlayerDeath"/>
			<param name="playerid">
				The ID of the player to get the <a href="http://wiki.sa-mp.com/wiki/SpecialActions">special  action</a> of
			</param>
			<library>a_players</library>  <summary>Retrieves a player's current <a href="http://wiki.sa-mp.com/wiki/SpecialActions">special  action</a>.</summary>    <seealso name="SetPlayerSpecialAction" />  <seealso name="GetPlayerState" />  <remarks>  <b>Special actions: (marked with * cannot be set)</b><br />  <ul>  <li><b><c>0 - SPECIAL_ACTION_NONE</c></b></li>  <li><b><c>2 - SPECIAL_ACTION_USEJETPACK</c></b></li>  <li><b><c>5 - SPECIAL_ACTION_DANCE1</c></b></li>  <li><b><c>6 - SPECIAL_ACTION_DANCE2</c></b></li>  <li><b><c>7 - SPECIAL_ACTION_DANCE3</c></b></li>  <li><b><c>8 - SPECIAL_ACTION_DANCE4</c></b></li>  <li><b><c>10 - SPECIAL_ACTION_HANDSUP</c></b></li>  <li><b><c>11 - SPECIAL_ACTION_USECELLPHONE</c></b></li>  <li><b><c>12 - SPECIAL_ACTION_SITTING *</c></b></li>  <li><b><c>13 - SPECIAL_ACTION_STOPUSECELLPHONE</c></b></li>  </ul>  <b>added in SA-MP 0.3:</b><br />  <ul>  <li><b><c>1 - SPECIAL_ACTION_DUCK *</c></b> - Detect if the player is crouching.</li>  <li><b><c>3 - SPECIAL_ACTION_ENTER_VEHICLE *</c></b> - Detect if the player is entering a vehicle  via an animation.</li>  <li><b><c>4 - SPECIAL_ACTION_EXIT_VEHICLE *</c></b> - Detect if the player is exiting a vehicle  via an animation.</li>  <li><b><c>20 - SPECIAL_ACTION_DRINK_BEER</c></b> - Will increase the player's drunk level when  used</li>  <li><b><c>21 - SPECIAL_ACTION_SMOKE_CIGGY</c></b> - Will give the player a cigar</li>  <li><b><c>22 - SPECIAL_ACTION_DRINK_WINE</c></b> - Will give the player a wine bottle to get  drunk from</li>  <li><b><c>23 - SPECIAL_ACTION_DRINK_SPRUNK</c></b> - Will give the player a sprunk bottle to  drink from</li>  <li><b><c>68 - SPECIAL_ACTION_PISSING</c></b> - Will make make the player perform the pissing  animation with visible pee.</li>  </ul>  <b>added in SA-MP 0.3e:</b><br />  <ul>  <li><b><c>24 - SPECIAL_ACTION_CUFFED</c></b> - Will force the player in to cuffs (hands are behind  their back) (<b>does not work on CJ skin</b>)</li>  </ul>  <b>added in SA-MP 0.3x:</b><br />  <ul>  <li><b><c>25 - SPECIAL_ACTION_CARRY</c></b>         - Will apply a 'carrying' animation to the  player and make them unable to sprint, jump or punch (<b>does not work on CJ skin</b>)</li>  </ul>  </remarks>  <returns>The <a href="http://wiki.sa-mp.com/wiki/SpecialActions">special action</a> of the player.</returns> 
		</member>
		<member name="M:GetPlayerState" syntax="GetPlayerState(playerid)">
			<attribute name="native"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<referrer name="ac_AntiCheatKickWithDesync"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<referrer name="WC_IsPlayerSpawned"/>
			<referrer name="WC_GetPlayerState"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateSyncData"/>
			<referrer name="ProcessDamage"/>
			<referrer name="WC_VendingMachineUsed"/>
			<param name="playerid">
				The ID of the player to get the current state of
			</param>
			<library>a_players</library>  <summary>Get a player's current state.</summary>    <seealso name="GetPlayerSpecialAction" />  <seealso name="SetPlayerSpecialAction" />  <seealso name="OnPlayerStateChange" />  <remarks>  <b>States:</b><br />  <ul>  <li><b><c>PLAYER_STATE_NONE</c></b> - empty (while initializing)</li>  <li><b><c>PLAYER_STATE_ONFOOT</c></b> - player is on foot</li>  <li><b><c>PLAYER_STATE_DRIVER</c></b> - player is the driver of a vehicle</li>  <li><b><c>PLAYER_STATE_PASSENGER</c></b> - player is passenger of a vehicle</li>  <li><b><c>PLAYER_STATE_WASTED</c></b> - player is dead or on class selection</li>  <li><b><c>PLAYER_STATE_SPAWNED</c></b> - player is spawned</li>  <li><b><c>PLAYER_STATE_SPECTATING</c></b> - player is spectating</li>  <li><b><c>PLAYER_STATE_EXIT_VEHICLE</c></b> - player exits a vehicle</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_DRIVER</c></b> - player enters a vehicle as driver</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_PASSENGER</c></b> - player enters a vehicle as passenger  </li>  </ul>  </remarks>  <returns>The player's current state as an integer.</returns> 
		</member>
		<member name="M:GetPlayerSurfingObjectID" syntax="GetPlayerSurfingObjectID(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<param name="playerid">
				The ID of the player surfing the object
			</param>
			<library>a_players</library>  <summary>Returns the ID of the object the player is surfing on.</summary>    <remarks>This function was added in <b>SA-MP 0.3c R3</b> and will not work in earlier versions!</remarks>  <returns>The ID of the <b>moving</b> object the player is surfing.  If the player isn't surfing a  <b>moving</b> object, it will return <b><c>INVALID_OBJECT_ID</c></b>.</returns> 
		</member>
		<member name="M:GetPlayerSurfingVehicleID" syntax="GetPlayerSurfingVehicleID(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<param name="playerid">
				The ID of the player you want to know the surfing vehicle ID of
			</param>
			<library>a_players</library>  <summary>Get the ID of the vehicle that the player is surfing (stuck to the roof of).</summary>    <seealso name="GetPlayerVehicleid" />  <seealso name="GetPlayerVehicleSeat" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <returns>The ID of the vehicle that the player is surfing.  If they are not surfing a vehicle or  the vehicle they are surfing has no driver, <b><c>INVALID_VEHICLE_ID</c></b>.  If the player specified  is not connected, <b><c>INVALID_VEHICLE_ID</c></b> also.</returns> 
		</member>
		<member name="M:GetPlayerTeam" syntax="GetPlayerTeam(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ScriptInit"/>
			<referrer name="SaveSyncData"/>
			<param name="playerid">
				The ID of the player to get the team of
			</param>
			<library>a_players</library>  <summary>Get the ID of the team the player is on.</summary>    <seealso name="SetPlayerTeam" />  <seealso name="SetTeamCount" />  <returns>  <b><c>0-254</c></b>: The player's team. (<b><c>0</c></b> is a valid team).<br />  <b><c>255</c></b>: Defined as <b><c>NO_TEAM</c></b>.  The player is not on any team.<br />  <b><c>-1</c></b>: The function failed to execute.  Player is not connected.  </returns> 
		</member>
		<member name="M:GetPlayerUTC" syntax="GetPlayerUTC(playerid, geolite_dest[], geolite_len)">
			<stacksize value="22"/>
			<dependency name="GetIpUTC"/>
			<dependency name="GetPlayerIp"/>
			<param name="playerid">
			</param>
			<param name="geolite_dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="geolite_len">
			</param>
		</member>
		<member name="M:GetPlayerVehicleID" syntax="GetPlayerVehicleID(playerid)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<referrer name="ac_AntiCheatKickWithDesync"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="InflictDamage"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerUpdate@0J"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_tune"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="setPosition"/>
			<referrer name="getPosition"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<param name="playerid">
				The ID of the player in the vehicle that you want to get the ID of
			</param>
			<library>a_players</library>  <summary>This function gets the ID of the vehicle the player is currently in.  Note: <b>NOT</b> the  model ID of the vehicle.  See <a href="#GetVehicleModel">GetVehicleModel</a> for that.</summary>    <seealso name="IsPlayerInVehicle" />  <seealso name="IsPlayerInAnyVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <seealso name="GetVehicleModel" />  <returns>ID of the vehicle or <b><c>0</c></b> if not in a vehicle.</returns> 
		</member>
		<member name="M:GetPlayerVehicleSeat" syntax="GetPlayerVehicleSeat(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="InflictDamage"/>
			<referrer name="pr_ip_211"/>
			<param name="playerid">
				The ID of the player you want to get the seat of
			</param>
			<library>a_players</library>  <summary>Find out which seat a player is in.</summary>    <seealso name="GetPlayerVehicleid" />  <seealso name="PutPlayerInVehicle" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>Sometimes the result can be <b><c>128</c></b> which is an invalid seat ID.  Circumstances  of this are not yet known, but it is best to discard information when returned seat number is <b><c>128</c></b>.</remarks>  <returns>The ID of the seat the player is in. <b><c>-1</c></b> is not in vehicle, <b><c>0</c></b>  is the driver, <b><c>1</c></b> is the front passenger, and <b><c>2</c></b> &amp; <b><c>3</c></b>  are the rear passengers.</returns> 
		</member>
		<member name="M:GetPlayerVelocity" syntax="GetPlayerVelocity(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="PlayerDeath"/>
			<param name="playerid">
				The player to get the speed from
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the x axis, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the y axis, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the z axis, passed by reference
			</param>
			<library>a_players</library>  <summary>Get the velocity (speed) of a player on the x, y and z axes.</summary>          <seealso name="SetPlayerVelocity" />  <seealso name="SetVehicleVelocity" />  <seealso name="GetVehicleVelocity" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks> 
		</member>
		<member name="M:GetPlayerVersion" syntax="GetPlayerVersion(playerid, version[], len)">
			<attribute name="native"/>
			<referrer name="ac_GetPlayerVersion"/>
			<param name="playerid">
				The ID of the player to get the client version of
			</param>
			<param name="version">
				<paraminfo> [] </paraminfo>
				The string to store the player's version in, passed by reference
			</param>
			<param name="len">
				The maximum length of the version
			</param>
			<library>a_samp</library>  <summary>Returns the SA-MP client version, as reported by the player.</summary>        <seealso name="GetPlayerName" />  <seealso name="GetPlayerPing" />  <seealso name="GetPlayerIp" />  <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>The string the version gets stored in will be empty if playerid is an NPC.</remarks>  <returns><b><c>1</c></b> on success and <b><c>0</c></b> on failure (if player specified doesn't exist).</returns> 
		</member>
		<member name="M:GetPlayerVirtualWorld" syntax="GetPlayerVirtualWorld(playerid)">
			<attribute name="native"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<referrer name="WC_GetPlayerVirtualWorld"/>
			<referrer name="ScriptInit"/>
			<referrer name="UpdatePlayerVirtualWorld"/>
			<param name="playerid">
				The ID of the player to get the virtual world of
			</param>
			<library>a_players</library>  <summary>Retrieves the current virtual world the player is in.</summary>    <seealso name="SetPlayerVirtualWorld" />  <seealso name="GetVehicleVirtualWorld" />  <seealso name="GetPlayerInterior" />  <returns>The ID of the virtual world the player is currently in.</returns> 
		</member>
		<member name="M:GetPlayerWeapon" syntax="GetPlayerWeapon(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="T3_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="SaveSyncData"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<param name="playerid">
				The ID of the player to get the currently held weapon of
			</param>
			<library>a_players</library>  <summary>Returns the ID of the weapon a player is currently holding.</summary>    <seealso name="GetPlayerWeaponData" />  <seealso name="GivePlayerWeapon" />  <seealso name="ResetPlayerWeapons" />  <remarks>Prior to version <b>0.3z R1-2</b>, when the player state is <b>PLAYER_STATE_PASSENGER</b>  this function returns the weapon held by the player before they entered the vehicle.  If a cheat  is used to spawn a weapon inside a vehicle, this function will not report it.</remarks>  <returns>The ID of the player's current weapon.  Returns <b><c>-1</c></b> if the player specified  does not exist.</returns> 
		</member>
		<member name="M:GetPlayerWeaponData" syntax="GetPlayerWeaponData(playerid, slot, &amp;weapons, &amp;ammo)">
			<attribute name="native"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="SaveSyncData"/>
			<referrer name="SaveWeaponData"/>
			<param name="playerid">
				The ID of the player whose weapon data to retrieve
			</param>
			<param name="slot">
				The weapon slot to get data for (<b><c>0-12</c></b>)
			</param>
			<param name="weapons">
				<paraminfo> &amp; </paraminfo>
				A variable in which to store the weapon ID, passed by reference
			</param>
			<param name="ammo">
				<paraminfo> &amp; </paraminfo>
				A variable in which to store the ammo, passed by reference
			</param>
			<library>a_players</library>  <summary>Get the weapon and ammo in a specific player's weapon slot (e.g.  the weapon in the 'SMG'  slot).</summary>          <seealso name="GetPlayerWeapon" />  <seealso name="GivePlayerWeapon" />  <remarks>Old weapons with no ammo left are still returned.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player isn't connected and/or the weapon  slot specified is invalid (valid is <b><c>0-12</c></b>).  </returns> 
		</member>
		<member name="M:GetPlayerWeaponState" syntax="GetPlayerWeaponState(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerWeaponShot"/>
			<param name="playerid">
				The ID of the player to obtain the weapon state of
			</param>
			<library>a_players</library>  <summary>Check the state of a player's weapon.</summary>    <seealso name="GivePlayerWeapon" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>  <b>Weapon states:</b><br />  <ul>  <li><b><c>WEAPONSTATE_UNKNOWN</c></b> - unknown (Set when in a vehicle)</li>  <li><b><c>WEAPONSTATE_NO_BULLETS</c></b> - The weapon has no remaining ammo</li>  <li><b><c>WEAPONSTATE_LAST_BULLET</c></b> - the weapon has one remaining bullet</li>  <li><b><c>WEAPONSTATE_MORE_BULLETS</c></b> - the weapon has multiple bullets</li>  <li><b><c>WEAPONSTATE_RELOADING</c></b> - the player is reloading their weapon </li>  </ul>  </remarks>  <returns>The state of the player's weapon. <b><c>0</c></b> if player specified does not exist.</returns> 
		</member>
		<member name="M:GetPointInFront2D" syntax="GetPointInFront2D(x, y, rz, radius, &amp;tx, &amp;ty)">
			<stacksize value="4"/>
			<referrer name="GetGroundRotation"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPointInFront3D" syntax="GetPointInFront3D(x, y, z, rx, rz, radius, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="4"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPointsDistanceToPoint" syntax="GetPointsDistanceToPoint(x, y, _x, _y)">
			<tagname value="Float"/>
			<stacksize value="3"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="floatsqroot"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="_y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetPrivCarSlot" syntax="GetPrivCarSlot(playerid, privcarid)">
			<stacksize value="3"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="OnDialogGieldaBuy"/>
			<dependency name="pVehHave"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:GetPubVarAddressFromIndex" syntax="GetPubVarAddressFromIndex(index)">
			<stacksize value="7"/>
			<referrer name="GetPubVarAddressFromName"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetPubVarInfo"/>
			<param name="index">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPubVarAddressFromName" syntax="GetPubVarAddressFromName(name[])">
			<stacksize value="4"/>
			<dependency name="GetPubVarAddressFromIndex"/>
			<dependency name="GetPubVarIndexFromName"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPubVarIndexFromAddress" syntax="GetPubVarIndexFromAddress(address)">
			<stacksize value="5"/>
			<referrer name="GetPubVarNameFromAddress"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="GetNumPubVars"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="address">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPubVarIndexFromName" syntax="GetPubVarIndexFromName(name[])">
			<stacksize value="10"/>
			<referrer name="GetPubVarAddressFromName"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="GetNumPubVars"/>
			<dependency name="NtCompare"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPubVarInfo" syntax="GetPubVarInfo(index, info[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="GetPubVarAddressFromIndex"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="GetNumPubVars"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="false"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="info">
				<paraminfo> [2] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPubVarNameFromAddress" syntax="GetPubVarNameFromAddress(address, name[], size)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="GetPubVarIndexFromAddress"/>
			<dependency name="GetPubVarNameFromIndex"/>
			<param name="address">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPubVarNameFromIndex" syntax="GetPubVarNameFromIndex(index, name[], size)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="GetPubVarNameFromAddress"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="GetPubVarInfo"/>
			<dependency name="NtCopy"/>
			<dependency name="false"/>
			<param name="index">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPublicAddressFromIndex" syntax="GetPublicAddressFromIndex(index)">
			<stacksize value="7"/>
			<referrer name="GetPublicAddressFromName"/>
			<referrer name="Indirect_Call"/>
			<referrer name="Indirect_Callstring"/>
			<referrer name="Indirect_Callvoid"/>
			<referrer name="Indirect_Array"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetPublicInfo"/>
			<param name="index">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPublicAddressFromName" syntax="GetPublicAddressFromName(name[])">
			<stacksize value="4"/>
			<referrer name="AsmSetErrorHandlerName"/>
			<referrer name="Hooks_RepairJITInit"/>
			<dependency name="GetPublicAddressFromIndex"/>
			<dependency name="GetPublicIndexFromName"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPublicIndexFromAddress" syntax="GetPublicIndexFromAddress(address)">
			<stacksize value="5"/>
			<referrer name="GetPublicNameFromAddress"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanGetFuncName"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetNumPublics"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="address">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPublicIndexFromName" syntax="GetPublicIndexFromName(name[])">
			<stacksize value="12"/>
			<referrer name="GetPublicAddressFromName"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetNumPublics"/>
			<dependency name="NtCompare"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPublicInfo" syntax="GetPublicInfo(index, info[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="GetPublicAddressFromIndex"/>
			<referrer name="GetPublicNameFromIndex"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetNumPublics"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="false"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="info">
				<paraminfo> [2] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPublicNameFromAddress" syntax="GetPublicNameFromAddress(address, name[], size)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="GetPublicIndexFromAddress"/>
			<dependency name="GetPublicNameFromIndex"/>
			<param name="address">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetPublicNameFromIndex" syntax="GetPublicNameFromIndex(index, name[], size)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="GetPublicNameFromAddress"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanGetFuncName"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="GetPublicInfo"/>
			<dependency name="NtCopy"/>
			<dependency name="false"/>
			<param name="index">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetQuestName" syntax="GetQuestName(playerid)">
			<stacksize value="134"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="GetQuestName"/>
			<dependency name="daily_name"/>
			<dependency name="format"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyQuest"/>
			<dependency name="questListData"/>
			<dependency name="questListData"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetQuitReason" syntax="GetQuitReason(reason)">
			<stacksize value="16"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="GetQuitReason"/>
			<param name="reason">
			</param>
		</member>
		<member name="M:GetRandomCoord" syntax="GetRandomCoord(&amp;x, &amp;y, &amp;z)">
			<stacksize value="8"/>
			<referrer name="Init_Mining"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CA_FindZ_For2DCoord"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetRawAmxHeader" syntax="GetRawAmxHeader(plain_amxhdr[])">
			<stacksize value="3"/>
			<referrer name="GetAmxHeaderNow"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="plain_amxhdr">
				<paraminfo> [14] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetRecords" syntax="GetRecords()">
			<stacksize value="137"/>
			<referrer name="checkRecord"/>
			<referrer name="MinuteTimer"/>
			<dependency name="GetRecords"/>
			<dependency name="format"/>
			<dependency name="recordAmount"/>
		</member>
		<member name="M:GetRejectedHit" syntax="GetRejectedHit(playerid, idx, output[], maxlength)">
			<stacksize value="52"/>
			<dependency name="WC_GetWeaponName"/>
			<dependency name="e_Hour"/>
			<dependency name="e_Info1"/>
			<dependency name="e_Info2"/>
			<dependency name="e_Info3"/>
			<dependency name="e_Minute"/>
			<dependency name="e_Name"/>
			<dependency name="e_Reason"/>
			<dependency name="e_Second"/>
			<dependency name="e_Time"/>
			<dependency name="e_Weapon"/>
			<dependency name="format"/>
			<dependency name="g_HitRejectReasons"/>
			<dependency name="g_HitRejectReasons"/>
			<dependency name="s_RejectedHits"/>
			<dependency name="s_RejectedHits"/>
			<dependency name="s_RejectedHitsIdx"/>
			<param name="playerid">
			</param>
			<param name="idx">
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:GetRemoteFunction" syntax="GetRemoteFunction(func[], spec[])">
			<tagname value="F@_@"/>
			<stacksize value="8"/>
			<referrer name="Callback_Find_"/>
			<dependency name="Callback_Claim_"/>
			<dependency name="Callback_Release_"/>
			<dependency name="Callback_RemoteHandler_"/>
			<dependency name="E_PUBLIC_CALL"/>
			<dependency name="E_PUBLIC_CALL_CLAIM"/>
			<dependency name="E_PUBLIC_CALL_FLAGS"/>
			<dependency name="E_PUBLIC_CALL_FUNCTION"/>
			<dependency name="E_PUBLIC_CALL_HANDLER"/>
			<dependency name="E_PUBLIC_CALL_METADATA"/>
			<dependency name="E_PUBLIC_CALL_NULL"/>
			<dependency name="E_PUBLIC_CALL_RELEASE"/>
			<dependency name="E_PUBLIC_CALL_SPECIFIER"/>
			<dependency name="E_PUBLIC_CALL_TIMER"/>
			<dependency name="Indirect_Ptr_"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="Malloc_Resolve"/>
			<dependency name="Malloc_SetS"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFakeE_INLINE_CALL"/>
			<dependency name="e_INLINE_FLAG_PUBLIC"/>
			<dependency name="false"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
				Public function to get.
			</param>
			<param name="spec">
				<paraminfo> [] </paraminfo>
				The structure of the function's parameters.
			</param>
			    <returns>  A pointer to the function.  </returns>  <remarks>  Accepts the following parameter specifiers:  i - Integer (also x/c/d/h)  f - Float (also g)  s - String  ai - Array (followed by length)  v - Reference (&amp;var, any tag)  </remarks> 
		</member>
		<member name="M:GetRespawnTime" syntax="GetRespawnTime()">
			<stacksize value="1"/>
			<dependency name="s_RespawnTime"/>
		</member>
		<member name="M:GetRotationFor2Point3D" syntax="GetRotationFor2Point3D(x, y, z, tx, ty, tz, &amp;rx, &amp;rz)">
			<stacksize value="10"/>
			<referrer name="GetGroundRotation"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CompressRotation"/>
			<dependency name="GetDistance3D"/>
			<dependency name="acos"/>
			<dependency name="atan2"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetRotationQuaternion" syntax="GetRotationQuaternion(x, y, z, &amp;qw, &amp;qx, &amp;qy, &amp;qz)">
			<stacksize value="10"/>
			<referrer name="SetFakeFacingAngle"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qw">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetRouletteColor" syntax="GetRouletteColor(typeid)">
			<stacksize value="21"/>
			<referrer name="Roulette_Timer"/>
			<dependency name="GetRouletteColor"/>
			<param name="typeid">
			</param>
		</member>
		<member name="M:GetSVarInt" syntax="GetSVarInt(svar[])">
			<attribute name="native"/>
			<referrer name="Logger_Dbg"/>
			<param name="svar">
				<paraminfo> [] </paraminfo>
				The name of the server variable (case-insensitive).  Assigned in SetSVarInt
			</param>
			<library>a_samp</library>  <summary>Gets an integer server variable's value.</summary>    <seealso name="SetSVarInt" />  <seealso name="SetSVarString" />  <seealso name="GetSVarString" />  <seealso name="SetSVarFloat" />  <seealso name="GetSVarFloat" />  <seealso name="DeleteSVar" />  <remarks>This function was added in <b>SA-MP 0.3.7 R2</b> and will not work in earlier versions!</remarks>  <returns>The integer value of the specified server variable.  It will still return <b><c>0</c></b>  if the variable is not set.</returns> 
		</member>
		<member name="M:GetStatusZP" syntax="GetStatusZP(type)">
			<stacksize value="4"/>
			<dependency name="GAME_ZP"/>
			<dependency name="Iterator@Game"/>
			<dependency name="StatusZP"/>
			<param name="type">
			</param>
		</member>
		<member name="M:GetTagIDFromIndex" syntax="GetTagIDFromIndex(index)">
			<stacksize value="7"/>
			<referrer name="GetTagIDFromName"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetTagInfo"/>
			<param name="index">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetTagIDFromName" syntax="GetTagIDFromName(name[])">
			<stacksize value="4"/>
			<referrer name="Inline_StoreData"/>
			<referrer name="Callback_Get"/>
			<dependency name="GetTagIDFromIndex"/>
			<dependency name="GetTagIndexFromName"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetTagIndexFromID" syntax="GetTagIndexFromID(id)">
			<stacksize value="5"/>
			<referrer name="GetTagNameFromID"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="GetNumTags"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="id">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetTagIndexFromName" syntax="GetTagIndexFromName(name[])">
			<stacksize value="10"/>
			<referrer name="GetTagIDFromName"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="GetNumTags"/>
			<dependency name="NtCompare"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetTagInfo" syntax="GetTagInfo(index, info[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="GetTagIDFromIndex"/>
			<referrer name="GetTagNameFromIndex"/>
			<referrer name="IsTagIndexStrong"/>
			<referrer name="IsTagIndexWeak"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="GetNumTags"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="false"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="info">
				<paraminfo> [2] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetTagNameFromID" syntax="GetTagNameFromID(id, name[], size)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="Indirect_Call"/>
			<referrer name="Indirect_Callstring"/>
			<referrer name="Indirect_Callvoid"/>
			<referrer name="Indirect_Array"/>
			<referrer name="Indirect_Tag"/>
			<referrer name="Callback_Find_"/>
			<dependency name="GetTagIndexFromID"/>
			<dependency name="GetTagNameFromIndex"/>
			<dependency name="true"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetTagNameFromIndex" syntax="GetTagNameFromIndex(index, name[], size)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="GetTagNameFromID"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="GetTagInfo"/>
			<dependency name="NtCopy"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:GetTeleportType" syntax="GetTeleportType(typeid)">
			<stacksize value="21"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="ShowTeleportManage"/>
			<dependency name="GetTeleportType"/>
			<param name="typeid">
			</param>
		</member>
		<member name="M:GetTickCount" syntax="GetTickCount()">
			<attribute name="native"/>
			<referrer name="T3_Init"/>
			<referrer name="@y_inlineTimerCount"/>
			<referrer name="@y_inlineTimerStart"/>
			<referrer name="Timer_CreateCallback"/>
			<referrer name="ac_Streamer_UpdateEx"/>
			<referrer name="ac_DestroyVehicle"/>
			<referrer name="ac_TogglePlayerSpectating"/>
			<referrer name="ac_SpawnPlayer"/>
			<referrer name="ac_SetPlayerHealth"/>
			<referrer name="ac_SetPlayerArmour"/>
			<referrer name="ac_GivePlayerWeapon"/>
			<referrer name="ac_SetPlayerAmmo"/>
			<referrer name="ac_ResetPlayerWeapons"/>
			<referrer name="ac_SetPlayerSpecialAction"/>
			<referrer name="ac_SetPlayerInterior"/>
			<referrer name="ac_SetPlayerPos"/>
			<referrer name="ac_SetPlayerPosFindZ"/>
			<referrer name="ac_SetPlayerVelocity"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<referrer name="ac_RemovePlayerFromVehicle"/>
			<referrer name="ac_SetVehiclePos"/>
			<referrer name="ac_SetVehicleVelocity"/>
			<referrer name="ac_SetVehicleAngularVelocity"/>
			<referrer name="ac_SetVehicleHealth"/>
			<referrer name="ac_RepairVehicle"/>
			<referrer name="ac_SetVehicleToRespawn"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnVehicleSirenStateChange"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="ac_Timer"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
			<referrer name="WC_ClearAnimations"/>
			<referrer name="WC_TogglePlayerControllable"/>
			<referrer name="WC_SetPlayerPos"/>
			<referrer name="WC_SetPlayerPosFindZ"/>
			<referrer name="WC_SetPlayerVelocity"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerExitVehicle"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ScriptInit"/>
			<referrer name="WC_IsPlayerPaused"/>
			<referrer name="WasPlayerInVehicle"/>
			<referrer name="PlayerDeath"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedAddHit"/>
			<referrer name="OnPlayerDamageDone"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="CheckDuel"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<library>a_samp</library>  <summary>Returns the uptime of the actual server (not the SA-MP server) in milliseconds.</summary>  <seealso name="tickcount" />  <remarks>GetTickCount will cause problems on servers with uptime of over 24 days as GetTickCount  will eventually warp past the integer size constraints.  However using  <a href="https://gist.github.com/ziggi/5d7d8dc42f54531feba7ae924c608e73">this</a>  function fixes the problem.</remarks>  <remarks>One common use for GetTickCount is for benchmarking.  It can be used to calculate how much  time some code takes to execute.</remarks>  <returns>Uptime of the actual server (not the SA-MP server).</returns> 
		</member>
		<member name="M:GetVehSpeed" syntax="GetVehSpeed(vehicleid)">
			<tagname value="Float"/>
			<stacksize value="9"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="gSpeed"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetVehicleColor" syntax="GetVehicleColor(vehicleid, &amp;color1, &amp;color2)">
			<attribute name="native"/>
			<referrer name="SavePrivCar"/>
			<param name="vehicleid">
			</param>
			<param name="color1">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="color2">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetVehicleComponentInSlot" syntax="GetVehicleComponentInSlot(vehicleid, slot)">
			<attribute name="native"/>
			<referrer name="SavePrivCar"/>
			<param name="vehicleid">
				The ID of the vehicle to check for the component
			</param>
			<param name="slot">
				The component slot to check for components (see below)
			</param>
			<library>a_vehicles</library>  <summary>Retrieves the installed component ID (modshop mod(ification)) on a vehicle in a specific  slot.</summary>      <seealso name="AddVehicleComponent" />  <seealso name="GetVehicleComponentType" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>  <b>Slots:</b><br />  <c>  CARMODTYPE_SPOILER  CARMODTYPE_HOOD  CARMODTYPE_ROOF  CARMODTYPE_SIDESKIRT  CARMODTYPE_LAMPS  CARMODTYPE_NITRO  CARMODTYPE_EXHAUST  CARMODTYPE_WHEELS  CARMODTYPE_STEREO  CARMODTYPE_HYDRAULICS  CARMODTYPE_FRONT_BUMPER  CARMODTYPE_REAR_BUMPER  CARMODTYPE_VENT_RIGHT  CARMODTYPE_VENT_LEFT  </c>  </remarks>  <remarks>  <b>Known Bugs:</b><br />  <ul>  <li>Doesn't work for <b><c>CARMODTYPE_STEREO</c></b>.</li>  <li>Both front bull bars and front bumper components are saved in the <b><c>CARMODTYPE_FRONT_BUMPER</c></b>  slot.  If a vehicle has both of them installed, this function will only return the one which was  installed last.</li>  <li>Both rear bull bars and rear bumper components are saved in the <b><c>CARMODTYPE_REAR_BUMPER</c></b>  slot.  If a vehicle has both of them installed, this function will only return the one which was  installed last.</li>  <li>Both left side skirt and right side skirt are saved in the <b><c>CARMODTYPE_SIDESKIRT</c></b>  slot.  If a vehicle has both of them installed, this function will only return the one which was  installed last. </li>  </ul>  </remarks>  <returns>The ID of the component installed in the specified slot.  Returns <b><c>0</c></b> if no  component in specified vehicle's specified slot, or if vehicle doesn't exist.</returns> 
		</member>
		<member name="M:GetVehicleDamageStatus" syntax="GetVehicleDamageStatus(vehicleid, &amp;panels, &amp;doors, &amp;lights, &amp;tires)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<param name="vehicleid">
				The ID of the vehicle to get the damage statuses of
			</param>
			<param name="panels">
				<paraminfo> &amp; </paraminfo>
				A variable to store the panel damage data in, passed by reference
			</param>
			<param name="doors">
				<paraminfo> &amp; </paraminfo>
				A variable to store the door damage data in, passed by reference
			</param>
			<param name="lights">
				<paraminfo> &amp; </paraminfo>
				A variable to store the light damage data in, passed by reference
			</param>
			<param name="tires">
				<paraminfo> &amp; </paraminfo>
				A variable to store the tire damage data in, passed by reference
			</param>
			<library>a_vehicles</library>  <summary>Retrieve the damage statuses of a vehicle.</summary>            <seealso name="UpdateVehicleDamageStatus" />  <seealso name="SetVehicleHealth" />  <seealso name="GetVehicleHealth" />  <seealso name="RepairVehicle" />  <seealso name="OnVehicleDamageStatusUpdate" />  <remarks>This Callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>  <b>Door states:</b><br />  <ul>  <li><b><c>0x000000FF</c></b> - hood</li>  <li><b><c>0x0000FF00</c></b> - trunk</li>  <li><b><c>0x00FF0000</c></b> - drivers door</li>  <li><b><c>0xFF000000</c></b> - co-drivers door</li>  <li>byte meaning:</li>  <li><b><c>0x1</c></b> - is opened</li>  <li><b><c>0x2</c></b> - is damaged</li>  <li><b><c>0x4</c></b> - is removed</li>  <li>other bytes are unused</li>  </ul>  </remarks>  <remarks>  <b>Light states:</b><br />  <ul>  <li><b><c>0x01</c></b> - front left broken</li>  <li><b><c>0x04</c></b> - front right broken</li>  <li><b><c>0x40</c></b> - back both broken</li>  </ul>  </remarks>  <remarks>  <b>Tire states:</b><br />  <ul>  <li><b><c>0x1</c></b> - back right popped</li>  <li><b><c>0x2</c></b> - front right popped</li>  <li><b><c>0x4</c></b> - back left popped</li>  <li><b><c>0x8</c></b> - front left popped</li>  <li>only check the right states for bikes</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:GetVehicleDistanceFromPoint" syntax="GetVehicleDistanceFromPoint(vehicleid, x, y, z)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<param name="vehicleid">
				The ID of the vehicle to calculate the distance for
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x map coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y map coordinate
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z map coordinate
			</param>
			<library>a_vehicles</library>  <summary>This function can be used to calculate the distance (as a float) between a vehicle and another  map coordinate.  This can be useful to detect how far a vehicle away is from a location.</summary>          <seealso name="GetPlayerDistanceFromPoint" />  <seealso name="GetVehiclePos" />  <remarks>This function was added in <b>SA-MP 0.3c R3</b> and will not work in earlier versions!</remarks>  <returns>A float containing the distance from the point specified in the coordinates.</returns> 
		</member>
		<member name="M:GetVehicleHealth" syntax="GetVehicleHealth(vehicleid, &amp;health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<param name="vehicleid">
				The ID of the vehicle to get the health of
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the vehicle's health, passed by reference
			</param>
			<library>a_vehicles</library>  <summary>Get the health of a vehicle.</summary>      <seealso name="SetVehicleHealth" />  <seealso name="GetPlayerHealth" />  <seealso name="GetPlayerArmour" />  <remarks>Full vehicle health is <b><c>1000</c></b>, however higher values are possible and increase  the health of the vehicle.</remarks>  <remarks>  <b>Health:</b><br />  <ul>  <li>&gt; 650 - undamaged</li>  <li>650-550 - white Smoke</li>  <li>550-390 - grey Smoke</li>  <li>390-250 - black Smoke</li>  <li>&lt; 250 - on fire (will explode seconds later)</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b> - success.<br />  <b><c>0</c></b> - failure (invalid vehicle ID).<br />  </returns> 
		</member>
		<member name="M:GetVehicleModel" syntax="GetVehicleModel(vehicleid)">
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<referrer name="acc_ChangeVehiclePaintjob"/>
			<referrer name="acc_SetVehicleToRespawn"/>
			<referrer name="AntiCheatGetVehicleDriver"/>
			<referrer name="AntiCheatGetVehicleInterior"/>
			<referrer name="AntiCheatGetVehiclePaintjob"/>
			<referrer name="AntiCheatGetVehicleSpeed"/>
			<referrer name="AntiCheatIsVehicleSpawned"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="SetVehicleFakePosForPlayer"/>
			<referrer name="SetVehicleFakeZAngleForPlayer"/>
			<referrer name="ac_Timer"/>
			<referrer name="AntiCheatGetVehicleHealth"/>
			<referrer name="AntiCheatGetVehiclePos"/>
			<referrer name="AntiCheatGetVehicleVelocity"/>
			<referrer name="AntiCheatGetVehicleZAngle"/>
			<referrer name="AntiCheatGetVehicleSpawnPos"/>
			<referrer name="AntiCheatGetVehicleSpawnZAngle"/>
			<referrer name="InflictDamage"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="TuneVehicle"/>
			<referrer name="IsModelBoat"/>
			<referrer name="IsCar"/>
			<referrer name="IsMotor"/>
			<referrer name="IsAir"/>
			<referrer name="IsBoat"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to get the model of
			</param>
			<library>a_vehicles</library>  <summary>Gets the <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">model ID</a> of a vehicle.</summary>    <seealso name="GetPlayerVehicleid" />  <seealso name="GetVehiclePos" />  <seealso name="GetVehicleZAngle" />  <seealso name="GetPlayerVehicleSeat" />  <returns>The vehicle's <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">model ID</a>, or <b><c>0</c></b>  if the vehicle doesn't exist.</returns> 
		</member>
		<member name="M:GetVehicleModelInfo" syntax="GetVehicleModelInfo(vehiclemodel, infotype, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerWeaponShot"/>
			<param name="vehiclemodel">
				The vehicle <a href="http://wiki.sa-mp.com/wiki/Vehicles:All">model</a>  to get info of
			</param>
			<param name="infotype">
				The type of information to retrieve
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float to store the x value
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float to store the y value
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float to store the z value
			</param>
			<library>a_vehicles</library>  <summary>Retrieve information about a specific vehicle model such as the size or position of seats.</summary>            <seealso name="GetVehicleModel" />  <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>  <b>Information types:</b><br />  <ul>  <li><b><c>VEHICLE_MODEL_INFO_SIZE</c></b> - vehicle size</li>  <li><b><c>VEHICLE_MODEL_INFO_FRONTSEAT</c></b> - position of the front seat</li>  <li><b><c>VEHICLE_MODEL_INFO_REARSEAT</c></b> - position of the rear seat</li>  <li><b><c>VEHICLE_MODEL_INFO_PETROLCAP</c></b> - position of the fuel cap</li>  <li><b><c>VEHICLE_MODEL_INFO_WHEELSFRONT</c></b> - position of the front wheels</li>  <li><b><c>VEHICLE_MODEL_INFO_WHEELSREAR</c></b> - position of the rear wheels</li>  <li><b><c>VEHICLE_MODEL_INFO_WHEELSMID</c></b> - position of the middle wheels (applies to vehicles  with 3 axes)</li>  <li><b><c>VEHICLE_MODEL_INFO_FRONT_BUMPER_Z</c></b> - height of the front bumper</li>  <li><b><c>VEHICLE_MODEL_INFO_REAR_BUMPER_Z </c></b> - height of the rear bumper</li>  </ul>  </remarks> 
		</member>
		<member name="M:GetVehicleNameByID" syntax="GetVehicleNameByID(modelid[])">
			<stacksize value="7"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="pc_cmd_v"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="modelid">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetVehicleParamsEx" syntax="GetVehicleParamsEx(vehicleid, &amp;engine, &amp;lights, &amp;alarm, &amp;doors, &amp;bonnet, &amp;boot, &amp;objective)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="SwitchVehicleEngine"/>
			<referrer name="SwitchVehicleDoors"/>
			<param name="vehicleid">
				The ID of the vehicle to get the parameters from
			</param>
			<param name="engine">
				<paraminfo> &amp; </paraminfo>
				Get the engine status.  If <b><c>1</c></b>, the engine is running.
			</param>
			<param name="lights">
				<paraminfo> &amp; </paraminfo>
				Get the vehicle's lights' state.  If <b><c>1</c></b> the lights are on
			</param>
			<param name="alarm">
				<paraminfo> &amp; </paraminfo>
				Get the vehicle's alarm state.  If <b><c>1</c></b> the alarm is (or was) sounding
			</param>
			<param name="doors">
				<paraminfo> &amp; </paraminfo>
				Get the lock status of the doors.  If <b><c>1</c></b> the doors are locked
			</param>
			<param name="bonnet">
				<paraminfo> &amp; </paraminfo>
				Get the bonnet/hood status.  If <b><c>1</c></b>, it's open
			</param>
			<param name="boot">
				<paraminfo> &amp; </paraminfo>
				Get the boot/trunk status. <b><c>1</c></b> means it is open
			</param>
			<param name="objective">
				<paraminfo> &amp; </paraminfo>
				Get the objective status. <b><c>1</c></b> means the objective is on
			</param>
			<library>a_vehicles</library>  <summary>Gets a vehicle's parameters.</summary>                  <seealso name="SetVehicleParamsEx" />  <remarks>This function was added in <b>SA-MP 0.3c</b> and will not work in earlier versions!</remarks>  <remarks>If a parameter is unset (SetVehicleParamsEx not used beforehand) the value will be <b><c>-1</c></b>  ('unset').</remarks> 
		</member>
		<member name="M:GetVehiclePos" syntax="GetVehiclePos(vehicleid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="CA_IsVehicleOnSurface"/>
			<referrer name="CA_IsVehicleInWater"/>
			<referrer name="CA_IsVehicleNearWater"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="getPosition"/>
			<referrer name="GetVehiclePosition"/>
			<param name="vehicleid">
				The ID of the vehicle to get the position of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the x coordinate, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the y coordinate, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the z coordinate, passed by reference
			</param>
			<library>a_vehicles</library>  <summary>Gets the position of a vehicle.</summary>          <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="SetVehiclePos" />  <seealso name="GetVehicleZAngle" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:GetVehiclePosition" syntax="GetVehiclePosition(vehicleid, &amp;x, &amp;y, &amp;z, &amp;a)">
			<stacksize value="6"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="ac_GetVehicleZAngle"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="a">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetVehicleTrailer" syntax="GetVehicleTrailer(vehicleid)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="RespawnVehicles"/>
			<param name="vehicleid">
				The ID of the vehicle to get the trailer of
			</param>
			<library>a_vehicles</library>  <summary>Get the ID of the trailer attached to a vehicle.</summary>    <seealso name="AttachTrailerToVehicle" />  <seealso name="DetachTrailerFromVehicle" />  <seealso name="IsTrailerAttachedToVehicle" />  <returns>The vehicle ID of the trailer or <b><c>0</c></b> if no trailer is attached.</returns> 
		</member>
		<member name="M:GetVehicleVelocity" syntax="GetVehicleVelocity(vehicleid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="InflictDamage"/>
			<referrer name="GetVehSpeed"/>
			<param name="vehicleid">
				The ID of the vehicle to get the velocity of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's x velocity, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's y velocity, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's z velocity, passed by reference
			</param>
			<library>a_vehicles</library>  <summary>Get the velocity of a vehicle on the x, y and z axes.</summary>          <seealso name="GetPlayerVelocity" />  <seealso name="SetVehicleVelocity" />  <seealso name="SetPlayerVelocity" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>Multiply vector with <b><c>250.66667</c></b> for kmph or <b><c>199.416667</c></b> for mph  or something...</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle specified does not exist.<br  />  </returns> 
		</member>
		<member name="M:GetVehicleVirtualWorld" syntax="GetVehicleVirtualWorld(vehicleid)">
			<attribute name="native"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle to get the virtual world of
			</param>
			<library>a_vehicles</library>  <summary>Get the virtual world of a vehicle.</summary>    <seealso name="SetVehicleVirtualWorld" />  <seealso name="GetPlayerVirtualWorld" />  <returns>The virtual world that the vehicle is in.</returns> 
		</member>
		<member name="M:GetVehicleZAngle" syntax="GetVehicleZAngle(vehicleid, &amp;angle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_GetVehicleZAngle"/>
			<param name="vehicleid">
				The ID of the vehicle to get the z angle of
			</param>
			<param name="angle">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the z rotation, passed by reference
			</param>
			<library>a_vehicles</library>  <summary>Get the rotation of a vehicle on the z axis (yaw).</summary>      <seealso name="GetVehicleRotationQuat" />  <seealso name="GetVehicleRotation" />  <seealso name="SetVehicleZAngle" />  <seealso name="GetVehiclePos" />  <seealso name="GetPlayerFacingAngle" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.  </returns> 
		</member>
		<member name="M:GetWarTeam" syntax="GetWarTeam(teamid)">
			<stacksize value="91"/>
			<referrer name="UpdateGameStatus"/>
			<dependency name="GetWarTeam"/>
			<param name="teamid">
			</param>
		</member>
		<member name="M:GetWeaponDamage" syntax="GetWeaponDamage(weaponid)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="s_WeaponDamage"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:GetWeaponMaxRange" syntax="GetWeaponMaxRange(weaponid)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="s_WeaponRange"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:GetWeaponModelById" syntax="GetWeaponModelById(modelid)">
			<stacksize value="1"/>
			<referrer name="CreateRoyaleWeapons"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:GetWeaponShootRate" syntax="GetWeaponShootRate(weaponid)">
			<stacksize value="1"/>
			<dependency name="s_MaxWeaponShootRate"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:GetYSIScriptfilesDir" syntax="GetYSIScriptfilesDir(dir)">
			<stacksize value="1"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ftemporary"/>
			<dependency name="GetYSIScriptfilesDir"/>
			<dependency name="YSI_gsDefaultDirs"/>
			<param name="dir">
				<paraminfo>E_YSI_DIR </paraminfo>
				The ID of the directory.
			</param>
			  <returns>  A directory.  </returns>  <remarks>  Get a YSI scriptfiles directory, or a fallback.  </remarks> 
		</member>
		<member name="M:GetZoneDamageId" syntax="GetZoneDamageId(zoneid)">
			<stacksize value="7"/>
			<referrer name="GangWarTimer"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="IsPlayerInDynamicArea"/>
			<dependency name="Iterator@Player"/>
			<dependency name="pGang"/>
			<dependency name="pGangWarAttacker"/>
			<dependency name="pGangWarDefender"/>
			<dependency name="pGangZoneArea"/>
			<dependency name="pGangZoneDamageId"/>
			<dependency name="pGangZoneRectangle"/>
			<dependency name="playerData"/>
			<dependency name="player_zone_damage"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:GieldaSellPanel" syntax="GieldaSellPanel(playerid, privcarid, sellid)">
			<tagname value="Task"/>
			<stacksize value="11"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<dependency name="DIALOG_GIELDA_SELL"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="SetPVarInt"/>
			<dependency name="pVehSpawned"/>
			<dependency name="showDialog"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
			<param name="sellid">
			</param>
		</member>
		<member name="M:GivePlayerMoney" syntax="GivePlayerMoney(playerid, money)">
			<attribute name="native"/>
			<referrer name="ac_GivePlayerMoney"/>
			<referrer name="orig_GivePlayerMoney"/>
			<param name="playerid">
				The ID of the player to give money to or take money from
			</param>
			<param name="money">
				The amount of money to give the player.  Use a minus value to take money
			</param>
			<library>a_players</library>  <summary>Give money to or take money from a player.</summary>      <seealso name="ResetPlayerMoney" />  <seealso name="GetPlayerMoney" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:GivePlayerWeapon" syntax="GivePlayerWeapon(playerid, weaponid, ammo)">
			<attribute name="native"/>
			<referrer name="ac_GivePlayerWeapon"/>
			<referrer name="orig_GivePlayerWeapon"/>
			<param name="playerid">
				The ID of the player to give a weapon to
			</param>
			<param name="weaponid">
				The ID of the weapon to give to the player
			</param>
			<param name="ammo">
				The amount of ammo to give to the player
			</param>
			<library>a_players</library>  <summary>Give a player a weapon with a specified amount of ammo.</summary>        <seealso name="SetPlayerArmedWeapon" />  <seealso name="GetPlayerWeapon" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.<br />  </returns> 
		</member>
		<member name="M:GiveSparingZestaw" syntax="GiveSparingZestaw(playerid, i)">
			<stacksize value="6"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingSK"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="giveWeapon"/>
			<param name="playerid">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:Grabarz_PochowajTrumna" syntax="Grabarz_PochowajTrumna(playerid)">
			<attribute name="public"/>
			<stacksize value="62"/>
			<dependency name="ACH_GRABARZ"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="MAPICON_GLOBAL"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="VW_GRABARZ"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="achievement"/>
			<dependency name="addJobScore"/>
			<dependency name="corp_alt"/>
			<dependency name="corpsNames"/>
			<dependency name="corpsNames"/>
			<dependency name="false"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="giveMoney"/>
			<dependency name="grabarzCP"/>
			<dependency name="grabarzCorps"/>
			<dependency name="grabarzCount"/>
			<dependency name="grabarzEtap"/>
			<dependency name="grabarzMapIcon"/>
			<dependency name="grabarzReward"/>
			<dependency name="grabarzTravelPosition"/>
			<dependency name="grabarzTravelPosition"/>
			<dependency name="grabarzTrumna"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Grabarz_RandomPosition" syntax="Grabarz_RandomPosition(playerid)">
			<stacksize value="61"/>
			<referrer name="OnDialogJob"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="MAPICON_GLOBAL"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="VW_GRABARZ"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="acc_LinkVehicleToInterior"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="format"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="grabarzCP"/>
			<dependency name="grabarzEtap"/>
			<dependency name="grabarzLabel"/>
			<dependency name="grabarzMapIcon"/>
			<dependency name="grabarzTravelPosition"/>
			<dependency name="grabarzTravelPosition"/>
			<dependency name="grabarzVehicle"/>
			<dependency name="grabarzVehicleOwner"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="random"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Grabarz_TakeTrumna" syntax="Grabarz_TakeTrumna(playerid)">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="SPECIAL_ACTION_CARRY"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="grabarzTrumna"/>
			<dependency name="msg"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Grabarz_TravelDone" syntax="Grabarz_TravelDone(playerid)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="JobDay"/>
			<dependency name="MAPICON_GLOBAL"/>
			<dependency name="SetPVarInt"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="VW_GRABARZ"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="addLevelScore"/>
			<dependency name="corp_alt"/>
			<dependency name="corpsNames"/>
			<dependency name="corpsNames"/>
			<dependency name="grabarzCP"/>
			<dependency name="grabarzCorps"/>
			<dependency name="grabarzCount"/>
			<dependency name="grabarzEtap"/>
			<dependency name="grabarzMapIcon"/>
			<dependency name="grabarzReward"/>
			<dependency name="grabarzYardPosition"/>
			<dependency name="grabarzYardPosition"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Grzybiarz_Random" syntax="Grzybiarz_Random(playerid)">
			<stacksize value="178"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CA_FindZ_For2DCoord"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="GetGroundRotation"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GrzybAlive"/>
			<dependency name="GrzybAlive"/>
			<dependency name="GrzybCountAlive"/>
			<dependency name="GrzybLabel"/>
			<dependency name="GrzybLabel"/>
			<dependency name="GrzybObject"/>
			<dependency name="GrzybObject"/>
			<dependency name="IsPosInWater"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="random"/>
			<dependency name="randomPositionArea"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Grzybiarz_Start" syntax="Grzybiarz_Start(playerid)">
			<stacksize value="8"/>
			<referrer name="OnDialogJob"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="GrzybCount"/>
			<dependency name="GrzybReward"/>
			<dependency name="GrzybZone"/>
			<dependency name="GrzybiarzZbiera"/>
			<dependency name="Grzybiarz_Random"/>
			<dependency name="JobDay"/>
			<dependency name="SetHealth"/>
			<dependency name="ShowZoneForPlayer"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="ZoneFlashForPlayer"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="math_random"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Grzybiarz_Zbierz" syntax="Grzybiarz_Zbierz(playerid, grzybid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="ACH_GRZYBIARZ"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="GrzybAlive"/>
			<dependency name="GrzybAlive"/>
			<dependency name="GrzybCount"/>
			<dependency name="GrzybCountAlive"/>
			<dependency name="GrzybLabel"/>
			<dependency name="GrzybLabel"/>
			<dependency name="GrzybObject"/>
			<dependency name="GrzybObject"/>
			<dependency name="GrzybReward"/>
			<dependency name="GrzybiarzZbiera"/>
			<dependency name="Grzybiarz_Random"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="achievement"/>
			<dependency name="addJobScore"/>
			<dependency name="false"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="grzybid">
			</param>
		</member>
		<member name="M:GunShop_Panel" syntax="GunShop_Panel(playerid, businessid)">
			<stacksize value="289"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0e"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="AddBusinessMoney"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GunShopDay"/>
			<dependency name="GunShopDay"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="acc_SetPlayerAmmo"/>
			<dependency name="businessData"/>
			<dependency name="business_license"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="giveWeapon"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pWeapons"/>
			<dependency name="pWeapons"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="weaponShopData"/>
			<dependency name="weaponShopData"/>
			<dependency name="weapon_bonus"/>
			<dependency name="weapon_id"/>
			<dependency name="weapon_money"/>
			<dependency name="weapon_type"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
		</member>
		<member name="M:GunShop_RandomGun" syntax="GunShop_RandomGun(businessid)">
			<stacksize value="16"/>
			<referrer name="FetchGunShop"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="GunShopDay"/>
			<dependency name="GunShopDay"/>
			<dependency name="floatround"/>
			<dependency name="math_random_float"/>
			<dependency name="random"/>
			<dependency name="weaponShopData"/>
			<dependency name="weapon_id"/>
			<dependency name="weapon_money"/>
			<param name="businessid">
			</param>
		</member>
		<member name="M:H@" syntax="H@(...)">
			<stacksize value="1"/>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:HIDE_PAWNDOC" syntax="HIDE_PAWNDOC(symbol[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  Create a <c>const</c> that is never used, which has pawndoc documentation  attached to it.  This seems to be the best way to prevent the documentation  from appearing in XML (<c>-r</c>) output - even conditional compilation  doesn't work on comments.  Used internally as <c>YSI_HIDE_PAWNDOC</c>.  <p />  The input should have some unique name, so when using it within an ifdef  block, don't use the same name as the tested symbol, because the the  replacement in question will be applied to the hidden variable as well.  <p />  This should also be a globally unique symbol name, because this only works  with `<c>const</c>`, not `<c>static const</c>`.  </remarks> 
		</member>
		<member name="M:HTTPCallback" syntax="HTTPCallback(method, url[], data[], cb)">
			<stacksize value="7"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_HTTP__"/>
			<dependency name="false"/>
			<dependency name="strcmp"/>
			<param name="method">
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@is </paraminfo>
			</param>
		</member>
		<member name="M:HasRPName" syntax="HasRPName(playerid, casing, longNames)">
			<tagname value="bool"/>
			<stacksize value="31"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsRPName"/>
			<param name="playerid">
				Player whose name you want to test.
			</param>
			<param name="casing">
				<paraminfo>bool </paraminfo>
				Check for string casing?  I.e. allow <c>James</c> but  not <c>james</c>.
			</param>
			<param name="longNames">
				<paraminfo>bool </paraminfo>
				Allow more than two name parts?
			</param>
			<summary>  HasRPName  </summary>        <remarks>  Is this player's name in the form <c>First_Last</c>?  </remarks> 
		</member>
		<member name="M:HasSameTeam" syntax="HasSameTeam(playerid, otherid)">
			<stacksize value="1"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<dependency name="s_PlayerTeam"/>
			<param name="playerid">
			</param>
			<param name="otherid">
			</param>
		</member>
		<member name="M:HaveToRelocateOpcodes" syntax="HaveToRelocateOpcodes()">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="RelocateOpcodeNow"/>
			<dependency name="OP_CALL"/>
			<dependency name="ReadOpcodeNearThis"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:HeapAllocBytes" syntax="HeapAllocBytes(nbytes)">
			<stacksize value="2"/>
			<referrer name="HeapAllocCells"/>
			<param name="nbytes">
			</param>
			<library>amx_assembly heap_alloc</library> <summary> Allocates a block of (uninitialized) memory on the heap. </summary>
		</member>
		<member name="M:HeapAllocCells" syntax="HeapAllocCells(ncells)">
			<stacksize value="4"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="YHNPS_Push"/>
			<dependency name="HeapAllocBytes"/>
			<param name="ncells">
			</param>
			<library>amx_assembly heap_alloc</library> <summary> Same as HeapAllocBytes() but operates on cells. </summary>
		</member>
		<member name="M:HeapRelease" syntax="HeapRelease(address)">
			<stacksize value="1"/>
			<referrer name="CGen_OnCodeInit"/>
			<param name="address">
			</param>
			<library>amx_assembly heap_alloc</library> <summary> Releases memory allocated with HeapAlloc(). </summary>
		</member>
		<member name="M:Heist_Init" syntax="Heist_Init()">
			<stacksize value="17"/>
			<referrer name="Init_Bank"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="RandomVaultCode"/>
			<dependency name="VW_BANK"/>
			<dependency name="VW_HEIST"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="bankHeistCheckpoint"/>
			<dependency name="bankHeistEnabled"/>
			<dependency name="bankHeistExit"/>
			<dependency name="bankHeistGas"/>
			<dependency name="bankHeistLabel"/>
			<dependency name="bankHeistPickup"/>
			<dependency name="bankHeistVault"/>
			<dependency name="bankHeistVaultLabel"/>
			<dependency name="bankHeistVaultOpen"/>
			<dependency name="false"/>
			<dependency name="heistRobbed"/>
		</member>
		<member name="M:Heist_Pickup" syntax="Heist_Pickup(playerid, pickupid)">
			<stacksize value="11"/>
			<referrer name="Bank_Pickup"/>
			<dependency name="ConvertTime"/>
			<dependency name="CountPlayerHeist"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="KillTimer"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="VW_BANK"/>
			<dependency name="VW_HEIST"/>
			<dependency name="bankHeistCountDown"/>
			<dependency name="bankHeistEnabled"/>
			<dependency name="bankHeistExit"/>
			<dependency name="bankHeistHacker"/>
			<dependency name="bankHeistLabel"/>
			<dependency name="bankHeistPickup"/>
			<dependency name="bankHeistTimer"/>
			<dependency name="bankHeistVault"/>
			<dependency name="bankHeistVaultLabel"/>
			<dependency name="bankHeistVaultOpen"/>
			<dependency name="false"/>
			<dependency name="giveMoney"/>
			<dependency name="heistRobbed"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="player_robbed"/>
			<dependency name="strdot"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vault_label"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:HexStr" syntax="HexStr(str[])">
			<stacksize value="4"/>
			<referrer name="hexstr"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string">String to convert to a number.</param>  <returns>  value of the passed hex string.  </returns>  <remarks>  Now stops on invalid characters.  </remarks> 
		</member>
		<member name="M:HideAchievement" syntax="HideAchievement(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="tdAchievement"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:HideBudgetDraw" syntax="HideBudgetDraw(gangid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budgetDraw"/>
			<dependency name="pGangBudgetTimer"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:HideLevelBar" syntax="HideLevelBar(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="KillTimer"/>
			<dependency name="LevelBar"/>
			<dependency name="LevelTimer"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="tdLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:HideMissionDraw" syntax="HideMissionDraw(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="KillTimer"/>
			<dependency name="MissionTimer"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="tdMissionDraw"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:HideModelSelectionMenu" syntax="HideModelSelectionMenu(playerid)">
			<stacksize value="4"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
			<dependency name="CancelSelectTextDraw"/>
			<dependency name="DestroyModelSelectionPlayerTDs"/>
			<dependency name="INVALID_LIST"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="false"/>
			<dependency name="g_MenuBackground"/>
			<dependency name="g_MenuBottomBanner"/>
			<dependency name="g_MenuCloseButton"/>
			<dependency name="g_MenuCurrentPage"/>
			<dependency name="g_MenuExtraID"/>
			<dependency name="g_MenuItemCount"/>
			<dependency name="g_MenuLeftArrow"/>
			<dependency name="g_MenuModels"/>
			<dependency name="g_MenuPageCount"/>
			<dependency name="g_MenuRightArrow"/>
			<dependency name="g_MenuShown"/>
			<dependency name="g_MenuTopBanner"/>
			<dependency name="list_delete"/>
			<dependency name="list_valid"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:HideNameTagForAll" syntax="HideNameTagForAll(playerid)">
			<stacksize value="6"/>
			<referrer name="StartChowany"/>
			<referrer name="StartBTR"/>
			<dependency name="Iterator@Player"/>
			<dependency name="ShowPlayerNameTagForPlayer"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:HidePlayerDialog" syntax="HidePlayerDialog(playerid)">
			<attribute name="native"/>
			<referrer name="Dialog_Hide"/>
			<referrer name="_@yHOnPlayerDisconnect@01"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:HidePlayerProgressBar" syntax="HidePlayerProgressBar(playerid, barid)">
			<stacksize value="5"/>
			<referrer name="HideLevelBar"/>
			<referrer name="changeBarColor"/>
			<referrer name="StopFueling"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="_updateGangBarEx"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="Slots_Hide"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_back"/>
			<dependency name="pbar_fill"/>
			<dependency name="pbar_main"/>
			<dependency name="pbar_show"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:HideRankedPoints" syntax="HideRankedPoints(gangid, enemyid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budgetDraw"/>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
		</member>
		<member name="M:HideZoneForAll" syntax="HideZoneForAll(zoneid)">
			<stacksize value="4"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="CheckGangWar"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="GangZoneHideForAll"/>
			<dependency name="border"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<dependency name="zIsUsingNumbers"/>
			<dependency name="zMainID"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:HideZoneForPlayer" syntax="HideZoneForPlayer(playerid, zoneid)">
			<stacksize value="5"/>
			<referrer name="UpdateBTR"/>
			<dependency name="GangZoneHideForPlayer"/>
			<dependency name="border"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<dependency name="zIsUsingNumbers"/>
			<dependency name="zMainID"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:HookNative" syntax="HookNative(index, address)">
			<stacksize value="5"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="GetNumNatives"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="index">
			</param>
			<param name="address">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:HookPublic" syntax="HookPublic(index, address)">
			<stacksize value="5"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetNumPublics"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="index">
			</param>
			<param name="address">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:Hook_OnGameModeInit" syntax="Hook_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="TextDrawAlignment"/>
			<dependency name="TextDrawBackgroundColor"/>
			<dependency name="TextDrawBoxColor"/>
			<dependency name="TextDrawColor"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="TextDrawFont"/>
			<dependency name="TextDrawLetterSize"/>
			<dependency name="TextDrawSetOutline"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="TextDrawSetSelectable"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="TextDrawTextSize"/>
			<dependency name="TextDrawUseBox"/>
			<dependency name="false"/>
			<dependency name="g_MenuBackground"/>
			<dependency name="g_MenuBottomBanner"/>
			<dependency name="g_MenuCloseButton"/>
			<dependency name="g_MenuLeftArrow"/>
			<dependency name="g_MenuRightArrow"/>
			<dependency name="g_MenuTopBanner"/>
			<dependency name="true"/>
		</member>
		<member name="M:Hooks_Collate" syntax="Hooks_Collate(preloads[][], precount, entry, &amp;namelen, &amp;namewrite)">
			<stacksize value="58"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="Hooks_GenerateCode"/>
			<dependency name="Hooks_GetAllHooks"/>
			<dependency name="Hooks_GetPointerRewrite"/>
			<dependency name="Hooks_GetPreHooks"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sBlockEnd"/>
			<dependency name="YSI_g_sCount"/>
			<dependency name="YSI_g_sHooks"/>
			<dependency name="YSI_g_sName"/>
			<dependency name="strcmp"/>
			<param name="preloads">
				<paraminfo> [][17] </paraminfo>
			</param>
			<param name="precount">
			</param>
			<param name="entry">
			</param>
			<param name="namelen">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="namewrite">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_CompressPublics" syntax="Hooks_CompressPublics()">
			<stacksize value="6"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="Server_JITExists"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sInitPublicDiff"/>
			<dependency name="YSI_g_sSortedOnce"/>
			<dependency name="true"/>
			<remarks>  Goes through the whole of the public functions table and moves those  without valid pointers to the start, then moves the start address up to  after them.  </remarks> 
		</member>
		<member name="M:Hooks_Continue_" syntax="Hooks_Continue_(...)">
			<stacksize value="1"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="_@yHResetPlayerData@04"/>
			<referrer name="_@yHResetPlayerData@07"/>
			<referrer name="_@yHResetPlayerData@08"/>
			<referrer name="_@yHResetPlayerData@0@"/>
			<referrer name="_@yHResetPlayerData@0C"/>
			<referrer name="_@yHResetPlayerData@0D"/>
			<referrer name="_@yHResetPlayerData@0E"/>
			<referrer name="_@yHResetPlayerData@0F"/>
			<referrer name="_@yHResetPlayerData@0G"/>
			<referrer name="_@yHResetPlayerData@0H"/>
			<referrer name="_@yHResetPlayerData@0J"/>
			<referrer name="_@yHDestroyVehicle@0K"/>
			<referrer name="_@yHResetPlayerData@0R"/>
			<referrer name="_@yHResetPlayerData@0S"/>
			<referrer name="_@yHResetPlayerData@0T"/>
			<referrer name="_@yHResetPlayerData@0U"/>
			<referrer name="_@yHResetPlayerData@0V"/>
			<referrer name="_@yHResetPlayerData@0W"/>
			<referrer name="_@yHResetPlayerData@0X"/>
			<referrer name="_@yHResetPlayerData@0Y"/>
			<referrer name="_@yHResetPlayerData@0Z"/>
			<referrer name="_@yHResetPlayerData@0b"/>
			<referrer name="_@yHResetPlayerData@0d"/>
			<referrer name="_@yHResetPlayerData@0f"/>
			<referrer name="_@yHResetPlayerData@0g"/>
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="_@yHResetPlayerData@0o"/>
			<referrer name="_@yHResetPlayerData@0x"/>
			<referrer name="_@yHResetPlayerData@11"/>
			<referrer name="_@yHResetPlayerData@12"/>
			<referrer name="_@yHSetPlayerColor@13"/>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_ExtractName" syntax="Hooks_ExtractName(tmpName[], name[], callback[])">
			<stacksize value="7"/>
			<referrer name="_@Hy"/>
			<dependency name="Hooks_MakeLongName"/>
			<param name="tmpName">
				<paraminfo> [63] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_GenerateCode" syntax="Hooks_GenerateCode(write, hasprehooks)">
			<stacksize value="5"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="CGen_AddCodeSpace"/>
			<dependency name="CGen_GetCodeSpace"/>
			<dependency name="Hooks_GetDefaultReturn"/>
			<dependency name="Hooks_WriteFunction"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sHooks"/>
			<dependency name="YSI_g_sName"/>
			<param name="write">
				Where to write the new function's pointer.
			</param>
			<param name="hasprehooks">
				<paraminfo>bool </paraminfo>
				Needs to call other stuff first.
			</param>
			<param name="count">Number of functions to call.</param>     
		</member>
		<member name="M:Hooks_GenerateContinue" syntax="Hooks_GenerateContinue(...)">
			<stacksize value="31"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitAddrPri"/>
			<dependency name="AsmEmitAnd"/>
			<dependency name="AsmEmitConstPri"/>
			<dependency name="AsmEmitJgrtrLabelStringize"/>
			<dependency name="AsmEmitJsleqLabelStringize"/>
			<dependency name="AsmEmitJumpLabelStringize"/>
			<dependency name="AsmEmitJzerLabelStringize"/>
			<dependency name="AsmEmitLabelStringize"/>
			<dependency name="AsmEmitLoadI"/>
			<dependency name="AsmEmitLoadPri"/>
			<dependency name="AsmEmitLrefSPri"/>
			<dependency name="AsmEmitMoveAlt"/>
			<dependency name="AsmEmitMovePri"/>
			<dependency name="AsmEmitNeg"/>
			<dependency name="AsmEmitPadding"/>
			<dependency name="AsmEmitPopAlt"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitShrCAlt"/>
			<dependency name="AsmEmitSrefSPri"/>
			<dependency name="AsmEmitStorAlt"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="Hooks_RegisterNPSHook"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="YSI_g_sNPSStack"/>
			<dependency name="YSI_g_sTempRet"/>
			<dependency name="__ARR"/>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_GetAllHooks" syntax="Hooks_GetAllHooks(addr)">
			<stacksize value="10"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sAddress"/>
			<dependency name="YSI_g_sBlockEnd"/>
			<dependency name="YSI_g_sHooks"/>
			<param name="addr">
			</param>
			<param name="idx">Current position in the AMX header.</param>  <param name="namelen">Min bound of space used by all these names.</param>  <returns>  The number of hooks found.  </returns>  <remarks>  The name of the function currently being processed is derived from the first  found hook.  This means we already know of one hook, but to simplify the  code we get that one again here.  Above we only know the name not the  address.  Hence the "- 1" in "i = idx - 1" (to go back one function name).  Our "namelen" variable already contains the full length of the first found  hook - this is the length of "name", plus N extra characters.  The following  are all valid, and may occur when orders are played with:  @yH_OnX@  @yH_OnX@1  @yH_OnX@01  @yH_OnX@024  @yH_OnX@ZZZ  @yH_OnX@999@024  If we want to get the EXACT space taken up by all these hook names we would  need to get the string of the name in this function then measure it.  There  is really no point in doing this - if we have a second we will always have  enough space for our new names.  Instead, we assume that they are all just  @yH_OnX@  And add on that minimum length accordingly (plus 1 for the NULL character).  This length is used if the original callback doesn't exist but hooks do.  In  that case we need to add the callback to the AMX header, and there is a tiny  chance that the original name will be longer than one hook's name.  In that  case, having two or more hooks will (AFAIK) always ensure that we have  enough space to write the longer name.  If there is only one hook, no original function, and the name of the hook is  shorter than the name of the original function then we have an issue and  will have to do something else instead.  </remarks> 
		</member>
		<member name="M:Hooks_GetDefaultReturn" syntax="Hooks_GetDefaultReturn(name[])">
			<stacksize value="72"/>
			<referrer name="Hooks_GenerateCode"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="Hooks_MakeShortName"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [63] </paraminfo>
				The function to get the default return of.
			</param>
			  <returns>  The default return for a callback, normally 1.  </returns> 
		</member>
		<member name="M:Hooks_GetPointerRewrite" syntax="Hooks_GetPointerRewrite(hooks[], num, &amp;ptr, &amp;next, &amp;namelen, &amp;namewrite)">
			<stacksize value="39"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="AMX_WriteString"/>
			<dependency name="Debug_Kill_"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Hooks_GetStubEntry"/>
			<dependency name="OP_JUMP"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sName"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<param name="hooks">
				<paraminfo> [] </paraminfo>
				All the prehooks for this callback.
			</param>
			<param name="num">
				The number of prehooks.
			</param>
			<param name="ptr">
				<paraminfo> &amp; </paraminfo>
				A pointer to write the new stub address to.
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
				The pointer for the function called after y_hooks.
			</param>
			<param name="namelen">
				<paraminfo> &amp; </paraminfo>
				Space available in the header to write text in.
			</param>
			<param name="namewrite">
				<paraminfo> &amp; </paraminfo>
				Position in the header to write text in.
			</param>
			        <param name="name">The name of the callback being processed.</param>     
		</member>
		<member name="M:Hooks_GetPreHooks" syntax="Hooks_GetPreHooks(preloads[][], precount, hooks[], &amp;count)">
			<stacksize value="72"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="E_CHAIN_HOOK_NAME"/>
			<dependency name="Hooks_MakeShortName"/>
			<dependency name="YSI_g_sName"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="preloads">
				<paraminfo> [][17] </paraminfo>
				Names of libraries that come before y_hooks.
			</param>
			<param name="precount">
				Number of pre libraries.
			</param>
			<param name="hooks">
				<paraminfo> [] </paraminfo>
				Destination in which to store the headers.
			</param>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of headers found.
			</param>
			    <param name="name">Name of the callback.</param>      <remarks>  Finds all the AMX file headers for functions with a similar name to the  given callback that should be called before (or near) the given callback.  </remarks> 
		</member>
		<member name="M:Hooks_GetPreloadLibraries" syntax="Hooks_GetPreloadLibraries(preloads[][], &amp;precount, size)">
			<stacksize value="161"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="Debug_Print0"/>
			<dependency name="E_CHAIN_HOOK"/>
			<dependency name="E_CHAIN_HOOK_NAME"/>
			<dependency name="E_CHAIN_HOOK_VALUE"/>
			<dependency name="Unpack"/>
			<dependency name="Unpack"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<param name="preloads">
				<paraminfo> [][17] </paraminfo>
				Desination in which to store all the preloads.
			</param>
			<param name="precount">
				<paraminfo> &amp; </paraminfo>
				Number of found preload libraries.
			</param>
			<param name="size">
				Maximum number of libraries to store.
			</param>
			      <remarks>  Some includes, like "fixes.inc" and anti-cheats MUST come before all other  includes in order for everything to function correctly (at least fixes.inc  must).  This function looks for these definitions:  PRE_HOOK(FIXES)  Which tell y_hooks that any "FIXES_" prefixed callbacks are part of one of  these chains.  </remarks> 
		</member>
		<member name="M:Hooks_GetStubEntry" syntax="Hooks_GetStubEntry(stub)">
			<stacksize value="13"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmGetNumOperands"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmInit"/>
			<dependency name="DisasmNextInsn"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_JUMP"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_SWITCH"/>
			<param name="stub">
				Starting address of the function.
			</param>
			  <returns>  The address at which the actual code in this function starts.  </returns>  <remarks>  This handles three cases.  Regular functions end instantly as found.  Functions that start with a switch (even before "PROC") are assumed to be  state-based functions, and we find the most likely state to be used (i.e. we  remove all future state changes).  </remarks> 
		</member>
		<member name="M:Hooks_InvalidatePointer" syntax="Hooks_InvalidatePointer(tableEntry)">
			<stacksize value="1"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="YSI_gAMXAddress_"/>
			<param name="tableEntry">
				The public function slot to destroy.
			</param>
			  <remarks>  Basically, once we know a function has been included, wipe it from the AMX  header.  </remarks> 
		</member>
		<member name="M:Hooks_MakeLongName" syntax="Hooks_MakeLongName(name[])">
			<stacksize value="10"/>
			<referrer name="Hooks_ExtractName"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_LONG"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MAX"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MIN"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_SHORT"/>
			<dependency name="Hooks_MakeShortName"/>
			<dependency name="YSI_g_sReplacePtr"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacementsShortOrder"/>
			<dependency name="false"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<param name="name">
				<paraminfo> [63] </paraminfo>
				Function name to modify.
			</param>
			  <remarks>  Expands all name parts like "CP" and "Obj" to their full versions (in this  example "Checkpoint" and "Object").  </remarks> 
		</member>
		<member name="M:Hooks_MakeShortName" syntax="Hooks_MakeShortName(name[])">
			<stacksize value="10"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_LONG"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MAX"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_SHORT"/>
			<dependency name="YSI_g_sReplacePtr"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacementsLongOrder"/>
			<dependency name="false"/>
			<dependency name="strcmp"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<param name="name">
				<paraminfo> [63] </paraminfo>
				Function name to modify.
			</param>
			  <remarks>  Compresses function names when required to fit within FUNCTION_LENGTH characters  according to well defined rules (see "YSI_g_sReplacements").  </remarks> 
		</member>
		<member name="M:Hooks_MallocState" syntax="Hooks_MallocState()">
			<stacksize value="1"/>
			<automaton name="y_malloc_finalise"/>
		</member>
		<member name="M:Hooks_NumArgs" syntax="Hooks_NumArgs()">
			<stacksize value="1"/>
			<referrer name="Callback_Get"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="Callback_Restore_"/>
			<referrer name="ShuffleDeepArray_Entry"/>
			<referrer name="ResetDeepArray_Entry"/>
			<referrer name="SortArrayUsingCompInto_Entry"/>
			<referrer name="SetWeaponDamage"/>
			<referrer name="addVehicleComponent"/>
		</member>
		<member name="M:Hooks_OnCodeInit" syntax="Hooks_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="YSI_g_sDoPushAddr"/>
			<dependency name="YSI_g_sInitialised"/>
			<dependency name="YVA2_DoPush"/>
			<dependency name="YVA2_Initalise"/>
		</member>
		<member name="M:Hooks_OnRuntimeError" syntax="Hooks_OnRuntimeError(code, &amp;suppress)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Inline_OnRuntimeError"/>
			<dependency name="YSI_g_sInlineLinkedList"/>
			<param name="code">
			</param>
			<param name="suppress">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Hooks_RegisterNPSHook" syntax="Hooks_RegisterNPSHook(compressedFormat, address, name[], order)">
			<stacksize value="34"/>
			<referrer name="_yH@"/>
			<referrer name="Hooks_GenerateContinue"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitCallAbs"/>
			<dependency name="AsmEmitHeap"/>
			<dependency name="AsmEmitLctrl"/>
			<dependency name="AsmEmitLoadPri"/>
			<dependency name="AsmEmitMovs"/>
			<dependency name="AsmEmitPadding"/>
			<dependency name="AsmEmitPopAlt"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitPush"/>
			<dependency name="AsmEmitPushAlt"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitStorAlt"/>
			<dependency name="AsmEmitSysreqC"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="DisasmInit"/>
			<dependency name="DisasmNext"/>
			<dependency name="GetCurrentFrameReturn"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_RETN"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="YSI_g_sNPSBaseCall"/>
			<dependency name="YSI_g_sNPSReplace"/>
			<dependency name="YSI_g_sNPSStack"/>
			<dependency name="YSI_g_sNPSTrampoline"/>
			<dependency name="YSI_g_sTempRet"/>
			<dependency name="cellbits"/>
			<dependency name="cellmin"/>
			<dependency name="charbits"/>
			<param name="compressedFormat">
			</param>
			<param name="address">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="order">
			</param>
		</member>
		<member name="M:Hooks_RepairJITInit" syntax="Hooks_RepairJITInit()">
			<stacksize value="4"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="FALSE"/>
			<dependency name="GetPublicAddressFromName"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sInitFSIdx"/>
			<dependency name="YSI_g_sInitFSPtr"/>
			<dependency name="YSI_g_sInitFSRep"/>
			<dependency name="YSI_g_sInitGMIdx"/>
			<dependency name="YSI_g_sInitGMPtr"/>
			<dependency name="YSI_g_sInitGMRep"/>
			<dependency name="_Hooks_RepairStubFS"/>
			<dependency name="_Hooks_RepairStubGM"/>
		</member>
		<member name="M:Hooks_SortReplacements" syntax="Hooks_SortReplacements()">
			<stacksize value="6"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MAX"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MIN"/>
			<dependency name="YSI_g_sReplacePtr"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacementsLongOrder"/>
			<dependency name="YSI_g_sReplacementsShortOrder"/>
			<remarks>  Once all the replacement strings have been found, sort them by the length of  the short versions of the strings.  This is so that the longest (and special  case, e.g. "DynamicCP"-> "DynamicCP") replacements are always done first.  </remarks> 
		</member>
		<member name="M:Hooks_WriteFunction" syntax="Hooks_WriteFunction(ret, skipable)">
			<stacksize value="31"/>
			<referrer name="Hooks_GenerateCode"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitAddrPri"/>
			<dependency name="AsmEmitAnd"/>
			<dependency name="AsmEmitCall"/>
			<dependency name="AsmEmitInvert"/>
			<dependency name="AsmEmitJsgeqLabelStringize"/>
			<dependency name="AsmEmitJslessLabelStringize"/>
			<dependency name="AsmEmitJumpLabelStringize"/>
			<dependency name="AsmEmitJzerLabelStringize"/>
			<dependency name="AsmEmitLabelStringize"/>
			<dependency name="AsmEmitLctrl"/>
			<dependency name="AsmEmitLoadSAlt"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitMoveAlt"/>
			<dependency name="AsmEmitMovePri"/>
			<dependency name="AsmEmitMovs"/>
			<dependency name="AsmEmitOr"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitPush"/>
			<dependency name="AsmEmitPushAlt"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitStorPri"/>
			<dependency name="AsmEmitStorSPri"/>
			<dependency name="AsmEmitSub"/>
			<dependency name="AsmEmitSysreqC"/>
			<dependency name="AsmEmitXchg"/>
			<dependency name="AsmEmitZeroAlt"/>
			<dependency name="CGen_GetCodeSpace"/>
			<dependency name="CGen_UseCodeSpace"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Hooks_InvalidatePointer"/>
			<dependency name="O@B_"/>
			<dependency name="O@V_"/>
			<dependency name="Server_JITExists"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sActiveHooks"/>
			<dependency name="YSI_g_sCount"/>
			<dependency name="YSI_g_sHooks"/>
			<dependency name="_YSI_ConstCpy__"/>
			<dependency name="__ARR"/>
			<param name="ret">
				The default return.
			</param>
			<param name="skipable">
				Can future hooks be ignored on -1?
			</param>
			    <returns>  The number of bytes written to memory.  </returns>  <remarks>  Generate some new code, very nicely :D.  </remarks> 
		</member>
		<member name="M:I@F" syntax="I@F()">
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Init_Records"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="Init_Business"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickEx"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="Init_Map"/>
		</member>
		<member name="M:I@K" syntax="I@K(n)">
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Init_Records"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="Init_Business"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickEx"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="Init_Map"/>
			<param name="n">
			</param>
		</member>
		<member name="M:I@L" syntax="I@L(...)">
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Init_Records"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="Init_Business"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickEx"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="Init_Map"/>
			<param name="...">
			</param>
		</member>
		<member name="M:I@T" syntax="I@T(str[])">
			<tagname value="I@T"/>
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Init_Records"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="Init_Business"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickEx"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="Init_Map"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IPToInt" syntax="IPToInt(ip[])">
			<stacksize value="13"/>
			<referrer name="Android_OnPlayerConnect"/>
			<dependency name="cellmax"/>
			<dependency name="strmid"/>
			<dependency name="strval"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				Dot notation IP to convert to an integer.
			</param>
			 
		</member>
		<member name="M:IS_IN_RANGE" syntax="IS_IN_RANGE(value, lower, upper)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				The number to compare.
			</param>
			<param name="lower">
				The lower limit.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			      <returns>  Is the value in the given range.  </returns>  <remarks>  Equivalent to:  <code>		(%1) &lt;= (%0) &lt; (%2)</code>  </remarks> 
		</member>
		<member name="M:Indirect_Array" syntax="Indirect_Array(func, tag, params[], size)">
			<stacksize value="6"/>
			<referrer name="Callback_Array"/>
			<dependency name="GetPublicAddressFromIndex"/>
			<dependency name="GetTagNameFromID"/>
			<dependency name="INDIRECTION_DATA"/>
			<dependency name="INDIRECTION_TAG"/>
			<dependency name="funcidx"/>
			<dependency name="gsCodSize"/>
			<dependency name="memcpy"/>
			<param name="func">
			</param>
			<param name="tag">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>indirection</library>
		</member>
		<member name="M:Indirect_Call" syntax="Indirect_Call(func, tag, ...)">
			<stacksize value="6"/>
			<referrer name="Indirect_FromCallback"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="y_inline_HTTPCallback"/>
			<referrer name="_@yHOnDialogResponse@01"/>
			<referrer name="@y_inlineTimerCount"/>
			<referrer name="@y_inlineTimerRepeat"/>
			<referrer name="@y_inlineTimerStart"/>
			<dependency name="GetPublicAddressFromIndex"/>
			<dependency name="GetTagNameFromID"/>
			<dependency name="INDIRECTION_DATA"/>
			<dependency name="INDIRECTION_TAG"/>
			<dependency name="funcidx"/>
			<dependency name="gsCodSize"/>
			<param name="func">
			</param>
			<param name="tag">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>indirection</library>
		</member>
		<member name="M:Indirect_Callstring" syntax="Indirect_Callstring(func, tag, ...)">
			<stacksize value="145"/>
			<dependency name="GetPublicAddressFromIndex"/>
			<dependency name="GetTagNameFromID"/>
			<dependency name="INDIRECTION_DATA"/>
			<dependency name="INDIRECTION_TAG"/>
			<dependency name="Indirect_Callstring"/>
			<dependency name="funcidx"/>
			<dependency name="gsCodSize"/>
			<param name="func">
			</param>
			<param name="tag">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>indirection</library> <remarks> Not `Indirect_CallString` to make use of the `string:` macro. </remarks>
		</member>
		<member name="M:Indirect_Callvoid" syntax="Indirect_Callvoid(func, tag, ...)">
			<stacksize value="6"/>
			<dependency name="GetPublicAddressFromIndex"/>
			<dependency name="GetTagNameFromID"/>
			<dependency name="INDIRECTION_DATA"/>
			<dependency name="INDIRECTION_TAG"/>
			<dependency name="funcidx"/>
			<dependency name="gsCodSize"/>
			<param name="func">
			</param>
			<param name="tag">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>indirection</library> <remarks> Not `Indirect_Callvoid` to make use of the `void:` macro. </remarks>
		</member>
		<member name="M:Indirect_Claim_" syntax="Indirect_Claim_(func)">
			<stacksize value="1"/>
			<referrer name="Callback_Get"/>
			<referrer name="HTTPCallback"/>
			<referrer name="Dialog_ShowCallback"/>
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
			<referrer name="ORM_SelectInline"/>
			<referrer name="ORM_UpdateInline"/>
			<referrer name="ORM_InsertInline"/>
			<referrer name="ORM_DeleteInline"/>
			<referrer name="ORM_LoadInline"/>
			<referrer name="ORM_SaveInline"/>
			<referrer name="Timer_CreateCallback"/>
			<dependency name="gsCodSize"/>
			<param name="func">
				The function pointer you want to use later.
			</param>
			<library>indirection</library>    <remarks>  If a function pointer is used within one function, that is not a problem.  However, if you want to store the function pointer for use later, you must  first "claim" it, so that any associated data is not cleared when the  parent function ends (i.e. the function that called your function).  After  use it must be released, and the number of claims must match the number of  releases.  </remarks> 
		</member>
		<member name="M:Indirect_DePtr_" syntax="Indirect_DePtr_(ptr)">
			<stacksize value="2"/>
			<referrer name="Callback_Get"/>
			<referrer name="Callback_Restore_"/>
			<referrer name="Inline_Debug"/>
			<dependency name="gsCodSize"/>
			<dependency name="numargs"/>
			<param name="ptr">
			</param>
			<library>indirection</library>  <param name="">The array to convert to an offset pointer.</param>  <remarks>  Strings and arrays are passed relative to `COD` not `DAT` so they can be  distinguished from normal function pointers.  This function does the offset.  </remarks> 
		</member>
		<member name="M:Indirect_DeRef_" syntax="Indirect_DeRef_(...)">
			<stacksize value="2"/>
			<dependency name="gsCodSize"/>
			<dependency name="numargs"/>
			<param name="...">
				The array to convert to an offset pointer.
			</param>
			<library>indirection</library>    <remarks>  Strings and arrays are passed relative to `COD` not `DAT` so they can be  distinguished from normal function pointers.  This function does the offset.  </remarks> 
		</member>
		<member name="M:Indirect_FromCallback" syntax="Indirect_FromCallback(cb, release)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Indirect_Call"/>
			<dependency name="Indirect_Release_"/>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
			<param name="release">
				<paraminfo>bool </paraminfo>
			</param>
			<library>indirection</library>  <remarks>  A generic public wrapper for calling inline functions.  </remarks> 
		</member>
		<member name="M:Indirect_GetMeta_" syntax="Indirect_GetMeta_(func)">
			<stacksize value="1"/>
			<referrer name="_@yHOnDialogResponse@01"/>
			<referrer name="Timer_KillCallback"/>
			<dependency name="gsCodSize"/>
			<param name="func">
				The function pointer with attached metadata.
			</param>
			<library>indirection</library>    <remarks>  Gets extra data from the pointer.  </remarks> 
		</member>
		<member name="M:Indirect_Init" syntax="Indirect_Init()">
			<stacksize value="21"/>
			<referrer name="ScriptInit_OnJITCompile"/>
			<referrer name="OnScriptInit@C"/>
			<referrer name="PHY_OnGameModeInit"/>
			<referrer name="Yield_OnCodeInit"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AddressofResolve"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="gsCodSize"/>
			<library>indirection</library>  <remarks>  Get the size of the COD AMX segment.  </remarks> 
		</member>
		<member name="M:Indirect_Ptr_" syntax="Indirect_Ptr_(ptr)">
			<stacksize value="2"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<dependency name="gsCodSize"/>
			<dependency name="numargs"/>
			<param name="ptr">
			</param>
			<library>indirection</library>  <param name="">The array to convert to an offset pointer.</param>  <remarks>  Strings and arrays are passed relative to `COD` not `DAT` so they can be  distinguished from normal function pointers.  This function does the offset.  </remarks> 
		</member>
		<member name="M:Indirect_Ref_" syntax="Indirect_Ref_(...)">
			<stacksize value="2"/>
			<dependency name="gsCodSize"/>
			<dependency name="numargs"/>
			<param name="...">
				The array to convert to an offset pointer.
			</param>
			<library>indirection</library>    <remarks>  Strings and arrays are passed relative to `COD` not `DAT` so they can be  distinguished from normal function pointers.  This function does the offset.  </remarks> 
		</member>
		<member name="M:Indirect_Release_" syntax="Indirect_Release_(func)">
			<stacksize value="1"/>
			<referrer name="Indirect_FromCallback"/>
			<referrer name="Callback_Release"/>
			<referrer name="y_inline_HTTPCallback"/>
			<referrer name="Dialog_Set"/>
			<referrer name="_@yHOnPlayerDisconnect@01"/>
			<referrer name="_@yHOnDialogResponse@01"/>
			<referrer name="@y_inlineTimerCount"/>
			<referrer name="Timer_KillCallback"/>
			<dependency name="gsCodSize"/>
			<param name="func">
				The function pointer you had previously stored.
			</param>
			<library>indirection</library>    <remarks>  If a function pointer is used within one function, that is not a problem.  However, if you want to store the function pointer for use later, you must  first "claim" it, so that any associated data is not cleared when the  parent function ends (i.e. the function that called your function).  After  use it must be released, and the number of claims must match the number of  releases.  </remarks> 
		</member>
		<member name="M:Indirect_SetMeta_" syntax="Indirect_SetMeta_(func, data)">
			<stacksize value="1"/>
			<referrer name="Dialog_ShowCallback"/>
			<referrer name="@y_inlineTimerCount"/>
			<referrer name="@y_inlineTimerStart"/>
			<referrer name="Timer_CreateCallback"/>
			<dependency name="gsCodSize"/>
			<param name="func">
				The function pointer to attach metadata to.
			</param>
			<param name="data">
				The metadata.
			</param>
			<library>indirection</library>     
		</member>
		<member name="M:Indirect_Tag" syntax="Indirect_Tag(id, dest[])">
			<stacksize value="6"/>
			<dependency name="GetTagNameFromID"/>
			<dependency name="strcat"/>
			<param name="id">
				The ID of the tag to get the specifiers from the name of.  
			</param>
			<param name="dest">
				<paraminfo> [32] </paraminfo>
				Where to store the name.
			</param>
			<library>indirection</library>      <remarks>  Functions are tagged with a special tag containing their specifiers.  Get  the string value of that tag from the AMX header.  </remarks> 
		</member>
		<member name="M:Indirection_OnFilterScriptInit" syntax="Indirection_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="GEOLITE_init"/>
			<dependency name="geolite_open_dbs"/>
			<dependency name="true"/>
		</member>
		<member name="M:Indirection_OnGameModeInit" syntax="Indirection_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="2"/>
			<dependency name="PC_Init"/>
		</member>
		<member name="M:InflictDamage" syntax="InflictDamage(playerid, amount, issuerid, weaponid, bodypart, ignore_armour)">
			<stacksize value="77"/>
			<referrer name="DamagePlayer"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerSpecialAction"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVehicleSeat"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="IsMeleeWeapon"/>
			<dependency name="IsPlayerBehindPlayer"/>
			<dependency name="MakePlayerFacePlayer"/>
			<dependency name="OnPlayerDamage"/>
			<dependency name="OnPlayerDamageDone"/>
			<dependency name="PlayerDeath"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="SetTimerEx"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<dependency name="WC_OnPlayerDeath"/>
			<dependency name="WEAPON_CHAINSAW"/>
			<dependency name="WEAPON_COLLISION"/>
			<dependency name="WEAPON_DROWN"/>
			<dependency name="WEAPON_FIREEXTINGUISHER"/>
			<dependency name="WEAPON_RIFLE"/>
			<dependency name="WEAPON_SHOTGSPA"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="WEAPON_SPRAYCAN"/>
			<dependency name="acc_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="gettime"/>
			<dependency name="s_CbugAllowed"/>
			<dependency name="s_DamageArmour"/>
			<dependency name="s_DamageArmourToggle"/>
			<dependency name="s_DamageDoneArmour"/>
			<dependency name="s_DamageDoneHealth"/>
			<dependency name="s_DelayedDeathTimer"/>
			<dependency name="s_LastVehicleEnterTime"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="issuerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
			<param name="ignore_armour">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:InitOpcodeTable" syntax="InitOpcodeTable()">
			<stacksize value="5"/>
			<referrer name="RelocateOpcode"/>
			<referrer name="UnrelocateOpcode"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="RelocateOpcodeNow"/>
			<dependency name="opcode_table"/>
			<dependency name="opcode_table_is_ready"/>
			<dependency name="true"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:Init_AdminTop" syntax="Init_AdminTop()">
			<stacksize value="46"/>
			<referrer name="Init_Map"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="adminWeekName"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="eventWeekName"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="printf"/>
			<dependency name="s"/>
			<dependency name="strdot"/>
			<dependency name="tdWelcome"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Init_Areny" syntax="Init_Areny()">
			<stacksize value="3"/>
			<referrer name="Init_Map"/>
			<dependency name="I@"/>
			<dependency name="UpdateAreny"/>
		</member>
		<member name="M:Init_Bank" syntax="Init_Bank()">
			<stacksize value="34"/>
			<referrer name="Init_Map"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicActor"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="Heist_Init"/>
			<dependency name="VW_BANK"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="bankCheckpoint"/>
			<dependency name="bankEnterPickup"/>
			<dependency name="bankExitPickup"/>
			<dependency name="format"/>
			<dependency name="strx"/>
		</member>
		<member name="M:Init_Business" syntax="Init_Business()">
			<stacksize value="10"/>
			<referrer name="Init_Map"/>
			<dependency name="CreateBusiness"/>
			<dependency name="I@"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iter_Single@Business"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="false"/>
			<dependency name="printf"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Init_Disks" syntax="Init_Disks()">
			<stacksize value="149"/>
			<referrer name="MinuteTimer"/>
			<referrer name="Init_Map"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="GetRandomCoord"/>
			<dependency name="IsPosInWater"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="diskActive"/>
			<dependency name="diskCount"/>
			<dependency name="diskLabel"/>
			<dependency name="diskPickup"/>
			<dependency name="diskReward"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="printf"/>
			<dependency name="true"/>
		</member>
		<member name="M:Init_Driving" syntax="Init_Driving()">
			<stacksize value="17"/>
			<referrer name="Init_Map"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicActor"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="VW_WORD"/>
			<dependency name="WordCP"/>
			<dependency name="acc_CreateDynamicPickup"/>
		</member>
		<member name="M:Init_Figure" syntax="Init_Figure()">
			<stacksize value="149"/>
			<referrer name="MinuteTimer"/>
			<referrer name="Init_Map"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="GetRandomCoord"/>
			<dependency name="IsPosInWater"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="figureActive"/>
			<dependency name="figureCount"/>
			<dependency name="figureLabel"/>
			<dependency name="figurePickup"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="printf"/>
			<dependency name="true"/>
		</member>
		<member name="M:Init_Fishing" syntax="Init_Fishing()">
			<stacksize value="162"/>
			<referrer name="Init_Map"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="FishDay"/>
			<dependency name="fishData"/>
			<dependency name="fishData"/>
			<dependency name="fish_name"/>
			<dependency name="format"/>
			<dependency name="printf"/>
			<dependency name="random"/>
		</member>
		<member name="M:Init_Games" syntax="Init_Games()">
			<stacksize value="3"/>
			<referrer name="Init_Map"/>
			<dependency name="GameDrawShowed"/>
			<dependency name="I@"/>
			<dependency name="UpdateGameDraw"/>
		</member>
		<member name="M:Init_GangBases" syntax="Init_GangBases()">
			<stacksize value="110"/>
			<referrer name="Init_Map"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="CreateDynamicRectangle"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="EOS"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="FALSE"/>
			<dependency name="GangBaseCost"/>
			<dependency name="GangBaseDoor"/>
			<dependency name="GangBaseDoorStatus"/>
			<dependency name="GangBaseDoorZ"/>
			<dependency name="GangBaseLabel"/>
			<dependency name="GangBaseName"/>
			<dependency name="GangBaseName"/>
			<dependency name="GangBaseOwner"/>
			<dependency name="GangBasePickup"/>
			<dependency name="GangBaseRectangle"/>
			<dependency name="GangBaseSell"/>
			<dependency name="GangBaseSellTime"/>
			<dependency name="GangBaseSettings"/>
			<dependency name="GangBaseSettings"/>
			<dependency name="GangBaseZone"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@GangBases"/>
			<dependency name="Iterator@GangBases"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="UpdateBaseLabel"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="base_pickup"/>
			<dependency name="base_position"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangBasesData"/>
			<dependency name="mysql_pquery"/>
			<dependency name="printf"/>
			<dependency name="sscanf"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Init_GangZones" syntax="Init_GangZones()">
			<stacksize value="240"/>
			<referrer name="Init_Gangs"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicRectangle"/>
			<dependency name="CreateGangZoneDraw"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="CreateZoneNumber"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="FALSE"/>
			<dependency name="I@"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@GangZones"/>
			<dependency name="Iterator@GangZones"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="UpdateGangZoneLabel"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGangZone"/>
			<dependency name="pGangZoneLabel"/>
			<dependency name="pGangZoneName"/>
			<dependency name="pGangZoneName"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePosition"/>
			<dependency name="pGangZonePosition"/>
			<dependency name="pGangZoneRectangle"/>
			<dependency name="printf"/>
			<dependency name="sscanf"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Init_Gangs" syntax="Init_Gangs()">
			<stacksize value="10"/>
			<referrer name="Init_Map"/>
			<dependency name="FetchGang"/>
			<dependency name="I@"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Init_GangZones"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iter_Single@Gangs"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="false"/>
			<dependency name="printf"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Init_Gielda" syntax="Init_Gielda()">
			<stacksize value="274"/>
			<referrer name="Init_Map"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="catstr"/>
			<dependency name="gieldaSellCP"/>
			<dependency name="gieldaSellLabel"/>
			<dependency name="gieldaSellOwned"/>
			<dependency name="gieldaSellPos"/>
			<dependency name="gieldaSellPos"/>
		</member>
		<member name="M:Init_Jobs" syntax="Init_Jobs()">
			<stacksize value="33"/>
			<referrer name="Init_Map"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicActor"/>
			<dependency name="JobDay"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="getJobName"/>
			<dependency name="getJobName"/>
			<dependency name="magazynierPickup"/>
			<dependency name="printf"/>
			<dependency name="random"/>
		</member>
		<member name="M:Init_Map" syntax="Init_Map()">
			<stacksize value="187"/>
			<referrer name="Init_MySQL"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDesign"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicActor"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="I@"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Init_AdminTop"/>
			<dependency name="Init_Areny"/>
			<dependency name="Init_Bank"/>
			<dependency name="Init_Business"/>
			<dependency name="Init_Disks"/>
			<dependency name="Init_Driving"/>
			<dependency name="Init_Figure"/>
			<dependency name="Init_Fishing"/>
			<dependency name="Init_Games"/>
			<dependency name="Init_GangBases"/>
			<dependency name="Init_Gangs"/>
			<dependency name="Init_Gielda"/>
			<dependency name="Init_Jobs"/>
			<dependency name="Init_Mining"/>
			<dependency name="Init_NoDM"/>
			<dependency name="Init_PrivCars"/>
			<dependency name="Init_Quiz"/>
			<dependency name="Init_Records"/>
			<dependency name="Init_Stations"/>
			<dependency name="Init_Teleports"/>
			<dependency name="Init_Truck"/>
			<dependency name="Init_Vehicles"/>
			<dependency name="Inline_UI_"/>
			<dependency name="J@"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="OreDay"/>
			<dependency name="RunObjects"/>
			<dependency name="WC_AddPlayerClass"/>
			<dependency name="_yT@MinuteTimer"/>
			<dependency name="_yT@SecondTimer"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="mysql_pquery"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Init_Mining" syntax="Init_Mining()">
			<stacksize value="21"/>
			<referrer name="MinuteTimer"/>
			<referrer name="Init_Map"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="GetRandomCoord"/>
			<dependency name="IsPosInWater"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="MineCount"/>
			<dependency name="MineCounter"/>
			<dependency name="MineCreated"/>
			<dependency name="MineLabel"/>
			<dependency name="MineLevel"/>
			<dependency name="MineMiners"/>
			<dependency name="MineObject"/>
			<dependency name="MineObject"/>
			<dependency name="MineType"/>
			<dependency name="OreDay"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdateMineLabel"/>
			<dependency name="math_random"/>
			<dependency name="mineData"/>
			<dependency name="mineData"/>
			<dependency name="mine_color"/>
			<dependency name="mine_name"/>
			<dependency name="msgAll"/>
			<dependency name="printf"/>
			<dependency name="random"/>
			<dependency name="true"/>
		</member>
		<member name="M:Init_MySQL" syntax="Init_MySQL()">
			<stacksize value="8"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="AUTO_RECONNECT"/>
			<dependency name="Init_Map"/>
			<dependency name="SendRconCommand"/>
			<dependency name="dbconn"/>
			<dependency name="mysql_connect"/>
			<dependency name="mysql_errno"/>
			<dependency name="mysql_init_options"/>
			<dependency name="mysql_set_option"/>
			<dependency name="print"/>
			<dependency name="true"/>
		</member>
		<member name="M:Init_NoDM" syntax="Init_NoDM()">
			<stacksize value="11"/>
			<referrer name="Init_Map"/>
			<dependency name="CreateDynamicRectangle"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="noDMRectangle"/>
			<dependency name="noDMZone"/>
			<dependency name="printf"/>
			<dependency name="zonesNoDM"/>
			<dependency name="zonesNoDM"/>
		</member>
		<member name="M:Init_PrivCars" syntax="Init_PrivCars()">
			<stacksize value="3"/>
			<referrer name="Init_Map"/>
			<dependency name="VehiclePrivate"/>
			<dependency name="VehiclePrivateID"/>
			<dependency name="false"/>
			<dependency name="pVeh"/>
			<dependency name="pVehDist"/>
			<dependency name="pVehEngine"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuelAmount"/>
			<dependency name="pVehGas"/>
			<dependency name="pVehGasEnabled"/>
			<dependency name="pVehKeys"/>
			<dependency name="pVehKeys"/>
			<dependency name="pVehLabel"/>
			<dependency name="pVehModel"/>
			<dependency name="pVehObject"/>
			<dependency name="pVehObject"/>
			<dependency name="pVehObjectCount"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectPos"/>
			<dependency name="pVehObjectPos"/>
			<dependency name="pVehObjectRot"/>
			<dependency name="pVehObjectRot"/>
			<dependency name="pVehOwner"/>
			<dependency name="pVehPosition"/>
			<dependency name="pVehPosition"/>
			<dependency name="pVehRegisterColor"/>
			<dependency name="pVehSell"/>
			<dependency name="pVehSellCost"/>
			<dependency name="pVehSellPoint"/>
			<dependency name="pVehSpawned"/>
		</member>
		<member name="M:Init_Quiz" syntax="Init_Quiz()">
			<stacksize value="6"/>
			<referrer name="Init_Map"/>
			<dependency name="SetTimer"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="quizData"/>
			<dependency name="quiz_active"/>
		</member>
		<member name="M:Init_Records" syntax="Init_Records()">
			<stacksize value="100"/>
			<referrer name="Init_Map"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="RECORD_PLAYERS"/>
			<dependency name="RECORD_TODAY"/>
			<dependency name="bans"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="connects"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="kicks"/>
			<dependency name="messages"/>
			<dependency name="printf"/>
			<dependency name="recordAmount"/>
			<dependency name="sscanf"/>
			<dependency name="strx"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Init_Stations" syntax="Init_Stations()">
			<stacksize value="18"/>
			<referrer name="Init_Map"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="FuelCostMoney"/>
			<dependency name="FuelStations"/>
			<dependency name="FuelStations"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="math_random"/>
			<dependency name="printf"/>
		</member>
		<member name="M:Init_Teleports" syntax="Init_Teleports()">
			<stacksize value="20"/>
			<referrer name="Init_Teleports"/>
			<referrer name="Init_Map"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="FALSE"/>
			<dependency name="I@"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Teleports"/>
			<dependency name="Iterator@Teleports"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="printf"/>
			<dependency name="strx"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_a"/>
			<dependency name="teleport_category"/>
			<dependency name="teleport_cmd"/>
			<dependency name="teleport_interior"/>
			<dependency name="teleport_name"/>
			<dependency name="teleport_spawn"/>
			<dependency name="teleport_x"/>
			<dependency name="teleport_y"/>
			<dependency name="teleport_z"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Init_Truck" syntax="Init_Truck()">
			<stacksize value="17"/>
			<referrer name="Init_Map"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="printf"/>
			<dependency name="random"/>
			<dependency name="truckCP"/>
			<dependency name="truckDay"/>
		</member>
		<member name="M:Init_Vehicles" syntax="Init_Vehicles()">
			<stacksize value="21"/>
			<referrer name="Init_Map"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="printf"/>
			<dependency name="serverVehicle"/>
			<dependency name="serverVehicleCount"/>
			<dependency name="serverVehiclePosition"/>
			<dependency name="serverVehiclePosition"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Inline_Debug" syntax="Inline_Debug(ptr)">
			<stacksize value="6"/>
			<dependency name="E_INLINE_CALL_CLAIM"/>
			<dependency name="E_INLINE_CALL_FLAGS"/>
			<dependency name="E_INLINE_CALL_FUNCTION"/>
			<dependency name="E_INLINE_CALL_HANDLER"/>
			<dependency name="E_INLINE_CALL_METADATA"/>
			<dependency name="E_INLINE_CALL_NULL"/>
			<dependency name="E_INLINE_CALL_RELEASE"/>
			<dependency name="E_INLINE_CALL_SIZE"/>
			<dependency name="E_INLINE_CALL_SOURCE"/>
			<dependency name="E_INLINE_CALL_TIMER"/>
			<dependency name="Indirect_DePtr_"/>
			<dependency name="Malloc_Reconcile"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="printf"/>
			<param name="ptr">
			</param>
		</member>
		<member name="M:Inline_DoCodeGen" syntax="Inline_DoCodeGen(scanner[], data[])">
			<stacksize value="30"/>
			<referrer name="Inline_FoundEnd"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitPadding"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="AsmSetErrorHandler"/>
			<dependency name="E_INLINE_DATA_LOCALS"/>
			<dependency name="E_INLINE_DATA_PARAMETERS"/>
			<dependency name="E_INLINE_DATA_PARAMETER_COUNT"/>
			<dependency name="E_INLINE_DATA_STACK"/>
			<dependency name="E_INLINE_DATA_START"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<dependency name="E_INLINE_DATA_USER"/>
			<dependency name="Inline_DoRetnGen"/>
			<dependency name="Inline_GenerateLocalsCopy"/>
			<dependency name="Inline_GeneratePostamble"/>
			<dependency name="Inline_GeneratePreamble"/>
			<dependency name="Inline_OnAsmError"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_DoRetnGen" syntax="Inline_DoRetnGen(ctx[], scanner[], data[])">
			<stacksize value="15"/>
			<referrer name="Inline_DoCodeGen"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AsmEmitAddrAlt"/>
			<dependency name="AsmEmitJump"/>
			<dependency name="AsmEmitPush"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitStorAlt"/>
			<dependency name="CodeScanGetMatchDisasm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchLength"/>
			<dependency name="DISASM_DONE"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmGetCurIp"/>
			<dependency name="DisasmGetNumOperands"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="DisasmNext"/>
			<dependency name="E_INLINE_DATA_LOCALS"/>
			<dependency name="E_INLINE_DATA_NAME"/>
			<dependency name="E_INLINE_DATA_STACK"/>
			<dependency name="E_INLINE_DATA_USER"/>
			<dependency name="OP_JUMP"/>
			<dependency name="OP_NOP"/>
			<dependency name="OP_RETN"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_ZERO_PRI"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sInlineEndPoint"/>
			<dependency name="YSI_g_sInlineLinkedList"/>
			<dependency name="YSI_g_sJumpOffset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_Found@return" syntax="Inline_Found@return(scanner[])">
			<stacksize value="27"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="CodeScanGetMatchAsm"/>
			<dependency name="CodeScanGetMatchStack"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundConst" syntax="Inline_FoundConst(scanner[], data[])">
			<stacksize value="5"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundConst2" syntax="Inline_FoundConst2(scanner[], data[])">
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundDescriptor" syntax="Inline_FoundDescriptor(size, data[])">
			<stacksize value="6"/>
			<referrer name="Inline_FoundVar"/>
			<referrer name="Inline_FoundRef"/>
			<dependency name="Debug_Kill_"/>
			<dependency name="Debug_Print0"/>
			<dependency name="E_INLINE_DATA_PARAMETERS"/>
			<dependency name="E_INLINE_DATA_PARAMETER_COUNT"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<dependency name="cellmax"/>
			<param name="size">
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundDestructor" syntax="Inline_FoundDestructor(scanner[])">
			<stacksize value="28"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitNop"/>
			<dependency name="AsmEmitStorPri"/>
			<dependency name="CodeScanGetMatchAddress"/>
			<dependency name="CodeScanGetMatchAsm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="YSI_g_sInlineEndPoint"/>
			<dependency name="YSI_g_sInlineLinkedList"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundEnd" syntax="Inline_FoundEnd(scanner[], data[])">
			<stacksize value="5"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanGetMatchAddress"/>
			<dependency name="CodeScanGetMatchLength"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<dependency name="E_INLINE_DATA_USER"/>
			<dependency name="Inline_DoCodeGen"/>
			<dependency name="Inline_StoreData"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundMid" syntax="Inline_FoundMid(scanner[], data[])">
			<stacksize value="5"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchStack"/>
			<dependency name="E_INLINE_DATA_CLEANUP"/>
			<dependency name="E_INLINE_DATA_STACK"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundRef" syntax="Inline_FoundRef(scanner[], data[])">
			<stacksize value="5"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<dependency name="Inline_FoundDescriptor"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundStart" syntax="Inline_FoundStart(scanner[], data[])">
			<stacksize value="5"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="CodeScanGetMatchAddress"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchStack"/>
			<dependency name="E_INLINE_DATA_LOCALS"/>
			<dependency name="E_INLINE_DATA_NAME"/>
			<dependency name="E_INLINE_DATA_PARAMETER_COUNT"/>
			<dependency name="E_INLINE_DATA_START"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundUsingInline" syntax="Inline_FoundUsingInline(scanner[])">
			<stacksize value="27"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitNop"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="CodeScanGetMatchAsm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchLength"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_FoundVar" syntax="Inline_FoundVar(scanner[], data[])">
			<stacksize value="5"/>
			<referrer name="Malloc_OnCodeInit"/>
			<dependency name="E_INLINE_DATA_STATE"/>
			<dependency name="Inline_FoundDescriptor"/>
			<param name="scanner">
				<paraminfo> [172] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_GenerateLocalsCopy" syntax="Inline_GenerateLocalsCopy(ctx[], parameters[], count)">
			<stacksize value="8"/>
			<referrer name="Inline_DoCodeGen"/>
			<dependency name="AsmEmitCallLabelStringize"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitLrefSPri"/>
			<dependency name="AsmEmitMovs"/>
			<dependency name="AsmEmitPushAlt"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="AsmEmitPushS"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitSysreqC"/>
			<dependency name="O@B_"/>
			<dependency name="O@V_"/>
			<dependency name="YSI_StrUnpack__"/>
			<dependency name="__ARR"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="charbits"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
				The code generation output context.
			</param>
			<param name="parameters">
				<paraminfo> [] </paraminfo>
				Information on the fake parameter types.
			</param>
			<param name="count">
				How many parameters there are.
			</param>
			      <remarks>  Generates the code which copies the parameters from <c>Callback_Call</c> in  to the local stack.  All those parameters are passed by reference, since the  function is a varargs function.  Since an inline function's "input"  parameters are just regular variables on the stack, they all need resolving,  which is what this code does.  Regular variables are dereferenced, and  arryas and strings are fully copied over.  Technically this doesn't ACTUALLY do the copy, but generates the code for  the copy.  </remarks> 
		</member>
		<member name="M:Inline_GenerateLocalsStore" syntax="Inline_GenerateLocalsStore(ctx[], parameters[], count)">
			<stacksize value="6"/>
			<referrer name="Inline_GeneratePostamble"/>
			<dependency name="AsmEmitPopAlt"/>
			<dependency name="AsmEmitSrefSAlt"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="charbits"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
				The code generation output context.
			</param>
			<param name="parameters">
				<paraminfo> [] </paraminfo>
				Information on the fake parameter types.
			</param>
			<param name="count">
				How many parameters there are.
			</param>
			      <remarks>  When the inline function ends, any parameters that were defined as being  passed by reference are copied back.  This is because true locals are never  by reference, so we fake it.  There is one bug with this method - aliased  variables won't work correctly:  <c>  inline Func(&amp;a, &amp;b)  {  ++a;   printf("%d", b);   }  new a = 10;  Callback_Call(using inline Func, a, a);  </c>  That will print <c>10</c> while the same code with a normal function will  print <c>11</c> thanks to <c>a</c> and <c>b</c> being aliased.  Maybe I  should add a <c>restrict</c> keyword, but even then I don't know how to  solve unrestricted variables (at best I can warn for them).  And this is not  a totally unheard of situation.  I have at least seen this for getting only  a player's height:  <c>  new z;  GetPlayerPos(playerid, z, z, z);  </c>  </remarks> 
		</member>
		<member name="M:Inline_GeneratePostamble" syntax="Inline_GeneratePostamble(ctx[], parameters[], count, isConst, locals, inlineParams)">
			<stacksize value="8"/>
			<referrer name="Inline_DoCodeGen"/>
			<dependency name="AsmEmitAdd"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitConstPri"/>
			<dependency name="AsmEmitJump"/>
			<dependency name="AsmEmitLctrl"/>
			<dependency name="AsmEmitLoadPri"/>
			<dependency name="AsmEmitLoadSAlt"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitStorPri"/>
			<dependency name="AsmEmitSub"/>
			<dependency name="AsmEmitSubAlt"/>
			<dependency name="I@"/>
			<dependency name="Inline_GenerateLocalsStore"/>
			<dependency name="YSI_g_sCallbackCallAddress"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="parameters">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="count">
			</param>
			<param name="isConst">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="locals">
			</param>
			<param name="inlineParams">
			</param>
		</member>
		<member name="M:Inline_GeneratePreamble" syntax="Inline_GeneratePreamble(ctx[], locals)">
			<stacksize value="5"/>
			<referrer name="Inline_DoCodeGen"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitLabelStringize"/>
			<dependency name="AsmEmitLctrl"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitStorSAlt"/>
			<dependency name="AsmEmitStorSPri"/>
			<dependency name="AsmEmitXchg"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="locals">
			</param>
		</member>
		<member name="M:Inline_MaybeConst_" syntax="Inline_MaybeConst_(slot)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="E_INLINE_CALL_TIMER"/>
			<dependency name="KillTimer"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="slot">
				<paraminfo>ResolvedAlloc </paraminfo>
			</param>
		</member>
		<member name="M:Inline_MaybeFree_" syntax="Inline_MaybeFree_(slot)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Malloc_Free"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
			</param>
		</member>
		<member name="M:Inline_NumArgs" syntax="Inline_NumArgs(frm)">
			<stacksize value="1"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<param name="frm">
				Frame to get the parameters from.
			</param>
			  <remarks>  Deals with y_hooks parameter count mangling.  Stolen from <c>Hooks_NumArgs</c>.  </remarks> 
		</member>
		<member name="M:Inline_OnAsmError" syntax="Inline_OnAsmError(ctx[], error)">
			<stacksize value="4"/>
			<referrer name="Inline_DoCodeGen"/>
			<dependency name="ASM_ERROR_LABEL_DUPLICATE"/>
			<dependency name="ASM_ERROR_LABEL_OVERFLOW"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="ASM_ERROR_OPCODE"/>
			<dependency name="ASM_ERROR_OPERAND"/>
			<dependency name="ASM_ERROR_SPACE"/>
			<dependency name="AsmGetError"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Hooks_NumArgs"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error">
				<paraminfo>AsmError </paraminfo>
			</param>
		</member>
		<member name="M:Inline_OnCodeInit" syntax="Inline_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="51"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="false"/>
		</member>
		<member name="M:Inline_OnRuntimeError" syntax="Inline_OnRuntimeError(code, &amp;suppress)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="Hooks_OnRuntimeError"/>
			<param name="code">
			</param>
			<param name="suppress">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Inline_Ref" syntax="Inline_Ref(&amp;ptr)">
			<stacksize value="1"/>
			<referrer name="Inline_UI_"/>
			<param name="ptr">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Inline_Reset" syntax="Inline_Reset(callback[])">
			<stacksize value="1"/>
			<dependency name="E_CALLBACK_DATA_ALLOC"/>
			<param name="callback">
				<paraminfo> [1] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_StoreData" syntax="Inline_StoreData(data[])">
			<stacksize value="37"/>
			<referrer name="Inline_FoundEnd"/>
			<dependency name="E_INLINE_DATA_LOCALS"/>
			<dependency name="E_INLINE_DATA_NAME"/>
			<dependency name="E_INLINE_DATA_PARAMETERS"/>
			<dependency name="E_INLINE_DATA_PARAMETER_COUNT"/>
			<dependency name="E_INLINE_DATA_START"/>
			<dependency name="GetTagIDFromName"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="charbits"/>
			<param name="data">
				<paraminfo> [41] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_Strcmp" syntax="Inline_Strcmp(string1, string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="Callback_InlineByName"/>
			<param name="string1">
				First string as a pointer.
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
				Second string as a string.
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
				Do a case-insensitive search.
			</param>
			<param name="length">
				Length of string to compare over.
			</param>
			        <remarks>  Just <c>strcmp</c>, but pretending the first parameter is a value not an  array so that we can trick the compiler in to accepting a pointer.  </remarks> 
		</member>
		<member name="M:Inline_UI_" syntax="Inline_UI_(&amp;header)">
			<stacksize value="13"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Init_Records"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="Init_Business"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickEx"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="Init_Map"/>
			<dependency name="Callback_CallHandler_"/>
			<dependency name="Callback_Claim_"/>
			<dependency name="Callback_Release_"/>
			<dependency name="E_INLINE_CALL"/>
			<dependency name="E_INLINE_CALL_CLAIM"/>
			<dependency name="E_INLINE_CALL_FLAGS"/>
			<dependency name="E_INLINE_CALL_FUNCTION"/>
			<dependency name="E_INLINE_CALL_HANDLER"/>
			<dependency name="E_INLINE_CALL_METADATA"/>
			<dependency name="E_INLINE_CALL_NULL"/>
			<dependency name="E_INLINE_CALL_PARAMS"/>
			<dependency name="E_INLINE_CALL_RELEASE"/>
			<dependency name="E_INLINE_CALL_SIZE"/>
			<dependency name="E_INLINE_CALL_SOURCE"/>
			<dependency name="E_INLINE_CALL_TIMER"/>
			<dependency name="Indirect_Ptr_"/>
			<dependency name="Inline_NumArgs"/>
			<dependency name="Inline_Ref"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="Malloc_Resolve"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="RawMemCpy_"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFakeE_INLINE_CALL"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="charbits"/>
			<dependency name="e_INLINE_FLAG_CONST"/>
			<dependency name="false"/>
			<param name="header">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Inline_UP_" syntax="Inline_UP_(func[], spec[])">
			<stacksize value="5"/>
			<dependency name="GetLocalFunction"/>
			<dependency name="I@"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="spec">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:InterpolateColor" syntax="InterpolateColor(startColour, endColour, value, maxvalue, minvalue)">
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="InterpolateColourLinear"/>
			<dependency name="floatdiv"/>
			<param name="startColour">
			</param>
			<param name="endColour">
			</param>
			<param name="value">
			</param>
			<param name="maxvalue">
			</param>
			<param name="minvalue">
			</param>
		</member>
		<member name="M:InterpolateColorGamma" syntax="InterpolateColorGamma(startColour, endColour, fraction)">
			<stacksize value="6"/>
			<dependency name="Debug_Print0"/>
			<dependency name="InterpolateColourGamma"/>
			<param name="startColour">
			</param>
			<param name="endColour">
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:InterpolateColorLinear" syntax="InterpolateColorLinear(startColour, endColour, fraction)">
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Debug_Print0"/>
			<dependency name="InterpolateColourLinear"/>
			<param name="startColour">
			</param>
			<param name="endColour">
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:InterpolateColorSRGB" syntax="InterpolateColorSRGB(startColour, endColour, fraction)">
			<stacksize value="6"/>
			<dependency name="Debug_Print0"/>
			<dependency name="InterpolateColourSRGB"/>
			<param name="startColour">
			</param>
			<param name="endColour">
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:InterpolateColour" syntax="InterpolateColour(startColour, endColour, value, maxvalue, minvalue)">
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="InterpolateColourLinear"/>
			<dependency name="floatdiv"/>
			<param name="startColour">
			</param>
			<param name="endColour">
			</param>
			<param name="value">
			</param>
			<param name="maxvalue">
			</param>
			<param name="minvalue">
			</param>
		</member>
		<member name="M:InterpolateColourGamma" syntax="InterpolateColourGamma(startColour, endColour, fraction)">
			<stacksize value="14"/>
			<referrer name="InterpolateColorGamma"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<summary>  InterpolateColourGamma(startColour, endColour, Float:fraction);  </summary>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs gamma interpolation between the colours, which is a  good balance between complexity and perception.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColourLinear" syntax="InterpolateColourLinear(startColour, endColour, fraction)">
			<stacksize value="9"/>
			<referrer name="InterpolateColorLinear"/>
			<referrer name="InterpolateColor"/>
			<referrer name="InterpolateColour"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="floatround"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<summary>  InterpolateColourLinear(startColour, endColour, Float:fraction);  </summary>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs linear interpolation between the colours, which isn't  usually the best way wrt human vision, but is fast.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColourSRGB" syntax="InterpolateColourSRGB(startColour, endColour, fraction)">
			<stacksize value="14"/>
			<referrer name="InterpolateColorSRGB"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CIEToSRGB"/>
			<dependency name="SRGBToCIE"/>
			<dependency name="floatround"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<summary>  InterpolateColourSRGB(startColour, endColour, Float:fraction);  </summary>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs full sRGB colour space interpolation, which is more  exact even than gamma interpolation, but also a lot slower.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:Is2DPointInRangeOfPoint" syntax="Is2DPointInRangeOfPoint(x, y, _x, _y, range)">
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsActorStreamedIn" syntax="IsActorStreamedIn(actorid, playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<param name="actorid">
				The ID of the actor
			</param>
			<param name="playerid">
				The ID of the player
			</param>
			<library>a_actor</library>  <summary>Checks if an actor is streamed in for a player.</summary>      <seealso name="CreateActor" />  <seealso name="IsPlayerStreamedIn" />  <remarks>This function was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <returns><b><c>1</c></b> if the actor is streamed in for the player, or <b><c>0</c></b> if it is  not.</returns> 
		</member>
		<member name="M:IsAir" syntax="IsAir(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsModelAir"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsAndroidPlayer" syntax="IsAndroidPlayer(playerid)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsAntiCheatEnabled" syntax="IsAntiCheatEnabled(code)">
			<stacksize value="4"/>
			<dependency name="ac_IsAntiCheatEnabled"/>
			<param name="code">
			</param>
		</member>
		<member name="M:IsAntiCheatEnabledForPlayer" syntax="IsAntiCheatEnabledForPlayer(playerid, code)">
			<stacksize value="5"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_IsAntiCheatEnabledForPlayer"/>
			<param name="playerid">
			</param>
			<param name="code">
			</param>
		</member>
		<member name="M:IsAntiNOPEnabled" syntax="IsAntiNOPEnabled(nopcode)">
			<stacksize value="4"/>
			<dependency name="ac_IsAntiNOPEnabled"/>
			<param name="nopcode">
			</param>
		</member>
		<member name="M:IsAntiNOPEnabledForPlayer" syntax="IsAntiNOPEnabledForPlayer(playerid, nopcode)">
			<stacksize value="5"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_IsAntiNOPEnabledForPlayer"/>
			<param name="playerid">
			</param>
			<param name="nopcode">
			</param>
		</member>
		<member name="M:IsBlockCommand" syntax="IsBlockCommand(playerid, nameblock[], time)">
			<stacksize value="189"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="pc_cmd_naj"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_siema"/>
			<referrer name="pc_cmd_nara"/>
			<referrer name="pc_cmd_jebac"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="pc_cmd_tune"/>
			<dependency name="ConvertTime"/>
			<dependency name="ConvertTime"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetPVarInt"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="msg"/>
			<param name="playerid">
			</param>
			<param name="nameblock">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:IsBoat" syntax="IsBoat(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsModelBoat"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsBulletWeapon" syntax="IsBulletWeapon(weaponid)">
			<stacksize value="1"/>
			<referrer name="SetWeaponDamage"/>
			<referrer name="SetWeaponMaxRange"/>
			<referrer name="GetWeaponMaxRange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="pr_ip_WC_PLAYER_SYNC"/>
			<referrer name="ProcessDamage"/>
			<referrer name="InflictDamage"/>
			<dependency name="WEAPON_COLT45"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="WEAPON_SNIPER"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:IsCar" syntax="IsCar(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsModelCar"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsCrashDetectPresent" syntax="IsCrashDetectPresent()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
		</member>
		<member name="M:IsDamageFeedActive" syntax="IsDamageFeedActive(playerid)">
			<stacksize value="1"/>
			<referrer name="WC_DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedAddHit"/>
			<dependency name="s_DamageFeed"/>
			<dependency name="s_DamageFeedPlayer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsHex" syntax="IsHex(str[])">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<referrer name="ishex"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check.
			</param>
			  <returns>  true/false.  </returns> 
		</member>
		<member name="M:IsHighRateWeapon" syntax="IsHighRateWeapon(weaponid)">
			<stacksize value="1"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ProcessDamage"/>
			<referrer name="OnPlayerDamageDone"/>
			<dependency name="WEAPON_DROWN"/>
			<dependency name="WEAPON_FIREEXTINGUISHER"/>
			<dependency name="WEAPON_FLAMETHROWER"/>
			<dependency name="WEAPON_SPRAYCAN"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:IsIpProxy" syntax="IsIpProxy(geolite_ip[])">
			<stacksize value="51"/>
			<referrer name="IsPlayerUsingProxy"/>
			<dependency name="GEOLITE_city_db"/>
			<dependency name="GEOLITE_country_db"/>
			<dependency name="GetIpCity"/>
			<dependency name="GetIpCountry"/>
			<dependency name="strcmp"/>
			<param name="geolite_ip">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsMeleeWeapon" syntax="IsMeleeWeapon(weaponid)">
			<stacksize value="1"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ProcessDamage"/>
			<referrer name="InflictDamage"/>
			<dependency name="WEAPON_CANE"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:IsModelAir" syntax="IsModelAir(modelid)">
			<stacksize value="1"/>
			<referrer name="IsAir"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:IsModelBoat" syntax="IsModelBoat(vehicleid)">
			<stacksize value="3"/>
			<referrer name="IsBoat"/>
			<dependency name="GetVehicleModel"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsModelCar" syntax="IsModelCar(modelid)">
			<stacksize value="1"/>
			<referrer name="IsCar"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:IsModelMotor" syntax="IsModelMotor(modelid)">
			<stacksize value="1"/>
			<referrer name="IsMotor"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:IsMotor" syntax="IsMotor(vehicleid)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsModelMotor"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsNaN" syntax="IsNaN(value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The IEEE754 floating point number (<c>Float:</c>) to check.
			</param>
			  <returns>  An IEEE754 floating-point number is defined as Not-A-Number when all the exponent bits are set,  and the mantissa is non-zero.  The sign bit is ignored, so we first remove that and test the  result is <c>&gt; 0x7F800000</c>.  Because any signed number bigger than that must have all the  MSBs set, plus at least one more.  </returns> 
		</member>
		<member name="M:IsNull" syntax="IsNull(str[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check if is null.
			</param>
			  <remarks>  Uses a new shorter and branchless method, which also works with offsets so  this is valid:  <code>  new str[32]; IsNull(str[5]);  </code>  </remarks> 
		</member>
		<member name="M:IsNumeric" syntax="IsNumeric(str[])">
			<tagname value="bool"/>
			<stacksize value="2"/>
			<referrer name="isnumeric"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check
			</param>
			  <remarks>  Checks if a given string is numeric.  </remarks> 
		</member>
		<member name="M:IsObjectInSphere" syntax="IsObjectInSphere(objectid, x, y, z, radius)">
			<stacksize value="10"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetObjectPos"/>
			<dependency name="floatabs"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<dependency name="floatsub"/>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsOdd" syntax="IsOdd(value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				Value to check if is odd.
			</param>
			 
		</member>
		<member name="M:IsOpcodeRelocationRequired" syntax="IsOpcodeRelocationRequired()">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="CodeScanMatcherInit_"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="RelocateOpcode"/>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:IsOpcodeValid" syntax="IsOpcodeValid(opcode)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="AsmEmitPadding"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:IsPCPlayer" syntax="IsPCPlayer(playerid)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerBehindPlayer" syntax="IsPlayerBehindPlayer(playerid, targetid, diff)">
			<stacksize value="15"/>
			<referrer name="InflictDamage"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="AngleBetweenPoints"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="floatabs"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
			<param name="diff">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
			<referrer name="IsPCPlayer"/>
			<referrer name="IsAndroidPlayer"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="Logger_P"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="_@yHOnScriptExit@000"/>
			<referrer name="acc_GetPlayerMoney"/>
			<referrer name="EnableAntiCheatForPlayer"/>
			<referrer name="EnableAntiNOPForPlayer"/>
			<referrer name="IsAntiCheatEnabledForPlayer"/>
			<referrer name="IsAntiNOPEnabledForPlayer"/>
			<referrer name="AntiCheatGetSpeed"/>
			<referrer name="AntiCheatGetAnimationIndex"/>
			<referrer name="AntiCheatGetDialog"/>
			<referrer name="AntiCheatGetInterior"/>
			<referrer name="AntiCheatGetEnterVehicle"/>
			<referrer name="AntiCheatGetEnterVehicleSeat"/>
			<referrer name="AntiCheatGetVehicleID"/>
			<referrer name="AntiCheatGetVehicleSeat"/>
			<referrer name="AntiCheatGetWeapon"/>
			<referrer name="AntiCheatGetWeaponInSlot"/>
			<referrer name="AntiCheatGetAmmoInSlot"/>
			<referrer name="AntiCheatGetSpecialAction"/>
			<referrer name="AntiCheatGetLastSpecialAction"/>
			<referrer name="AntiCheatGetLastShotWeapon"/>
			<referrer name="AntiCheatGetLastPickup"/>
			<referrer name="AntiCheatGetLastUpdateTime"/>
			<referrer name="AntiCheatGetLastReloadTime"/>
			<referrer name="AntiCheatGetLastEnteredVehTime"/>
			<referrer name="AntiCheatGetLastShotTime"/>
			<referrer name="AntiCheatGetLastSpawnTime"/>
			<referrer name="AntiCheatIntEnterExitsIsEnabled"/>
			<referrer name="AntiCheatStuntBonusIsEnabled"/>
			<referrer name="AntiCheatIsInModShop"/>
			<referrer name="AntiCheatIsInSpectate"/>
			<referrer name="AntiCheatIsFrozen"/>
			<referrer name="AntiCheatIsDead"/>
			<referrer name="AntiCheatIsConnected"/>
			<referrer name="AntiCheatKickWithDesync"/>
			<referrer name="AntiCheatIsKickedWithDesync"/>
			<referrer name="SetVehicleFakePosForPlayer"/>
			<referrer name="SetVehicleFakeZAngleForPlayer"/>
			<referrer name="ac_Timer"/>
			<referrer name="AntiCheatGetHealth"/>
			<referrer name="AntiCheatGetArmour"/>
			<referrer name="AntiCheatGetWeaponData"/>
			<referrer name="AntiCheatGetPos"/>
			<referrer name="AntiCheatGetSpawnPos"/>
			<referrer name="AntiCheatGetSpawnWeapon"/>
			<referrer name="ac_KickWithCode"/>
			<referrer name="SortArrayUsingCompInto_Entry"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="EnableHealthBarForPlayer"/>
			<referrer name="SetDamageFeedForPlayer"/>
			<referrer name="DamagePlayer"/>
			<referrer name="WC_GetPlayerTeam"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="UpdateSyncData"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<referrer name="WC_DamageFeedUpdate"/>
			<referrer name="FreezeSyncPacket"/>
			<referrer name="SetFakeHealth"/>
			<referrer name="SetFakeArmour"/>
			<referrer name="SetFakeFacingAngle"/>
			<referrer name="SendLastSyncPacket"/>
			<referrer name="ClearAnimationsForPlayer"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="CheckPlayerRaported"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="CheckSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopDA"/>
			<referrer name="UpdateRC"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_re"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="foundPlayer"/>
			<referrer name="getLost"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>a_players</library>  <summary>Checks if a player is connected (if an ID is taken by a connected player).</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <remarks>This function can be omitted in a lot of cases.  Many other functions already have some  sort of connection check built in.</remarks>  <returns><b><c>1</c></b> if the player is connected, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerDying" syntax="IsPlayerDying(playerid)">
			<stacksize value="1"/>
			<referrer name="WC_CbugPunishment"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<dependency name="false"/>
			<dependency name="s_IsDying"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInAnyVehicle" syntax="IsPlayerInAnyVehicle(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ProcessDamage"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnPlayerUpdate@0J"/>
			<referrer name="IsPlayerNearSellPoint"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Y"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Z"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="pc_cmd_tune"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>a_players</library>  <summary>Check if a player is inside any vehicle (as a driver or passenger).</summary>    <seealso name="IsPlayerInVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <returns><b><c>1</c></b> if the player is in a vehicle, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInArea" syntax="IsPlayerInArea(playerid, minx, miny, maxx, maxy)">
			<stacksize value="9"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="CountPlayerHeist"/>
			<referrer name="IsPlayerInGielda"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="CheckMysliwyZone"/>
			<referrer name="CheckGrzybiarzZone"/>
			<referrer name="UpdateChowany"/>
			<referrer name="UpdateZP"/>
			<referrer name="UpdateBTR"/>
			<referrer name="UpdateWG"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerInCheckpoint" syntax="IsPlayerInCheckpoint(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="WC_IsPlayerInCheckpoint"/>
			<referrer name="PlayerDeath"/>
			<param name="playerid">
				The player you want to know the status of
			</param>
			<library>a_players</library>  <summary>Check if the player is currently inside a checkpoint, this could be used for properties  or teleport points for example.</summary>    <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <returns><b><c>0</c></b> if player isn't in his checkpoint else <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:IsPlayerInDynamicArea" syntax="IsPlayerInDynamicArea(playerid, areaid, recheck)">
			<attribute name="native"/>
			<referrer name="GetZoneDamageId"/>
			<referrer name="_@yHOnPlayerDeath@0N"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckGangWar"/>
			<referrer name="GetNearestBase"/>
			<referrer name="WC_OnPlayerDamage"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
			<param name="recheck">
			</param>
		</member>
		<member name="M:IsPlayerInDynamicCP" syntax="IsPlayerInDynamicCP(playerid, checkpointid)">
			<attribute name="native"/>
			<referrer name="IsPlayerNearBankCP"/>
			<referrer name="IsPlayerNearSellPoint"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:IsPlayerInGielda" syntax="IsPlayerInGielda(playerid)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_pbuy"/>
			<dependency name="IsPlayerInArea"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInRaceCheckpoint" syntax="IsPlayerInRaceCheckpoint(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="WC_IsPlayerInRaceCheckpoint"/>
			<referrer name="PlayerDeath"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>a_players</library>  <summary>Check if the player is inside their current set race checkpoint  (<a href="#SetPlayerRaceCheckpoint">SetPlayerRaceCheckpoint</a>).</summary>    <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <returns><b><c>1</c></b> is the player is in a race checkpoint, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInRangeOfPoint" syntax="IsPlayerInRangeOfPoint(playerid, range, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_InRestaurant"/>
			<referrer name="ac_InAmmuNation"/>
			<referrer name="ac_InPayNSpray"/>
			<referrer name="ac_NearVendingMachine"/>
			<referrer name="ac_InCasino"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="CheckVaultNear"/>
			<referrer name="SendLocalMessage"/>
			<referrer name="WordPickup"/>
			<referrer name="GetNearestStation"/>
			<referrer name="GetNearestBase"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0S"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="GetNearestTree"/>
			<referrer name="GetNearestGrzyb"/>
			<referrer name="GetNearestBusiness"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<referrer name="GetNearestSlots"/>
			<referrer name="GetNearestFortune"/>
			<referrer name="GetNearestRoulette"/>
			<referrer name="GetNearestOre"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<referrer name="SecondTimer"/>
			<param name="playerid">
				The ID of the player
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
				The furthest distance the player can be from the point to be in range
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate of the point to check the range to
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate of the point to check the range to
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate of the point to check the range to
			</param>
			<library>a_players</library>  <summary>Checks if a player is in range of a point.  This native function is faster than the PAWN  implementation using distance formula.</summary>            <seealso name="GetPlayerDistanceFromPoint" />  <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="GetPlayerPos" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <returns><b><c>1</c></b> if the player is in range, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInVehicle" syntax="IsPlayerInVehicle(playerid, vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="RespawnVehicles"/>
			<param name="playerid">
				ID of the player
			</param>
			<param name="vehicleid">
				ID of the vehicle
			</param>
			<library>a_players</library>  <summary>Checks if a player is in a specific vehicle.</summary>      <seealso name="IsPlayerInAnyVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <returns><b><c>1</c></b> if the player is in the vehicle, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerNPC" syntax="IsPlayerNPC(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="T3_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnVehicleSirenStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>a_samp</library>  <summary>Check if a player is an actual player or an NPC.</summary>    <seealso name="ConnectNPC" />  <seealso name="IsPlayerAdmin" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <returns><b><c>1</c></b> if the player is an NPC, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerNearBankCP" syntax="IsPlayerNearBankCP(playerid)">
			<stacksize value="6"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@08"/>
			<dependency name="IsPlayerInDynamicCP"/>
			<dependency name="bankCheckpoint"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerNearSellPoint" syntax="IsPlayerNearSellPoint(playerid)">
			<stacksize value="6"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInDynamicCP"/>
			<dependency name="gieldaSellCP"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerProgressBarVisible" syntax="IsPlayerProgressBarVisible(playerid, barid)">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="changeBarColor"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_show"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerSpawned" syntax="IsPlayerSpawned(playerid)">
			<attribute name="native"/>
			<referrer name="OnIncomingRPC"/>
			<referrer name="StartQuiz"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="_@yHSetPlayerColor@13"/>
			<referrer name="SecondTimer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerStreamedIn" syntax="IsPlayerStreamedIn(targetid, playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="PR_SendPacketToPlayerStream"/>
			<referrer name="PR_SendRPCToPlayerStream"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="UpdateSyncData"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<param name="targetid">
				The ID of the player to check is streamed in
			</param>
			<param name="playerid">
				The ID of the player to check if playerid is streamed in for
			</param>
			<library>a_players</library>  <summary>Checks if a player is streamed in another player's client.</summary>      <seealso name="IsActorStreamedIn" />  <seealso name="IsVehicleStreamedIn" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <seealso name="OnVehicleStreamIn" />  <seealso name="OnVehicleStreamOut" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>Players aren't streamed in on their own client, so if playerid is the same as targetid it  will return false!</remarks>  <remarks>Players stream out if they are more than <b><c>150</c></b> meters away (see <c>server.cfg</c>  - <c>stream_distance</c>)</remarks>  <returns><b><c>1</c></b> if the player is streamed in, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerSwimming" syntax="IsPlayerSwimming(playerid)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<referrer name="pc_cmd_low"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerTextDrawVisible" syntax="IsPlayerTextDrawVisible(playerid, textdrawid)">
			<attribute name="native"/>
			<referrer name="changePlayerHudColor"/>
			<param name="playerid">
			</param>
			<param name="textdrawid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerUsingProxy" syntax="IsPlayerUsingProxy(playerid)">
			<stacksize value="21"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IsIpProxy"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPosInWater" syntax="IsPosInWater(x, y, z, dist, height)">
			<stacksize value="13"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="Init_Mining"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="dist">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsPrintableAscii" syntax="IsPrintableAscii(c)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="ToPrintableAscii"/>
			<param name="c">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:IsRPName" syntax="IsRPName(name[], casing, longNames)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="HasRPName"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name to test.
			</param>
			<param name="casing">
				<paraminfo>bool </paraminfo>
				Check for string casing?  I.e. allow <c>James</c> but  not <c>james</c>.
			</param>
			<param name="longNames">
				<paraminfo>bool </paraminfo>
				Allow more than two name parts?
			</param>
			<summary>  IsRPName  </summary>        <remarks>  Is this name in the form <c>First_Last</c>?  </remarks> 
		</member>
		<member name="M:IsTagIDEmpty" syntax="IsTagIDEmpty(tag)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTagIDStrong" syntax="IsTagIDStrong(tag)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="IsTagIndexStrong"/>
			<param name="tag">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTagIDWeak" syntax="IsTagIDWeak(tag)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="IsTagIndexWeak"/>
			<param name="tag">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTagIndexEmpty" syntax="IsTagIndexEmpty(tag)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTagIndexStrong" syntax="IsTagIndexStrong(tag)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetTagInfo"/>
			<dependency name="IsTagIDStrong"/>
			<param name="tag">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTagIndexWeak" syntax="IsTagIndexWeak(tag)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetTagInfo"/>
			<dependency name="IsTagIDWeak"/>
			<param name="tag">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTagNameEmpty" syntax="IsTagNameEmpty(tag[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTagNameStrong" syntax="IsTagNameStrong(tag[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTagNameWeak" syntax="IsTagNameWeak(tag[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:IsTextDrawVisibleForPlayer" syntax="IsTextDrawVisibleForPlayer(playerid, textdrawid)">
			<attribute name="native"/>
			<referrer name="changeHudColor"/>
			<param name="playerid">
			</param>
			<param name="textdrawid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:IsTrailerAttachedToVehicle" syntax="IsTrailerAttachedToVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="CheckTruckTimer"/>
			<param name="vehicleid">
				The ID of the vehicle to check for trailers
			</param>
			<library>a_vehicles</library>  <summary>Checks if a vehicle has a trailer attached to it.  Use <a href="#GetVehicleTrailer">GetVehicleTrailer</a>  to get the vehicle ID of the trailer (if any).</summary>    <seealso name="GetVehicleTrailer" />  <seealso name="AttachTrailerToVehicle" />  <seealso name="DetachTrailerFromVehicle" />  <returns><b><c>1</c></b> if the vehicle has a trailer attached, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsValidActor" syntax="IsValidActor(actorid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<param name="actorid">
				The ID of the actor to check
			</param>
			<library>a_actor</library>  <summary>Checks if an actor ID is valid.</summary>    <remarks>This function was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <returns><b><c>1</c></b> if the actor is valid, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsValidDynamic3DTextLabel" syntax="IsValidDynamic3DTextLabel(id)">
			<attribute name="native"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="Truck_Stop"/>
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="Init_Mining"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<param name="id">
				<paraminfo>Text3D </paraminfo>
			</param>
		</member>
		<member name="M:IsValidDynamicActor" syntax="IsValidDynamicActor(actorid)">
			<attribute name="native"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="ExitPraca"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:IsValidDynamicArea" syntax="IsValidDynamicArea(areaid)">
			<attribute name="native"/>
			<referrer name="pc_cmd_evend"/>
			<param name="areaid">
			</param>
		</member>
		<member name="M:IsValidDynamicCP" syntax="IsValidDynamicCP(checkpointid)">
			<attribute name="native"/>
			<referrer name="Truck_Stop"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="ExitPraca"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="StartWP"/>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:IsValidDynamicMapIcon" syntax="IsValidDynamicMapIcon(iconid)">
			<attribute name="native"/>
			<referrer name="Truck_Stop"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="ExitPraca"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
			<param name="iconid">
			</param>
		</member>
		<member name="M:IsValidDynamicObject" syntax="IsValidDynamicObject(objectid)">
			<attribute name="native"/>
			<referrer name="CreateKurczak"/>
			<referrer name="DestroyKurczak"/>
			<referrer name="_@yHDestroyVehicle@0K"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
			<referrer name="Init_Mining"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="StartSK"/>
			<referrer name="StopSK"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:IsValidDynamicPickup" syntax="IsValidDynamicPickup(pickupid)">
			<attribute name="native"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="BombaExplode"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="Init_GangBases"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="RoyalePickup"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:IsValidDynamicRaceCP" syntax="IsValidDynamicRaceCP(checkpointid)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="ExitPraca"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_exit"/>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:IsValidGangBuffer" syntax="IsValidGangBuffer(buffer[], min, max)">
			<stacksize value="4"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<dependency name="strlen"/>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="min">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:IsValidNickName" syntax="IsValidNickName(name[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_fake"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsValidObject" syntax="IsValidObject(objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PHY_InitObject"/>
			<param name="objectid">
				The ID of the object to check the existence of
			</param>
			<library>a_objects</library>  <summary>Checks if an object with the ID provided exists.</summary>    <seealso name="IsValidPlayerObject" />  <seealso name="CreateObject" />  <seealso name="DestroyObject" />  <remarks>This is to check if an object exists, not if a model is valid.</remarks>  <returns><b><c>1</c></b> if the object exists, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsValidPlayerProgressBar" syntax="IsValidPlayerProgressBar(playerid, barid)">
			<stacksize value="6"/>
			<referrer name="DestroyPlayerProgressBar"/>
			<referrer name="IsPlayerProgressBarVisible"/>
			<referrer name="ShowPlayerProgressBar"/>
			<referrer name="HidePlayerProgressBar"/>
			<referrer name="GetPlayerProgressBarPos"/>
			<referrer name="SetPlayerProgressBarPos"/>
			<referrer name="GetPlayerProgressBarWidth"/>
			<referrer name="SetPlayerProgressBarWidth"/>
			<referrer name="GetPlayerProgressBarHeight"/>
			<referrer name="SetPlayerProgressBarHeight"/>
			<referrer name="GetPlayerProgressBarColour"/>
			<referrer name="SetPlayerProgressBarColour"/>
			<referrer name="GetPlayerProgressBarMaxValue"/>
			<referrer name="SetPlayerProgressBarMaxValue"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="GetPlayerProgressBarValue"/>
			<referrer name="GetPlayerProgressBarDirection"/>
			<referrer name="SetPlayerProgressBarDirection"/>
			<referrer name="_progress2_renderBar"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@pbar_Index"/>
			<dependency name="Iterator@pbar_Index"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:IsValidVehicle" syntax="IsValidVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="Truck_Stop"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="ExitPraca"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="pc_cmd_exit"/>
			<param name="vehicleid">
				The ID of the vehicle to check
			</param>
			<library>a_vehicles</library>  <summary>Check if a vehicle ID is valid.</summary>    <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" />  <returns>true or false.</returns> 
		</member>
		<member name="M:IsVehicleStreamedIn" syntax="IsVehicleStreamedIn(vehicleid, playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="PR_SendPacketToVehicleStream"/>
			<referrer name="PR_SendRPCToVehicleStream"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<param name="vehicleid">
				The ID of the vehicle to check
			</param>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>a_vehicles</library>  <summary>Checks if a vehicle is streamed in for a player.  Only nearby vehicles are streamed in (visible)  for a player.</summary>      <seealso name="IsPlayerStreamedIn" />  <seealso name="OnVehicleStreamIn" />  <seealso name="OnVehicleStreamOut" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>0</c></b>: Vehicle is not streamed in for the player, or the function failed to execute (player  and/or vehicle do not exist).<br />  <b><c>1</c></b>: Vehicle is streamed in for the player.  </returns> 
		</member>
		<member name="M:Iter_ActorDo" syntax="Iter_ActorDo(add, actorid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Actor"/>
			<dependency name="Iterator@Actor"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="actorid">
			</param>
		</member>
		<member name="M:Iter_AddStaticVehicle" syntax="Iter_AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2)">
			<stacksize value="10"/>
			<referrer name="acc_AddStaticVehicle"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="AddStaticVehicle"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="YSI_gsIter_VehicleDo"/>
			<dependency name="YSI_gsii"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:Iter_AddStaticVehicleEx" syntax="Iter_AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2, respawn_delay, addSiren)">
			<stacksize value="12"/>
			<referrer name="acc_AddStaticVehicleEx"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="AddStaticVehicleEx"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="YSI_gsIter_VehicleDo"/>
			<dependency name="YSI_gsii"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Iter_Add_InternalC" syntax="Iter_Add_InternalC(&amp;count, array[], size, value)">
			<stacksize value="3"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="PHY_InitObject"/>
			<referrer name="PHY_CreateWall"/>
			<referrer name="PHY_CreateCylinder"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="givePremium"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="Init_Teleports"/>
			<referrer name="AddTeleport"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="CreateBusiness"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="pc_cmd_fake"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Array start index.
			</param>
			<param name="value">
				Item to add.
			</param>
			        <remarks>  Adds a value to a given iterator set.  Now detects when you try and add the  last item multiple times, as well as all the other items.  Now simplified  even further with the new internal representation.  The modulo code is for  iterator reversal.  </remarks> 
		</member>
		<member name="M:Iter_Add_InternalD" syntax="Iter_Add_InternalD(&amp;count, array[], start, size, value)">
			<stacksize value="3"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_All_Internal" syntax="Iter_All_Internal(array[], size, value)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_Alloc_InternalC" syntax="Iter_Alloc_InternalC(&amp;count, array[], size, ...)">
			<stacksize value="4"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Array start index.
			</param>
			<param name="...">
			</param>
			      <remarks>  Finds the first free slot in the iterator and add it.  Excepting requested  values.  </remarks> 
		</member>
		<member name="M:Iter_Alloc_InternalD" syntax="Iter_Alloc_InternalD(&amp;count, array[], start, size, ...)">
			<stacksize value="4"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:Iter_Clear_InternalC" syntax="Iter_Clear_InternalC(array[], size, entries, ...)">
			<stacksize value="5"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="_@yHOnPlayerDisconnect@000"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StopChowany"/>
			<referrer name="StopZP"/>
			<referrer name="StopDA"/>
			<referrer name="StopRC"/>
			<referrer name="StopBTR"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="StopWP"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="pc_cmd_evend"/>
			<dependency name="setarg"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of information.
			</param>
			<param name="entries">
				Size of the count data.
			</param>
			<param name="...">
				Optional single multi-iterator to clear.
			</param>
			        <remarks>  Resets an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Clear_InternalD" syntax="Iter_Clear_InternalD(array[], size, entries, elems, counts[], start)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of base array.
			</param>
			<param name="entries">
				Size of the count data.
			</param>
			<param name="elems">
				Number of iterator elements.
			</param>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="start">
				Optional single multi-iterator to clear.
			</param>
			            <remarks>  Resets an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Contains_InternalC" syntax="Iter_Contains_InternalC(array[], size, value)">
			<stacksize value="1"/>
			<referrer name="IsValidPlayerProgressBar"/>
			<referrer name="CA_DestroyObject_DC"/>
			<referrer name="CA_SetObjectPos_DC"/>
			<referrer name="CA_SetObjectRot_DC"/>
			<referrer name="pc_cmd_vpozostalo"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="giveGangBudget"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="Init_GangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="GangWarTimer"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopSparing"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="_@yHOnPlayerDeath@0r"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="RoyalePickup"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="CheckPlayerGame"/>
			<referrer name="NieMozeTeraz"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="pc_cmd_exit"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="value">
				Item to check.
			</param>
			      <remarks>  Checks if this item is in the iterator.  </remarks> 
		</member>
		<member name="M:Iter_Contains_InternalD" syntax="Iter_Contains_InternalD(count, array[], size, start, value)">
			<stacksize value="1"/>
			<param name="count">
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="start">
			</param>
			<param name="value">
				Item to check.
			</param>
			      <remarks>  Checks if this item is in the iterator.  </remarks> 
		</member>
		<member name="M:Iter_Count_InternalC" syntax="Iter_Count_InternalC(counts[], slots)">
			<stacksize value="2"/>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				Number of items in each iterator part.
			</param>
			<param name="slots">
				Number of multi-iterator values.
			</param>
			    <remarks>  Return the total number of elements in all slots together.  </remarks> 
		</member>
		<member name="M:Iter_CreateActor" syntax="Iter_CreateActor(modelid, X, Y, Z, Rotation)">
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="CreateActor"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalActor"/>
			<dependency name="Iterator@LocalActor"/>
			<dependency name="YSI_gsIter_ActorDo"/>
			<dependency name="YSI_gsii"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Rotation">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Iter_CreateVehicle" syntax="Iter_CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay, addSiren)">
			<stacksize value="12"/>
			<referrer name="acc_CreateVehicle"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="CreateVehicle"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="YSI_gsIter_VehicleDo"/>
			<dependency name="YSI_gsii"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Iter_DestroyActor" syntax="Iter_DestroyActor(actorid)">
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="DestroyActor"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@LocalActor"/>
			<dependency name="Iterator@LocalActor"/>
			<dependency name="YSI_gsIter_ActorDo"/>
			<dependency name="YSI_gsii"/>
			<dependency name="false"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:Iter_DestroyVehicle" syntax="Iter_DestroyVehicle(vehicleid)">
			<stacksize value="7"/>
			<referrer name="ac_DestroyVehicle"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="YSI_gsIter_VehicleDo"/>
			<dependency name="YSI_gsii"/>
			<dependency name="false"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_FreeMulti_Internal" syntax="Iter_FreeMulti_Internal(array[], trueSize, start)">
			<stacksize value="2"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				multi-iterator data.
			</param>
			<param name="trueSize">
				Size of the multi-iterator.
			</param>
			<param name="start">
				End [?, since start points are backwards] of the multi-iterator.
			</param>
			      <remarks>  Finds the first free multi index in the multi-iterator.  </remarks> 
		</member>
		<member name="M:Iter_Free_Internal" syntax="Iter_Free_Internal(array[], size)">
			<stacksize value="2"/>
			<referrer name="PHY_CreateWall"/>
			<referrer name="PHY_CreateCylinder"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="CA_CreateDynamicObjectEx_DC"/>
			<referrer name="CA_CreateDynamicObject_DC"/>
			<referrer name="CA_CreateObject_DC"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="Init_GangBases"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			    <remarks>  Finds the first free slot in the iterator.  </remarks> 
		</member>
		<member name="M:Iter_Func@Bits" syntax="Iter_Func@Bits(start, data[], size)">
			<stacksize value="6"/>
			<dependency name="Cell_GetLowestBit"/>
			<dependency name="cellbits"/>
			<param name="start">
			</param>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Blanks" syntax="Iter_Func@Blanks(start, data[], size)">
			<stacksize value="6"/>
			<dependency name="Cell_GetLowestBit"/>
			<dependency name="cellbits"/>
			<param name="start">
			</param>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Fib" syntax="Iter_Func@Fib(&amp;iterstart, cur)">
			<stacksize value="1"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
		</member>
		<member name="M:Iter_Func@Filter" syntax="Iter_Func@Filter(cur, val, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="val">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@N" syntax="Iter_Func@N(cur, n)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="n">
			</param>
		</member>
		<member name="M:Iter_Func@NonNull" syntax="Iter_Func@NonNull(cur, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Null" syntax="Iter_Func@Null(cur, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Powers" syntax="Iter_Func@Powers(&amp;iterstart, cur, base)">
			<stacksize value="1"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
			<param name="base">
			</param>
		</member>
		<member name="M:Iter_Func@Random" syntax="Iter_Func@Random(&amp;iterstart, cur, count, min, max)">
			<stacksize value="3"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
			<param name="count">
			</param>
			<param name="min">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:Iter_Func@Range" syntax="Iter_Func@Range(cur, min, max, step)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="cur">
			</param>
			<param name="min">
			</param>
			<param name="max">
			</param>
			<param name="step">
			</param>
		</member>
		<member name="M:Iter_Func@Until" syntax="Iter_Func@Until(cur, val, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="val">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@VehicleDriver" syntax="Iter_Func@VehicleDriver(vehicleid)">
			<stacksize value="6"/>
			<dependency name="Iter_Func@VehicleOccupant"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_Func@VehicleOccupant" syntax="Iter_Func@VehicleOccupant(vehicleid, includeDriver, includePassenger)">
			<stacksize value="5"/>
			<referrer name="Iter_Func@VehiclePassenger"/>
			<referrer name="Iter_Func@VehicleDriver"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_YieldReturn"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<param name="vehicleid">
			</param>
			<param name="includeDriver">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="includePassenger">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Iter_Func@VehiclePassenger" syntax="Iter_Func@VehiclePassenger(vehicleid)">
			<stacksize value="6"/>
			<dependency name="Iter_Func@VehicleOccupant"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_GetMulti_Internal" syntax="Iter_GetMulti_Internal(array[], trueSize, size, value)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				multi-iterator data.
			</param>
			<param name="trueSize">
				Size of the multi-iterator per index.
			</param>
			<param name="size">
				Size of the multi-iterator.
			</param>
			<param name="value">
				Item to check.
			</param>
			        <returns>  INVALID_ITERATOR_SLOT on failure.  Index of the multi-iterator the value is contained.  </returns>  <remarks>  Checks if this item is in the multi-iterator at all, and if it is returns which index it is in.  </remarks> 
		</member>
		<member name="M:Iter_Index_Internal" syntax="Iter_Index_Internal(count, array[], start, size, index, wrap)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Array start index.
			</param>
			<param name="size">
				Array size.
			</param>
			<param name="index">
				Index to find Nth value.
			</param>
			<param name="wrap">
				<paraminfo>bool </paraminfo>
				Keep going around until a value is found?
			</param>
			            <remarks>  Allows you to find the Nth value in the iterator.  DO NOT call this in a  loop to get all values - that totally defeats the purpose of "foreach", just  use a normal "foreach" loop with an index counter for that case.  </remarks> 
		</member>
		<member name="M:Iter_Init_Internal" syntax="Iter_Init_Internal(array[][], first[], s0, s1, entries)">
			<stacksize value="9"/>
			<referrer name="Android_OnYSIInit"/>
			<dependency name="memcpy"/>
			<param name="array">
				<paraminfo> [][] </paraminfo>
				Iterator array to initialise.
			</param>
			<param name="first">
				<paraminfo> [] </paraminfo>
				First iterator slot.
			</param>
			<param name="s0">
				Size of first dimension.
			</param>
			<param name="s1">
				Size of second dimension.
			</param>
			<param name="entries">
				Number of start points.
			</param>
			          <remarks>  Multi-dimensional arrays can't be initialised at compile time, so need to be  done at run time, which is slightly annoying.  </remarks> 
		</member>
		<member name="M:Iter_None_Internal" syntax="Iter_None_Internal(array[], size, value)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_OPDCInternal" syntax="Iter_OPDCInternal(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<param name="playerid">
				Player who left.
			</param>
			  <remarks>  Called AFTER "OnPlayerDisconnect" so that using "Kick" inside a  "foreach" loop doesn't crash the server due to an OOB error.  </remarks> 
		</member>
		<member name="M:Iter_OnActorStreamIn" syntax="Iter_OnActorStreamIn(actorid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnActorStreamIn"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnActorStreamOut" syntax="Iter_OnActorStreamOut(actorid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnActorStreamOut"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnPlayerConnect" syntax="Iter_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="_ALS"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="PHY_Player"/>
			<dependency name="PHY_Player"/>
			<dependency name="PHY_World"/>
			<dependency name="cb_Connect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Iter_OnPlayerDisconnect" syntax="Iter_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<automaton name="_ALS"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="BlockIpAddress"/>
			<dependency name="GetConsoleVarAsInt"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="KillTimer"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="acACAllow"/>
			<dependency name="acDriver"/>
			<dependency name="acHealth"/>
			<dependency name="acInt"/>
			<dependency name="acIp"/>
			<dependency name="acKickTimerID"/>
			<dependency name="acKickVeh"/>
			<dependency name="acKicked"/>
			<dependency name="acOnline"/>
			<dependency name="acPaintJob"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acTimerID"/>
			<dependency name="acVeh"/>
			<dependency name="acZAngle"/>
			<dependency name="acc_ChangeVehiclePaintjob"/>
			<dependency name="acc_LinkVehicleToInterior"/>
			<dependency name="acc_SetVehicleHealth"/>
			<dependency name="acc_SetVehiclePos"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Iter_OnPlayerStreamIn" syntax="Iter_OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerStreamIn"/>
			<dependency name="SendLastSyncPacket"/>
			<dependency name="WC_OnPlayerStreamIn"/>
			<dependency name="s_IsDying"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnPlayerStreamOut" syntax="Iter_OnPlayerStreamOut(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerStreamOut"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnVehicleStreamIn" syntax="Iter_OnVehicleStreamIn(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnVehicleStreamIn"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnVehicleStreamOut" syntax="Iter_OnVehicleStreamOut(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnVehicleStreamOut"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnYSIInit" syntax="Iter_OnYSIInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="Android_OnYSIInit"/>
		</member>
		<member name="M:Iter_Prev_Internal" syntax="Iter_Prev_Internal(array[], elems, size, slot)">
			<stacksize value="2"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="elems">
				Number of elements in the iterator.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="slot">
				The current slot.
			</param>
			        <remarks>  Gets the element in an iterator that points to the current element.  </remarks> 
		</member>
		<member name="M:Iter_RandomAdd_InternalC" syntax="Iter_RandomAdd_InternalC(&amp;count, array[], start, ...)">
			<stacksize value="10"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_RandomFree_Impl"/>
			<dependency name="numargs"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
			</param>
			      <remarks>  Adds a random value to an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomAdd_InternalD" syntax="Iter_RandomAdd_InternalD(counts[], array[], size, slots, start, slot, ...)">
			<stacksize value="12"/>
			<dependency name="Iter_Add_InternalD"/>
			<dependency name="Iter_RandomFree_Impl"/>
			<dependency name="numargs"/>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				Number of items in each iterator part.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="slots">
				Number of multi-iterator values.
			</param>
			<param name="start">
				
			</param>
			<param name="slot">
				Multi-iterator slot to add to.
			</param>
			<param name="...">
			</param>
			            <remarks>  Adds a random value to an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_Impl" syntax="Iter_RandomFree_Impl(count, array[], start, num)">
			<stacksize value="7"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="num">
			</param>
			      <remarks>  Returns a random unused value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_InternalC" syntax="Iter_RandomFree_InternalC(count, array[], start, ...)">
			<stacksize value="10"/>
			<dependency name="Iter_RandomFree_Impl"/>
			<dependency name="numargs"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
			</param>
			      <remarks>  Returns a random unused value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_InternalD" syntax="Iter_RandomFree_InternalD(counts[], array[], start, slots, ...)">
			<stacksize value="11"/>
			<dependency name="Iter_RandomFree_Impl"/>
			<dependency name="numargs"/>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				Number of items in each iterator part.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="slots">
				Number of multi-iterator values.
			</param>
			<param name="...">
			</param>
			        <remarks>  Returns a random unused value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomRemove_InternalC" syntax="Iter_RandomRemove_InternalC(&amp;count, array[], start, ...)">
			<stacksize value="10"/>
			<dependency name="Iter_Random_Impl"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="numargs"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
			</param>
			      <remarks>  Removes a random value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomRemove_InternalD" syntax="Iter_RandomRemove_InternalD(&amp;count, array[], size, start, ...)">
			<stacksize value="11"/>
			<dependency name="Iter_Random_Impl"/>
			<dependency name="Iter_Remove_InternalD"/>
			<dependency name="numargs"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
			</param>
			      <param name="slots">Number of multi-iterator values.</param>  <remarks>  Removes a random value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Random_Impl" syntax="Iter_Random_Impl(count, array[], start, num)">
			<stacksize value="7"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="num">
				Number of extra parameters hidden on the stack.
			</param>
			        <remarks>  Returns a random value from an iterator.  If additional parameters are given they are excluded from consideration.  This allows you to chain calls to get multiple random values so follows:  new president     = Iter_Random(Player);  new vicePresident = Iter_Random(Player, president);  new primeMinister = Iter_Random(Player, president, vicePresident);  new minister      = Iter_Random(Player, president, vicePresident, primeMinister);  None of those values can be the same, and this saves horrible random-  dependent loops.  </remarks> 
		</member>
		<member name="M:Iter_Random_Internal" syntax="Iter_Random_Internal(count, array[], start, ...)">
			<stacksize value="10"/>
			<referrer name="RandomSpawn"/>
			<referrer name="pc_cmd_wolnybiznes"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="UpdateSK"/>
			<dependency name="Iter_Random_Impl"/>
			<dependency name="numargs"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
				Excluded elements.
			</param>
			        <remarks>  Returns a random value from an iterator.  If additional parameters are given they are excluded from consideration.  This allows you to chain calls to get multiple random values so follows:  new president     = Iter_Random(Player);  new vicePresident = Iter_Random(Player, president);  new primeMinister = Iter_Random(Player, president, vicePresident);  new minister      = Iter_Random(Player, president, vicePresident, primeMinister);  None of those values can be the same, and this saves horrible random-  dependent loops.  </remarks> 
		</member>
		<member name="M:Iter_Remove_InternalC" syntax="Iter_Remove_InternalC(&amp;count, array[], size, value)">
			<stacksize value="8"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="OnActorStreamOut"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="DestroyPlayerProgressBar"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="ResetGangData"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="StopSparing"/>
			<referrer name="LeaveGang"/>
			<referrer name="ResetGameData"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Number of iterator elements.
			</param>
			<param name="value">
				Item to remove.
			</param>
			        <remarks>  Removes a value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Remove_InternalD" syntax="Iter_Remove_InternalD(&amp;count, array[], start, size, value)">
			<stacksize value="9"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<dependency name="Iter_SafeRemove_InternalD"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_SafeRemove_InternalC" syntax="Iter_SafeRemove_InternalC(&amp;count, array[], size, value, &amp;last)">
			<stacksize value="1"/>
			<referrer name="Iter_Remove_InternalC"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="CA_DestroyObject_DC"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="UpdateWP"/>
			<referrer name="UpdateSK"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evkick50"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				Iterator data.
			</param>
			<param name="size">
				Number of iterator elements.
			</param>
			<param name="value">
				Item to remove.
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
				Pointer in which to store the last pointer.
			</param>
			          <remarks>  Removes a value from an iterator safely.  </remarks> 
		</member>
		<member name="M:Iter_SafeRemove_InternalD" syntax="Iter_SafeRemove_InternalD(&amp;count, array[], start, size, value, &amp;last)">
			<stacksize value="1"/>
			<referrer name="Iter_Remove_InternalD"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Iter_VehicleDo" syntax="Iter_VehicleDo(add, vehicleid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Vehicle"/>
			<dependency name="Iterator@Vehicle"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_YieldEnter" syntax="Iter_YieldEnter()">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<remarks>  </remarks> 
		</member>
		<member name="M:Iter_YieldLoop" syntax="Iter_YieldLoop()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_ITER_YIELD_FIRST"/>
			<dependency name="E_ITER_YIELD_STACK_SIZE"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sPtr"/>
			<dependency name="YSI_g_sStackPtr"/>
			<dependency name="false"/>
			<dependency name="memcpy"/>
			<dependency name="true"/>
		</member>
		<member name="M:Iter_YieldReturn" syntax="Iter_YieldReturn(value)">
			<stacksize value="1"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<dependency name="I@"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sPtr"/>
			<dependency name="YSI_g_sStackPtr"/>
			<dependency name="memcpy"/>
			<param name="value">
			</param>
		</member>
		<member name="M:IterativeColouredSkipSPacked" syntax="IterativeColouredSkipSPacked(text[], start, &amp;colour)">
			<stacksize value="4"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="cellmin"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:IterativeColouredSkipSUnpacked" syntax="IterativeColouredSkipSUnpacked(text[], start, &amp;colour)">
			<stacksize value="4"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="cellmin"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:IterativeColouredSkipWPacked" syntax="IterativeColouredSkipWPacked(text[], lastIndex, start, &amp;hyphen, &amp;colour, useHyphen)">
			<stacksize value="9"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lastIndex">
			</param>
			<param name="start">
			</param>
			<param name="hyphen">
				<paraminfo>bool &amp; </paraminfo>
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="useHyphen">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:IterativeColouredSkipWUnpacked" syntax="IterativeColouredSkipWUnpacked(text[], lastIndex, start, &amp;hyphen, &amp;colour, useHyphen)">
			<stacksize value="9"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lastIndex">
			</param>
			<param name="start">
			</param>
			<param name="hyphen">
				<paraminfo>bool &amp; </paraminfo>
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="useHyphen">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:IterativeColouredTextSplitter" syntax="IterativeColouredTextSplitter(text[], width, start, &amp;end, &amp;next, &amp;hyphen, &amp;colour, useHyphen)">
			<tagname value="bool"/>
			<stacksize value="10"/>
			<dependency name="IterativeColouredSkipSPacked"/>
			<dependency name="IterativeColouredSkipSUnpacked"/>
			<dependency name="IterativeColouredSkipWPacked"/>
			<dependency name="IterativeColouredSkipWUnpacked"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The input string to split up.
			</param>
			<param name="width">
				The maximum size of the output (including hyphen).
			</param>
			<param name="start">
				Where in the string to start the next line.
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
				The index to end the current line at (excluding hyphen).
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
				The index to start the next line from (skips trailing spaces).
			</param>
			<param name="hyphen">
				<paraminfo>bool &amp; </paraminfo>
				Should a hyphen be inserted in to the output?
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
				The colour for the start of the next line.
			</param>
			<param name="useHyphen">
				<paraminfo>bool </paraminfo>
				May a hyphen be included?
			</param>
			<summary>  bool:IterativeColouredTextSplitter(const text[], width, start, &amp;end, &amp;next, &amp;bool:hyphen)  </summary>                  <returns>  Does the function need to be called again to show another line?  </returns>  <remarks>  Split some text in to multiple lines.  With sensible breaks at spaces or  mid-word if they're long enough.  Unlike <c>IterativeTextSplitter</c> it  will never split in the middle of <c>{RRGGBB}</c> colour sequences, and can  ignore them for many checks.  </remarks> 
		</member>
		<member name="M:IterativeTextSplitter" syntax="IterativeTextSplitter(text[], width, start, &amp;end, &amp;next, &amp;hyphen, useHyphen)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The input string to split up.
			</param>
			<param name="width">
				The maximum size of the output (including hyphen).
			</param>
			<param name="start">
				Where in the string to start the next line.
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
				The index to end the current line at (excluding hyphen).
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
				The index to start the next line from (skips trailing spaces).
			</param>
			<param name="hyphen">
				<paraminfo>bool &amp; </paraminfo>
				Should a hyphen be inserted in to the output?
			</param>
			<param name="useHyphen">
				<paraminfo>bool </paraminfo>
				May a hyphen be included?
			</param>
			<summary>  bool:IterativeTextSplitter(const text[], width, start, &amp;end, &amp;next, &amp;bool:hyphen)  </summary>                <returns>  Does the function need to be called again to show another line?  </returns>  <remarks>  Split some text in to multiple lines.  With sensible breaks at spaces or  mid-word if they're long enough.  </remarks> 
		</member>
		<member name="M:Iterator" syntax="Iterator(name)">
			<tagname value="Iterator"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="name">
			</param>
			<remarks>  Creates a new iterator start/array pair.  </remarks> 
		</member>
		<member name="M:JailPlayer" syntax="JailPlayer(playerid, adminid, time, reason[])">
			<stacksize value="37"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="ACH_JAIL"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="IsKicked"/>
			<dependency name="LOG_PUNISH"/>
			<dependency name="Log"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="Teleport"/>
			<dependency name="VW_JAIL"/>
			<dependency name="achievement"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_adminPenalty"/>
			<dependency name="player_adminPoints"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="time">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:JenkinsHash" syntax="JenkinsHash(str[])">
			<stacksize value="4"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				the string to hash.
			</param>
			  <returns>  the Jenkins hash of the input string  </returns>  <remarks>  This is a 32bit hash system so is not very secure, however we're only using  this as a string enumerator to uniquely identify strings easilly and allow  for a binary search of strings based on the hash of their name.  </remarks> 
		</member>
		<member name="M:JoinGlitchArena" syntax="JoinGlitchArena(playerid, respawn)">
			<stacksize value="11"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="Teleport"/>
			<dependency name="VW_ARENA"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="pGlitch"/>
			<dependency name="pGlitch"/>
			<dependency name="pGlitchArena"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="respawn">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:JoinPlayerArena" syntax="JoinPlayerArena(playerid, arenaid, cmd)">
			<stacksize value="34"/>
			<referrer name="pc_cmd_onede"/>
			<referrer name="pc_cmd_pompa"/>
			<referrer name="pc_cmd_sniper"/>
			<referrer name="pc_cmd_mini"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckPlayerGame"/>
			<dependency name="FALSE"/>
			<dependency name="GetArenaName"/>
			<dependency name="GetArenaName"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Areny"/>
			<dependency name="Iterator@Areny"/>
			<dependency name="Iterator@Areny"/>
			<dependency name="RECORD_MINI"/>
			<dependency name="RECORD_ONEDE"/>
			<dependency name="RECORD_POMPA"/>
			<dependency name="RECORD_SNIPER"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateArenaDraw"/>
			<dependency name="UpdateAreny"/>
			<dependency name="VW_ARENA"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="checkRecord"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="msgAll"/>
			<dependency name="pArena"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaKills"/>
			<dependency name="pArenaKills"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="printf"/>
			<dependency name="random"/>
			<dependency name="sendError"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
			<param name="arenaid">
			</param>
			<param name="cmd">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:K@" syntax="K@(function[], fmat[], ...)">
			<stacksize value="9"/>
			<dependency name="@_"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="K@"/>
			<dependency name="Q@"/>
			<dependency name="YSI_g_sCallData"/>
			<dependency name="YSI_g_sPropCaller"/>
			<dependency name="YSI_g_sPropEmpty"/>
			<dependency name="YSI_g_sPropVarArg"/>
			<dependency name="YSI_g_sYSIM_STRING"/>
			<dependency name="YSI_g_sYSI_MAX_STRING"/>
			<dependency name="getproperty"/>
			<dependency name="setarg"/>
			<dependency name="setproperty"/>
			<dependency name="strunpack"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Kick" syntax="Kick(playerid)">
			<attribute name="native"/>
			<referrer name="ac_KickTimer"/>
			<referrer name="KickEx"/>
			<param name="playerid">
				The ID of the player to kick
			</param>
			<library>a_samp</library>  <summary>Kicks a player from the server.  They will have to quit the game and re-connect if they  wish to continue playing.</summary>    <seealso name="Ban" />  <seealso name="BanEx" />  <remarks>As of <b>SA-MP 0.3x</b>, any action taken directly before Kick() (such as sending a message  with <a href="#SendClientMessage">SendClientMessage</a>) will not reach the player.  A timer must  be used to delay the kick.</remarks>  <returns>This function always returns <b><c>1</c></b>, even if the function failed to execute (player  specified doesn't exist).</returns> 
		</member>
		<member name="M:KickEx" syntax="KickEx(playerid)">
			<stacksize value="9"/>
			<referrer name="KickPlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Kick"/>
			<dependency name="Timer_CreateCallback"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:KickPlayer" syntax="KickPlayer(playerid, adminid, reason[])">
			<stacksize value="35"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="_@yHOnPlayerWeaponShot@10"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="SecondTimer"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="IsKicked"/>
			<dependency name="KickEx"/>
			<dependency name="LOG_PUNISH"/>
			<dependency name="Log"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="kicks"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_adminPenalty"/>
			<dependency name="player_adminPoints"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:KillCallbackTimer" syntax="KillCallbackTimer(func)">
			<stacksize value="4"/>
			<dependency name="Timer_KillCallback"/>
			<param name="func">
			</param>
		</member>
		<member name="M:KillTimer" syntax="KillTimer(timerid)">
			<tagname value="void"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="Inline_MaybeConst_"/>
			<referrer name="Callback_Claim_"/>
			<referrer name="Callback_Release_"/>
			<referrer name="_Timer_I"/>
			<referrer name="_Timer_D"/>
			<referrer name="_Timer_F"/>
			<referrer name="Timer_KillCallback"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="WC_TogglePlayerSpectating"/>
			<referrer name="WC_DestroyVehicle"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ac_OnVehicleSpawn"/>
			<referrer name="ac_OnVehicleDeath"/>
			<referrer name="ScriptExit"/>
			<referrer name="PlayerDeath"/>
			<referrer name="OnPlayerDeathFinished"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="HideLevelBar"/>
			<referrer name="StartQuiz"/>
			<referrer name="StopQuiz"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="BombaExplode"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="RejectDuelTimer"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="DelayedGangInvite"/>
			<referrer name="HideBudgetDraw"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="TransferResetGang"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="StopSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StopChowany"/>
			<referrer name="StopZP"/>
			<referrer name="StopDA"/>
			<referrer name="StopRC"/>
			<referrer name="StopBTR"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="StopWP"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="FreezePlayer"/>
			<referrer name="UnFreezePlayer"/>
			<referrer name="showGameDraw"/>
			<referrer name="hideGameDraw"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="HideMissionDraw"/>
			<referrer name="giveMoney"/>
			<referrer name="ResetMoneyTD"/>
			<param name="timerid">
				The ID of the timer to kill (returned by <a href="#SetTimer">SetTimer</a> or  <a href="#SetTimerEx">SetTimerEx</a>)
			</param>
			<library>a_samp</library>  <summary>Kills (stops) a running timer.</summary>    <seealso name="SetTimer" />  <seealso name="SetTimerEx" />  <returns>This function always returns <b><c>0</c></b>.</returns> 
		</member>
		<member name="M:L@" syntax="L@(ret, ...)">
			<stacksize value="8"/>
			<referrer name="@@Dialog_Set"/>
			<dependency name="YSI_g_sPropReturn"/>
			<dependency name="YSI_g_sPropVarArg"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<dependency name="setproperty"/>
			<param name="ret">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:LeaveGang" syntax="LeaveGang(playerid, gangid, kicked)">
			<stacksize value="8"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="pc_cmd_topusc"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GangBar"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="UpdateGangBox"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_draw"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
			<param name="kicked">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:LevenshteinDistance" syntax="LevenshteinDistance(a[], b[])">
			<stacksize value="9"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DoLevenshteinDistance"/>
			<dependency name="DoLevenshteinDistancePackA"/>
			<dependency name="DoLevenshteinDistancePackAB"/>
			<dependency name="DoLevenshteinDistancePackB"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
				First string to compare.
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
				Second string to compare.
			</param>
			    <returns>  The levenshtein difference (0 if the same).  </returns> 
		</member>
		<member name="M:LinkVehicleToInterior" syntax="LinkVehicleToInterior(vehicleid, interiorid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ac_LinkVehicleToInterior"/>
			<referrer name="orig_LinkVehicleToInterior"/>
			<param name="vehicleid">
				The ID of the vehicle to link to an interior
			</param>
			<param name="interiorid">
				The <a href="http://wiki.sa-mp.com/wiki/Interiorids">Interior ID</a> to  link it to
			</param>
			<library>a_vehicles</library>  <summary>Links a vehicle to an interior.  Vehicles can only be seen by players in the same interior  (<a href="#SetPlayerInterior">SetPlayerInterior</a>).</summary>      <seealso name="SetVehicleVirtualWorld" />  <seealso name="SetPlayerInterior" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.<br />  </returns> 
		</member>
		<member name="M:LoadPlayerGang" syntax="LoadPlayerGang(playerid, created)">
			<stacksize value="11"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GangBar"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="ShowPlayerProgressBar"/>
			<dependency name="UpdateGangBar"/>
			<dependency name="UpdateGangBox"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_draw"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGang"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankName"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<param name="playerid">
			</param>
			<param name="created">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:LoadPlayerPosition" syntax="LoadPlayerPosition(playerid)">
			<stacksize value="12"/>
			<referrer name="CheckDuel"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="ExitGlitchArena"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="Truck_Stop"/>
			<referrer name="CheckSparing"/>
			<referrer name="ExitPraca"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopZP"/>
			<referrer name="StopDA"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="SecondTimer"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoadWeaponData"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerDrunkLevel"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Teleport"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WC_SetPlayerTeam"/>
			<dependency name="WC_SpawnPlayer"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="acc_RemovePlayerFromVehicle"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveColor"/>
			<dependency name="player_saveHealthArmour"/>
			<dependency name="player_saveInterior"/>
			<dependency name="player_savePosition"/>
			<dependency name="player_saveSkin"/>
			<dependency name="player_saveWorld"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LoadPlayerPrivCars" syntax="LoadPlayerPrivCars(playerid)">
			<stacksize value="18"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="SetVehicleToSell"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="msg"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehHave"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LoadPlayerStats" syntax="LoadPlayerStats(playerid)">
			<stacksize value="264"/>
			<referrer name="FindAccount"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<dependency name="MineBag"/>
			<dependency name="MineBagLevel"/>
			<dependency name="MinePickaxe"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeLevel"/>
			<dependency name="MinePickaxeName"/>
			<dependency name="MinePickaxeName"/>
			<dependency name="MinePoints"/>
			<dependency name="MineWeight"/>
			<dependency name="MineWeight"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="mysql_query"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementStatus"/>
			<dependency name="pAchievementStatus"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaKills"/>
			<dependency name="pArenaKills"/>
			<dependency name="pBank"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pCredit"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyMoney"/>
			<dependency name="pDailyQuest"/>
			<dependency name="pDailyStatus"/>
			<dependency name="pDrawVisible"/>
			<dependency name="pDriveLicense"/>
			<dependency name="pDriveLicense"/>
			<dependency name="pDuelPoints"/>
			<dependency name="pDuelRank"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishRode"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="pFishZylka"/>
			<dependency name="pFortuneBlock"/>
			<dependency name="pGang"/>
			<dependency name="pGangRankColor"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGlitchRecord"/>
			<dependency name="pHud"/>
			<dependency name="pHud"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<dependency name="pJobReward"/>
			<dependency name="pJobScore"/>
			<dependency name="pJobScore"/>
			<dependency name="pJobUlepszenia"/>
			<dependency name="pJobUlepszenia"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRankColor"/>
			<dependency name="pStalyInterior"/>
			<dependency name="pStalyPos"/>
			<dependency name="pStalyPos"/>
			<dependency name="pTruckDist"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="pWeapons"/>
			<dependency name="pWeapons"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_adminLevel"/>
			<dependency name="player_adminLoad"/>
			<dependency name="player_adminPass"/>
			<dependency name="player_adminPenalty"/>
			<dependency name="player_adminTime"/>
			<dependency name="player_bonus_vcxz"/>
			<dependency name="player_chatID"/>
			<dependency name="player_fightstyle"/>
			<dependency name="player_gang_loan_expire"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_job_points"/>
			<dependency name="player_lastInterior"/>
			<dependency name="player_lastPos"/>
			<dependency name="player_level"/>
			<dependency name="player_levelPoints"/>
			<dependency name="player_money"/>
			<dependency name="player_mutetime"/>
			<dependency name="player_nickTimer"/>
			<dependency name="player_password"/>
			<dependency name="player_premiumTime"/>
			<dependency name="player_score"/>
			<dependency name="player_score_needed"/>
			<dependency name="player_session"/>
			<dependency name="player_skin"/>
			<dependency name="player_spawnData"/>
			<dependency name="player_suicides"/>
			<dependency name="player_visits"/>
			<dependency name="player_warns"/>
			<dependency name="sscanf"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LoadPrivCarAttachments" syntax="LoadPrivCarAttachments(playerid, privcarid, update)">
			<attribute name="public"/>
			<stacksize value="25"/>
			<dependency name="AttachDynamicObjectToVehicle"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachment_modelid"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="pVeh"/>
			<dependency name="pVehObject"/>
			<dependency name="pVehObject"/>
			<dependency name="pVehObjectCount"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectPos"/>
			<dependency name="pVehObjectPos"/>
			<dependency name="pVehObjectRot"/>
			<dependency name="pVehObjectRot"/>
			<dependency name="pVehPosition"/>
			<dependency name="pVehPosition"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
			<param name="update">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:LoadWeaponData" syntax="LoadWeaponData(playerid)">
			<stacksize value="7"/>
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="LoadPlayerPosition"/>
			<dependency name="giveWeapon"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveAmmoData"/>
			<dependency name="player_saveWeaponData"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Log" syntax="Log(type, string[], ...)">
			<stacksize value="1039"/>
			<referrer name="givePremium"/>
			<referrer name="KickPlayer"/>
			<referrer name="WarnPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="Teleport"/>
			<referrer name="FreezePlayer"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<dependency name="WriteToLog"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="va_format"/>
			<param name="type">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:Logger_A" syntax="Logger_A(field[], value[], len)">
			<tagname value="LOGGER_FIELD"/>
			<stacksize value="264"/>
			<dependency name="FieldBuffer"/>
			<dependency name="Logger_A"/>
			<dependency name="format"/>
			<param name="field">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:Logger_B" syntax="Logger_B(field[], value)">
			<tagname value="LOGGER_FIELD"/>
			<stacksize value="7"/>
			<dependency name="FieldBuffer"/>
			<dependency name="Logger_B"/>
			<dependency name="format"/>
			<param name="field">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Logger_Dbg" syntax="Logger_Dbg(handler[], text[], ...)">
			<stacksize value="283"/>
			<dependency name="EOS"/>
			<dependency name="EventBuffer"/>
			<dependency name="GetSVarInt"/>
			<dependency name="Logger_S"/>
			<dependency name="format"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<dependency name="print"/>
			<dependency name="strcat"/>
			<param name="handler">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo>LOGGER_FIELD </paraminfo>
			</param>
		</member>
		<member name="M:Logger_Err" syntax="Logger_Err(text[], ...)">
			<stacksize value="283"/>
			<dependency name="EOS"/>
			<dependency name="EventBuffer"/>
			<dependency name="Logger_S"/>
			<dependency name="_PrintBufferAmxBacktrace"/>
			<dependency name="format"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<dependency name="strcat"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo>LOGGER_FIELD </paraminfo>
			</param>
		</member>
		<member name="M:Logger_EscapeQuote" syntax="Logger_EscapeQuote(input[], inputLen, output[], outputLen)">
			<stacksize value="3"/>
			<referrer name="Logger_S"/>
			<dependency name="EOS"/>
			<param name="input">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="inputLen">
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="outputLen">
			</param>
		</member>
		<member name="M:Logger_F" syntax="Logger_F(field[], value)">
			<tagname value="LOGGER_FIELD"/>
			<stacksize value="7"/>
			<dependency name="FieldBuffer"/>
			<dependency name="Logger_F"/>
			<dependency name="format"/>
			<param name="field">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Logger_Fatal" syntax="Logger_Fatal(text[], ...)">
			<stacksize value="283"/>
			<dependency name="EOS"/>
			<dependency name="EventBuffer"/>
			<dependency name="Logger_S"/>
			<dependency name="_PrintBufferAmxBacktrace"/>
			<dependency name="format"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo>LOGGER_FIELD </paraminfo>
			</param>
		</member>
		<member name="M:Logger_I" syntax="Logger_I(field[], value)">
			<tagname value="LOGGER_FIELD"/>
			<stacksize value="7"/>
			<dependency name="FieldBuffer"/>
			<dependency name="Logger_I"/>
			<dependency name="format"/>
			<param name="field">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Logger_Log" syntax="Logger_Log(text[], ...)">
			<stacksize value="283"/>
			<dependency name="EOS"/>
			<dependency name="EventBuffer"/>
			<dependency name="Logger_S"/>
			<dependency name="format"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<dependency name="print"/>
			<dependency name="strcat"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo>LOGGER_FIELD </paraminfo>
			</param>
		</member>
		<member name="M:Logger_P" syntax="Logger_P(playerid)">
			<tagname value="LOGGER_FIELD"/>
			<stacksize value="30"/>
			<dependency name="FieldBuffer"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Logger_P"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Logger_S" syntax="Logger_S(field[], value[])">
			<tagname value="LOGGER_FIELD"/>
			<stacksize value="263"/>
			<referrer name="Logger_Log"/>
			<referrer name="Logger_Dbg"/>
			<referrer name="Logger_Err"/>
			<referrer name="Logger_Fatal"/>
			<dependency name="FieldBuffer"/>
			<dependency name="Logger_EscapeQuote"/>
			<dependency name="Logger_S"/>
			<dependency name="format"/>
			<param name="field">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Logger_ToggleDebug" syntax="Logger_ToggleDebug(handler[], toggle)">
			<stacksize value="4"/>
			<dependency name="DeleteSVar"/>
			<dependency name="SetSVarInt"/>
			<param name="handler">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Logger_X" syntax="Logger_X(field[], value)">
			<tagname value="LOGGER_FIELD"/>
			<stacksize value="7"/>
			<dependency name="FieldBuffer"/>
			<dependency name="Logger_X"/>
			<dependency name="format"/>
			<param name="field">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:LoopingAnim" syntax="LoopingAnim(playerid, animlib[], animname[], speed, looping, lockx, locky, lockz, lp, fs)">
			<stacksize value="13"/>
			<referrer name="pc_cmd_plantuj"/>
			<referrer name="pc_cmd_aresztuj"/>
			<referrer name="pc_cmd_smiech"/>
			<referrer name="pc_cmd_ramiona"/>
			<referrer name="pc_cmd_lez"/>
			<referrer name="pc_cmd_wal"/>
			<referrer name="pc_cmd_wytrysk"/>
			<referrer name="pc_cmd_schowaj"/>
			<referrer name="pc_cmd_wymiotuj"/>
			<referrer name="pc_cmd_papa"/>
			<referrer name="pc_cmd_daj"/>
			<referrer name="pc_cmd_usiadz"/>
			<referrer name="pc_cmd_spij"/>
			<referrer name="pc_cmd_ranny"/>
			<referrer name="pc_cmd_taxi"/>
			<referrer name="pc_cmd_rozgladaj"/>
			<referrer name="pc_cmd_yes"/>
			<referrer name="pc_cmd_no"/>
			<referrer name="pc_cmd_myjrece"/>
			<referrer name="pc_cmd_medyk"/>
			<referrer name="pc_cmd_oh"/>
			<referrer name="pc_cmd_dowody"/>
			<referrer name="pc_cmd_wniebo"/>
			<referrer name="pc_cmd_start"/>
			<referrer name="pc_cmd_naprawia"/>
			<referrer name="pc_cmd_naprawil"/>
			<referrer name="pc_cmd_chatauto"/>
			<referrer name="pc_cmd_chatauto2"/>
			<referrer name="pc_cmd_bagaznik"/>
			<referrer name="pc_cmd_krzeslouderz"/>
			<referrer name="pc_cmd_krzeslowypij"/>
			<referrer name="pc_cmd_krzeslokomp"/>
			<referrer name="pc_cmd_krzeslozegarek"/>
			<referrer name="pc_cmd_krzeslorozm1"/>
			<referrer name="pc_cmd_krzeslorozm2"/>
			<referrer name="pc_cmd_wypij"/>
			<referrer name="pc_cmd_barman"/>
			<referrer name="pc_cmd_barman2"/>
			<referrer name="pc_cmd_wyjmijbutelke"/>
			<referrer name="pc_cmd_nalej"/>
			<referrer name="pc_cmd_polchodz"/>
			<referrer name="pc_cmd_polodejdz"/>
			<referrer name="pc_cmd_polstop"/>
			<referrer name="pc_cmd_ratunku"/>
			<referrer name="pc_cmd_krzeslo"/>
			<referrer name="pc_cmd_calus"/>
			<referrer name="pc_cmd_sikaj"/>
			<referrer name="pc_cmd_drunk"/>
			<referrer name="pc_cmd_lookout"/>
			<referrer name="pc_cmd_napad"/>
			<referrer name="pc_cmd_hide"/>
			<referrer name="pc_cmd_rzygaj"/>
			<referrer name="pc_cmd_jedz"/>
			<referrer name="pc_cmd_machaj"/>
			<referrer name="pc_cmd_klepnij"/>
			<referrer name="pc_cmd_deal"/>
			<referrer name="pc_cmd_cpun"/>
			<referrer name="pc_cmd_siadaj"/>
			<referrer name="pc_cmd_fucku"/>
			<referrer name="pc_cmd_taichi"/>
			<referrer name="pc_cmd_pij"/>
			<referrer name="pc_cmd_inbedright"/>
			<referrer name="pc_cmd_inbedleft"/>
			<referrer name="pc_cmd_fotel"/>
			<referrer name="pc_cmd_patrz"/>
			<referrer name="pc_cmd_opieraj"/>
			<referrer name="pc_cmd_zolwik"/>
			<referrer name="pc_cmd_carchat"/>
			<referrer name="pc_cmd_krzycz"/>
			<referrer name="pc_cmd_wtf"/>
			<referrer name="pc_cmd_adhd"/>
			<referrer name="pc_cmd_raczkuj"/>
			<referrer name="pc_cmd_down"/>
			<referrer name="pc_cmd_scratch"/>
			<referrer name="pc_cmd_beach"/>
			<referrer name="pc_cmd_circle"/>
			<referrer name="pc_cmd_rofl"/>
			<referrer name="pc_cmd_getin"/>
			<referrer name="pc_cmd_sprayuj"/>
			<referrer name="pc_cmd_headbutt"/>
			<referrer name="pc_cmd_lightcig"/>
			<referrer name="pc_cmd_tapcig"/>
			<referrer name="pc_cmd_bat"/>
			<referrer name="pc_cmd_chant"/>
			<referrer name="pc_cmd_finger"/>
			<referrer name="pc_cmd_shouting"/>
			<referrer name="pc_cmd_cop"/>
			<referrer name="pc_cmd_lowbodypush"/>
			<referrer name="pc_cmd_push"/>
			<referrer name="pc_cmd_rollfall"/>
			<referrer name="pc_cmd_boxanim"/>
			<referrer name="pc_cmd_fall"/>
			<referrer name="pc_cmd_fallback"/>
			<referrer name="pc_cmd_robman"/>
			<referrer name="pc_cmd_bacznosc"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_smoke"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_run"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_walk"/>
			<referrer name="pc_cmd_look"/>
			<referrer name="pc_cmd_shout"/>
			<referrer name="pc_cmd_bj"/>
			<referrer name="pc_cmd_swat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_stance"/>
			<referrer name="pc_cmd_hike"/>
			<referrer name="pc_cmd_face"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_gryps"/>
			<referrer name="pc_cmd_yo"/>
			<referrer name="pc_cmd_siad"/>
			<referrer name="pc_cmd_jem"/>
			<referrer name="pc_cmd_trup"/>
			<referrer name="pc_cmd_pijak"/>
			<referrer name="pc_cmd_rece"/>
			<referrer name="pc_cmd_spadam"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="msg"/>
			<dependency name="pAnimation"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="looping">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="lockx">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="locky">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="lockz">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="lp">
			</param>
			<param name="fs">
			</param>
		</member>
		<member name="M:MS_OnGameModeInit" syntax="MS_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="GEOLITE_init"/>
			<dependency name="geolite_open_dbs"/>
		</member>
		<member name="M:MS_OnPlayerDisconnect" syntax="MS_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="SetHealthBarVisible"/>
			<dependency name="WC_OnPlayerDisconnect"/>
			<dependency name="e_Issuer"/>
			<dependency name="false"/>
			<dependency name="s_DamageFeedGiven"/>
			<dependency name="s_DamageFeedTaken"/>
			<dependency name="s_DamageFeedTimer"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_DelayedDeathTimer"/>
			<dependency name="s_HealthBarForeground"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_KnifeTimeout"/>
			<dependency name="s_LastVehicleShooter"/>
			<dependency name="s_PreviousHits"/>
			<dependency name="s_PreviousHits"/>
			<dependency name="s_Spectating"/>
			<dependency name="s_VendingUseTimer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:MagazynPacked" syntax="MagazynPacked(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="ACH_MAGAZYNIER"/>
			<dependency name="CheckQuest"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="EOS"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="Magazynier_Fetch"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="achievement"/>
			<dependency name="addJobScore"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="magazynCP"/>
			<dependency name="magazynLabel"/>
			<dependency name="magazynPaczkaType"/>
			<dependency name="magazynPlacement"/>
			<dependency name="magazynReward"/>
			<dependency name="magazynTowar"/>
			<dependency name="math_random"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Magazynier_CP" syntax="Magazynier_CP(playerid, checkpointid)">
			<stacksize value="14"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="MagazynPozycje"/>
			<dependency name="MagazynPozycje"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="magazynCP"/>
			<dependency name="magazynPlacement"/>
			<dependency name="magazynTowar"/>
			<dependency name="pJob"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:Magazynier_Fetch" syntax="Magazynier_Fetch(playerid)">
			<stacksize value="5"/>
			<referrer name="MagazynPacked"/>
			<referrer name="OnDialogJob"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="false"/>
			<dependency name="magazynPaczkaType"/>
			<dependency name="magazynTowar"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Magazynier_Pickup" syntax="Magazynier_Pickup(playerid, pickupid)">
			<stacksize value="146"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="JobDay"/>
			<dependency name="MagazynPozycje"/>
			<dependency name="MagazynPozycje"/>
			<dependency name="SPECIAL_ACTION_CARRY"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="VW_MAGAZYNIER"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="catstr"/>
			<dependency name="format"/>
			<dependency name="magazynCP"/>
			<dependency name="magazynLabel"/>
			<dependency name="magazynPaczkaSize"/>
			<dependency name="magazynPaczkaType"/>
			<dependency name="magazynPlacement"/>
			<dependency name="magazynReward"/>
			<dependency name="magazynTowar"/>
			<dependency name="magazynierPickup"/>
			<dependency name="pJob"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<dependency name="random"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="warePaczkaData"/>
			<dependency name="warePaczkaData"/>
			<dependency name="ware_money"/>
			<dependency name="ware_name"/>
			<dependency name="ware_premium"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:MakePlayerFacePlayer" syntax="MakePlayerFacePlayer(playerid, targetid, opposite, forcesync)">
			<stacksize value="14"/>
			<referrer name="InflictDamage"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="AngleBetweenPoints"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SetFakeFacingAngle"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="UpdateSyncData"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
			<param name="opposite">
			</param>
			<param name="forcesync">
			</param>
		</member>
		<member name="M:Malloc_Allocate" syntax="Malloc_Allocate(size, clear)">
			<tagname value="Alloc"/>
			<stacksize value="10"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="calloc"/>
			<referrer name="realloc"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Timer_GetSingleSlot"/>
			<dependency name="MemSet"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="__YSI_g_sHeapStart"/>
			<dependency name="__YSI_g_sUnusedStart"/>
			<param name="size">
				Ammount of memory to allocate IN CELLS.
			</param>
			<param name="clear">
				<paraminfo>bool </paraminfo>
			</param>
			  <param name="cleat">Blank the memory?</param>  <returns>  Memory identifier.  </returns>  <remarks>  The size check should never fail, if there's only 1 cell  extra somewhere just sneak it onto the end of an array,  if the user does proper bounds checking it shouldn't  matter.  Implementation code for <symbolref name="malloc" />.  This code will find an area in memory with sufficient  space to store the given data and   </remarks> 
		</member>
		<member name="M:Malloc_Free" syntax="Malloc_Free(slot)">
			<stacksize value="5"/>
			<referrer name="realloc"/>
			<referrer name="Inline_MaybeFree_"/>
			<referrer name="Callback_Release_"/>
			<referrer name="_Timer_F"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="__YSI_g_sHeapStart"/>
			<dependency name="__YSI_g_sUnusedStart"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Memory allocation unit to release
			</param>
			  <remarks>  Implementation code for <symbolref name="free" />.  </remarks> 
		</member>
		<member name="M:Malloc_Get" syntax="Malloc_Get(array, index)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to get information from.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			    <returns>  Data.  </returns>  <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:Malloc_GetA" syntax="Malloc_GetA(dest[], length, array, index)">
			<stacksize value="8"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<dependency name="min"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Target for the array.
			</param>
			<param name="length">
				Length of the target.
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			        <remarks>  Displays errors in secure mode.  Gets an array.  </remarks> 
		</member>
		<member name="M:Malloc_GetData" syntax="Malloc_GetData(slot, index)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to get data from.
			</param>
			<param name="index">
				The location in the unit to get.
			</param>
			    <returns>  The data  </returns>  <remarks>  Basically like <symbolref name="Malloc_Get" /> but used internally.  </remarks> 
		</member>
		<member name="M:Malloc_GetFloat" syntax="Malloc_GetFloat(array, index)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			    <param name="value">Float value to insert</param>  <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:Malloc_GetS" syntax="Malloc_GetS(target[], length, array, index, pack)">
			<stacksize value="5"/>
			<referrer name="GetLocalFunction"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="strpack"/>
			<dependency name="strunpack"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
				Target for the string.
			</param>
			<param name="length">
				Length of the target.
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Return the string packed?
			</param>
			          <remarks>  Displays errors in secure mode.  Gets a string.  </remarks> 
		</member>
		<member name="M:Malloc_GetSlotSize" syntax="Malloc_GetSlotSize(slot)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Allocation unit to get the size of.
			</param>
			  <returns>  The size.  </returns> 
		</member>
		<member name="M:Malloc_NewS" syntax="Malloc_NewS(string[], pack)">
			<tagname value="Alloc"/>
			<stacksize value="7"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="false"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<dependency name="strunpack"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The string to store.
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Whether or not the string will be packed.
			</param>
			    <returns>  0 on fail or a data handle on sucess.  </returns>  <remarks>  Allocates a new piece of memory with enough space to store the given string.  </remarks> 
		</member>
		<member name="M:Malloc_NextSlot" syntax="Malloc_NextSlot(slot)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				The unit to get the one after of.
			</param>
			  <remarks>  Gets the next free block of memory after the current one.  </remarks> 
		</member>
		<member name="M:Malloc_OnCodeInit" syntax="Malloc_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="2798"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="Callback_CallHandler_"/>
			<dependency name="Callback_Return_"/>
			<dependency name="CodeScanAddMatcher"/>
			<dependency name="CodeScanInit"/>
			<dependency name="CodeScanMatcher"/>
			<dependency name="CodeScanMatcherData"/>
			<dependency name="CodeScanMatcherInit_"/>
			<dependency name="CodeScanMatcherPattern_"/>
			<dependency name="CodeScanRunFast"/>
			<dependency name="CodeScanner"/>
			<dependency name="E_INLINE_DATA"/>
			<dependency name="FALSE"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_Found@return"/>
			<dependency name="Inline_FoundConst"/>
			<dependency name="Inline_FoundConst2"/>
			<dependency name="Inline_FoundDestructor"/>
			<dependency name="Inline_FoundEnd"/>
			<dependency name="Inline_FoundMid"/>
			<dependency name="Inline_FoundRef"/>
			<dependency name="Inline_FoundStart"/>
			<dependency name="Inline_FoundUsingInline"/>
			<dependency name="Inline_FoundVar"/>
			<dependency name="Inline_UI_"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="OP_ADDR_PRI"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_INVERT"/>
			<dependency name="OP_JZER"/>
			<dependency name="OP_LOAD_S_PRI"/>
			<dependency name="OP_MOVE_PRI"/>
			<dependency name="OP_PUSH_ADR"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="OP_PUSH_PRI"/>
			<dependency name="OP_PUSH_S"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_STOR_I"/>
			<dependency name="OP_STOR_S_PRI"/>
			<dependency name="OP_ZERO_PRI"/>
			<dependency name="YSI_g_sCallbackCallAddress"/>
			<dependency name="YSI_g_sInlineLinkedList"/>
			<dependency name="YSI_g_sJumpOffset"/>
			<dependency name="__ARR"/>
			<dependency name="__REF"/>
			<dependency name="gCodeScanCallback_match"/>
			<dependency name="strunpack"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:Malloc_Reconcile" syntax="Malloc_Reconcile(addr)">
			<tagname value="Alloc"/>
			<stacksize value="1"/>
			<referrer name="Callback_Release_"/>
			<referrer name="Inline_Debug"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="addr">
				<paraminfo>ResolvedAlloc </paraminfo>
				Memory address to find
			</param>
			  <remarks>  Transforms a memory address in to a memory slot.  </remarks> 
		</member>
		<member name="M:Malloc_Resolve" syntax="Malloc_Resolve(slot)">
			<tagname value="ResolvedAlloc"/>
			<stacksize value="1"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Memory allocation unit to find
			</param>
			  <remarks>  Transforms a memory slot in to a memory address.  </remarks> 
		</member>
		<member name="M:Malloc_Set" syntax="Malloc_Set(array, index, value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="value">
				Value to insert
			</param>
			      <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:Malloc_SetA" syntax="Malloc_SetA(array, index, source[], length)">
			<stacksize value="8"/>
			<referrer name="_Timer_A"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<dependency name="min"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
				Array to insert.
			</param>
			<param name="length">
				Length of the array.
			</param>
			        <remarks>  Displays errors in secure mode.  Inserts an array.  </remarks> 
		</member>
		<member name="M:Malloc_SetData" syntax="Malloc_SetData(slot, index, value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to set in.
			</param>
			<param name="index">
				Where in the unit to set.
			</param>
			<param name="value">
				The value to save.
			</param>
			     
		</member>
		<member name="M:Malloc_SetFloat" syntax="Malloc_SetFloat(array, index, value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
				Float value to insert
			</param>
			      <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:Malloc_SetS" syntax="Malloc_SetS(array, index, str[], pack)">
			<stacksize value="6"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="_Timer_S"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="cellmax"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<dependency name="strunpack"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to insert
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Should the string be packed in?
			</param>
			        <remarks>  Displays errors in secure mode.  Inserts a string.  </remarks> 
		</member>
		<member name="M:Malloc_SetSlotSize" syntax="Malloc_SetSlotSize(slot, size)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				The allocation unit to set the size of.
			</param>
			<param name="size">
				The size to set it to.
			</param>
			   
		</member>
		<member name="M:Malloc_SetVAA" syntax="Malloc_SetVAA(array, index, arg)">
			<stacksize value="2"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="arg">
				Offset in the stack of the array to store.
			</param>
			      <remarks>  Inserts an array by stack offset for use in vararg functions.  </remarks> 
		</member>
		<member name="M:Malloc_SetVAS" syntax="Malloc_SetVAS(array, index, arg)">
			<stacksize value="2"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="arg">
				Offset in the stack of the string to store.
			</param>
			      <remarks>  Inserts a string by stack offset for use in vararg functions.  </remarks> 
		</member>
		<member name="M:Malloc_SlotSize" syntax="Malloc_SlotSize(slot)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Allocation unit to get the size of.
			</param>
			  <returns>  The size.  </returns> 
		</member>
		<member name="M:Mean" syntax="Mean(arr[], num)">
			<stacksize value="5"/>
			<dependency name="Sum"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  The mathematical mean value of the array.  </returns> 
		</member>
		<member name="M:Median" syntax="Median(arr[], num)">
			<stacksize value="5"/>
			<dependency name="Utils_PreSort"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  The mathematical median value of the array.  </returns> 
		</member>
		<member name="M:MemCmp" syntax="MemCmp(arr1[], arr2[], count)">
			<stacksize value="3"/>
			<referrer name="memcmp"/>
			<param name="arr1">
				<paraminfo> [] </paraminfo>
				First array to compare.
			</param>
			<param name="arr2">
				<paraminfo> [] </paraminfo>
				Second array to compare.
			</param>
			<param name="count">
				How many cells to compare.
			</param>
			      <returns>  The difference (0 if the same).  </returns> 
		</member>
		<member name="M:MemSet" syntax="MemSet(arr[], value, size)">
			<stacksize value="7"/>
			<referrer name="Bit_SetAll"/>
			<referrer name="Malloc_Allocate"/>
			<dependency name="RawMemSet"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				Array or address to set to a value.
			</param>
			<param name="value">
				What to set the cells to.
			</param>
			<param name="size">
				Number of cells to fill.
			</param>
			      <remarks>  Based on <a href="http://forum.sa-mp.com/showthread.php?p=1606781#post1606781">  code by Slice</a>, modified to use binary flags instead of a loop.  "MemSet" takes an array, the size of the array, and a value to fill it with  and sets the whole array to that value.  "rawmemset" is similar, but takes an AMX data segment address instead and  the size is in bytes, not cells.  However, the size must still be a  multiple of 4.  </remarks> 
		</member>
		<member name="M:MineCheckTimer" syntax="MineCheckTimer(playerid)">
			<stacksize value="6"/>
			<referrer name="SecondTimer"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="MineSell"/>
			<dependency name="MineSellCP"/>
			<dependency name="MineSellIcon"/>
			<dependency name="MineSellLabel"/>
			<dependency name="MineSellNagroda"/>
			<dependency name="MineSellTimer"/>
			<dependency name="MineSellVehicle"/>
			<dependency name="ShowMissionDraw"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:MinuteTimer" syntax="MinuteTimer()">
			<stacksize value="143"/>
			<referrer name="@_yTMinuteTimer"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateKurczak"/>
			<dependency name="GetRecords"/>
			<dependency name="GetRecords"/>
			<dependency name="Init_Disks"/>
			<dependency name="Init_Figure"/>
			<dependency name="Init_Mining"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="KurczakEnabled"/>
			<dependency name="SendRconCommand"/>
			<dependency name="SetTimer"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="bans"/>
			<dependency name="connects"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="diskCount"/>
			<dependency name="false"/>
			<dependency name="figureCount"/>
			<dependency name="format"/>
			<dependency name="getDay"/>
			<dependency name="getDayName"/>
			<dependency name="getDayName"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="kicks"/>
			<dependency name="math_random"/>
			<dependency name="messages"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_adminPoints"/>
			<dependency name="player_adminTime"/>
			<dependency name="player_eventCount"/>
			<dependency name="player_eventPoints"/>
			<dependency name="random"/>
			<dependency name="saveAll"/>
			<dependency name="strcmp"/>
			<dependency name="strx"/>
			<dependency name="task_timer"/>
			<dependency name="tdDate"/>
			<dependency name="true"/>
			<dependency name="zresetowane"/>
		</member>
		<member name="M:Mode" syntax="Mode(arr[], num)">
			<stacksize value="6"/>
			<dependency name="Utils_PreSort"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  The mathematical modal value of the array.  </returns> 
		</member>
		<member name="M:MoveDynamicObject" syntax="MoveDynamicObject(objectid, x, y, z, speed, rx, ry, rz)">
			<attribute name="native"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="pc_cmd_brama"/>
			<referrer name="DrwalTree"/>
			<referrer name="MoveWP"/>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:MovePointCol" syntax="MovePointCol(StartX, StartY, StartZ, EndX, EndY, EndZ, &amp;x, &amp;y, &amp;z)">
			<stacksize value="12"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="CA_RayCastLine"/>
			<param name="StartX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="StartY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="StartZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="EndZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:MoveWP" syntax="MoveWP()">
			<stacksize value="11"/>
			<referrer name="SecondTimer"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GAME_WP"/>
			<dependency name="GameStarted"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="wipeoutObjectPosition"/>
			<dependency name="wipeoutObjectPosition"/>
			<dependency name="wipeout_last_pos"/>
			<dependency name="wipeout_start_pos"/>
			<dependency name="wpObjectData"/>
			<dependency name="wpSwitch"/>
		</member>
		<member name="M:MutePlayer" syntax="MutePlayer(playerid, adminid, time, reason[])">
			<stacksize value="35"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="IsKicked"/>
			<dependency name="LOG_PUNISH"/>
			<dependency name="Log"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_adminPenalty"/>
			<dependency name="player_adminPoints"/>
			<dependency name="player_mutetime"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="time">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:MySQL_PQueryInline" syntax="MySQL_PQueryInline(handle, cb, query[], ...)">
			<stacksize value="17"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="Init_Business"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gs_CALLBACK_ii"/>
			<dependency name="YSI_gs_INDIRECT_FROM_CALLBACK"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="true"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:MySQL_TQueryInline" syntax="MySQL_TQueryInline(handle, cb, query[], ...)">
			<stacksize value="17"/>
			<referrer name="Init_Records"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="Init_Map"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gs_CALLBACK_ii"/>
			<dependency name="YSI_gs_INDIRECT_FROM_CALLBACK"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="true"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Mysliwy_Random" syntax="Mysliwy_Random(playerid)">
			<stacksize value="142"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CA_FindZ_For2DCoord"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="GetGroundRotation"/>
			<dependency name="GetPVarInt"/>
			<dependency name="HuntingAlive"/>
			<dependency name="HuntingAlive"/>
			<dependency name="HuntingCountAlive"/>
			<dependency name="HuntingHealth"/>
			<dependency name="HuntingHealth"/>
			<dependency name="HuntingLabel"/>
			<dependency name="HuntingLabel"/>
			<dependency name="HuntingObject"/>
			<dependency name="HuntingObject"/>
			<dependency name="IsPosInWater"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="math_random_float"/>
			<dependency name="randomPositionArea"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Mysliwy_Start" syntax="Mysliwy_Start(playerid)">
			<stacksize value="8"/>
			<referrer name="OnDialogJob"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="HuntingCount"/>
			<dependency name="HuntingReward"/>
			<dependency name="HuntingZone"/>
			<dependency name="JobDay"/>
			<dependency name="Mysliwy_Random"/>
			<dependency name="SetHealth"/>
			<dependency name="ShowZoneForPlayer"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="ZoneFlashForPlayer"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="giveWeapon"/>
			<dependency name="math_random"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:NDP_CalculateListitemsPerPage" syntax="NDP_CalculateListitemsPerPage(playerid)">
			<stacksize value="8"/>
			<referrer name="NDP_DialogInvoke"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="NDP_DialogInfo"/>
			<dependency name="NDP_DialogInfo"/>
			<dependency name="NDP_P"/>
			<dependency name="NDP_P"/>
			<dependency name="ndp_amountperpage"/>
			<dependency name="ndp_backbutton"/>
			<dependency name="ndp_dialogitemscount"/>
			<dependency name="ndp_endindex"/>
			<dependency name="ndp_nextbutton"/>
			<dependency name="ndp_style"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:NDP_DialogInvoke" syntax="NDP_DialogInvoke(playerid, type, function[], dialogid, style, caption[], button1[], button2[], items_per_page, nextbutton[], backbutton[])">
			<stacksize value="5"/>
			<referrer name="ShowPlayerDialogPages"/>
			<referrer name="_NDP_ShowPlayerDialog_"/>
			<dependency name="ClearDialogListitems"/>
			<dependency name="NDP_CalculateListitemsPerPage"/>
			<dependency name="NDP_P"/>
			<dependency name="NDP_P"/>
			<dependency name="NDP_ShowDialogPage"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="ndp_amountperpage"/>
			<dependency name="ndp_backbutton"/>
			<dependency name="ndp_button1"/>
			<dependency name="ndp_button2"/>
			<dependency name="ndp_caption"/>
			<dependency name="ndp_dialogName"/>
			<dependency name="ndp_dialogid"/>
			<dependency name="ndp_dialogopened"/>
			<dependency name="ndp_endindex"/>
			<dependency name="ndp_isstylepage"/>
			<dependency name="ndp_nextbutton"/>
			<dependency name="ndp_page"/>
			<dependency name="ndp_style"/>
			<dependency name="ndp_type"/>
			<dependency name="strpack"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="dialogid">
			</param>
			<param name="style">
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="items_per_page">
			</param>
			<param name="nextbutton">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="backbutton">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:NDP_ProcessDialogResponse" syntax="NDP_ProcessDialogResponse(playerid, dialogid, response, listitem, inputtext[], dialogtype)">
			<stacksize value="79"/>
			<referrer name="_@yHOnDialogResponse@03"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="NDP_DIALOG_TYPE_DIALOG"/>
			<dependency name="NDP_P"/>
			<dependency name="NDP_P"/>
			<dependency name="ndp_dialogName"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="dialogtype">
			</param>
		</member>
		<member name="M:NDP_ShowDialogPage" syntax="NDP_ShowDialogPage(playerid, ndppage)">
			<stacksize value="12"/>
			<referrer name="NDP_DialogInvoke"/>
			<referrer name="_@yHOnDialogResponse@03"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowPlayerDialog"/>
			<dependency name="NDP_DialogInfo"/>
			<dependency name="NDP_DialogInfo"/>
			<dependency name="NDP_DialogString"/>
			<dependency name="NDP_P"/>
			<dependency name="NDP_P"/>
			<dependency name="ndp_backbutton"/>
			<dependency name="ndp_button1"/>
			<dependency name="ndp_button2"/>
			<dependency name="ndp_caption"/>
			<dependency name="ndp_dialogid"/>
			<dependency name="ndp_dialogitemscount"/>
			<dependency name="ndp_endindex"/>
			<dependency name="ndp_itemsonpage"/>
			<dependency name="ndp_nextbutton"/>
			<dependency name="ndp_page"/>
			<dependency name="ndp_style"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
			<param name="ndppage">
			</param>
		</member>
		<member name="M:NOT_IN_RANGE" syntax="NOT_IN_RANGE(value, lower, upper)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				The number to compare.
			</param>
			<param name="lower">
				The lower limit.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			      <returns>  Is the value outside the given range.  </returns>  <remarks>  Equivalent to:  <code>		(%1) &lt;= (%0) &lt; (%2)</code>  </remarks> 
		</member>
		<member name="M:NetStats_MessagesRecvPerSecond" syntax="NetStats_MessagesRecvPerSecond(playerid)">
			<attribute name="native"/>
			<referrer name="ac_Timer"/>
			<param name="playerid">
				The ID of the player to get the data from
			</param>
			<library>a_samp</library>  <summary>Gets the number of messages the player has received in the last second.</summary>    <seealso name="GetPlayerNetworkStats" />  <seealso name="GetNetworkStats" />  <seealso name="NetStats_GetConnectedTime" />  <seealso name="NetStats_MessagesReceived" />  <seealso name="NetStats_BytesReceived" />  <seealso name="NetStats_MessagesSent" />  <seealso name="NetStats_BytesSent" />  <seealso name="NetStats_PacketLossPercent" />  <seealso name="NetStats_ConnectionStatus" />  <seealso name="NetStats_GetIpPort" />  <remarks>This function was added in <b>SA-MP 0.3z</b> and will not work in earlier versions!</remarks>  <returns>the number of messages the player has received in the last second.</returns> 
		</member>
		<member name="M:NetStats_PacketLossPercent" syntax="NetStats_PacketLossPercent(playerid)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="SecondTimer"/>
			<param name="playerid">
				The ID of the player to get the data from
			</param>
			<library>a_samp</library>  <summary>Gets the packet loss percentage of a player.  Packet loss means data the player is sending  to the server is being lost (or vice-versa).</summary>    <seealso name="GetPlayerNetworkStats" />  <seealso name="GetNetworkStats" />  <seealso name="NetStats_GetConnectedTime" />  <seealso name="NetStats_MessagesReceived" />  <seealso name="NetStats_BytesReceived" />  <seealso name="NetStats_MessagesSent" />  <seealso name="NetStats_BytesSent" />  <seealso name="NetStats_MessagesRecvPerSecond" />  <seealso name="NetStats_ConnectionStatus" />  <seealso name="NetStats_GetIpPort" />  <remarks>This function was added in <b>SA-MP 0.3z</b> and will not work in earlier versions!</remarks>  <remarks>Anything greater than 0.0% should already be a cause of concern.  Anything greater than  1.0% is outright bad.</remarks>  <remarks>This function has been found to be currently unreliable the output is not as expected when  compared to the client.  Therefore this function should not be used as a packet loss kicker. </remarks>  <remarks>A more accurate packetloss function can be found here: <a href="http://forum.sa-mp.com/showpost.php?p=2488911&amp;postcount=984">  http://forum.sa-mp.com/showpost.php?p=2488911&amp;postcount=984</a></remarks>  <returns>The percentage packet loss as a float. <b><c>0.0</c></b> if player not connected.</returns> 
		</member>
		<member name="M:NieMozeTeraz" syntax="NieMozeTeraz(playerid)">
			<stacksize value="6"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="MineStarted"/>
			<dependency name="false"/>
			<dependency name="pArena"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pFishing"/>
			<dependency name="pGame"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGlitchArena"/>
			<dependency name="pJob"/>
			<dependency name="playerData"/>
			<dependency name="player_business"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_vault"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:NtCompare" syntax="NtCompare(s1, s2[])">
			<stacksize value="5"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetTagIndexFromName"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="s1">
			</param>
			<param name="s2">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly amx_header</library> <summary> Compares a string stored in the name table starting at "s1" (packed) with another string "s2" (unpacked). </summary>
		</member>
		<member name="M:NtCopy" syntax="NtCopy(src, dest[], size)">
			<stacksize value="3"/>
			<referrer name="PrintAmxNameTable"/>
			<referrer name="GetPublicNameFromIndex"/>
			<referrer name="GetNativeNameFromIndex"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<referrer name="GetTagNameFromIndex"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="src">
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_header</library> <summary> Copies a name from the name table to a string.  Returns the number of characters copied. </summary>
		</member>
		<member name="M:O@" syntax="O@(function[], time, repeat, format[], ...)">
			<attribute name="native"/>
			<referrer name="_yT@SecondTimer"/>
			<referrer name="_yT@MinuteTimer"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="repeat">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:O@A_" syntax="O@A_()">
			<tagname value="bool"/>
			<stacksize value="11"/>
			<referrer name="AddressofResolve"/>
			<referrer name="Hooks_GenerateContinue"/>
			<referrer name="@yH_OnScriptInit@000"/>
			<referrer name="@yH_OnPlayerDisconnect@000"/>
			<referrer name="@yH_OnScriptExit@000"/>
			<referrer name="Hooks_OnCodeInit"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Callback_Get"/>
			<referrer name="Inline_DoCodeGen"/>
			<referrer name="Inline_UI_"/>
			<referrer name="@yH_OnPlayerDisconnect@01"/>
			<referrer name="@yH_OnDialogResponse@01"/>
			<referrer name="@yH_OnPlayerConnect@02"/>
			<referrer name="@yH_OnPlayerDisconnect@02"/>
			<referrer name="@yH_OnDialogResponse@03"/>
			<referrer name="@yH_ResetPlayerData@04"/>
			<referrer name="@yH_OnDialogResponse@04"/>
			<referrer name="@yH_OnPlayerPickUpDynPickup@05"/>
			<referrer name="@yH_OnPlayerDeath@06"/>
			<referrer name="@yH_ResetPlayerData@07"/>
			<referrer name="@yH_OnPlayerKeyStateChange@07"/>
			<referrer name="@yH_ResetPlayerData@08"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@08"/>
			<referrer name="@yH_OnPlayerKeyStateChange@09"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@09"/>
			<referrer name="@yH_OnPlayerDeath@0@"/>
			<referrer name="@yH_ResetPlayerData@0@"/>
			<referrer name="@yH_OnPlayerDisconnect@0A"/>
			<referrer name="@yH_OnDialogResponse@0B"/>
			<referrer name="@yH_ResetPlayerData@0C"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0C"/>
			<referrer name="@yH_OnDialogResponse@0C"/>
			<referrer name="@yH_OnPlayerExitVehicle@0C"/>
			<referrer name="@yH_OnPlayerDeath@0C"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0C"/>
			<referrer name="@yH_ResetPlayerData@0D"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0D"/>
			<referrer name="@yH_ResetPlayerData@0E"/>
			<referrer name="@yH_ResetPlayerData@0F"/>
			<referrer name="@yH_OnPlayerDeath@0F"/>
			<referrer name="@yH_OnPlayerDisconnect@0F"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0F"/>
			<referrer name="@yH_OnDialogResponse@0F"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0F"/>
			<referrer name="@yH_OnPlayerExitVehicle@0F"/>
			<referrer name="@yH_ResetPlayerData@0G"/>
			<referrer name="@yH_OnPlayerUpdate@0G"/>
			<referrer name="@yH_ResetPlayerData@0H"/>
			<referrer name="@yH_OnPlayerShootDynObject@0H"/>
			<referrer name="@yH_OnDialogResponse@0I"/>
			<referrer name="@yH_ResetPlayerData@0J"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0J"/>
			<referrer name="@yH_OnPlayerUpdate@0J"/>
			<referrer name="@yH_DestroyVehicle@0K"/>
			<referrer name="@yH_OnVehicleMod@0L"/>
			<referrer name="@yH_OnVehiclePaintjob@0L"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0M"/>
			<referrer name="@yH_OnPlayerDeath@0N"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0O"/>
			<referrer name="@yH_OnPlayerEnterDynArea@0O"/>
			<referrer name="@yH_OnPlayerLeaveDynArea@0O"/>
			<referrer name="@yH_OnDialogResponse@0O"/>
			<referrer name="@yH_OnDialogResponse@0P"/>
			<referrer name="@yH_OnPlayerEditDynObject@0P"/>
			<referrer name="@yH_OnDialogResponse@0Q"/>
			<referrer name="@yH_ResetPlayerData@0R"/>
			<referrer name="@yH_ResetPlayerData@0S"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0S"/>
			<referrer name="@yH_OnPlayerDeath@0S"/>
			<referrer name="@yH_ResetPlayerData@0T"/>
			<referrer name="@yH_ResetPlayerData@0U"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0U"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0U"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0U"/>
			<referrer name="@yH_ResetPlayerData@0V"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0V"/>
			<referrer name="@yH_OnPlayerExitVehicle@0V"/>
			<referrer name="@yH_ResetPlayerData@0W"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0W"/>
			<referrer name="@yH_ResetPlayerData@0X"/>
			<referrer name="@yH_OnPlayerShootDynObject@0X"/>
			<referrer name="@yH_ResetPlayerData@0Y"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Y"/>
			<referrer name="@yH_ResetPlayerData@0Z"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Z"/>
			<referrer name="@yH_ResetPlayerData@0b"/>
			<referrer name="@yH_OnDialogResponse@0b"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0c"/>
			<referrer name="@yH_OnPlayerPickUpPickup@0c"/>
			<referrer name="@yH_ResetPlayerData@0d"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0d"/>
			<referrer name="@yH_OnPlayerClickTextDraw@0d"/>
			<referrer name="@yH_OnDialogResponse@0d"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0e"/>
			<referrer name="@yH_ResetPlayerData@0f"/>
			<referrer name="@yH_ResetPlayerData@0g"/>
			<referrer name="@yH_OnDialogResponse@0g"/>
			<referrer name="@yH_OnDialogResponse@0h"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0i"/>
			<referrer name="@yH_ResetPlayerData@0j"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0k"/>
			<referrer name="@yH_OnDialogResponse@0l"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0m"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0m"/>
			<referrer name="@yH_OnPlayerExitVehicle@0m"/>
			<referrer name="@yH_OnPlayerDeath@0m"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0m"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0n"/>
			<referrer name="@yH_ResetPlayerData@0o"/>
			<referrer name="@yH_OnPlayerDisconnect@0o"/>
			<referrer name="@yH_OnDialogResponse@0o"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0o"/>
			<referrer name="@yH_OnPlayerUpdate@0o"/>
			<referrer name="@yH_OnPlayerDeath@0p"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0q"/>
			<referrer name="@yH_OnPlayerDeath@0r"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0s"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0s"/>
			<referrer name="@yH_OnPlayerExitVehicle@0s"/>
			<referrer name="@yH_OnPlayerDeath@0t"/>
			<referrer name="@yH_OnPlayerDeath@0u"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0v"/>
			<referrer name="@yH_OnPlayerDeath@0v"/>
			<referrer name="@yH_OnPlayerDeath@0w"/>
			<referrer name="@yH_ResetPlayerData@0x"/>
			<referrer name="@yH_OnPlayerDisconnect@0x"/>
			<referrer name="@yH_OnPlayerDeath@0x"/>
			<referrer name="@yH_OnDialogResponse@0y"/>
			<referrer name="@yH_OnDialogResponse@0z"/>
			<referrer name="@yH_OnPlayerWeaponShot@10"/>
			<referrer name="@yH_ResetPlayerData@11"/>
			<referrer name="@yH_OnDialogResponse@11"/>
			<referrer name="@yH_ResetPlayerData@12"/>
			<referrer name="@yH_SetPlayerColor@13"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="DisasmInit"/>
			<dependency name="DisasmNext"/>
			<dependency name="GetCurrentFrameReturn"/>
			<dependency name="O@V_"/>
			<dependency name="OP_CALL"/>
			<dependency name="false"/>
			<library>amx_assembly addressof</library>
		</member>
		<member name="M:O@B_" syntax="O@B_()">
			<tagname value="bool"/>
			<stacksize value="11"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmInit"/>
			<dependency name="DisasmNext"/>
			<dependency name="GetCurrentFrameReturn"/>
			<dependency name="O@V_"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="false"/>
			<library>amx_assembly v</library>
		</member>
		<member name="M:ORM_DeleteInline" syntax="ORM_DeleteInline(id, cb)">
			<stacksize value="9"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_gs_CALLBACK_ii"/>
			<dependency name="YSI_gs_INDIRECT_FROM_CALLBACK"/>
			<dependency name="orm_delete"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
		</member>
		<member name="M:ORM_InsertInline" syntax="ORM_InsertInline(id, cb)">
			<stacksize value="9"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_gs_CALLBACK_ii"/>
			<dependency name="YSI_gs_INDIRECT_FROM_CALLBACK"/>
			<dependency name="orm_insert"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
		</member>
		<member name="M:ORM_LoadInline" syntax="ORM_LoadInline(id, cb)">
			<stacksize value="9"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_gs_CALLBACK_ii"/>
			<dependency name="YSI_gs_INDIRECT_FROM_CALLBACK"/>
			<dependency name="orm_load"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
		</member>
		<member name="M:ORM_SaveInline" syntax="ORM_SaveInline(id, cb)">
			<stacksize value="9"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_gs_CALLBACK_ii"/>
			<dependency name="YSI_gs_INDIRECT_FROM_CALLBACK"/>
			<dependency name="orm_save"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
		</member>
		<member name="M:ORM_SelectInline" syntax="ORM_SelectInline(id, cb)">
			<stacksize value="9"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_gs_CALLBACK_ii"/>
			<dependency name="YSI_gs_INDIRECT_FROM_CALLBACK"/>
			<dependency name="orm_select"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
		</member>
		<member name="M:ORM_UpdateInline" syntax="ORM_UpdateInline(id, cb)">
			<stacksize value="9"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="YSI_gs_CALLBACK_ii"/>
			<dependency name="YSI_gs_INDIRECT_FROM_CALLBACK"/>
			<dependency name="orm_update"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="cb">
				<paraminfo>F@_@ </paraminfo>
			</param>
		</member>
		<member name="M:OnActorStreamIn" syntax="OnActorStreamIn(actorid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnActorStreamIn"/>
			<dependency name="Iter_Single@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<param name="actorid">
				The ID of the actor that has been streamed in for the player
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the actor in
			</param>
			<summary>This callback is called when an actor is streamed in by a player's client.</summary>      <seealso name="OnActorStreamOut" />  <seealso name="OnPlayerStreamIn" />  <remarks>This function was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <remarks>This callback can also be called by NPC.</remarks>  <remarks>It is always called first in filterscripts.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnActorStreamOut" syntax="OnActorStreamOut(actorid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_OnActorStreamOut"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<param name="actorid">
				The ID of the actor that has been streamed out for the player
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the actor out
			</param>
			<summary>This callback is called when an actor is streamed out by a player's client.</summary>      <seealso name="OnActorStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This function was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <remarks>This callback can also be called by NPC.</remarks>  <remarks>It is always called first in filterscripts.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnAndroidCheck" syntax="OnAndroidCheck(playerid, isDisgustingThiefToBeBanned)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="isDisgustingThiefToBeBanned">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:OnAndroidTimer" syntax="OnAndroidTimer(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnBankDialog" syntax="OnBankDialog(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="165"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_BANK_CREDIT"/>
			<dependency name="DIALOG_BANK_KWOTA"/>
			<dependency name="DIALOG_BANK_PANEL"/>
			<dependency name="DIALOG_BANK_PAYMENT"/>
			<dependency name="DIALOG_BANK_PRZELEW"/>
			<dependency name="DIALOG_BANK_TARGET"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="ShowBankPanel"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="creditData"/>
			<dependency name="creditData"/>
			<dependency name="credit_cost"/>
			<dependency name="credit_level"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="isNumeric"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pBank"/>
			<dependency name="pBankAmount"/>
			<dependency name="pBankTarget"/>
			<dependency name="pCredit"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_level"/>
			<dependency name="player_nickname"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnBaseObjectBuy" syntax="OnBaseObjectBuy(playerid, gangid, baseid, index)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="GangBaseObjectCount"/>
			<dependency name="GangBaseObjectData"/>
			<dependency name="GangBaseObjectData"/>
			<dependency name="GangBaseObjectID"/>
			<dependency name="GangBaseObjectID"/>
			<dependency name="GangBaseObjectIndex"/>
			<dependency name="GangBaseObjectIndex"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="SetPVarInt"/>
			<dependency name="ShowBaseObjectsMenu"/>
			<dependency name="base_obj_modelid"/>
			<dependency name="base_obj_name"/>
			<dependency name="cache_insert_id"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_tag"/>
			<dependency name="giveGangBudget"/>
			<dependency name="msg"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
			<param name="baseid">
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:OnBusinessResponse" syntax="OnBusinessResponse(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="414"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="BUSINESS_CASINO"/>
			<dependency name="BUSINESS_GUNSHOP"/>
			<dependency name="DIALOG_BUSINESS_MANAGE"/>
			<dependency name="DIALOG_BUSINESS_PANEL"/>
			<dependency name="DIALOG_BUSINESS_PRICE"/>
			<dependency name="DIALOG_BUSINESS_RENAME"/>
			<dependency name="DIALOG_BUSINESS_REWARD"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="EnterBusiness"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessType"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iterator@Business"/>
			<dependency name="ShowBusinessManage"/>
			<dependency name="ShowBusinessPanel"/>
			<dependency name="UpdateBusinessLabel"/>
			<dependency name="UpdateBusinessLabel"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="addLevelScore"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_cost"/>
			<dependency name="business_label"/>
			<dependency name="business_license"/>
			<dependency name="business_name"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_ownername"/>
			<dependency name="business_position"/>
			<dependency name="business_price"/>
			<dependency name="business_reward"/>
			<dependency name="business_type"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_num_rows"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getMoney"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_pquery"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_businessData"/>
			<dependency name="player_nickname"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="strlen"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnCachedInit" syntax="OnCachedInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:OnCheatDetected" syntax="OnCheatDetected(playerid, ip_address[], type, code)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CheckBet"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_RC"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="KickPlayer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="RaceMapIcon"/>
			<dependency name="RaceVehicle"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="msg"/>
			<dependency name="pCheatDetected"/>
			<dependency name="pCheatTemp"/>
			<dependency name="pCheatWH"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="type">
			</param>
			<param name="code">
			</param>
		</member>
		<member name="M:OnClientCheckResponse" syntax="OnClientCheckResponse(playerid, actionid, memaddr, retndata)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="FIXES_OnClientCheckResponse"/>
			<param name="playerid">
				The ID of the player checked
			</param>
			<param name="actionid">
				The type of check performed
			</param>
			<param name="memaddr">
				The address requested
			</param>
			<param name="retndata">
				The result of the check
			</param>
			<summary>This callback is called when a SendClientCheck request comletes</summary>          <seealso name="SendClientCheck" /> 
		</member>
		<member name="M:OnDialogAccount" syntax="OnDialogAccount(playerid, dialogid, response, inputtext[])">
			<stacksize value="97"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="DIALOG_LOGIN"/>
			<dependency name="DIALOG_PINCODE_LOGIN"/>
			<dependency name="DIALOG_QUESTION_LOGIN"/>
			<dependency name="DIALOG_REGISTER"/>
			<dependency name="KickPlayer"/>
			<dependency name="OnPlayerLogged"/>
			<dependency name="SetPVarString"/>
			<dependency name="ShowLoginPanel"/>
			<dependency name="ShowPinCodePanel"/>
			<dependency name="ShowQuestionPanel"/>
			<dependency name="ShowRegisterPanel"/>
			<dependency name="bcrypt_hash"/>
			<dependency name="bcrypt_verify"/>
			<dependency name="format"/>
			<dependency name="isValidPassword"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="pSecretAnswer"/>
			<dependency name="pSecretAnswer"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_attempts"/>
			<dependency name="player_password"/>
			<dependency name="strmatch"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogAdminDuty" syntax="OnDialogAdminDuty(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="167"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DIALOG_ADMIN_DUTY"/>
			<dependency name="DIALOG_ADMIN_LOGIN"/>
			<dependency name="DIALOG_ADMIN_PASSWORD"/>
			<dependency name="DIALOG_ADMIN_PASSWORD_CHANGE"/>
			<dependency name="DIALOG_ADMIN_RANKING"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Permission"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="isValidPassword"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pc_cmd_aduty"/>
			<dependency name="pc_cmd_fake"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_admin"/>
			<dependency name="player_adminLevel"/>
			<dependency name="player_adminLoad"/>
			<dependency name="player_adminPass"/>
			<dependency name="player_adminPenalty"/>
			<dependency name="player_adminPoints"/>
			<dependency name="player_adminTime"/>
			<dependency name="player_checkCMD"/>
			<dependency name="player_checkMuted"/>
			<dependency name="player_checkPM"/>
			<dependency name="player_eventCount"/>
			<dependency name="player_eventPoints"/>
			<dependency name="player_isFake"/>
			<dependency name="player_online"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strmatch"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogAdminPanel" syntax="OnDialogAdminPanel(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="152"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckPlayerOnline"/>
			<dependency name="DIALOG_ADMIN_LEVEL"/>
			<dependency name="DIALOG_ADMIN_LIST"/>
			<dependency name="DIALOG_ADMIN_PANEL"/>
			<dependency name="DIALOG_ADMIN_PASSWORD"/>
			<dependency name="DIALOG_ADMIN_PERMISSION"/>
			<dependency name="DIALOG_ADMIN_SELECT"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="GetPVarInt"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Permission"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="KillTimer"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="SetPVarInt"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="bankHeistEnabled"/>
			<dependency name="bankHeistGas"/>
			<dependency name="bankHeistHacker"/>
			<dependency name="bankHeistLabel"/>
			<dependency name="bankHeistTimer"/>
			<dependency name="bankHeistVaultOpen"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="fishEvent"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="heist_kurwa"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_query"/>
			<dependency name="oreEvent"/>
			<dependency name="pc_cmd_apanel"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_admin"/>
			<dependency name="player_adminData"/>
			<dependency name="player_adminLevel"/>
			<dependency name="player_adminLoad"/>
			<dependency name="player_adminPass"/>
			<dependency name="player_nickname"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strcat"/>
			<dependency name="strmatch"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogBanList" syntax="OnDialogBanList(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="100"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="DIALOG_BANLIST"/>
			<dependency name="DIALOG_BAN_EXPIRE"/>
			<dependency name="DIALOG_BAN_MANAGE"/>
			<dependency name="DIALOG_BAN_REASON"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="ShowBanManage"/>
			<dependency name="UnixTime"/>
			<dependency name="dbconn"/>
			<dependency name="gettime"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="pc_cmd_banlist"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_banData"/>
			<dependency name="player_saveData"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="task_await"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogGangAchievements" syntax="OnDialogGangAchievements(playerid, dialogid, response, listitem)">
			<stacksize value="166"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_GANG"/>
			<dependency name="DIALOG_GANG_ACHIEVEMENTS"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="cellmax"/>
			<dependency name="format"/>
			<dependency name="gangAchievementData"/>
			<dependency name="gangAchievementData"/>
			<dependency name="gang_achievement_description"/>
			<dependency name="gang_achievement_name"/>
			<dependency name="gang_achievement_needed"/>
			<dependency name="gang_achievement_reward"/>
			<dependency name="pGang"/>
			<dependency name="pGangAchievement"/>
			<dependency name="pGangAchievementStatus"/>
			<dependency name="pGangAchievementStatus"/>
			<dependency name="pc_cmd_team"/>
			<dependency name="s"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnDialogGangCreator" syntax="OnDialogGangCreator(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="305"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_GANG_CREATOR_COLOR"/>
			<dependency name="DIALOG_GANG_CREATOR_NAME"/>
			<dependency name="DIALOG_GANG_CREATOR_RESULT"/>
			<dependency name="DIALOG_GANG_CREATOR_TAG"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="FetchGang"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidGangBuffer"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="LoadPlayerGang"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="ShowGangCreator"/>
			<dependency name="cache_insert_id"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_tag"/>
			<dependency name="getLocalDate"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGang"/>
			<dependency name="pGangCreatorColor"/>
			<dependency name="pGangCreatorName"/>
			<dependency name="pGangCreatorName"/>
			<dependency name="pGangCreatorTag"/>
			<dependency name="pGangCreatorTag"/>
			<dependency name="pGangRankColor"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="random"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogGangMarket" syntax="OnDialogGangMarket(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="276"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="DIALOG_GANG"/>
			<dependency name="DIALOG_GANG_LOAN_CONFIRM"/>
			<dependency name="DIALOG_GANG_MARKET"/>
			<dependency name="DIALOG_GANG_MARKET_LIST"/>
			<dependency name="DIALOG_GANG_MARKET_LOAN"/>
			<dependency name="DIALOG_GANG_MARKET_TRANSFER"/>
			<dependency name="DIALOG_GANG_MARKET_TYPE"/>
			<dependency name="DIALOG_GANG_TRANSFER_CONFIRM"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="GANG_DIALOG_MARKET"/>
			<dependency name="GangBar"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerBudget"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="KillTimer"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="LoadPlayerGang"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ShowMarketManage"/>
			<dependency name="UpdateGangBox"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budget"/>
			<dependency name="gang_color"/>
			<dependency name="gang_draw"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_rankDefault"/>
			<dependency name="gang_tag"/>
			<dependency name="giveGangBudget"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGang"/>
			<dependency name="pGangInvites"/>
			<dependency name="pGangInvites"/>
			<dependency name="pGangMarket"/>
			<dependency name="pGangMarket"/>
			<dependency name="pGangRankColor"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangTransferCost"/>
			<dependency name="pGangTransferID"/>
			<dependency name="pGangTransferTimer"/>
			<dependency name="pTransferData"/>
			<dependency name="pTransferData"/>
			<dependency name="pc_cmd_team"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_gang_loan"/>
			<dependency name="player_nickname"/>
			<dependency name="player_saveData"/>
			<dependency name="random"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogGangMember" syntax="OnDialogGangMember(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="271"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="CheckPlayerOnline"/>
			<dependency name="DIALOG_GANG"/>
			<dependency name="DIALOG_GANG_MANAGE_MEMBER"/>
			<dependency name="DIALOG_GANG_RANK_COLOR"/>
			<dependency name="DIALOG_GANG_RANK_NAME"/>
			<dependency name="DIALOG_GANG_RANK_PERMS"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="GANG_DIALOG_MANAGE"/>
			<dependency name="GangMemberEdit"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidGangBuffer"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="LeaveGang"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gangRankPermissions"/>
			<dependency name="gangRankPermissions"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_query"/>
			<dependency name="pGang"/>
			<dependency name="pGangRankColor"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_gangManage"/>
			<dependency name="player_nickname"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strx"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogGangs" syntax="OnDialogGangs(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="435"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="CheckGangAchievement"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CountGangMembers"/>
			<dependency name="DIALOG_GANG"/>
			<dependency name="DIALOG_GANG_ACHIEVEMENTS"/>
			<dependency name="DIALOG_GANG_DELETE"/>
			<dependency name="DIALOG_GANG_INVITE"/>
			<dependency name="DIALOG_GANG_INVITE_LIST"/>
			<dependency name="DIALOG_GANG_LIST"/>
			<dependency name="DIALOG_GANG_MARKET"/>
			<dependency name="DIALOG_GANG_MEMBERS"/>
			<dependency name="DIALOG_GANG_NEWBIE"/>
			<dependency name="DIALOG_GANG_RECOLOR"/>
			<dependency name="DIALOG_GANG_RENAME"/>
			<dependency name="DIALOG_GANG_REOWNER"/>
			<dependency name="DIALOG_GANG_RETAG"/>
			<dependency name="DIALOG_GANG_SETTINGS"/>
			<dependency name="DIALOG_GANG_TOP"/>
			<dependency name="DIALOG_GANG_ULEPSZENIA"/>
			<dependency name="DIALOG_SPARING_PANEL"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GANG_DIALOG_ACHIEVEMENT"/>
			<dependency name="GANG_DIALOG_BASE"/>
			<dependency name="GANG_DIALOG_BUDGET"/>
			<dependency name="GANG_DIALOG_INVITE"/>
			<dependency name="GANG_DIALOG_MANAGE"/>
			<dependency name="GANG_DIALOG_MARKET"/>
			<dependency name="GANG_DIALOG_SETTINGS"/>
			<dependency name="GANG_DIALOG_SPARING"/>
			<dependency name="GANG_DIALOG_ULEP"/>
			<dependency name="GangBar"/>
			<dependency name="GangMemberEdit"/>
			<dependency name="GangUlepszeniaData"/>
			<dependency name="GangUlepszeniaData"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="GetGangUlepszenia"/>
			<dependency name="GetGangUlepszenia"/>
			<dependency name="GetPlayerBudget"/>
			<dependency name="GetPlayerGangPerms"/>
			<dependency name="GetPlayerGangPerms"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="HideZoneForAll"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidGangBuffer"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@GangZones"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="KillTimer"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="LoadPlayerGang"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="OnDialogGangAchievements"/>
			<dependency name="OnDialogGangCreator"/>
			<dependency name="OnDialogGangMarket"/>
			<dependency name="OnDialogGangMember"/>
			<dependency name="OnDialogSparing"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ShowGangCreator"/>
			<dependency name="ShowGangInformation"/>
			<dependency name="ShowGangList"/>
			<dependency name="ShowGangTop"/>
			<dependency name="ShowGangZones"/>
			<dependency name="ShowZoneForAll"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdateGangBar"/>
			<dependency name="UpdateGangBox"/>
			<dependency name="UpdateGangZoneLabel"/>
			<dependency name="UpdateGangZoneLabel"/>
			<dependency name="UpdateGangZones"/>
			<dependency name="WC_TextDrawColor"/>
			<dependency name="WC_TextDrawDestroy"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_index_int"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="checkRankPermission"/>
			<dependency name="countGangMembers"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="e_gangData"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gangAchievementData"/>
			<dependency name="gangAchievementData"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gangRankError"/>
			<dependency name="gang_achievement_name"/>
			<dependency name="gang_achievement_needed"/>
			<dependency name="gang_battleZone"/>
			<dependency name="gang_budget"/>
			<dependency name="gang_color"/>
			<dependency name="gang_draw"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_rankDefault"/>
			<dependency name="gang_slots"/>
			<dependency name="gang_tag"/>
			<dependency name="gang_ulep_cost"/>
			<dependency name="gang_ulep_name"/>
			<dependency name="getMoney"/>
			<dependency name="giveGangBudget"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGang"/>
			<dependency name="pGangAchievement"/>
			<dependency name="pGangAchievementStatus"/>
			<dependency name="pGangAchievementStatus"/>
			<dependency name="pGangInviteTimer"/>
			<dependency name="pGangInvites"/>
			<dependency name="pGangInvites"/>
			<dependency name="pGangRankColor"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGangZone"/>
			<dependency name="pGangZoneLabel"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="pTransferData"/>
			<dependency name="pTransferData"/>
			<dependency name="pc_cmd_bazy"/>
			<dependency name="pc_cmd_team"/>
			<dependency name="pc_cmd_tzaproszenia"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_gangData"/>
			<dependency name="player_gangManage"/>
			<dependency name="player_nickname"/>
			<dependency name="random"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogGielda" syntax="OnDialogGielda(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="269"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="DIALOG_GIELDA_MAIN"/>
			<dependency name="DIALOG_GIELDA_SELL"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="EnterTeleport"/>
			<dependency name="GetPVarInt"/>
			<dependency name="OnDialogGieldaBuy"/>
			<dependency name="SwitchVehicleEngine"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="acc_RemovePlayerFromVehicle"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gieldaSellLabel"/>
			<dependency name="gieldaSellOwned"/>
			<dependency name="gieldaSellPos"/>
			<dependency name="gieldaSellPos"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pVeh"/>
			<dependency name="pVehModel"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehSell"/>
			<dependency name="pVehSellCost"/>
			<dependency name="pVehSellPoint"/>
			<dependency name="pc_cmd_pp"/>
			<dependency name="s"/>
			<dependency name="setPosition"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogGieldaBuy" syntax="OnDialogGieldaBuy(playerid, dialogid, response)">
			<stacksize value="269"/>
			<referrer name="OnDialogGielda"/>
			<dependency name="CheckPlayerOnline"/>
			<dependency name="DIALOG_GIELDA_BUY"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPrivCarSlot"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="SwitchVehicleEngine"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdatePrivCarLabel"/>
			<dependency name="UpdatePrivCarLabel"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="getMoney"/>
			<dependency name="gieldaSellLabel"/>
			<dependency name="gieldaSellOwned"/>
			<dependency name="giveMoney"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pVeh"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehLabel"/>
			<dependency name="pVehOwner"/>
			<dependency name="pVehSell"/>
			<dependency name="pVehSellCost"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
		</member>
		<member name="M:OnDialogHeist" syntax="OnDialogHeist(playerid, dialogid, response, inputtext[])">
			<stacksize value="10"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="DIALOG_HEIST_VAULT"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="RandomVaultReward"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetTimer"/>
			<dependency name="ShowVaultDialog"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="bankHeistCode"/>
			<dependency name="bankHeistCountDown"/>
			<dependency name="bankHeistEnabled"/>
			<dependency name="bankHeistHacker"/>
			<dependency name="bankHeistTimer"/>
			<dependency name="bankHeistVault"/>
			<dependency name="bankHeistVaultLabel"/>
			<dependency name="bankHeistVaultOpen"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_heist_attempt"/>
			<dependency name="player_nickname"/>
			<dependency name="strmatch"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogHelp" syntax="OnDialogHelp(playerid, dialogid, response, listitem)">
			<stacksize value="10"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="DIALOG_HELP"/>
			<dependency name="DIALOG_HELP_ADMIN"/>
			<dependency name="DIALOG_HELP_CMDLIST"/>
			<dependency name="DIALOG_HELP_CMDS"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="pc_cmd_acmd"/>
			<dependency name="pc_cmd_anims"/>
			<dependency name="pc_cmd_autor"/>
			<dependency name="pc_cmd_help"/>
			<dependency name="pc_cmd_regulamin"/>
			<dependency name="pc_cmd_taryfikator"/>
			<dependency name="pc_cmd_teles"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="showPlayerCMD"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnDialogHud" syntax="OnDialogHud(playerid, dialogid, response, listitem)">
			<stacksize value="521"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_HUD"/>
			<dependency name="DIALOG_HUD_COLOR"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="UpdateHud"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getHud"/>
			<dependency name="getHud"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pHud"/>
			<dependency name="pHud"/>
			<dependency name="pc_cmd_hud"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnDialogJob" syntax="OnDialogJob(playerid, dialogid, response, listitem)">
			<stacksize value="293"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="ACH_DRWAL"/>
			<dependency name="ACH_GRABARZ"/>
			<dependency name="ACH_GRZYBIARZ"/>
			<dependency name="ACH_MAGAZYNIER"/>
			<dependency name="ACH_MYSLIWY"/>
			<dependency name="ACH_TAXI"/>
			<dependency name="ACH_ZRZUT"/>
			<dependency name="DIALOG_PRACA_LIST"/>
			<dependency name="DIALOG_PRACA_PANEL"/>
			<dependency name="DIALOG_PRACA_REWARD"/>
			<dependency name="DIALOG_PRACA_TOP"/>
			<dependency name="DIALOG_PRACA_ULEPSZENIA"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="Drwal_Start"/>
			<dependency name="EOS"/>
			<dependency name="ExitPraca"/>
			<dependency name="GetJobUlepszenia"/>
			<dependency name="GetJobUlepszenia"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Grabarz_RandomPosition"/>
			<dependency name="Grzybiarz_Start"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Magazynier_Fetch"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="Mysliwy_Start"/>
			<dependency name="RunJobPanel"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetHealth"/>
			<dependency name="SetPVarInt"/>
			<dependency name="Taxi_Start"/>
			<dependency name="Teleport"/>
			<dependency name="VW_DRWAL"/>
			<dependency name="VW_GRABARZ"/>
			<dependency name="VW_GRZYBIARZ"/>
			<dependency name="VW_MAGAZYNIER"/>
			<dependency name="VW_MYSLIWY"/>
			<dependency name="VW_TAXI"/>
			<dependency name="VW_ZRZUT"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerVirtualWorld"/>
			<dependency name="Zrzut_Start"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_index_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getJobName"/>
			<dependency name="getJobName"/>
			<dependency name="jobUlepszeniaData"/>
			<dependency name="jobUlepszeniaData"/>
			<dependency name="job_ulep_name"/>
			<dependency name="job_ulep_points"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pJob"/>
			<dependency name="pJobReward"/>
			<dependency name="pJobReward"/>
			<dependency name="pJobUlepszenia"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_job_points"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="task_await"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnDialogOwnRank" syntax="OnDialogOwnRank(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="165"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_OWNRANK_COLOR"/>
			<dependency name="DIALOG_OWNRANK_EDIT_COLOR"/>
			<dependency name="DIALOG_OWNRANK_EDIT_NAME"/>
			<dependency name="DIALOG_OWNRANK_NAME"/>
			<dependency name="DIALOG_OWNRANK_PANEL"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="deniedRankNames"/>
			<dependency name="deniedRankNames"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRankColor"/>
			<dependency name="pOwnRankHave"/>
			<dependency name="pc_cmd_ownrank"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogPagesPerformed" syntax="OnDialogPagesPerformed(playerid, dialog[], response, success, pagechange)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="dialog">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="response">
			</param>
			<param name="success">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="pagechange">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogPrivCarBuy" syntax="OnDialogPrivCarBuy(playerid, dialogid, response, listitem)">
			<stacksize value="21"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="AddModelMenuItem"/>
			<dependency name="DIALOG_PRIVCAR_BUY"/>
			<dependency name="DIALOG_PRIVCAR_ENGINE"/>
			<dependency name="DIALOG_PRIVCAR_NEWBIE"/>
			<dependency name="EOS"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_MODELID"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="ShowAsyncModelSelectionMenu"/>
			<dependency name="ShowEngineSelect"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="getPosition"/>
			<dependency name="guiPrivCarModels"/>
			<dependency name="list_new"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pDriveLicense"/>
			<dependency name="pc_cmd_pp"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_saveData"/>
			<dependency name="random"/>
			<dependency name="strx"/>
			<dependency name="task_await_arr"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnDialogPrivCarKeys" syntax="OnDialogPrivCarKeys(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="167"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="DIALOG_PRIVCAR_GIVE_KEYS"/>
			<dependency name="DIALOG_PRIVCAR_KEYS"/>
			<dependency name="DIALOG_PRIVCAR_MANAGE"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="FindKeyPlayer"/>
			<dependency name="GetKeyCount"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="RunPrivCarManage"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dialogBox"/>
			<dependency name="msg"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehKeys"/>
			<dependency name="pVehKeys"/>
			<dependency name="pVehManage"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="task_await"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogPrivCarManage" syntax="OnDialogPrivCarManage(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="266"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="AddModelMenuItem"/>
			<dependency name="CreatePrivCar"/>
			<dependency name="DIALOG_PRIVCAR_ETYKIETA"/>
			<dependency name="DIALOG_PRIVCAR_ETYKIETA_COLOR"/>
			<dependency name="DIALOG_PRIVCAR_HEADER"/>
			<dependency name="DIALOG_PRIVCAR_KEYS"/>
			<dependency name="DIALOG_PRIVCAR_MANAGE"/>
			<dependency name="DIALOG_PRIVCAR_MODEL"/>
			<dependency name="DIALOG_PRIVCAR_PLATE"/>
			<dependency name="DIALOG_PRIVCAR_PLATE_COLOR"/>
			<dependency name="DIALOG_PRIVCAR_PLATE_NAME"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DestroyPrivCar"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_MODELID"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="GetEtykietaColor"/>
			<dependency name="GetEtykietaColor"/>
			<dependency name="GetKeyCount"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPrivCarSlot"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidGangBuffer"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="OnPrivCarAttachmentDialog"/>
			<dependency name="RunPrivCarManage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="ShowAsyncModelSelectionMenu"/>
			<dependency name="ShowPrivCarObjects"/>
			<dependency name="ShowPrivCarUlepszenia"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdatePrivCarLabel"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="bakData"/>
			<dependency name="bakData"/>
			<dependency name="bak_amount"/>
			<dependency name="bak_money"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="guiPrivCarModels"/>
			<dependency name="list_new"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pVeh"/>
			<dependency name="pVehEngine"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuelAmount"/>
			<dependency name="pVehGas"/>
			<dependency name="pVehGasEnabled"/>
			<dependency name="pVehKeyData"/>
			<dependency name="pVehKeyData"/>
			<dependency name="pVehKeys"/>
			<dependency name="pVehLabel"/>
			<dependency name="pVehManage"/>
			<dependency name="pVehRegisterColor"/>
			<dependency name="pVehRegisterName"/>
			<dependency name="pVehRegisterName"/>
			<dependency name="pVehSpawned"/>
			<dependency name="pc_cmd_pth"/>
			<dependency name="pc_cmd_ptp"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strlen"/>
			<dependency name="strx"/>
			<dependency name="task_await"/>
			<dependency name="task_await_arr"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogPrivCarUlepszenia" syntax="OnDialogPrivCarUlepszenia(playerid, dialogid, response, listitem)">
			<stacksize value="161"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="DIALOG_PRIVCAR_MANAGE"/>
			<dependency name="DIALOG_PRIVCAR_ULEPSZENIA"/>
			<dependency name="DIALOG_PRIVCAR_ULEPSZENIA_BUY"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="RunPrivCarManage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="addLevelScore"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="getPrivCarUlepszenia"/>
			<dependency name="getPrivCarUlepszenia"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pVehManage"/>
			<dependency name="pVehUlepszenie"/>
			<dependency name="pVehUlepszenie"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<dependency name="ulep_money"/>
			<dependency name="ulep_name"/>
			<dependency name="ulepszeniaPojazdData"/>
			<dependency name="ulepszeniaPojazdData"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnDialogPrivCars" syntax="OnDialogPrivCars(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="11"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="CreatePrivCar"/>
			<dependency name="DIALOG_PRIVCAR_BUY"/>
			<dependency name="DIALOG_PRIVCAR_NEWBIE"/>
			<dependency name="DIALOG_PRIVCAR_TELEPORT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPrivCarSlot"/>
			<dependency name="OnDialogGielda"/>
			<dependency name="OnDialogPrivCarBuy"/>
			<dependency name="OnDialogPrivCarKeys"/>
			<dependency name="OnDialogPrivCarManage"/>
			<dependency name="OnDialogPrivCarUlepszenia"/>
			<dependency name="RunPrivCarManage"/>
			<dependency name="ShowGieldaPanel"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehFetch"/>
			<dependency name="pVehFetch"/>
			<dependency name="pVehSpawned"/>
			<dependency name="pc_cmd_pp"/>
			<dependency name="pc_cmd_pth"/>
			<dependency name="pc_cmd_ptp"/>
			<dependency name="showDialog"/>
			<dependency name="strx"/>
			<dependency name="task_await"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogQuest" syntax="OnDialogQuest(playerid, dialogid, response, listitem)">
			<stacksize value="138"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="DIALOG_QUEST"/>
			<dependency name="GetQuestName"/>
			<dependency name="GetQuestName"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyMoney"/>
			<dependency name="pDailyQuest"/>
			<dependency name="pDailyStatus"/>
			<dependency name="pc_cmd_quest"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="random"/>
			<dependency name="sendError"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="tdQuest"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnDialogRaceCreator" syntax="OnDialogRaceCreator(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="15"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="AddModelMenuItem"/>
			<dependency name="DIALOG_RACE_CREATOR"/>
			<dependency name="DIALOG_RACE_CREATOR_NAME"/>
			<dependency name="DIALOG_RACE_CREATOR_VEHICLE"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_MODELID"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="ShowAsyncModelSelectionMenu"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPosition"/>
			<dependency name="guiVehicleModels"/>
			<dependency name="list_new"/>
			<dependency name="msg"/>
			<dependency name="pRaceCreatorCPs"/>
			<dependency name="pRaceCreatorModel"/>
			<dependency name="pRaceCreatorName"/>
			<dependency name="pRaceCreatorName"/>
			<dependency name="pRaceCreatorPoints"/>
			<dependency name="pRaceCreatorSpawn"/>
			<dependency name="pRaceCreatorSpawn"/>
			<dependency name="pc_cmd_rccreator"/>
			<dependency name="showDialog"/>
			<dependency name="showGameDraw"/>
			<dependency name="strlen"/>
			<dependency name="strx"/>
			<dependency name="task_await_arr"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogRaport" syntax="OnDialogRaport(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="103"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="BanPlayer"/>
			<dependency name="DIALOG_RAPORTY"/>
			<dependency name="DIALOG_RAPORT_PANEL"/>
			<dependency name="DIALOG_RAPORT_PUNISH"/>
			<dependency name="DIALOG_RAPORT_PUNISH_PARAMS"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="GetPVarInt"/>
			<dependency name="KickPlayer"/>
			<dependency name="MutePlayer"/>
			<dependency name="RaportCount"/>
			<dependency name="RunRaportManage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="WarnPlayer"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="pc_cmd_raporty"/>
			<dependency name="pc_cmd_spec"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="player_raportData"/>
			<dependency name="player_saveData"/>
			<dependency name="raportData"/>
			<dependency name="raportData"/>
			<dependency name="raport_active"/>
			<dependency name="raport_senderid"/>
			<dependency name="raport_targetid"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="strx"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acDialog"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="printf"/>
			<dependency name="strdel"/>
			<dependency name="strlen"/>
			<param name="playerid">
				The ID of the player that responded to the dialog
			</param>
			<param name="dialogid">
				The ID of the dialog the player responded to, assigned in ShowPlayerDialog
			</param>
			<param name="response">
				<b><c>1</c></b> for left button and <b><c>0</c></b> for right button (if only  one button shown, always <b><c>1</c></b>)
			</param>
			<param name="listitem">
				The ID of the list item selected by the player (starts at <b><c>0</c></b>)  (only if using a list style dialog)
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
				The text entered into the input box by the player or the selected list item  text
			</param>
			<summary>This callback is called when a player responds to a dialog shown using <a href="#ShowPlayerDialog">ShowPlayerDialog</a>  by either clicking a button, pressing ENTER/ESC or double-clicking a list item (if using a list style  dialog).</summary>            <seealso name="ShowPlayerDialog" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>A player's dialog doesn't hide when the gamemode restarts, causing the server to print <c>"Warning:  PlayerDialogResponse PlayerId: 0 dialog ID doesn't match last sent dialog ID"</c> if a player responded  to this dialog after restart.</remarks>  <remarks>Parameters can contain different values, based on dialog's <a href="http://wiki.sa-mp.com/wiki/Dialog_Styles">style</a>.  </remarks>  <returns>  Returning <b><c>0</c></b> in this callback will pass the dialog to another script in case no matching  code were found in your gamemode's callback.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnDialogSettings" syntax="OnDialogSettings(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="264"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="DIALOG_ACCOUNT_ANSWER"/>
			<dependency name="DIALOG_ACCOUNT_CHAT"/>
			<dependency name="DIALOG_ACCOUNT_PINCODE"/>
			<dependency name="DIALOG_ACCOUNT_POSITION"/>
			<dependency name="DIALOG_ACCOUNT_QUESTION"/>
			<dependency name="DIALOG_ACCOUNT_SECURITY"/>
			<dependency name="DIALOG_NEW_NICK"/>
			<dependency name="DIALOG_NEW_PASSWORD"/>
			<dependency name="DIALOG_SETTINGS"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarString"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidNickName"/>
			<dependency name="Iterator@Business"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SetPVarString"/>
			<dependency name="SetPlayerName"/>
			<dependency name="UnixTime"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="bcrypt_hash"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_ownername"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getAccountSettings"/>
			<dependency name="getAccountSettings"/>
			<dependency name="getMoney"/>
			<dependency name="getPosition"/>
			<dependency name="gettime"/>
			<dependency name="giveMoney"/>
			<dependency name="isNumeric"/>
			<dependency name="isValidPassword"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pAccountSettings"/>
			<dependency name="pAccountSettings"/>
			<dependency name="pGang"/>
			<dependency name="pSecretAnswer"/>
			<dependency name="pSecretAnswer"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="pStalyPos"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehSpawned"/>
			<dependency name="pc_cmd_konto"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_chatID"/>
			<dependency name="player_lastInterior"/>
			<dependency name="player_lastPos"/>
			<dependency name="player_nickTimer"/>
			<dependency name="player_nickname"/>
			<dependency name="player_spawnData"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogSparing" syntax="OnDialogSparing(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="15"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="DIALOG_GANG"/>
			<dependency name="DIALOG_SPARING_ARENY"/>
			<dependency name="DIALOG_SPARING_LIMIT"/>
			<dependency name="DIALOG_SPARING_OPTION"/>
			<dependency name="DIALOG_SPARING_PANEL"/>
			<dependency name="DIALOG_SPARING_SPECTATE"/>
			<dependency name="DIALOG_SPARING_TIME"/>
			<dependency name="DIALOG_SPARING_ZESTAW"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="GANG_DIALOG_SPARING"/>
			<dependency name="GiveSparingZestaw"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="RunSparingOptions"/>
			<dependency name="ShowSparingPanel"/>
			<dependency name="Sparing_Config"/>
			<dependency name="SpecToggle"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="countGangMembers"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGangSparAccepted"/>
			<dependency name="pGangSparArena"/>
			<dependency name="pGangSparArena"/>
			<dependency name="pGangSparInitiator"/>
			<dependency name="pGangSparLimit"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="pGangSparSettings"/>
			<dependency name="pGangSparSettings"/>
			<dependency name="pGangSparTime"/>
			<dependency name="pGangSparTime"/>
			<dependency name="pc_cmd_team"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_gangManage"/>
			<dependency name="player_saveData"/>
			<dependency name="player_sparingData"/>
			<dependency name="player_sparingGangSpec"/>
			<dependency name="player_sparingZestaw"/>
			<dependency name="player_sparspec"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sparingDataAreny"/>
			<dependency name="sparingDataAreny"/>
			<dependency name="sparing_name"/>
			<dependency name="sscanf"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogTeleport" syntax="OnDialogTeleport(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="8"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="DIALOG_TELEPORT_CATEGORY"/>
			<dependency name="DIALOG_TELEPORT_SELECT"/>
			<dependency name="EnterTeleport"/>
			<dependency name="OnDialogTeleportCreator"/>
			<dependency name="OnDialogTeleportManage"/>
			<dependency name="ShowTeleports"/>
			<dependency name="pc_cmd_teles"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_cmd"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogTeleportCreator" syntax="OnDialogTeleportCreator(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="14"/>
			<referrer name="OnDialogTeleport"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_TELEPORT_COMMAND"/>
			<dependency name="DIALOG_TELEPORT_CREATOR"/>
			<dependency name="DIALOG_TELEPORT_NAME"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPosition"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pTeleportCreatorCMD"/>
			<dependency name="pTeleportCreatorCMD"/>
			<dependency name="pTeleportCreatorInterior"/>
			<dependency name="pTeleportCreatorName"/>
			<dependency name="pTeleportCreatorName"/>
			<dependency name="pTeleportCreatorPos"/>
			<dependency name="pTeleportCreatorPos"/>
			<dependency name="pTeleportCreatorSpawn"/>
			<dependency name="pTeleportCreatorType"/>
			<dependency name="pc_cmd_tpadd"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogTeleportManage" syntax="OnDialogTeleportManage(playerid, dialogid, response, listitem, inputtext[])">
			<stacksize value="100"/>
			<referrer name="OnDialogTeleport"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_TELEPORT_CHANGE"/>
			<dependency name="DIALOG_TELEPORT_EDIT_CMD"/>
			<dependency name="DIALOG_TELEPORT_EDIT_NAME"/>
			<dependency name="DIALOG_TELEPORT_LIST"/>
			<dependency name="DIALOG_TELEPORT_MANAGE"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetTeleportType"/>
			<dependency name="GetTeleportType"/>
			<dependency name="Iterator@Teleports"/>
			<dependency name="ShowTeleportManage"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pc_cmd_tplist"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="player_teleportData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_a"/>
			<dependency name="teleport_category"/>
			<dependency name="teleport_cmd"/>
			<dependency name="teleport_interior"/>
			<dependency name="teleport_name"/>
			<dependency name="teleport_spawn"/>
			<dependency name="teleport_x"/>
			<dependency name="teleport_y"/>
			<dependency name="teleport_z"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDialogUlepszenia" syntax="OnDialogUlepszenia(playerid, dialogid, response, listitem)">
			<stacksize value="138"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_ULEPSZENIA"/>
			<dependency name="DIALOG_ULEPSZENIA_LEVEL"/>
			<dependency name="DIALOG_ULEPSZENIA_SELECT"/>
			<dependency name="DIALOG_ULEPSZENIE_BUY"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetPVarInt"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="getUlepszeniaData"/>
			<dependency name="getUlepszeniaData"/>
			<dependency name="getUlepszeniaLevelData"/>
			<dependency name="getUlepszeniaLevelData"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="pc_cmd_ulepszenia"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_levelPoints"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="ulep_money"/>
			<dependency name="ulep_name"/>
			<dependency name="ulepszeniaData"/>
			<dependency name="ulepszeniaData"/>
			<dependency name="ulepszeniaLevelData"/>
			<dependency name="ulepszeniaLevelData"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnDynamicActorStreamIn" syntax="OnDynamicActorStreamIn(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDynamicActorStreamOut" syntax="OnDynamicActorStreamOut(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDynamicObjectMoved" syntax="OnDynamicObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="Iterator@Player"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acGtc"/>
			<dependency name="acInt"/>
			<dependency name="acInt"/>
			<dependency name="acIntRet"/>
			<dependency name="acKicked"/>
			<dependency name="acModShop"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acUnFrozen"/>
			<dependency name="acVeh"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that entered or exited the modshop
			</param>
			<param name="enterexit">
				<b><c>1</c></b> if the player entered or <b><c>0</c></b> if they exited
			</param>
			<param name="interiorid">
				The interior ID of the modshop that the player is entering (or 0 if exiting)
			</param>
			<summary>This callback is called when a player enters or exits a mod shop.</summary>        <seealso name="OnVehicleMod" />  <seealso name="OnVehicleRespray" />  <seealso name="OnVehiclePaintjob" />  <seealso name="AddVehicleComponent" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>Players collide when they get into the same mod shop.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="T3_Exit"/>
			<dependency name="T3_StateExit"/>
			<dependency name="false"/>
			<summary>This callback is called when a filterscript is unloaded.  It is only called inside the filterscript  which is unloaded.</summary>  <seealso name="OnFilterScriptInit" />  <seealso name="OnGameModeInit" />  <seealso name="OnGameModeExit" />  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="T3_Init"/>
			<dependency name="T3_StateInit"/>
			<dependency name="false"/>
			<summary>This callback is called when a filterscript is initialized (loaded).  It is only called  inside the filterscript which is starting.</summary>  <seealso name="OnFilterScriptExit" />  <seealso name="OnGameModeInit" />  <seealso name="OnGameModeExit" />  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnFishDialog" syntax="OnFishDialog(playerid, dialogid, response, listitem)">
			<stacksize value="194"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="ACH_RYBAK"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_FISH_CATEGORY"/>
			<dependency name="DIALOG_FISH_LIST"/>
			<dependency name="DIALOG_FISH_PANEL"/>
			<dependency name="DIALOG_FISH_SHOP"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_index_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="fishData"/>
			<dependency name="fishData"/>
			<dependency name="fish_class"/>
			<dependency name="fish_money"/>
			<dependency name="fish_name"/>
			<dependency name="fish_weight"/>
			<dependency name="format"/>
			<dependency name="pc_cmd_lowisko"/>
			<dependency name="pc_cmd_rybki"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="T3_Exit"/>
			<dependency name="T3_StateExit"/>
			<dependency name="false"/>
			<summary>This callback is called when a gamemode ends, either through 'gmx', the server being shut  down, or <a href="#GameModeExit">GameModeExit</a>.</summary>  <seealso name="OnGameModeInit" />  <seealso name="OnFilterScriptExit" />  <seealso name="OnFilterScriptInit" />  <seealso name="GameModeExit" />  <remarks>This function can also be used in a filterscript to detect if the gamemode changes with  RCON commands like changemode or gmx, as changing the gamemode does not reload a filterscript.</remarks>  <remarks>When using OnGameModeExit in conjunction with the 'rcon gmx' console command keep in mind  there is a potential for client bugs to occur an example of this is excessive  <a href="#RemoveBuildingForPlayer">RemoveBuildingForPlayer</a>  calls during OnGameModeInit which could result in a client crash. </remarks>  <remarks>This callback will NOT be called if the server crashes or the process is killed by other  means, such as using the Linux kill command or pressing the close-button on the Windows console.  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="T3_Init"/>
			<dependency name="T3_StateInit"/>
			<dependency name="false"/>
			<summary>This callback is triggered when the gamemode starts.</summary>  <seealso name="OnGameModeExit" />  <seealso name="OnFilterScriptInit" />  <seealso name="OnFilterScriptExit" />  <remarks>This function can also be used in a filterscript to detect if the gamemode changes with  RCON commands like changemode or gmx, as changing the gamemode does not reload a filterscript.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnGlitchRecord" syntax="OnGlitchRecord(playerid, record)">
			<attribute name="public"/>
			<stacksize value="35"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="showGameDraw"/>
			<dependency name="strcmp"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="record">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnIncomingConnection" syntax="OnIncomingConnection(playerid, ip_address[], port)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SendRconCommand"/>
			<param name="playerid">
				The ID of the player attempting to connect
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
				The IP address of the player attempting to connect
			</param>
			<param name="port">
				The port of the attempted connection
			</param>
			<summary>This callback is called when an IP address attempts a connection to the server.  To block  incoming connections, use <a href="#BlockIpAddress">BlockIpAddress</a>.</summary>        <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <seealso name="OnPlayerFinishedDownloading" />  <seealso name="BlockIpAddress" />  <seealso name="UnBlockIpAddress" />  <remarks> 	This callback was added in <b>SA-MP 0.3z R2-2</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnIncomingPacket" syntax="OnIncomingPacket(playerid, packetid, bs)">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="BS_IgnoreBits"/>
			<dependency name="BS_ReadAimSync"/>
			<dependency name="BS_ReadInCarSync"/>
			<dependency name="BS_ReadOnFootSync"/>
			<dependency name="BS_ReadPassengerSync"/>
			<dependency name="BS_ReadTrailerSync"/>
			<dependency name="BS_ReadUnoccupiedSync"/>
			<dependency name="BS_ResetReadPointer"/>
			<dependency name="BS_SetWriteOffset"/>
			<dependency name="BS_WriteAimSync"/>
			<dependency name="BS_WriteInCarSync"/>
			<dependency name="BS_WriteOnFootSync"/>
			<dependency name="GetVehicleDistanceFromPoint"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="PR_AimSync"/>
			<dependency name="PR_InCarSync"/>
			<dependency name="PR_OnFootSync"/>
			<dependency name="PR_PassengerSync"/>
			<dependency name="PR_TrailerSync"/>
			<dependency name="PR_UnoccupiedSync"/>
			<dependency name="PR_aimZ"/>
			<dependency name="PR_angularVelocity"/>
			<dependency name="PR_direction"/>
			<dependency name="PR_position"/>
			<dependency name="PR_roll"/>
			<dependency name="PR_seatId"/>
			<dependency name="PR_seatId"/>
			<dependency name="PR_surfingOffsets"/>
			<dependency name="PR_surfingVehicleId"/>
			<dependency name="PR_trailerId"/>
			<dependency name="PR_trainSpeed"/>
			<dependency name="PR_vehicleHealth"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_vehicleId"/>
			<dependency name="PR_velocity"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="acACAllow"/>
			<dependency name="acDriver"/>
			<dependency name="acKicked"/>
			<dependency name="acOnline"/>
			<dependency name="acSeat"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeedDiff"/>
			<dependency name="acVeh"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="acZAngle"/>
			<dependency name="ac_GetSpeed"/>
			<dependency name="ac_GetVehicleZAngle"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="acc_SetVehiclePos"/>
			<dependency name="floatabs"/>
			<dependency name="printf"/>
			<param name="playerid">
			</param>
			<param name="packetid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:OnIncomingRPC" syntax="OnIncomingRPC(playerid, rpcid, bs)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ACInfo"/>
			<dependency name="IsPlayerSpawned"/>
			<dependency name="acForceClass"/>
			<dependency name="acKicked"/>
			<dependency name="acOnline"/>
			<param name="playerid">
			</param>
			<param name="rpcid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:OnInvalidWeaponDamage" syntax="OnInvalidWeaponDamage(playerid, damagedid, amount, weaponid, bodypart, error, given)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<dependency name="WC_OnInvalidWeaponDamage"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
			<param name="error">
			</param>
			<param name="given">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:OnJITCompile" syntax="OnJITCompile()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Debug_Print0"/>
			<dependency name="E_SCRIPTINIT_STATE_JITED"/>
			<dependency name="E_SCRIPTINIT_STATE_JITING"/>
			<dependency name="ResolveYSIScriptfileDirs"/>
			<dependency name="ScriptInit_CallOnCodeInit"/>
			<dependency name="ScriptInit_GetStartTime"/>
			<dependency name="ScriptInit_OnJITCompile"/>
			<dependency name="Server_FinishIntroMessage"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<transition target="_ALS_go"/>

		</member>
		<member name="M:OnModelSelectionResponse" syntax="OnModelSelectionResponse(playerid, extraid, index, modelid, response)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="extraid">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="response">
			</param>
			PawnPlus v1.4 by IllidanS4 *
		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
				The ID of the object that was moved
			</param>
			<summary>This callback is called when an object is moved after <a href="#MoveObject">MoveObject</a>  (when it stops moving).</summary>    <seealso name="MoveObject" />  <seealso name="IsObjectMoving" />  <seealso name="StopObject" />  <seealso name="OnPlayerObjectMoved" />  <remarks><a href="#SetObjectPos">SetObjectPos</a> does not work when used in this callback.  To fix  it, recreate the object.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnOutcomingPacket" syntax="OnOutcomingPacket(playerid, packetid, bs)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="packetid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:OnOutcomingRPC" syntax="OnOutcomingRPC(playerid, rpcid, bs)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="rpcid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:OnOutgoingPacket" syntax="OnOutgoingPacket(playerid, packetid, bs)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="packetid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:OnOutgoingRPC" syntax="OnOutgoingRPC(playerid, rpcid, bs)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="rpcid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:OnPasswordChecked" syntax="OnPasswordChecked(playerid, success)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="KickEx"/>
			<dependency name="OnPlayerLogged"/>
			<dependency name="ShowLoginPanel"/>
			<dependency name="ShowPinCodePanel"/>
			<dependency name="ShowQuestionPanel"/>
			<dependency name="format"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_attempts"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strmatch"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="success">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:OnPasswordHash" syntax="OnPasswordHash(playerid)">
			<attribute name="public"/>
			<stacksize value="77"/>
			<dependency name="EOS"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="bcrypt_get_hash"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pHud"/>
			<dependency name="pHud"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_ipaddress"/>
			<dependency name="player_nickname"/>
			<dependency name="player_serial"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerBuyPrivCar" syntax="OnPlayerBuyPrivCar(playerid, modelid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CreatePrivCar"/>
			<dependency name="cache_insert_id"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="modelid">
			</param>
		</member>
		<member name="M:OnPlayerChangePassword" syntax="OnPlayerChangePassword(playerid)">
			<attribute name="public"/>
			<stacksize value="203"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarString"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="bcrypt_get_hash"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerClickGangZone" syntax="OnPlayerClickGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="playerid">
				The ID of the player that placed a target/waypoint
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X float coordinate where the player clicked
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y float coordinate where the player clicked
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z float coordinate where the player clicked (inaccurate - see note below)
			</param>
			<summary>OnPlayerClickMap is called when a player places a target/waypoint on the pause menu map  (by right-clicking).</summary>          <seealso name="SetPlayerPos" />  <seealso name="SetPlayerPosFindZ" />  <seealso name="GetPlayerPos" />  <remarks>This callback was added in <b>SA-MP 0.3d</b> and will not work in earlier versions!</remarks>  <remarks>The Z value returned will be <b><c>0</c></b> (invalid) if it is far away from the player;  use the <a href="http://forum.sa-mp.com/showthread.php?t=275492">MapAndreas plugin</a> to get a more  accurate Z coordinate.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="playerid">
				The ID of the player that clicked on a player on the scoreboard
			</param>
			<param name="clickedplayerid">
				The ID of the player that was clicked on
			</param>
			<param name="source">
				The source of the player's click
			</param>
			<summary>Called when a player double-clicks on a player on the scoreboard.</summary>        <seealso name="OnPlayerClickTextDraw" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>There is currently only one <paramref name="source" /> (<b><c>0 - CLICK_SOURCE_SCOREBOARD</c></b>).  The existence of this argument suggests that more sources may be supported in the future.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerClickPlayerGangZone" syntax="OnPlayerClickPlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="playerid">
				The ID of the player that selected a textdraw
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw that the player selected
			</param>
			<summary>This callback is called when a player clicks on a player-textdraw.  It is not called when  player cancels the select mode (ESC) - however, <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a>  is.</summary>      <seealso name="PlayerTextDrawSetSelectable" />  <seealso name="OnPlayerClickTextDraw" />  <seealso name="OnPlayerClickPlayer" />  <remarks>This callback was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>When a player presses ESC to cancel selecting a textdraw, <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a>  is called with a textdraw ID of <b><c>INVALID_TEXT_DRAW</c></b>. <a href="#OnPlayerClickPlayerTextDraw">OnPlayerClickPlayerTextDraw</a>  won't be called also.</remarks>  <returns>  Returning <b><c>1</c></b> in this callback will prevent it being called in other scripts.  This  should be used to signal that the textdraw on which they clicked was 'found' and no further processing  is needed.  You should return <b><c>0</c></b> if the textdraw on which they clicked wasn't found,  just like in <a href="#OnPlayerCommandText">OnPlayerCommandText</a>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="playerid">
				The ID of the player that clicked on the textdraw
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
				The ID of the clicked textdraw. <b><c>INVALID_TEXT_DRAW</c></b> if selection  was cancelled
			</param>
			<summary>This callback is called when a player clicks on a textdraw or cancels the select mode with  the Escape key.</summary>      <seealso name="OnPlayerClickPlayerTextDraw" />  <seealso name="OnPlayerClickPlayer" />  <remarks>This callback was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>The clickable area is defined by <a href="#TextDrawTextSize">TextDrawTextSize</a>.  The  x and y parameters passed to that function must not be zero or negative. </remarks>  <remarks>Do not use <a href="#CancelSelectTextDraw">CancelSelectTextDraw</a> unconditionally within  this callback.  This results in an infinite loop. </remarks>  <returns>  Returning <b><c>1</c></b> in this callback will prevent it being called in other scripts.  This  should be used to signal that the textdraw on which they clicked was 'found' and no further processing  is needed.  You should return <b><c>0</c></b> if the textdraw on which they clicked wasn't found,  just like in <a href="#OnPlayerCommandText">OnPlayerCommandText</a>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerCommandPerformed" syntax="OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CheckPlayerTeleport"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="LOG_CMD"/>
			<dependency name="Log"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Teleport"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_checkCMD"/>
			<dependency name="player_logged"/>
			<dependency name="player_nickname"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_a"/>
			<dependency name="teleport_interior"/>
			<dependency name="teleport_x"/>
			<dependency name="teleport_y"/>
			<dependency name="teleport_z"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="result">
			</param>
			<param name="flags">
			</param>
		</member>
		<member name="M:OnPlayerCommandReceived" syntax="OnPlayerCommandReceived(playerid, cmd[], params[], flags)">
			<attribute name="public"/>
			<stacksize value="137"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="AllowEventCMD"/>
			<dependency name="CheckPlayerBattle"/>
			<dependency name="ConvertTime"/>
			<dependency name="ConvertTime"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="MineStarted"/>
			<dependency name="PLAYER_STATE_WASTED"/>
			<dependency name="VW_HEIST"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="dialogBox"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msg"/>
			<dependency name="pAFK"/>
			<dependency name="pArena"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pGame"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGlitchArena"/>
			<dependency name="pJob"/>
			<dependency name="pTruck"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_business"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_logged"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="flags">
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that entered a command
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
				The command that was entered (including the forward slash)
			</param>
			<summary>This callback is called when a player enters a command into the client chat window.  Commands  are anything that start with a forward slash, e.g. <c>/help</c>.</summary>      <seealso name="OnPlayerText" />  <seealso name="OnRconCommand" />  <seealso name="SendRconCommand" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  Return <b><c>1</c></b> if the command was processed, otherwise <b><c>0</c></b>; If the command  was not found both in filterscripts and in gamemode, the player will be received a message: <em>SERVER:  Unknown command</em>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other scripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="30"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Join"/>
			<param name="playerid">
				The ID of the player that connected
			</param>
			<summary>This callback is called when a player connects to the server.</summary>    <seealso name="OnPlayerDisconnect" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerFinishedDownloading" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerDamage" syntax="OnPlayerDamage(&amp;playerid, &amp;amount, &amp;issuerid, &amp;weapon, &amp;bodypart)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="InflictDamage"/>
			<dependency name="WC_OnPlayerDamage"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="amount">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="issuerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weapon">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="bodypart">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerDamageDone" syntax="OnPlayerDamageDone(playerid, amount, issuerid, weapon, bodypart)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="InflictDamage"/>
			<dependency name="DamageFeedAddHitGiven"/>
			<dependency name="DamageFeedAddHitTaken"/>
			<dependency name="GetLastDamageArmour"/>
			<dependency name="GetLastDamageHealth"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsHighRateWeapon"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="WC_OnPlayerDamageDone"/>
			<dependency name="e_Amount"/>
			<dependency name="e_Armour"/>
			<dependency name="e_Bodypart"/>
			<dependency name="e_Health"/>
			<dependency name="e_Issuer"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Weapon"/>
			<dependency name="s_DamageGivenSound"/>
			<dependency name="s_DamageTakenSound"/>
			<dependency name="s_PreviousHitI"/>
			<dependency name="s_PreviousHits"/>
			<dependency name="s_PreviousHits"/>
			<dependency name="s_Spectating"/>
			<param name="playerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="issuerid">
			</param>
			<param name="weapon">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="WEAPON_COLLISION"/>
			<dependency name="acACAllow"/>
			<dependency name="acDead"/>
			<dependency name="acDeathRes"/>
			<dependency name="acKicked"/>
			<dependency name="acSpawnRes"/>
			<dependency name="acSpawnTick"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="false"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that died
			</param>
			<param name="killerid">
				The ID of the player that killed the player who died, or <b><c>INVALID_PLAYER_ID</c></b>  if there was none
			</param>
			<param name="reason">
				The ID of the <a href="http://wiki.sa-mp.com/wiki/Weapons">reason</a> for the  player's death
			</param>
			<summary>This callback is called when a player dies, either by suicide or by being killed by another  player.</summary>        <seealso name="OnPlayerSpawn" />  <seealso name="SendDeathMessage" />  <seealso name="SetPlayerHealth" />  <remarks>  The reason will return 37 (flame thrower) from any fire sources (e.g.  molotov, 18)<br />  The reason will return 51 from any weapon that creates an explosion (e.g.  RPG, grenade)<br />  You do not need to check whether killerid is valid before using it in <a href="#SendDeathMessage">SendDeathMessage</a>.  <b><c>INVALID_PLAYER_ID</c></b> is a valid killerid ID parameter in that function.<br />  <b>playerid</b> is the only one who can call the callback. (good to know for anti fake death)  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerDeathFinished" syntax="OnPlayerDeathFinished(playerid, cancelable)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_OnPlayerDeathFinished"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxHealth"/>
			<param name="playerid">
			</param>
			<param name="cancelable">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SSCANF_Leave"/>
			<param name="playerid">
				The ID of the player that disconnected
			</param>
			<param name="reason">
				The reason for the disconnection.  See table below
			</param>
			<summary>This callback is called when a player disconnects from the server.</summary>      <seealso name="OnPlayerConnect" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerFinishedDownloading" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>Some functions might not work correctly when used in this callback because the player is  already disconnected when the callback is called.  This means that you can't get unambiguous information  from functions like <a href="#GetPlayerIp">GetPlayerIp</a> and <a href="#GetPlayerPos">GetPlayerPos</a>.</remarks>  <remarks>  <b>Reasons:</b><br />  <ul>  <li><b><c>0</c></b> - timeout/Crash - the player's connection was lost.  Either their game crashed  or their network had a fault.</li>  <li><b><c>1</c></b> - quit - the player purposefully quit, either using the <b><c>/quit (/q)</c></b>  command or via the pause menu.</li>  <li><b><c>2</c></b> - kick/ban - the player was kicked or banned by the server.</li>  </ul>  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="ACInfo"/>
			<dependency name="acACAllow"/>
			<dependency name="acKicked"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="printf"/>
			<param name="playerid">
				The ID of the player that ended edition mode
			</param>
			<param name="response">
				<b><c>0</c></b> if they cancelled (ESC) or <b><c>1</c></b> if they clicked  the save icon
			</param>
			<param name="index">
				The index of the attached object
			</param>
			<param name="modelid">
				The model of the attached object that was edited
			</param>
			<param name="boneid">
				The bone of the attached object that was edited
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
				The X offset for the attached object that was edited
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
				The Y offset for the attached object that was edited
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
				The Z offset for the attached object that was edited
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
				The X rotation for the attached object that was edited
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
				The Y rotation for the attached object that was edited
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
				The Z rotation for the attached object that was edited
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
				The X scale for the attached object that was edited
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
				The Y scale for the attached object that was edited
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
				The Z scale for the attached object that was edited
			</param>
			<summary>This callback is called when a player ends attached object edition mode.</summary>                              <seealso name="EditAttachedObject" />  <seealso name="SetPlayerAttachedObject" />  <remarks>This callback was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>Editions should be discarded if response was <b><c>0</c></b> (cancelled).  This must be  done by storing the offsets etc.  in an array BEFORE using <a href="#EditAttachedObject">EditAttachedObject</a>.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEditDynamicObject" syntax="OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that edited an object
			</param>
			<param name="playerobject">
				<b><c>0</c></b> if it is a global object or <b><c>1</c></b> if it is a  playerobject
			</param>
			<param name="objectid">
				The ID of the edited object
			</param>
			<param name="response">
				The type of response
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X offset for the object that was edited
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y offset for the object that was edited
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z offset for the object that was edited
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
				The X rotation for the object that was edited
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
				The Y rotation for the object that was edited
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
				The Z rotation for the object that was edited
			</param>
			<summary>This callback is called when a player finishes editing an object (<a href="#EditObject">EditObject</a>/<a  href="#EditPlayerObject">EditPlayerObject</a>).</summary>                      <seealso name="EditObject" />  <seealso name="CreateObject" />  <seealso name="DestroyObject" />  <seealso name="MoveObject" />  <remarks>This callback was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>When using <b><c>EDIT_RESPONSE_UPDATE</c></b> be aware that this callback will not be called  when releasing an edit in progress resulting in the last update of <b><c>EDIT_RESPONSE_UPDATE</c></b>  being out of sync of the objects current position.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The player who entered the checkpoint
			</param>
			<summary>This callback is called when a player enters the checkpoint set for that player.</summary>    <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterDynamicArea" syntax="OnPlayerEnterDynamicArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="ACInfo"/>
			<dependency name="acKicked"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicCP" syntax="OnPlayerEnterDynamicCP(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Magazynier_CP"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicRaceCP" syntax="OnPlayerEnterDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterGangZone" syntax="OnPlayerEnterGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerEnterPlayerGangZone" syntax="OnPlayerEnterPlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player who entered the race checkpoint
			</param>
			<summary>This callback is called when a player enters a race checkpoint.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acEnterSeat"/>
			<dependency name="acEnterVeh"/>
			<dependency name="acEnterVehTick"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_IsABoatEx"/>
			<dependency name="ac_IsATrainCarriageEx"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="printf"/>
			<param name="playerid">
				ID of the player who attempts to enter a vehicle
			</param>
			<param name="vehicleid">
				ID of the vehicle the player is attempting to enter
			</param>
			<param name="ispassenger">
				<b><c>0</c></b> if entering as driver. <b><c>1</c></b> if entering as passenger
			</param>
			<summary>This callback is called when a player <b><c>starts</c></b> to enter a vehicle, meaning the  player is not in vehicle yet at the time this callback is called.</summary>        <seealso name="OnPlayerExitVehicle" />  <seealso name="OnPlayerStateChange" />  <seealso name="PutPlayerInVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <remarks>This callback is called when a player <b>BEGINS</b> to enter a vehicle, not when they HAVE  entered it.  See <a href="#OnPlayerStateChange">OnPlayerStateChange</a>. </remarks>  <remarks>This callback is still called if the player is denied entry to the vehicle (e.g.  it is  locked or full). </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="acParachute"/>
			<dependency name="acVeh"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_IsAnAircraftEx"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="printf"/>
			<param name="playerid">
				The ID of the player that is exiting a vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle the player is exiting
			</param>
			<summary>This callback is called when a player <b>starts</b> to exit a vehicle.</summary>      <seealso name="OnPlayerEnterVehicle" />  <seealso name="OnPlayerStateChange" />  <seealso name="RemovePlayerFromVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <remarks>Not called if the player falls off a bike or is removed from a vehicle by other means such  as using <a href="#SetPlayerPos">SetPlayerPos</a>.</remarks>  <remarks>You must use <a href="#OnPlayerStateChange">OnPlayerStateChange</a> and check if their old  state is <b><c>PLAYER_STATE_DRIVER</c></b> or <b><c>PLAYER_STATE_PASSENGER</c></b> and their new  state is <b><c>PLAYER_STATE_ONFOOT</c></b>.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="playerid">
				The ID of the player that exited the menu
			</param>
			<summary>Called when a player exits a menu.</summary>    <seealso name="OnPlayerSelectedMenuRow" />  <seealso name="CreateMenu" />  <seealso name="DestroyMenu" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerFinishedDownloading" syntax="OnPlayerFinishedDownloading(playerid, virtualworld)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that finished downloading custom models
			</param>
			<param name="virtualworld">
				The ID of the virtual world the player finished downloading custom models  for
			</param>
			<summary>This callback is called when a player finishes downloading custom models.  For more information  on how to add custom models to your server, see <a href="http://forum.sa-mp.com/showthread.php?t=644105">the  release thread</a> and <a href="http://forum.sa-mp.com/showthread.php?t=644123">this tutorial</a>.</summary>      <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <seealso name="OnIncomingConnection" />  <remarks>This callback was added in <b>SA-MP 0.3DL</b> and will not work in earlier versions!</remarks>  <remarks>This callback is called every time a player changes virtual worlds, even if there are no  custom models present in that world.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnPlayerFishing" syntax="OnPlayerFishing(playerid)">
			<attribute name="public"/>
			<stacksize value="33"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CA_IsPlayerNearWater"/>
			<dependency name="DeletePolish"/>
			<dependency name="FishBar"/>
			<dependency name="GetFishClass"/>
			<dependency name="GetFishClass"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="SetPVarFloat"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="ShowPlayerProgressBar"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="fishBaitData"/>
			<dependency name="fishData"/>
			<dependency name="fishData"/>
			<dependency name="fishEvent"/>
			<dependency name="fish_bait_chance"/>
			<dependency name="fish_class"/>
			<dependency name="fish_name"/>
			<dependency name="math_random_float"/>
			<dependency name="pFishBaitUsed"/>
			<dependency name="pFishStatus"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="pFishing"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_saveData"/>
			<dependency name="random"/>
			<dependency name="tdFishing"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetTickCount"/>
			<dependency name="WEAPON_FLAMETHROWER"/>
			<dependency name="acACAllow"/>
			<dependency name="acDead"/>
			<dependency name="acGtc"/>
			<dependency name="acKicked"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_IsValidWeapon"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_wSlot"/>
			<dependency name="printf"/>
			<param name="playerid">
				The ID of the player that gave damage
			</param>
			<param name="damagedid">
				The ID of the player that received damage
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of health/armour damagedid has lost (combined)
			</param>
			<param name="weaponid">
				The <a href="http://wiki.sa-mp.com/wiki/Weapons">reason</a> that caused the  damage
			</param>
			<param name="bodypart">
				The body part that was hit. (NOTE: This parameter was added in <b>0.3z</b>.  Leave it out if using an older version!)
			</param>
			<summary>This callback is called when a player gives damage to another player.</summary>            <seealso name="OnPlayerTakeDamage" />  <remarks>This callback was added in <b>SA-MP 0.3d</b> and will not work in earlier versions!</remarks>  <remarks>  Keep in mind this function can be inaccurate in some cases.<br />  If you want to prevent certain players from damaging eachother, use <a href="#SetPlayerTeam">SetPlayerTeam</a>.<br  />  The weaponid will return <b><c>37</c></b> (flame thrower) from any fire sources (e.g.  molotov,  18)<br />  The weaponid will return <b><c>51</c></b> from any weapon that creates an explosion (e.g.  RPG,  grenade)<br />  <b>playerid</b> is the only one who can call the callback.<br />  The amount is always the maximum damage the weaponid can do, even when the health left is less  than that maximum damage.  So when a player has <b><c>100.0</c></b> health and gets shot with a Desert  Eagle which has a damage value of <b><c>46.2</c></b>, it takes 3 shots to kill that player.  All  3 shots will show an amount of <b><c>46.2</c></b>, even though when the last shot hits, the player  only has <b><c>7.6</c></b> health left.  </remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerGiveDamageActor" syntax="OnPlayerGiveDamageActor(playerid, damaged_actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that gave damage
			</param>
			<param name="damaged_actorid">
				The ID of the actor that received damage
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of health/armour damaged_actorid has lost
			</param>
			<param name="weaponid">
				The reason that caused the damage
			</param>
			<param name="bodypart">
				The body part that was hit
			</param>
			<summary>This callback is called when a player gives damage to an actor.</summary>            <seealso name="CreateActor" />  <seealso name="SetActorInvulnerable" />  <seealso name="SetActorHealth" />  <seealso name="GetActorHealth" />  <seealso name="IsActorInvulnerable" />  <seealso name="IsValidActor" />  <seealso name="OnActorStreamOut" />  <seealso name="OnPlayerStreamIn" />  <remarks>This callback was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <remarks>This function does not get called if the actor is set invulnerable (WHICH IS BY DEFAULT).  See <a href="#SetActorInvulnerable">SetActorInvulnerable</a>.</remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerGiveDamageDynamicActor" syntax="OnPlayerGiveDamageDynamicActor(playerid, actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="actorid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerHeist" syntax="OnPlayerHeist(playerid, vaultid)">
			<attribute name="public"/>
			<stacksize value="267"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ACH_HEIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="achievement"/>
			<dependency name="bankHeistEnabled"/>
			<dependency name="bankHeistVaultOpen"/>
			<dependency name="catstr"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="heistRobbed"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_robbed"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vault_label"/>
			<dependency name="vault_reward"/>
			<dependency name="vault_robbed"/>
			<param name="playerid">
			</param>
			<param name="vaultid">
			</param>
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="__gOnce"/>
			<dependency name="acACAllow"/>
			<dependency name="acInt"/>
			<dependency name="acIntEnterExits"/>
			<dependency name="acIntRet"/>
			<dependency name="acKicked"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acVeh"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="acc_SetPlayerInterior"/>
			<dependency name="acc_TogglePlayerControllable"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				The playerid who changed interior
			</param>
			<param name="newinteriorid">
				The interior the player is now in
			</param>
			<param name="oldinteriorid">
				The interior the player was in before
			</param>
			<summary>Called when a player changes interior.  Can be triggered by SetPlayerInterior or when a  player enter/exits a building.</summary>        <seealso name="SetPlayerInterior" />  <seealso name="GetPlayerInterior" />  <seealso name="LinkVehicleToInterior" />  <seealso name="OnPlayerStateChange" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that pressed or released a key
			</param>
			<param name="newkeys">
				A map (bitmask) of the keys currently held - see <a href="http://wiki.sa-mp.com/wiki/Keys">here</a>
			</param>
			<param name="oldkeys">
				A map (bitmask) of the keys held prior to the current change - see  <a href="http://wiki.sa-mp.com/wiki/Keys">here</a>
			</param>
			<summary>This callback is called when the state of any supported key is changed (pressed/released).  Directional keys do not trigger OnPlayerKeyStateChange (up/down/left/right).</summary>        <seealso name="GetPlayerKeys" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>  Useful macros:<br />  <code>  // HOLDING(keys)<br />  #define HOLDING(%0) ((newkeys &amp; (%0)) == (%0))<br />  <br />  // PRESSED(keys)<br />  #define PRESSED(%0) (((newkeys &amp; (%0)) == (%0)) &amp;&amp; ((oldkeys &amp; (%0)) != (%0)))<br  />  <br />  // PRESSING(keyVariable, keys)<br />  #define PRESSING(%0,%1) (%0 &amp; (%1))<br />  <br />  // RELEASED(keys)<br />  #define RELEASED(%0) (((newkeys &amp; (%0)) != (%0)) &amp;&amp; ((oldkeys &amp; (%0)) == (%0)))<br  />  </code>  </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that left their checkpoint
			</param>
			<summary>This callback is called when a player leaves the checkpoint set for them by  <a href="#SetPlayerCheckpoint">SetPlayerCheckpoint</a>.  Only one checkpoint can be set at a time.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerLeaveDynamicArea" syntax="OnPlayerLeaveDynamicArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="ACInfo"/>
			<dependency name="acKicked"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicCP" syntax="OnPlayerLeaveDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicRaceCP" syntax="OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveGangZone" syntax="OnPlayerLeaveGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerLeavePlayerGangZone" syntax="OnPlayerLeavePlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that left the race checkpoint
			</param>
			<summary>This callback is called when a player leaves the race checkpoint.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerLogged" syntax="OnPlayerLogged(playerid)">
			<stacksize value="138"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordChecked"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="ConvertTime"/>
			<dependency name="FALSE"/>
			<dependency name="FIGHT_STYLE_BOXING"/>
			<dependency name="FIGHT_STYLE_KNEEHEAD"/>
			<dependency name="FIGHT_STYLE_KUNGFU"/>
			<dependency name="FIGHT_STYLE_NORMAL"/>
			<dependency name="GetQuestName"/>
			<dependency name="GetQuestName"/>
			<dependency name="IsPlayerUsingProxy"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@Premium"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="LoadPlayerGang"/>
			<dependency name="LoadPlayerPrivCars"/>
			<dependency name="LoadPlayerStats"/>
			<dependency name="Log"/>
			<dependency name="RECORD_PLAYERS"/>
			<dependency name="RECORD_TODAY"/>
			<dependency name="SetPlayerFightingStyle"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="SetRandomQuest"/>
			<dependency name="ShowTutorial"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="checkRecord"/>
			<dependency name="daily_required"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="gettime"/>
			<dependency name="msg"/>
			<dependency name="msgAdmins"/>
			<dependency name="msgAll"/>
			<dependency name="pCredit"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyQuest"/>
			<dependency name="pDailyStatus"/>
			<dependency name="pGang"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRankColor"/>
			<dependency name="pOwnRankHave"/>
			<dependency name="pc_cmd_nowosci"/>
			<dependency name="pc_cmd_vpozostalo"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_adminLevel"/>
			<dependency name="player_adminLoad"/>
			<dependency name="player_attempts"/>
			<dependency name="player_city"/>
			<dependency name="player_country"/>
			<dependency name="player_datelast"/>
			<dependency name="player_fightstyle"/>
			<dependency name="player_ipaddress"/>
			<dependency name="player_iplast"/>
			<dependency name="player_isp"/>
			<dependency name="player_level"/>
			<dependency name="player_logged"/>
			<dependency name="player_loginTime"/>
			<dependency name="player_money"/>
			<dependency name="player_mutetime"/>
			<dependency name="player_nickname"/>
			<dependency name="player_premiumTime"/>
			<dependency name="player_visits"/>
			<dependency name="questListData"/>
			<dependency name="questListData"/>
			<dependency name="setMoney"/>
			<dependency name="strdot"/>
			<dependency name="strmatch"/>
			<dependency name="strx"/>
			<dependency name="tdLoginTime"/>
			<dependency name="tdQuest"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerMining" syntax="OnPlayerMining(playerid, mineid)">
			<attribute name="public"/>
			<stacksize value="266"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="ACH_GORNIK"/>
			<dependency name="CancelMining"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="EOS"/>
			<dependency name="GetMineName"/>
			<dependency name="GetMineName"/>
			<dependency name="GetMineWeight"/>
			<dependency name="GetMineWeight"/>
			<dependency name="GetOreCost"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="MineCounter"/>
			<dependency name="MineCreated"/>
			<dependency name="MineLabel"/>
			<dependency name="MineLevel"/>
			<dependency name="MineObject"/>
			<dependency name="MineObject"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePoints"/>
			<dependency name="MineType"/>
			<dependency name="MineWeight"/>
			<dependency name="MineWeight"/>
			<dependency name="OreDay"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdateMineLabel"/>
			<dependency name="UpdateMineLabel"/>
			<dependency name="achievement"/>
			<dependency name="addLevelScore"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="math_random_float"/>
			<dependency name="mineData"/>
			<dependency name="mineData"/>
			<dependency name="mine_color"/>
			<dependency name="mysql_pquery"/>
			<dependency name="oreEvent"/>
			<dependency name="percent"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="mineid">
			</param>
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<stacksize value="1"/>
			<param name="playerid">
				The playerid the object is assigned to
			</param>
			<param name="objectid">
				The ID of the player object that was moved
			</param>
			<summary>This callback is called when a player object is moved after <a href="#MovePlayerObject">MovePlayerObject</a>  (when it stops moving).</summary>      <seealso name="OnObjectMoved" />  <seealso name="MovePlayerObject" />  <seealso name="IsPlayerObjectMoving" />  <seealso name="StopPlayerObject" />  <remarks>This callback can also be called for NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerPickUpDynamicPickup" syntax="OnPlayerPickUpDynamicPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetTickCount"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="Streamer_GetDistanceToItem"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="acACAllow"/>
			<dependency name="acAmmo"/>
			<dependency name="acArmour"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acHealth"/>
			<dependency name="acKicked"/>
			<dependency name="acLastPickup"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosX"/>
			<dependency name="acSetPosY"/>
			<dependency name="acSetPosZ"/>
			<dependency name="acSpecAct"/>
			<dependency name="acTpToZ"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="ac_pAmmo"/>
			<dependency name="ac_wSlot"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="Streamer_GetItemStreamerID"/>
			<dependency name="VectorSize"/>
			<dependency name="acACAllow"/>
			<dependency name="acAmmo"/>
			<dependency name="acArmour"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acHealth"/>
			<dependency name="acKicked"/>
			<dependency name="acLastPickup"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosX"/>
			<dependency name="acSetPosY"/>
			<dependency name="acSetPosZ"/>
			<dependency name="acSpecAct"/>
			<dependency name="acTpToZ"/>
			<dependency name="acType"/>
			<dependency name="acWeapon"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="ac_pAmmo"/>
			<dependency name="ac_wSlot"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<summary>Called when a player picks up a pickup created with <a href="#CreatePickup">CreatePickup</a>.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerPrepareDeath" syntax="OnPlayerPrepareDeath(playerid, animlib[], animname[], &amp;anim_lock, &amp;respawn_time)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="PlayerDeath"/>
			<dependency name="WC_OnPlayerPrepareDeath"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="anim_lock">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="respawn_time">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerRegistered" syntax="OnPlayerRegistered(playerid)">
			<attribute name="public"/>
			<stacksize value="140"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarString"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="LoadPlayerStats"/>
			<dependency name="Log"/>
			<dependency name="cache_insert_id"/>
			<dependency name="format"/>
			<dependency name="givePremium"/>
			<dependency name="msgAll"/>
			<dependency name="pc_cmd_vpozostalo"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_logged"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acClassRes"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="acSpawnAmmo1"/>
			<dependency name="acSpawnAmmo2"/>
			<dependency name="acSpawnAmmo3"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<dependency name="acSpawnWeapon1"/>
			<dependency name="acSpawnWeapon2"/>
			<dependency name="acSpawnWeapon3"/>
			<dependency name="ac_ClassAmmo"/>
			<dependency name="ac_ClassPos"/>
			<dependency name="ac_ClassWeapon"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that changed class
			</param>
			<param name="classid">
				The ID of the current class being viewed (returned by <a href="#AddPlayerClass">AddPlayerClass</a>)
			</param>
			<summary>Called when a player changes class at class selection (and when class selection first appears).</summary>      <seealso name="OnPlayerRequestSpawn" />  <seealso name="AddPlayerClass" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is also called when a player presses <b>F4</b>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will prevent the player from spawning.  The player can  be forced to spawn when <a href="#SpawnPlayer">SpawnPlayer</a> is used.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerRequestDownload" syntax="OnPlayerRequestDownload(playerid, type, crc)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="crc">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acClassRes"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSet"/>
			<dependency name="acSpawnRes"/>
			<dependency name="acSpawnTick"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that requested to spawn
			</param>
			<summary>Called when a player attempts to spawn via class selection either by pressing SHIFT or clicking  the 'Spawn' button.</summary>    <seealso name="OnPlayerSpawn" />  <seealso name="OnPlayerRequestClass" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>To prevent players from spawning with certain classes, the last viewed class must be saved  in a variable in <a href="#OnPlayerRequestClass">OnPlayerRequestClass</a>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will prevent the player from spawning.<br />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerSelectDynamicObject" syntax="OnPlayerSelectDynamicObject(playerid, objectid, modelid, x, y, z)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="playerid">
				The ID of the player that selected an object
			</param>
			<param name="type">
				The type of selection
			</param>
			<param name="objectid">
				The ID of the selected object
			</param>
			<param name="modelid">
				The model ID of the selected object
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X position of the selected object
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y position of the selected object
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z position of the selected object
			</param>
			<summary>This callback is called when a player selects an object after <a href="#SelectObject">SelectObject</a>  has been used.</summary>                <seealso name="SelectObject" />  <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="playerid">
				The ID of the player that selected a menu item
			</param>
			<param name="row">
				The ID of the row that was selected.  The first row is ID <b><c>0</c></b>
			</param>
			<summary>This callback is called when a player selects an item from a menu (<a href="#ShowMenuForPlayer">ShowMenuForPlayer</a>).</summary>      <seealso name="OnPlayerExitedMenu" />  <seealso name="OnDialogResponse" />  <seealso name="CreateMenu" />  <seealso name="DestroyMenu" />  <seealso name="AddMenuItem" />  <seealso name="ShowMenuForPlayer" />  <seealso name="HideMenuForPlayer" />  <remarks>The menu ID is not passed to this callback. <a href="#GetPlayerMenu">GetPlayerMenu</a> must  be used to determine which menu the player selected an item on.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerShootDynamicObject" syntax="OnPlayerShootDynamicObject(playerid, weaponid, objectid, x, y, z)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acAmmo"/>
			<dependency name="acCheatCount"/>
			<dependency name="acClassRes"/>
			<dependency name="acDead"/>
			<dependency name="acDmgRes"/>
			<dependency name="acEnterSeat"/>
			<dependency name="acEnterVeh"/>
			<dependency name="acForceClass"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtc"/>
			<dependency name="acHoldWeapon"/>
			<dependency name="acIntRet"/>
			<dependency name="acKickVeh"/>
			<dependency name="acKicked"/>
			<dependency name="acLastPickup"/>
			<dependency name="acLastSpecAct"/>
			<dependency name="acModShop"/>
			<dependency name="acNextSpecAct"/>
			<dependency name="acParachute"/>
			<dependency name="acSeat"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acShotWeapon"/>
			<dependency name="acSpawnAmmo1"/>
			<dependency name="acSpawnAmmo2"/>
			<dependency name="acSpawnAmmo3"/>
			<dependency name="acSpawnRes"/>
			<dependency name="acSpawnTick"/>
			<dependency name="acSpawnWeapon1"/>
			<dependency name="acSpawnWeapon2"/>
			<dependency name="acSpawnWeapon3"/>
			<dependency name="acSpec"/>
			<dependency name="acSpecAct"/>
			<dependency name="acSpeed"/>
			<dependency name="acUnFrozen"/>
			<dependency name="acVeh"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_IsValidWeapon"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_wSlot"/>
			<dependency name="acc_SetPlayerArmour"/>
			<dependency name="acc_SetPlayerHealth"/>
			<dependency name="acc_SetPlayerInterior"/>
			<dependency name="false"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that spawned
			</param>
			<summary>This callback is called when a player spawns.(i.e.  after caling <a href="#SpawnPlayer">SpawnPlayer</a>  function).</summary>    <seealso name="OnPlayerDeath" />  <seealso name="OnVehicleSpawn" />  <seealso name="SpawnPlayer" />  <seealso name="AddPlayerClass" />  <seealso name="SetSpawnInfo" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>The game sometimes deducts $100 from players after spawn.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVehicleSeat"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_NONE"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="PLAYER_STATE_SPAWNED"/>
			<dependency name="PLAYER_STATE_SPECTATING"/>
			<dependency name="PLAYER_STATE_WASTED"/>
			<dependency name="VectorSize"/>
			<dependency name="__gOnce"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acCheatCount"/>
			<dependency name="acDriver"/>
			<dependency name="acEnterSeat"/>
			<dependency name="acEnterVeh"/>
			<dependency name="acEnterVehTick"/>
			<dependency name="acFloodCount"/>
			<dependency name="acGtc"/>
			<dependency name="acHealth"/>
			<dependency name="acKicked"/>
			<dependency name="acLastPosX"/>
			<dependency name="acLastPosY"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSet"/>
			<dependency name="acSetVehHealth"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<dependency name="acSpec"/>
			<dependency name="acSpeed"/>
			<dependency name="acUpdateTick"/>
			<dependency name="acVeh"/>
			<dependency name="acVehDmgRes"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_GetMaxPassengers"/>
			<dependency name="ac_GetSpeed"/>
			<dependency name="ac_IsABikeEx"/>
			<dependency name="ac_IsABoatEx"/>
			<dependency name="ac_IsABusEx"/>
			<dependency name="ac_IsATrainPartEx"/>
			<dependency name="ac_IsAnAircraftEx"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="false"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that changed state
			</param>
			<param name="newstate">
				The player's new state
			</param>
			<param name="oldstate">
				The player's previous state
			</param>
			<summary>This callback is called when a player changes state.  For example, when a player changes  from being the driver of a vehicle to being on-foot.</summary>        <seealso name="OnPlayerInteriorChange" />  <seealso name="GetPlayerState" />  <seealso name="GetPlayerSpecialAction" />  <seealso name="SetPlayerSpecialAction" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>  <b>States:</b><br />  <ul>  <li><b><c>PLAYER_STATE_NONE</c></b> - empty (while initializing)</li>  <li><b><c>PLAYER_STATE_ONFOOT</c></b> - player is on foot</li>  <li><b><c>PLAYER_STATE_DRIVER</c></b> - player is the driver of a vehicle</li>  <li><b><c>PLAYER_STATE_PASSENGER</c></b> - player is passenger of a vehicle</li>  <li><b><c>PLAYER_STATE_WASTED</c></b> - player is dead or on class selection</li>  <li><b><c>PLAYER_STATE_SPAWNED</c></b> - player is spawned</li>  <li><b><c>PLAYER_STATE_SPECTATING</c></b> - player is spectating</li>  <li><b><c>PLAYER_STATE_EXIT_VEHICLE</c></b> - player exits a vehicle</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_DRIVER</c></b> - player enters a vehicle as driver</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_PASSENGER</c></b> - player enters a vehicle as passenger  </li>  </ul>  </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnPlayerStreamIn"/>
			<dependency name="Iter_Single@StreamedBot"/>
			<dependency name="Iter_Single@StreamedCharacter"/>
			<dependency name="Iter_Single@StreamedPlayer"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<param name="playerid">
				The ID of the player who has been streamed
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the other player in
			</param>
			<summary>This callback is called when a player is streamed by some other player's client.</summary>      <seealso name="OnPlayerStreamOut" />  <seealso name="OnActorStreamIn" />  <seealso name="OnVehicleStreamIn" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_OnPlayerStreamOut"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@StreamedBot"/>
			<dependency name="Iter_Single@StreamedCharacter"/>
			<dependency name="Iter_Single@StreamedPlayer"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<param name="playerid">
				The player who has been destreamed
			</param>
			<param name="forplayerid">
				The player who has destreamed the other player
			</param>
			<summary>This callback is called when a player is streamed out from some other player's client.</summary>      <seealso name="OnPlayerStreamIn" />  <seealso name="OnActorStreamOut" />  <seealso name="OnVehicleStreamOut" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="acACAllow"/>
			<dependency name="acDead"/>
			<dependency name="acDeathRes"/>
			<dependency name="acKicked"/>
			<dependency name="ac_IsValidDamageReason"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that took damage
			</param>
			<param name="issuerid">
				The ID of the player that caused the damage. <b><c>INVALID_PLAYER_ID</c></b>  if self-inflicted
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of damage the player took (health and armour combined)
			</param>
			<param name="weaponid">
				The ID of the <a href="http://wiki.sa-mp.com/wiki/Weapons">weapon/reason</a>  for the damage
			</param>
			<param name="bodypart">
				The body part that was hit. (NOTE: This parameter was added in <b>0.3z</b>.  Leave it out if using an older version!)
			</param>
			<summary>This callback is called when a player takes damage.</summary>            <seealso name="OnPlayerGiveDamage" />  <seealso name="OnPlayerWeaponShot" />  <remarks>This callback was added in <b>SA-MP 0.3d</b> and will not work in earlier versions!</remarks>  <remarks><a href="#GetPlayerHealth">GetPlayerHealth</a> and <a href="#GetPlayerArmour">GetPlayerArmour</a>  will return the old amounts of the player before this callback. </remarks>  <remarks>  The weaponid will return <b><c>37</c></b> (flame thrower) from any fire sources (e.g.  molotov,  <b><c>18</c></b>).<br />  The weaponid will return <b><c>51</c></b> from any weapon that creates an explosion (e.g.  RPG,  grenade)<br />  <b>playerid</b> is the only one who can call the callback.<br />  The amount is always the maximum damage the weaponid can do, even when the health left is less  than that maximum damage.  So when a player has <b><c>100.0</c></b> health and gets shot with a Desert  Eagle which has a damage value of <b><c>46.2</c></b>, it takes 3 shots to kill that player.  All  3 shots will show an amount of <b><c>46.2</c></b>, even though when the last shot hits, the player  only has <b><c>7.6</c></b> health left.  </remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player who typed the text
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text the player typed
			</param>
			<summary>Called when a player sends a chat message.</summary>      <seealso name="OnPlayerCommandText" />  <seealso name="SendPlayerMessageToPlayer" />  <seealso name="SendPlayerMessageToAll" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will stop the text from being sent to all players.<br  />  It is always called first in filterscripts so returning <b><c>0</c></b> there blocks other scripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="36"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;(_:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="DEBUG_CODE_5"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="GetPlayerSpecialAction"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerSurfingObjectID"/>
			<dependency name="GetPlayerSurfingVehicleID"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVehicleSeat"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="PLAYER_STATE_SPECTATING"/>
			<dependency name="SPECIAL_ACTION_DANCE1"/>
			<dependency name="SPECIAL_ACTION_DANCE2"/>
			<dependency name="SPECIAL_ACTION_DANCE3"/>
			<dependency name="SPECIAL_ACTION_DANCE4"/>
			<dependency name="SPECIAL_ACTION_DRINK_BEER"/>
			<dependency name="SPECIAL_ACTION_DUCK"/>
			<dependency name="SPECIAL_ACTION_ENTER_VEHICLE"/>
			<dependency name="SPECIAL_ACTION_EXIT_VEHICLE"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="SPECIAL_ACTION_USECELLPHONE"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="Streamer_GetDistanceToItem"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="VectorSize"/>
			<dependency name="acACAllow"/>
			<dependency name="acAmmo"/>
			<dependency name="acAnim"/>
			<dependency name="acArmour"/>
			<dependency name="acCheatCount"/>
			<dependency name="acDmgRes"/>
			<dependency name="acDriver"/>
			<dependency name="acDropJpX"/>
			<dependency name="acDropJpY"/>
			<dependency name="acDropJpZ"/>
			<dependency name="acEnterSeat"/>
			<dependency name="acEnterVeh"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtc"/>
			<dependency name="acGtcGiveAmmo"/>
			<dependency name="acGtcSetWeapon"/>
			<dependency name="acHealth"/>
			<dependency name="acHealth"/>
			<dependency name="acHoldWeapon"/>
			<dependency name="acIntEnterExits"/>
			<dependency name="acKicked"/>
			<dependency name="acLastPickup"/>
			<dependency name="acLastPosX"/>
			<dependency name="acLastPosY"/>
			<dependency name="acLastSpecAct"/>
			<dependency name="acModShop"/>
			<dependency name="acMoney"/>
			<dependency name="acNOPAllow"/>
			<dependency name="acNOPCount"/>
			<dependency name="acNextSpecAct"/>
			<dependency name="acParachute"/>
			<dependency name="acPosDiff"/>
			<dependency name="acPosX"/>
			<dependency name="acPosX"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosY"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acPosZ"/>
			<dependency name="acPosZ"/>
			<dependency name="acSeat"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosX"/>
			<dependency name="acSetPosY"/>
			<dependency name="acSetPosZ"/>
			<dependency name="acSetVehHealth"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acSpawned"/>
			<dependency name="acSpecAct"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeedDiff"/>
			<dependency name="acTpToZ"/>
			<dependency name="acUnFrozen"/>
			<dependency name="acUpdateTick"/>
			<dependency name="acVeh"/>
			<dependency name="acVehDmgRes"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="acWeapon"/>
			<dependency name="acWeapon"/>
			<dependency name="acZAngle"/>
			<dependency name="ac_AmmuNationInfo"/>
			<dependency name="ac_GetSpeed"/>
			<dependency name="ac_GetVehicleZAngle"/>
			<dependency name="ac_InAmmuNation"/>
			<dependency name="ac_InPayNSpray"/>
			<dependency name="ac_InRestaurant"/>
			<dependency name="ac_IsABmx"/>
			<dependency name="ac_IsABmxEx"/>
			<dependency name="ac_IsATrainLoco"/>
			<dependency name="ac_IsAnAircraftEx"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_NearVendingMachine"/>
			<dependency name="ac_PedAnims"/>
			<dependency name="ac_pAmmo"/>
			<dependency name="ac_wSlot"/>
			<dependency name="acc_SetPlayerPos"/>
			<dependency name="acc_SetVehicleHealth"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="floatround"/>
			<dependency name="floatround_tozero"/>
			<dependency name="orig_GetPlayerMoney"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				ID of the player sending an update packet
			</param>
			<summary>This callback is called every time a client/player updates the server with their status.  It is often used to create custom callbacks for client updates that aren't actively tracked by the  server, such as health or armor updates or players switching weapons.</summary>    <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is called, on average, 30 times per second, per player; only use it when you  know what it's meant for (or more importantly what it's NOT meant for). </remarks>  <remarks>The frequency with which this callback is called for each player varies, depending on what  the player is doing.  Driving or shooting will trigger a lot more updates than idling. </remarks>  <returns>  <b><c>0</c></b> - Update from this player will not be replicated to other clients.<br />  <b><c>1</c></b> - Indicates that this update can be processed normally and sent to other players.<br  />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerUseVendingMachine" syntax="OnPlayerUseVendingMachine(playerid, &amp;health_given)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<dependency name="WC_OnPlayerUseVendingMachine"/>
			<param name="playerid">
			</param>
			<param name="health_given">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerWeaponShot" syntax="OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="22"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="BULLET_HIT_TYPE_NONE"/>
			<dependency name="BULLET_HIT_TYPE_OBJECT"/>
			<dependency name="BULLET_HIT_TYPE_PLAYER"/>
			<dependency name="BULLET_HIT_TYPE_PLAYER_OBJECT"/>
			<dependency name="BULLET_HIT_TYPE_VEHICLE"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerLastShotVectors"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerSurfingObjectID"/>
			<dependency name="GetPlayerSurfingVehicleID"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetPlayerWeaponState"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleModelInfo"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="SPECIAL_ACTION_ENTER_VEHICLE"/>
			<dependency name="SPECIAL_ACTION_EXIT_VEHICLE"/>
			<dependency name="VEHICLE_MODEL_INFO_WHEELSFRONT"/>
			<dependency name="VEHICLE_MODEL_INFO_WHEELSMID"/>
			<dependency name="VEHICLE_MODEL_INFO_WHEELSREAR"/>
			<dependency name="VectorSize"/>
			<dependency name="WEAPONSTATE_LAST_BULLET"/>
			<dependency name="acACAllow"/>
			<dependency name="acAmmo"/>
			<dependency name="acCheatCount"/>
			<dependency name="acDead"/>
			<dependency name="acDmgRes"/>
			<dependency name="acDriver"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtc"/>
			<dependency name="acHealth"/>
			<dependency name="acInt"/>
			<dependency name="acKicked"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acReloadTick"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acShotTick"/>
			<dependency name="acShotWeapon"/>
			<dependency name="acSpecAct"/>
			<dependency name="acUnFrozen"/>
			<dependency name="acUpdateTick"/>
			<dependency name="acVeh"/>
			<dependency name="acVehDmgRes"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_InAmmuNation"/>
			<dependency name="ac_InCasino"/>
			<dependency name="ac_InRestaurant"/>
			<dependency name="ac_IsBulletWeapon"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_LagCompMode"/>
			<dependency name="ac_VehFriendlyFire"/>
			<dependency name="ac_wMinRange"/>
			<dependency name="ac_wSlot"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that shot a weapon
			</param>
			<param name="weaponid">
				The ID of the <a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> shot  by the player
			</param>
			<param name="hittype">
				The type of thing the shot hit (none, player, vehicle, or (player)object)
			</param>
			<param name="hitid">
				The ID of the player, vehicle or object that was hit
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X coordinate that the shot hit
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y coordinate that the shot hit
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z coordinate that the shot hit
			</param>
			<summary>This callback is called when a player fires a shot from a weapon.  Only bullet weapons are  supported.  Only <b>passenger</b> drive-by is supported (not driver drive-by, and not sea sparrow  / hunter shots).</summary>                <seealso name="OnPlayerGiveDamage" />  <seealso name="GetPlayerLastShotVectors" />  <remarks>This callback was added in <b>SA-MP 0.3z</b> and will not work in earlier versions!</remarks>  <remarks>  <li><b><c>BULLET_HIT_TYPE_NONE(0)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_PLAYER(1)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_VEHICLE(2)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_OBJECT(3)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_PLAYER_OBJECT(4)</c></b></li>  </remarks>  <remarks><b><c>BULLET_HIT_TYPE_PLAYER</c></b> is also called for NPCs.  Actors are ignored by this  callback and detects as <b><c>BULLET_HIT_TYPE_NONE</c></b>.</remarks>  <remarks>This callback is only called when lag compensation is <b>enabled</b>. </remarks>  <remarks>  If hittype is:<br />  <ul>  <li>- <b><c>BULLET_HIT_TYPE_NONE</c></b>: the fX, fY and fZ parameters are normal coordinates,  will give 0.0 for coordinates if nothing was hit (e.g.  far object that the bullet can't reach);</li>  <li>- Others: the fX, fY and fZ are offsets relative to the hitid.</li>  </ul>  </remarks>  <remarks>  Isn't called if you fired in vehicle as driver or if you are looking behind with the aim enabled  (shooting in air).<br />  It is called as <b><c>BULLET_HIT_TYPE_VEHICLE</c></b> with the correct hitid (the hit player's  vehicleid) if you are shooting a player which is in a vehicle.  It won't be called as <b><c>BULLET_HIT_TYPE_PLAYER</c></b>  at all.<br />  <b>Partially fixed in SA-MP 0.3.7:</b> If fake weapon data is sent by a malicious user, other player  clients may freeze or crash.  To combat this, check if the reported weaponid can actually fire bullets.  </remarks>  <remarks>  </remarks>  <remarks><a href="#GetPlayerLastShotVectors">GetPlayerLastShotVectors</a> can be used in this callback  for more detailed bullet vector information.</remarks>  <returns>  <b><c>0</c></b> - Prevent the bullet from causing damage.<br />  <b><c>1</c></b> - Allow the bullet to cause damage.<br />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPrivCarAttachmentBuy" syntax="OnPrivCarAttachmentBuy(playerid, privcarid, index)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="AttachDynamicObjectToVehicle"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="ShowPlayerObjectMenu"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachment_modelid"/>
			<dependency name="attachment_name"/>
			<dependency name="cache_insert_id"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="pVeh"/>
			<dependency name="pVehEditorPos"/>
			<dependency name="pVehEditorPos"/>
			<dependency name="pVehEditorRot"/>
			<dependency name="pVehEditorRot"/>
			<dependency name="pVehObject"/>
			<dependency name="pVehObject"/>
			<dependency name="pVehObjectCount"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectID"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:OnPrivCarAttachmentDialog" syntax="OnPrivCarAttachmentDialog(playerid, dialogid, response, listitem)">
			<stacksize value="15"/>
			<referrer name="OnDialogPrivCarManage"/>
			<dependency name="DIALOG_PRIVCAR_ATTACHMENT"/>
			<dependency name="DIALOG_PRIVCAR_ATTACH_SELECT"/>
			<dependency name="DIALOG_PRIVCAR_MANAGE"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="RunPrivCarManage"/>
			<dependency name="SetEditorAttachment"/>
			<dependency name="ShowAttachmentList"/>
			<dependency name="ShowPlayerObjectMenu"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachment_name"/>
			<dependency name="cache_delete"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="mysql_query"/>
			<dependency name="pVehEditorPos"/>
			<dependency name="pVehEditorPos"/>
			<dependency name="pVehEditorRot"/>
			<dependency name="pVehEditorRot"/>
			<dependency name="pVehManage"/>
			<dependency name="pVehObject"/>
			<dependency name="pVehObject"/>
			<dependency name="pVehObjectCount"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectPos"/>
			<dependency name="pVehObjectRot"/>
			<dependency name="pVehUlepszenie"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_objectData"/>
			<dependency name="sendError"/>
			<dependency name="strx"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:OnQueryError" syntax="OnQueryError(errorid, error[], callback[], query[], handle)">
			<stacksize value="1"/>
			<param name="errorid">
			</param>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
				A string containing the command that was typed, as well as any passed parameters
			</param>
			<summary>This callback is called when a command is sent through the server console, remote RCON,  or via the in-game "/rcon command".</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnRconLoginAttempt" />  <remarks>You will need to include this callback in a loaded filterscript for it to work in the gamemode!</remarks>  <remarks>"/rcon" is not included in "cmd" when a player types a command. </remarks>  <remarks>If you use the <a href="#print">print</a> function here, it will send a message to the player  who typed the command in-game as well as the log.</remarks>  <remarks>This callback is not called when the player is not logged in as RCON admin. </remarks>  <remarks>When the player is not logged in as RCON admin and uses <b>/rcon login</b>, this callback  will not be called and <a href="#OnRconLoginAttempt">OnRconLoginAttempt</a> is called instead.  However,  when the player is logged in as RCON admin, the use of this command will call this callback. </remarks>  <returns>  <b><c>0</c></b> if the command was not processed, it will be passed to another script or <b><c>1</c></b>  if the command was processed, will not be passed to other scripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks gamemode from  seeing it.  </returns> 
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="DEBUG_CODE_4"/>
			<dependency name="ac_ACAllow"/>
			<dependency name="ac_IpToInt"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="printf"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				The IP of the player that tried to log in to RCON
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
				The password used to login with
			</param>
			<param name="success">
				<b><c>0</c></b> if the password was incorrect or <b><c>1</c></b> if it was  correct
			</param>
			<summary>This callback is called when someone attempts to log in to RCON in-game; successful or not.</summary>        <seealso name="OnRconCommand" />  <seealso name="IsPlayerAdmin" />  <seealso name="SendRconCommand" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This callback is only called when /rcon login is used in-game. </remarks>  <remarks>This callback is only called when the player is not yet logged in.  When the player is logged  in, <a href="#OnRconCommand">OnRconCommand</a> is called instead.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnRejectedHit" syntax="OnRejectedHit(playerid, hit[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="AddRejectedHit"/>
			<dependency name="WC_OnRejectedHit"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="hit">
				<paraminfo> [33] </paraminfo>
			</param>
		</member>
		<member name="M:OnRuntimeError" syntax="OnRuntimeError(code, &amp;suppress)">
			<attribute name="public"/>
			<stacksize value="41"/>
			<dependency name="ValstrWithOrdinal"/>
			<dependency name="ValstrWithOrdinal"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sActiveHooks"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<param name="code">
			</param>
			<param name="suppress">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:OnScriptCash" syntax="OnScriptCash(playerid, amount, source)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player who got cash from the game
			</param>
			<param name="amount">
				The amount of cash given
			</param>
			<param name="source">
				Where the money came from
			</param>
			<summary>This callback is called when a SendClientCheck request comletes</summary>        <remarks>Doesn't work</remarks> 
		</member>
		<member name="M:OnScriptInit" syntax="OnScriptInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:OnScriptInit@C" syntax="OnScriptInit@C()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Indirect_Init"/>
			<library>indirection</library>
		</member>
		<member name="M:OnScriptInit@E" syntax="OnScriptInit@E()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="SetTimer"/>
			<dependency name="cb_Connect"/>
			<dependency name="funcidx"/>
			<dependency name="true"/>
		</member>
		<member name="M:OnTrailerUpdate" syntax="OnTrailerUpdate(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="ACInfo"/>
			<dependency name="acKicked"/>
			<param name="playerid">
				The ID of the player who sent a trailer update
			</param>
			<param name="vehicleid">
				The Trailer being updated
			</param>
			<summary>This callback is called when a player sent a trailer update.</summary>      <seealso name="OnUnoccupiedVehicleUpdate" />  <seealso name="GetVehicleTrailer" />  <seealso name="IsTrailerAttachedToVehicle" />  <seealso name="AttachTrailerToVehicle" />  <seealso name="DetachTrailerFromVehicle" />  <remarks>This callback was added in <b>SA-MP 0.3z R4</b> and will not work in earlier versions!</remarks>  <remarks>This callback is called very frequently per second per trailer.  You should refrain from  implementing intensive calculations or intensive file writing/reading operations in this callback.  </remarks>  <returns>  <b><c>0</c></b> - Cancels any trailer updates from being sent to other players.  Update is still  sent to the updating player.<br />  <b><c>1</c></b> - Processes the trailer update as normal and synchronizes it between all players.<br  />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, new_x, new_y, new_z, vel_x, vel_y, vel_z)">
			<attribute name="public"/>
			<stacksize value="22"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleDistanceFromPoint"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="VectorSize"/>
			<dependency name="acACAllow"/>
			<dependency name="acCheatCount"/>
			<dependency name="acGtc"/>
			<dependency name="acKicked"/>
			<dependency name="acPosDiff"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeedDiff"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="acZAngle"/>
			<dependency name="ac_GetSpeed"/>
			<dependency name="ac_GetVehicleZAngle"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="acc_SetVehiclePos"/>
			<dependency name="floatabs"/>
			<dependency name="printf"/>
			<param name="vehicleid">
				The ID of the vehicle that's position was updated
			</param>
			<param name="playerid">
				The ID of the player that sent a vehicle position sync update
			</param>
			<param name="passenger_seat">
				The ID of the seat if the player is a passenger.  0=not in vehicle,  1=front passenger, 2=backleft 3=backright 4+ is for coach/bus etc.  with many passenger seats
			</param>
			<param name="new_x">
				<paraminfo>Float </paraminfo>
				The new X coordinate of the vehicle.  This parameter was added in <b>0.3z</b>.  Leave it out if using an earlier version
			</param>
			<param name="new_y">
				<paraminfo>Float </paraminfo>
				The new Y coordinate of the vehicle.  This parameter was added in <b>0.3z</b>.  Leave it out if using an earlier version
			</param>
			<param name="new_z">
				<paraminfo>Float </paraminfo>
				The new Z coordinate of the vehicle.  This parameter was added in <b>0.3z</b>.  Leave it out if using an earlier version
			</param>
			<param name="vel_x">
				<paraminfo>Float </paraminfo>
				The new X velocity of the vehicle.  This parameter was added in <b>0.3z R4</b>.  Leave it out if using an earlier version
			</param>
			<param name="vel_y">
				<paraminfo>Float </paraminfo>
				The new Y velocity of the vehicle.  This parameter was added in <b>0.3z R4</b>.  Leave it out if using an earlier version
			</param>
			<param name="vel_z">
				<paraminfo>Float </paraminfo>
				The new Z velocity of the vehicle.  This parameter was added in <b>0.3z R4</b>.  Leave it out if using an earlier version
			</param>
			<summary>This callback is called when a player's client updates/syncs the position of a vehicle they're  not driving.  This can happen outside of the vehicle or when the player is a passenger of a vehicle  that has no driver.</summary>                    <seealso name="OnTrailerUpdate" />  <remarks>This callback was added in <b>SA-MP 0.3c R3</b> and will not work in earlier versions!</remarks>  <remarks>This callback is called very frequently per second per unoccupied vehicle.  You should refrain  from implementing intensive calculations or intensive file writing/reading operations in this callback.</remarks>  <remarks><a href="#GetVehiclePos">GetVehiclePos</a> will return the old coordinates of the vehicle  before this update.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will stop the vehicle's position being synced to other  players.  Update is still sent to the updating player.  Useful for combating vehicle teleport hacks.<br  />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleDamageStatus"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acDoors"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="acPanels"/>
			<dependency name="acTires"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<param name="vehicleid">
				The ID of the vehicle that was changed its damage status
			</param>
			<param name="playerid">
				The ID of the player who synced the change in the damage status (who had the  car damaged or repaired)
			</param>
			<summary>This callback is called when a vehicle element such as doors, tires, panels, or lights change  their damage status.</summary>      <seealso name="GetVehicleDamageStatus" />  <seealso name="UpdateVehicleDamageStatus" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This does not include vehicle health changes</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.<br />  </returns> 
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acSpawned"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
				The ID of the vehicle that was destroyed
			</param>
			<param name="killerid">
				The ID of the player that reported (synced) the vehicle's destruction (name  is misleading).  Generally the driver or a passenger (if any) or the closest player
			</param>
			<summary>This callback is called when a vehicle is destroyed - either by exploding or becoming submerged  in water.</summary>      <seealso name="OnVehicleSpawn" />  <seealso name="SetVehicleHealth" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback will also be called when a vehicle enters water, but the vehicle can be saved  from destruction by teleportation or driving out (if only partially submerged).  The callback won't  be called a second time, and the vehicle may disappear when the driver exits, or after a short time.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, componentid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acCheatCount"/>
			<dependency name="acFloodCount"/>
			<dependency name="acGtc"/>
			<dependency name="acKicked"/>
			<dependency name="acModShop"/>
			<dependency name="acSet"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_IsCompatible"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="ac_cPrice"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the driver of the vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle which is modded
			</param>
			<param name="componentid">
				The ID of the component which was added to the vehicle
			</param>
			<summary>This callback is called when a vehicle is modded.</summary>        <seealso name="AddVehicleComponent" />  <seealso name="OnEnterExitModShop" />  <seealso name="OnVehiclePaintjob" />  <seealso name="OnVehicleRespray" />  <remarks>This callback is NOT called by <a href="#AddVehicleComponent">AddVehicleComponent</a>.</remarks>  <returns>  Return <b><c>0</c></b> to desync the mod (or an invalid mod) from propagating and / or crashing  players.<br />  It is always called first in gamemode so returning <b><c>0</c></b> there also blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="acModShop"/>
			<dependency name="acPaintJob"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="printf"/>
			<param name="playerid">
				The ID of the player that changed the paintjob of their vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle that had its paintjob changed
			</param>
			<param name="paintjobid">
				The ID of the new paintjob
			</param>
			<summary>Called when a player previews a vehicle paintjob inside a mod shop.  Watch out, this callback  is not called when the player buys the paintjob.</summary>        <seealso name="ChangeVehiclePaintjob" />  <seealso name="ChangeVehicleColor" />  <seealso name="OnVehicleRespray" />  <seealso name="OnVehicleMod" />  <remarks>This callback is not called by <a href="#ChangeVehiclePaintjob">ChangeVehiclePaintjob</a>.</remarks>  <returns>  This callback does not handle returns.  Returning <b><c>0</c></b> won't deny the paintjob change.<br  />  It is always called first in gamemode so returning <b><c>0</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that is driving the vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle that was resprayed
			</param>
			<param name="color1">
				The color that the vehicle's primary color was changed to
			</param>
			<param name="color2">
				The color that the vehicle's secondary color was changed to
			</param>
			<summary>This callback is called when a player exits a mod shop, even if the colors weren't changed.  Watch out, the name is ambiguous, Pay 'n' Spray shops don't call this callback.</summary>          <seealso name="ChangeVehicleColor" />  <seealso name="ChangeVehiclePaintjob" />  <seealso name="OnVehiclePaintjob" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" />  <remarks>Previewing a component inside a mod shop might call this callback.</remarks>  <remarks>This callback is not called by <a href="#ChangeVehicleColor">ChangeVehicleColor</a>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will deny the colour change.  Returning <b><c>1</c></b>  will allow it.  This can be used to prevent hackers from changing vehicle colours using cheats.<br  />  It is always called first in gamemode so returning <b><c>0</c></b> there also blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehicleSirenStateChange" syntax="OnVehicleSirenStateChange(playerid, vehicleid, newstate)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="acACAllow"/>
			<dependency name="acCall"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_FloodDetect"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that toggled the siren (driver)
			</param>
			<param name="vehicleid">
				The ID of the vehicle of which the siren was toggled for
			</param>
			<param name="newstate">
				<b><c>0</c></b> if siren was turned off, <b><c>1</c></b> if siren was turned  on
			</param>
			<summary>This callback is called when a vehicle's siren is toggled.</summary>        <seealso name="GetVehicleParamsSirenState" />  <remarks>This callback was added in <b>SA-MP 0.3.7</b> and will not work in earlier versions!</remarks>  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is only called when a vehicle's siren is toggled on or off, NOT when the alternate  siren is in use (holding horn).</remarks>  <returns>  <b><c>1</c></b> - Will prevent gamemode from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the gamemode.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="Iterator@Player"/>
			<dependency name="acDoors"/>
			<dependency name="acDriver"/>
			<dependency name="acGtc"/>
			<dependency name="acHealth"/>
			<dependency name="acLastSpeed"/>
			<dependency name="acPaintJob"/>
			<dependency name="acPanels"/>
			<dependency name="acPosDiff"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<dependency name="acSpawnZAngle"/>
			<dependency name="acSpawned"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeedDiff"/>
			<dependency name="acTires"/>
			<dependency name="acVeh"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="acZAngle"/>
			<dependency name="true"/>
			<param name="vehicleid">
				The ID of the vehicle that spawned
			</param>
			<summary>This callback is called when a vehicle <b>re</b>spawns.</summary>    <seealso name="OnVehicleDeath" />  <seealso name="OnPlayerSpawn" />  <seealso name="SetVehicleToRespawn" />  <seealso name="CreateVehicle" />  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnVehicleStreamIn"/>
			<dependency name="Iter_Single@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle that streamed in for the player
			</param>
			<param name="forplayerid">
				The ID of the player who the vehicle streamed in for
			</param>
			<summary>Called when a vehicle is streamed to a player's client.</summary>      <seealso name="OnVehicleStreamOut" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_OnVehicleStreamOut"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle that streamed out
			</param>
			<param name="forplayerid">
				The ID of the player who is no longer streaming the vehicle
			</param>
			<summary>This callback is called when a vehicle is streamed out for a player's client (it's so far  away that they can't see it).</summary>      <seealso name="OnVehicleStreamIn" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This callback was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:PAWNDOC" syntax="PAWNDOC()">
			<stacksize value="3"/>
			<automaton name="__PAWNDOC"/>
			<dependency name="Bit_Bits"/>
			<dependency name="Bit_FastSet"/>
			<dependency name="Bit_Get"/>
			<dependency name="Bit_GetBit"/>
			<dependency name="Bit_Let"/>
			<dependency name="Bit_Mask"/>
			<dependency name="Bit_Slot"/>
			<dependency name="Bit_Toggle"/>
			<dependency name="Bit_Vet"/>
			<dependency name="CONST_PAWNDOC"/>
			<dependency name="Debug_Code1"/>
			<dependency name="Debug_Code2"/>
			<dependency name="Debug_Code3"/>
			<dependency name="Debug_Code4"/>
			<dependency name="Debug_Code5"/>
			<dependency name="Debug_Code6"/>
			<dependency name="Debug_Code7"/>
			<dependency name="Debug_Print1"/>
			<dependency name="Debug_Print2"/>
			<dependency name="Debug_Print3"/>
			<dependency name="Debug_Print4"/>
			<dependency name="Debug_Print5"/>
			<dependency name="Debug_Print6"/>
			<dependency name="Debug_Print7"/>
			<dependency name="ENUM_PAWNDOC"/>
			<dependency name="FUNC_PAWNDOC"/>
			<dependency name="FloatAbs"/>
			<dependency name="GetIP"/>
			<dependency name="HIDE_PAWNDOC"/>
			<dependency name="IS_IN_RANGE"/>
			<dependency name="IsNaN"/>
			<dependency name="IsNull"/>
			<dependency name="IsOdd"/>
			<dependency name="Iterator"/>
			<dependency name="Malloc_Get"/>
			<dependency name="Malloc_GetData"/>
			<dependency name="Malloc_GetFloat"/>
			<dependency name="Malloc_GetSlotSize"/>
			<dependency name="Malloc_NextSlot"/>
			<dependency name="Malloc_Set"/>
			<dependency name="Malloc_SetData"/>
			<dependency name="Malloc_SetFloat"/>
			<dependency name="Malloc_SetSlotSize"/>
			<dependency name="Malloc_SlotSize"/>
			<dependency name="NOT_IN_RANGE"/>
			<dependency name="StrCpy"/>
			<dependency name="StripR"/>
			<dependency name="UCMP"/>
			<dependency name="VALID_PLAYERID"/>
			<dependency name="_isEveen"/>
			<dependency name="ceildiv"/>
			<dependency name="floordiv"/>
			<dependency name="free"/>
			<dependency name="iterfunc"/>
			<dependency name="malloc"/>
			<dependency name="mget"/>
			<dependency name="mgeta"/>
			<dependency name="mgetf"/>
			<dependency name="mgets"/>
			<dependency name="mset"/>
			<dependency name="mseta"/>
			<dependency name="msetf"/>
			<dependency name="msets"/>
			<remarks>  Use this after all other pawndoc fixes to finish off the <c>PAWNDOC</c>  function in the current file.  </remarks> 
		</member>
		<member name="M:PC_Init" syntax="PC_Init()">
			<attribute name="native"/>
			<referrer name="Indirection_OnGameModeInit"/>
		</member>
		<member name="M:PC_RegAlias" syntax="PC_RegAlias(cmd[], alias[], ...)">
			<attribute name="native"/>
			<referrer name="pc_alias_rekordy"/>
			<referrer name="pc_alias_ulepszenia"/>
			<referrer name="pc_alias_osiagniecia"/>
			<referrer name="pc_alias_quest"/>
			<referrer name="pc_alias_td"/>
			<referrer name="pc_alias_hud"/>
			<referrer name="pc_alias_duel"/>
			<referrer name="pc_alias_aduel"/>
			<referrer name="pc_alias_ownrank"/>
			<referrer name="pc_alias_pompa"/>
			<referrer name="pc_alias_sniper"/>
			<referrer name="pc_alias_glitch"/>
			<referrer name="pc_alias_interiory"/>
			<referrer name="pc_alias_raport"/>
			<referrer name="pc_alias_raporty"/>
			<referrer name="pc_alias_top"/>
			<referrer name="pc_alias_local"/>
			<referrer name="pc_alias_anims"/>
			<referrer name="pc_alias_astop"/>
			<referrer name="pc_alias_wal"/>
			<referrer name="pc_alias_calus"/>
			<referrer name="pc_alias_bj"/>
			<referrer name="pc_alias_tancz"/>
			<referrer name="pc_alias_pijak"/>
			<referrer name="pc_alias_spadam"/>
			<referrer name="pc_alias_addvehicle"/>
			<referrer name="pc_alias_zw"/>
			<referrer name="pc_alias_tutorial"/>
			<referrer name="pc_alias_teles"/>
			<referrer name="pc_alias_tpadd"/>
			<referrer name="pc_alias_tplist"/>
			<referrer name="pc_alias_pp"/>
			<referrer name="pc_alias_pth"/>
			<referrer name="pc_alias_ptp"/>
			<referrer name="pc_alias_pbuy"/>
			<referrer name="pc_alias_baza"/>
			<referrer name="pc_alias_team"/>
			<referrer name="pc_alias_tkolor"/>
			<referrer name="pc_alias_topusc"/>
			<referrer name="pc_alias_tzaproszenia"/>
			<referrer name="pc_alias_wolnybiznes"/>
			<referrer name="pc_alias_rybki"/>
			<referrer name="pc_alias_low"/>
			<referrer name="pc_alias_gornictwo"/>
			<referrer name="pc_alias_oreevent"/>
			<referrer name="pc_alias_rc"/>
			<referrer name="pc_alias_ch"/>
			<referrer name="pc_alias_rccreator"/>
			<referrer name="pc_alias_wgc"/>
			<referrer name="pc_alias_evcreate"/>
			<referrer name="pc_alias_evend"/>
			<referrer name="pc_alias_ev"/>
			<referrer name="pc_alias_evtype"/>
			<referrer name="pc_alias_evnagroda"/>
			<referrer name="pc_alias_evweapon"/>
			<referrer name="pc_alias_evadd"/>
			<referrer name="pc_alias_evdelete"/>
			<referrer name="pc_alias_evdelgod"/>
			<referrer name="pc_alias_evczas"/>
			<referrer name="pc_alias_evpogoda"/>
			<referrer name="pc_alias_evhealth"/>
			<referrer name="pc_alias_evarmor"/>
			<referrer name="pc_alias_evtph"/>
			<referrer name="pc_alias_evtpt"/>
			<referrer name="pc_alias_evcar"/>
			<referrer name="pc_alias_bet"/>
			<referrer name="pc_alias_konto"/>
			<referrer name="pc_alias_aduty"/>
			<referrer name="pc_alias_stats"/>
			<referrer name="pc_alias_apanel"/>
			<referrer name="pc_alias_autor"/>
			<referrer name="pc_alias_kolory"/>
			<referrer name="pc_alias_skin"/>
			<referrer name="pc_alias_ulecz"/>
			<referrer name="pc_alias_kamizelka"/>
			<referrer name="pc_alias_invisible"/>
			<referrer name="pc_alias_naj"/>
			<referrer name="pc_alias_kill"/>
			<referrer name="pc_alias_obiekty"/>
			<referrer name="pc_alias_admins"/>
			<referrer name="pc_alias_pm"/>
			<referrer name="pc_alias_regulamin"/>
			<referrer name="pc_alias_taryfikator"/>
			<referrer name="pc_alias_idzdo"/>
			<referrer name="pc_alias_tpaccept"/>
			<referrer name="pc_alias_time"/>
			<referrer name="pc_alias_weather"/>
			<referrer name="pc_alias_flo"/>
			<referrer name="pc_alias_bronie"/>
			<referrer name="pc_alias_style"/>
			<referrer name="pc_alias_v"/>
			<referrer name="pc_alias_napraw"/>
			<referrer name="pc_alias_tune"/>
			<referrer name="pc_alias_lakier"/>
			<referrer name="pc_alias_kick"/>
			<referrer name="pc_alias_unmute"/>
			<referrer name="pc_alias_tt"/>
			<referrer name="pc_alias_th"/>
			<referrer name="pc_alias_unwarn"/>
			<referrer name="pc_alias_unjail"/>
			<referrer name="pc_alias_fake"/>
			<referrer name="pc_alias_dajmoney"/>
			<referrer name="pc_alias_cls"/>
			<referrer name="pc_alias_checkban"/>
			<referrer name="pc_alias_getuid"/>
			<referrer name="pc_alias_setvip"/>
			<referrer name="pc_alias_setrank"/>
			<referrer name="pc_alias_help"/>
			<referrer name="pc_alias_serverstats"/>
			<referrer name="pc_alias_exit"/>
			<referrer name="pc_alias_nowosci"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="alias">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:PC_SetFlags" syntax="PC_SetFlags(cmd[], flags)">
			<attribute name="native"/>
			<referrer name="pc_flags_walizka"/>
			<referrer name="pc_flags_bomba"/>
			<referrer name="pc_flags_interiory"/>
			<referrer name="pc_flags_pedofil"/>
			<referrer name="pc_flags_spec"/>
			<referrer name="pc_flags_raporty"/>
			<referrer name="pc_flags_addvehicle"/>
			<referrer name="pc_flags_tpadd"/>
			<referrer name="pc_flags_tplist"/>
			<referrer name="pc_flags_bcreator"/>
			<referrer name="pc_flags_rccreator"/>
			<referrer name="pc_flags_wgc"/>
			<referrer name="pc_flags_evcreate"/>
			<referrer name="pc_flags_banlist"/>
			<referrer name="pc_flags_apanel"/>
			<referrer name="pc_flags_kick"/>
			<referrer name="pc_flags_mute"/>
			<referrer name="pc_flags_unmute"/>
			<referrer name="pc_flags_tt"/>
			<referrer name="pc_flags_th"/>
			<referrer name="pc_flags_ip"/>
			<referrer name="pc_flags_warn"/>
			<referrer name="pc_flags_unwarn"/>
			<referrer name="pc_flags_jail"/>
			<referrer name="pc_flags_unjail"/>
			<referrer name="pc_flags_dajmoney"/>
			<referrer name="pc_flags_cls"/>
			<referrer name="pc_flags_jetpack"/>
			<referrer name="pc_flags_ann"/>
			<referrer name="pc_flags_ban"/>
			<referrer name="pc_flags_offban"/>
			<referrer name="pc_flags_god"/>
			<referrer name="pc_flags_checkban"/>
			<referrer name="pc_flags_getuid"/>
			<referrer name="pc_flags_setvip"/>
			<referrer name="pc_flags_setrank"/>
			<referrer name="pc_flags_tpxyz"/>
			<referrer name="pc_flags_csound"/>
			<referrer name="pc_flags_acmd"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="flags">
			</param>
		</member>
		<member name="M:PHY_ApplyQuaternionsRotation" syntax="PHY_ApplyQuaternionsRotation(objectid, speed, moveangle)">
			<stacksize value="28"/>
			<referrer name="PHY_CoreTimer"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="PHY_GetQuatProduct"/>
			<dependency name="PHY_GetQuaternionAngles"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_QW"/>
			<dependency name="PHY_QX"/>
			<dependency name="PHY_QY"/>
			<dependency name="PHY_QZ"/>
			<dependency name="PHY_QuatFromAxisAngle"/>
			<dependency name="PHY_Size"/>
			<dependency name="PHY_vectorcrossp"/>
			<dependency name="SetObjectRot"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="objectid">
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="moveangle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_ApplyRotation" syntax="PHY_ApplyRotation(objectid, speed, moveangle)">
			<stacksize value="9"/>
			<referrer name="PHY_CoreTimer"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetObjectRot"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Size"/>
			<dependency name="SetObjectRot"/>
			<param name="objectid">
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="moveangle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_CoreTimer" syntax="PHY_CoreTimer()">
			<attribute name="public"/>
			<stacksize value="46"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator!=(Float:,_:)"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="FALSE"/>
			<dependency name="GetObjectPos"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@ITER_Cylinder"/>
			<dependency name="Iter_Single@ITER_Object"/>
			<dependency name="Iter_Single@ITER_Wall"/>
			<dependency name="Iterator@ITER_Cylinder"/>
			<dependency name="Iterator@ITER_Object"/>
			<dependency name="Iterator@ITER_Wall"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PHY_ANG"/>
			<dependency name="PHY_AX"/>
			<dependency name="PHY_AY"/>
			<dependency name="PHY_AZ"/>
			<dependency name="PHY_AirResistance"/>
			<dependency name="PHY_ApplyQuaternionsRotation"/>
			<dependency name="PHY_ApplyRotation"/>
			<dependency name="PHY_BounceConst"/>
			<dependency name="PHY_BounceConst"/>
			<dependency name="PHY_BoundConst"/>
			<dependency name="PHY_Created"/>
			<dependency name="PHY_Created"/>
			<dependency name="PHY_Cylinder"/>
			<dependency name="PHY_Friction"/>
			<dependency name="PHY_Gravity"/>
			<dependency name="PHY_HighZBound"/>
			<dependency name="PHY_LowZBound"/>
			<dependency name="PHY_Mass"/>
			<dependency name="PHY_OBJECT_GHOST_CYLINDERS"/>
			<dependency name="PHY_OBJECT_GHOST_OBJECTS"/>
			<dependency name="PHY_OBJECT_GHOST_WALLS"/>
			<dependency name="PHY_OBJECT_MODE"/>
			<dependency name="PHY_OBJECT_PLAYER_COLLISIONS"/>
			<dependency name="PHY_OBJECT_ROLL"/>
			<dependency name="PHY_OBJECT_ROLLING_MODE"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Player"/>
			<dependency name="PHY_PlayerConst"/>
			<dependency name="PHY_PlayerDist"/>
			<dependency name="PHY_PlayerHighZ"/>
			<dependency name="PHY_PlayerLowZ"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_Size"/>
			<dependency name="PHY_Size"/>
			<dependency name="PHY_VX"/>
			<dependency name="PHY_VY"/>
			<dependency name="PHY_VZ"/>
			<dependency name="PHY_Wall"/>
			<dependency name="PHY_Wall"/>
			<dependency name="PHY_World"/>
			<dependency name="PHY_World"/>
			<dependency name="PHY_World"/>
			<dependency name="PHY_World"/>
			<dependency name="PHY_X"/>
			<dependency name="PHY_X1"/>
			<dependency name="PHY_X2"/>
			<dependency name="PHY_Y"/>
			<dependency name="PHY_Y1"/>
			<dependency name="PHY_Y2"/>
			<dependency name="PHY_Z1"/>
			<dependency name="PHY_Z1"/>
			<dependency name="PHY_Z2"/>
			<dependency name="PHY_Z2"/>
			<dependency name="SetObjectPos"/>
			<dependency name="atan2"/>
			<dependency name="check_segment_intersection"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<dependency name="floatsqroot"/>
			<dependency name="projectVonU"/>
		</member>
		<member name="M:PHY_CreateArea" syntax="PHY_CreateArea(minX, minY, maxX, maxY, constant, low, high)">
			<stacksize value="10"/>
			<dependency name="PHY_CreateWall"/>
			<param name="minX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="constant">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="low">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="high">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_CreateCylinder" syntax="PHY_CreateCylinder(x, y, size, constant, low, high)">
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@ITER_Cylinder"/>
			<dependency name="Iterator@ITER_Cylinder"/>
			<dependency name="PHY_BounceConst"/>
			<dependency name="PHY_Created"/>
			<dependency name="PHY_Cylinder"/>
			<dependency name="PHY_Cylinder"/>
			<dependency name="PHY_Size"/>
			<dependency name="PHY_World"/>
			<dependency name="PHY_X"/>
			<dependency name="PHY_Y"/>
			<dependency name="PHY_Z1"/>
			<dependency name="PHY_Z2"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="constant">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="low">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="high">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_CreateWall" syntax="PHY_CreateWall(x1, y1, x2, y2, constant, low, high)">
			<stacksize value="8"/>
			<referrer name="PHY_CreateArea"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@ITER_Wall"/>
			<dependency name="Iterator@ITER_Wall"/>
			<dependency name="PHY_ANG"/>
			<dependency name="PHY_BounceConst"/>
			<dependency name="PHY_Created"/>
			<dependency name="PHY_Wall"/>
			<dependency name="PHY_Wall"/>
			<dependency name="PHY_World"/>
			<dependency name="PHY_X1"/>
			<dependency name="PHY_X2"/>
			<dependency name="PHY_Y1"/>
			<dependency name="PHY_Y2"/>
			<dependency name="PHY_Z1"/>
			<dependency name="PHY_Z2"/>
			<dependency name="atan2"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="constant">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="low">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="high">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_DeleteObject" syntax="PHY_DeleteObject(objectid)">
			<stacksize value="1"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:PHY_DestroyCylinder" syntax="PHY_DestroyCylinder(cylinderid)">
			<stacksize value="1"/>
			<dependency name="PHY_Created"/>
			<dependency name="PHY_Cylinder"/>
			<dependency name="PHY_Cylinder"/>
			<param name="cylinderid">
			</param>
		</member>
		<member name="M:PHY_DestroyWall" syntax="PHY_DestroyWall(wallid)">
			<stacksize value="1"/>
			<dependency name="PHY_Created"/>
			<dependency name="PHY_Wall"/>
			<dependency name="PHY_Wall"/>
			<param name="wallid">
			</param>
		</member>
		<member name="M:PHY_GetObjectAcceleration" syntax="PHY_GetObjectAcceleration(objectid, &amp;ax, &amp;ay, &amp;az)">
			<stacksize value="1"/>
			<dependency name="PHY_AX"/>
			<dependency name="PHY_AY"/>
			<dependency name="PHY_AZ"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<param name="objectid">
			</param>
			<param name="ax">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ay">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="az">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PHY_GetObjectMoveAngle" syntax="PHY_GetObjectMoveAngle(objectid, &amp;moveangle)">
			<stacksize value="4"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_VX"/>
			<dependency name="PHY_VY"/>
			<dependency name="atan2"/>
			<param name="objectid">
			</param>
			<param name="moveangle">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PHY_GetObjectSpeed" syntax="PHY_GetObjectSpeed(objectid, &amp;speed, _3D)">
			<stacksize value="3"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_VX"/>
			<dependency name="PHY_VY"/>
			<dependency name="PHY_VZ"/>
			<dependency name="floatsqroot"/>
			<param name="objectid">
			</param>
			<param name="speed">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="_3D">
			</param>
		</member>
		<member name="M:PHY_GetObjectVelocity" syntax="PHY_GetObjectVelocity(objectid, &amp;vx, &amp;vy, &amp;vz)">
			<stacksize value="1"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_VX"/>
			<dependency name="PHY_VY"/>
			<dependency name="PHY_VZ"/>
			<param name="objectid">
			</param>
			<param name="vx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PHY_GetObjectWorld" syntax="PHY_GetObjectWorld(objectid)">
			<stacksize value="2"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_World"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:PHY_GetQuatProduct" syntax="PHY_GetQuatProduct(q1[], q2[], q3[])">
			<stacksize value="5"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="q1">
				<paraminfo>Float [4] </paraminfo>
			</param>
			<param name="q2">
				<paraminfo>Float [4] </paraminfo>
			</param>
			<param name="q3">
				<paraminfo>Float [4] </paraminfo>
			</param>
		</member>
		<member name="M:PHY_GetQuaternionAngles" syntax="PHY_GetQuaternionAngles(w, x, y, z, &amp;xa, &amp;ya, &amp;za)">
			<stacksize value="6"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<dependency name="operator-(_:,Float:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="PHY_asin_limit"/>
			<dependency name="PHY_atan2_limit"/>
			<param name="w">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xa">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ya">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="za">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PHY_GetRotationQuaternion" syntax="PHY_GetRotationQuaternion(x, y, z, &amp;qw, &amp;qx, &amp;qy, &amp;qz)">
			<stacksize value="10"/>
			<referrer name="PHY_RollObject"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qw">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PHY_InitObject" syntax="PHY_InitObject(objectid, modelid, mass, size, mode)">
			<stacksize value="10"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GetColSphereRadius"/>
			<dependency name="GetObjectPos"/>
			<dependency name="IsValidObject"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ITER_Object"/>
			<dependency name="Iterator@ITER_Object"/>
			<dependency name="PHY_BoundConst"/>
			<dependency name="PHY_Gravity"/>
			<dependency name="PHY_HighZBound"/>
			<dependency name="PHY_LowZBound"/>
			<dependency name="PHY_Mass"/>
			<dependency name="PHY_OBJECT_MODE"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_Size"/>
			<dependency name="PHY_VX"/>
			<dependency name="PHY_VY"/>
			<dependency name="PHY_VZ"/>
			<dependency name="PHY_World"/>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="mass">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
			</param>
		</member>
		<member name="M:PHY_OnGameModeInit" syntax="PHY_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Indirect_Init"/>
			<library>indirection</library>
		</member>
		<member name="M:PHY_OnObjectCollideWithCylinder" syntax="PHY_OnObjectCollideWithCylinder(objectid, cylinderid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
			<param name="cylinderid">
			</param>
		</member>
		<member name="M:PHY_OnObjectCollideWithObject" syntax="PHY_OnObjectCollideWithObject(object1, object2)">
			<stacksize value="1"/>
			<param name="object1">
			</param>
			<param name="object2">
			</param>
		</member>
		<member name="M:PHY_OnObjectCollideWithPlayer" syntax="PHY_OnObjectCollideWithPlayer(objectid, playerid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:PHY_OnObjectCollideWithSAWorld" syntax="PHY_OnObjectCollideWithSAWorld(objectid, cx, cy, cz)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
			<param name="cx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_OnObjectCollideWithWall" syntax="PHY_OnObjectCollideWithWall(objectid, wallid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
			<param name="wallid">
			</param>
		</member>
		<member name="M:PHY_OnObjectCollideWithZBound" syntax="PHY_OnObjectCollideWithZBound(objectid, lowhigh)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
			<param name="lowhigh">
			</param>
		</member>
		<member name="M:PHY_OnObjectUpdate" syntax="PHY_OnObjectUpdate(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:PHY_OnPlayerConnect" syntax="PHY_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="DEBUG_CODE_2"/>
			<dependency name="DEBUG_CODE_3"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iterator@Player"/>
			<dependency name="SetTimerEx"/>
			<dependency name="acACAllow"/>
			<dependency name="acAnim"/>
			<dependency name="acCheatCount"/>
			<dependency name="acClassRes"/>
			<dependency name="acDead"/>
			<dependency name="acDeathRes"/>
			<dependency name="acDialog"/>
			<dependency name="acDropJpX"/>
			<dependency name="acDropJpY"/>
			<dependency name="acDropJpZ"/>
			<dependency name="acFloodCount"/>
			<dependency name="acForceClass"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acHoldWeapon"/>
			<dependency name="acInt"/>
			<dependency name="acIntEnterExits"/>
			<dependency name="acIp"/>
			<dependency name="acKickVeh"/>
			<dependency name="acKicked"/>
			<dependency name="acMoney"/>
			<dependency name="acNOPAllow"/>
			<dependency name="acNextDialog"/>
			<dependency name="acOnline"/>
			<dependency name="acSet"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acSpawnRes"/>
			<dependency name="acSpec"/>
			<dependency name="acStuntBonus"/>
			<dependency name="acTimerID"/>
			<dependency name="acTimerTick"/>
			<dependency name="acVeh"/>
			<dependency name="ac_ACAllow"/>
			<dependency name="ac_GetPlayerVersion"/>
			<dependency name="ac_IntEnterExits"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_NOPAllow"/>
			<dependency name="ac_StuntBonus"/>
			<dependency name="false"/>
			<dependency name="memcpy"/>
			<dependency name="printf"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:PHY_QuatFromAxisAngle" syntax="PHY_QuatFromAxisAngle(x, y, z, angle, &amp;q_w, &amp;q_x, &amp;q_y, &amp;q_z)">
			<stacksize value="9"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="PHY_QuatNormalize"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<dependency name="floatsqroot"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="q_w">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="q_x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="q_y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="q_z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PHY_QuatNormalize" syntax="PHY_QuatNormalize(&amp;q_w, &amp;q_x, &amp;q_y, &amp;q_z)">
			<stacksize value="4"/>
			<referrer name="PHY_QuatFromAxisAngle"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="floatsqroot"/>
			<param name="q_w">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="q_x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="q_y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="q_z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PHY_RollObject" syntax="PHY_RollObject(objectid, toggle, rollingmode)">
			<stacksize value="13"/>
			<dependency name="GetObjectRot"/>
			<dependency name="PHY_GetRotationQuaternion"/>
			<dependency name="PHY_OBJECT_ROLL"/>
			<dependency name="PHY_OBJECT_ROLLING_MODE"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_QW"/>
			<dependency name="PHY_QX"/>
			<dependency name="PHY_QY"/>
			<dependency name="PHY_QZ"/>
			<param name="objectid">
			</param>
			<param name="toggle">
			</param>
			<param name="rollingmode">
			</param>
		</member>
		<member name="M:PHY_SetCylinderWorld" syntax="PHY_SetCylinderWorld(cylinderid, world)">
			<stacksize value="1"/>
			<dependency name="PHY_Created"/>
			<dependency name="PHY_Cylinder"/>
			<dependency name="PHY_Cylinder"/>
			<dependency name="PHY_World"/>
			<param name="cylinderid">
			</param>
			<param name="world">
			</param>
		</member>
		<member name="M:PHY_SetObjectAcceleration" syntax="PHY_SetObjectAcceleration(objectid, ax, ay, az)">
			<stacksize value="1"/>
			<dependency name="PHY_AX"/>
			<dependency name="PHY_AY"/>
			<dependency name="PHY_AZ"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<param name="objectid">
			</param>
			<param name="ax">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ay">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="az">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_SetObjectAirResistance" syntax="PHY_SetObjectAirResistance(objectid, resistance)">
			<stacksize value="1"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="PHY_AirResistance"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<param name="objectid">
			</param>
			<param name="resistance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_SetObjectFriction" syntax="PHY_SetObjectFriction(objectid, friction)">
			<stacksize value="1"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="PHY_Friction"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<param name="objectid">
			</param>
			<param name="friction">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_SetObjectGravity" syntax="PHY_SetObjectGravity(objectid, gravity)">
			<stacksize value="1"/>
			<dependency name="PHY_Gravity"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<param name="objectid">
			</param>
			<param name="gravity">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_SetObjectVelocity" syntax="PHY_SetObjectVelocity(objectid, vx, vy, vz)">
			<stacksize value="1"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_VX"/>
			<dependency name="PHY_VY"/>
			<dependency name="PHY_VZ"/>
			<param name="objectid">
			</param>
			<param name="vx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_SetObjectWorld" syntax="PHY_SetObjectWorld(objectid, world)">
			<stacksize value="1"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_World"/>
			<param name="objectid">
			</param>
			<param name="world">
			</param>
		</member>
		<member name="M:PHY_SetObjectZBound" syntax="PHY_SetObjectZBound(objectid, low, high, constant)">
			<stacksize value="1"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="PHY_BoundConst"/>
			<dependency name="PHY_HighZBound"/>
			<dependency name="PHY_LowZBound"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<param name="objectid">
			</param>
			<param name="low">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="high">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="constant">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_SetPlayerWorld" syntax="PHY_SetPlayerWorld(playerid, world)">
			<stacksize value="1"/>
			<dependency name="PHY_Player"/>
			<dependency name="PHY_Player"/>
			<dependency name="PHY_World"/>
			<param name="playerid">
			</param>
			<param name="world">
			</param>
		</member>
		<member name="M:PHY_SetWallWorld" syntax="PHY_SetWallWorld(wallid, world)">
			<stacksize value="1"/>
			<dependency name="PHY_Created"/>
			<dependency name="PHY_Wall"/>
			<dependency name="PHY_Wall"/>
			<dependency name="PHY_World"/>
			<param name="wallid">
			</param>
			<param name="world">
			</param>
		</member>
		<member name="M:PHY_ToggleObjectPlayerColls" syntax="PHY_ToggleObjectPlayerColls(objectid, toggle, constant, distoffset, zoffsetlow, zoffsethigh)">
			<stacksize value="1"/>
			<dependency name="PHY_OBJECT_PLAYER_COLLISIONS"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_PlayerConst"/>
			<dependency name="PHY_PlayerDist"/>
			<dependency name="PHY_PlayerHighZ"/>
			<dependency name="PHY_PlayerLowZ"/>
			<dependency name="PHY_Properties"/>
			<param name="objectid">
			</param>
			<param name="toggle">
			</param>
			<param name="constant">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="distoffset">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zoffsetlow">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zoffsethigh">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_UpdateBounds" syntax="PHY_UpdateBounds()">
			<stacksize value="1"/>
			<referrer name="PHY_UseColAndreas"/>
		</member>
		<member name="M:PHY_UseColAndreas" syntax="PHY_UseColAndreas(objectid, mode)">
			<stacksize value="10"/>
			<dependency name="GetObjectPos"/>
			<dependency name="PHY_OBJECT_COLANDREAS_BOUNDS"/>
			<dependency name="PHY_OBJECT_COLANDREAS_COLLS"/>
			<dependency name="PHY_OBJECT_USED"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Object"/>
			<dependency name="PHY_Properties"/>
			<dependency name="PHY_UpdateBounds"/>
			<param name="objectid">
			</param>
			<param name="mode">
			</param>
		</member>
		<member name="M:PHY_asin_limit" syntax="PHY_asin_limit(value)">
			<tagname value="Float"/>
			<stacksize value="3"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="asin"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_atan2_limit" syntax="PHY_atan2_limit(x, y)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="PHY_GetQuaternionAngles"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="atan2"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PHY_vectorcrossp" syntax="PHY_vectorcrossp(v1x, v1y, v1z, v2x, v2y, v2z, &amp;c1, &amp;c2, &amp;c3)">
			<stacksize value="1"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="v1x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v1y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v1z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="c1">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="c2">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="c3">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PP_MRET" syntax="PP_MRET()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:PP_main" syntax="PP_main()">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="SendRconCommand"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="format"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strx"/>
			<dependency name="tdDate"/>
		</member>
		<member name="M:PR_Init" syntax="PR_Init()">
			<attribute name="native"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
		</member>
		<member name="M:PR_RegHandler" syntax="PR_RegHandler(eventid, publicname[], type)">
			<attribute name="native"/>
			<referrer name="pr_rip_WC_PLAYER_SYNC"/>
			<referrer name="pr_rip_WC_VEHICLE_SYNC"/>
			<referrer name="pr_rip_WC_PASSENGER_SYNC"/>
			<referrer name="pr_rip_WC_AIM_SYNC"/>
			<referrer name="pr_rip_209"/>
			<referrer name="pr_rir_103"/>
			<referrer name="pr_rip_211"/>
			<param name="eventid">
			</param>
			<param name="publicname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="type">
				<paraminfo>PR_EventType </paraminfo>
			</param>
		</member>
		<member name="M:PR_SendPacket" syntax="PR_SendPacket(bs, playerid, priority, reliability, orderingchannel)">
			<attribute name="native"/>
			<referrer name="PR_SendPacketToPlayerStream"/>
			<referrer name="PR_SendPacketToVehicleStream"/>
			<referrer name="SendLastSyncPacket"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="priority">
				<paraminfo>PR_PacketPriority </paraminfo>
			</param>
			<param name="reliability">
				<paraminfo>PR_PacketReliability </paraminfo>
			</param>
			<param name="orderingchannel">
			</param>
		</member>
		<member name="M:PR_SendPacketToPlayerStream" syntax="PR_SendPacketToPlayerStream(bs, playerid, priority, reliability, orderingchannel)">
			<stacksize value="8"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PR_SendPacket"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="priority">
				<paraminfo>PR_PacketPriority </paraminfo>
			</param>
			<param name="reliability">
				<paraminfo>PR_PacketReliability </paraminfo>
			</param>
			<param name="orderingchannel">
			</param>
		</member>
		<member name="M:PR_SendPacketToVehicleStream" syntax="PR_SendPacketToVehicleStream(bs, vehicleid, excludedplayerid, priority, reliability, orderingchannel)">
			<stacksize value="8"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PR_SendPacket"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="vehicleid">
			</param>
			<param name="excludedplayerid">
			</param>
			<param name="priority">
				<paraminfo>PR_PacketPriority </paraminfo>
			</param>
			<param name="reliability">
				<paraminfo>PR_PacketReliability </paraminfo>
			</param>
			<param name="orderingchannel">
			</param>
		</member>
		<member name="M:PR_SendRPC" syntax="PR_SendRPC(bs, playerid, rpcid, priority, reliability, orderingchannel)">
			<attribute name="native"/>
			<referrer name="PR_SendRPCToPlayerStream"/>
			<referrer name="PR_SendRPCToVehicleStream"/>
			<referrer name="SetVehicleFakePosForPlayer"/>
			<referrer name="SetVehicleFakeZAngleForPlayer"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<referrer name="ClearAnimationsForPlayer"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="rpcid">
			</param>
			<param name="priority">
				<paraminfo>PR_PacketPriority </paraminfo>
			</param>
			<param name="reliability">
				<paraminfo>PR_PacketReliability </paraminfo>
			</param>
			<param name="orderingchannel">
			</param>
		</member>
		<member name="M:PR_SendRPCToPlayerStream" syntax="PR_SendRPCToPlayerStream(bs, playerid, rpcid, priority, reliability, orderingchannel)">
			<stacksize value="9"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PR_SendRPC"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="rpcid">
			</param>
			<param name="priority">
				<paraminfo>PR_PacketPriority </paraminfo>
			</param>
			<param name="reliability">
				<paraminfo>PR_PacketReliability </paraminfo>
			</param>
			<param name="orderingchannel">
			</param>
		</member>
		<member name="M:PR_SendRPCToVehicleStream" syntax="PR_SendRPCToVehicleStream(bs, vehicleid, rpcid, excludedplayerid, priority, reliability, orderingchannel)">
			<stacksize value="9"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PR_SendRPC"/>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
			<param name="vehicleid">
			</param>
			<param name="rpcid">
			</param>
			<param name="excludedplayerid">
			</param>
			<param name="priority">
				<paraminfo>PR_PacketPriority </paraminfo>
			</param>
			<param name="reliability">
				<paraminfo>PR_PacketReliability </paraminfo>
			</param>
			<param name="orderingchannel">
			</param>
		</member>
		<member name="M:PawnCmd_OnGameModeInit" syntax="PawnCmd_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="2"/>
			<dependency name="PR_Init"/>
		</member>
		<member name="M:PawnRakNet_OnGameModeInit" syntax="PawnRakNet_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CFG_OPENING_ERROR"/>
			<dependency name="GetConsoleVarAsBool"/>
			<dependency name="GetConsoleVarAsInt"/>
			<dependency name="GetConsoleVarAsString"/>
			<dependency name="LOADED_MSG_1"/>
			<dependency name="LOADED_MSG_2"/>
			<dependency name="LOADED_MSG_3"/>
			<dependency name="SendRconCommand"/>
			<dependency name="VERSION_WARNING"/>
			<dependency name="ac_ACAllow"/>
			<dependency name="ac_LagCompMode"/>
			<dependency name="ac_LoadCfg"/>
			<dependency name="ac_LoadNOPCfg"/>
			<dependency name="ac_RconEnable"/>
			<dependency name="false"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
		</member>
		<member name="M:PlayAudioStreamForPlayer" syntax="PlayAudioStreamForPlayer(playerid, url[], posX, posY, posZ, distance, usepos)">
			<attribute name="native"/>
			<referrer name="pc_cmd_radio"/>
			<param name="playerid">
				The ID of the player to play the audio for
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
				The url to play.  Valid formats are mp3 and ogg/vorbis.  A link to a .pls (playlist)  file will play that playlist
			</param>
			<param name="posX">
				<paraminfo>Float </paraminfo>
				The x position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="posY">
				<paraminfo>Float </paraminfo>
				The y position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="posZ">
				<paraminfo>Float </paraminfo>
				The z position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
				The distance over which the audio will be heard.  Has no effect unless usepos  is set to 1 (optional=<b><c>50.0</c></b>)
			</param>
			<param name="usepos">
				<paraminfo>bool </paraminfo>
				Use the positions and distance specified. (optional=<b><c>0</c></b>)
			</param>
			<library>a_players</library>  <summary>Play an 'audio stream' for a player.  Normal audio files also work (e.g.  MP3).</summary>                <seealso name="StopAudioStreamForPlayer" />  <seealso name="PlayerPlaySound" />  <remarks>This function was added in <b>SA-MP 0.3d</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:PlayerDeath" syntax="PlayerDeath(playerid, animlib[], animname[], anim_lock, respawn_time, freeze_sync, anim_freeze)">
			<stacksize value="13"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="InflictDamage"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="ClearAnimations"/>
			<dependency name="FreezeSyncPacket"/>
			<dependency name="GetPlayerSpecialAction"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerInCheckpoint"/>
			<dependency name="IsPlayerInRaceCheckpoint"/>
			<dependency name="KillTimer"/>
			<dependency name="OnPlayerPrepareDeath"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="SPECIAL_ACTION_DUCK"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="SetTimerEx"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="WC_OnPlayerLeaveCheckpoint"/>
			<dependency name="WC_OnPlayerLeaveRaceCheckpoint"/>
			<dependency name="acc_SetPlayerSpecialAction"/>
			<dependency name="acc_SetPlayerVelocity"/>
			<dependency name="false"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_HealthBarForeground"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastDeathTick"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_RespawnTime"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="anim_lock">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="respawn_time">
			</param>
			<param name="freeze_sync">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="anim_freeze">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:PlayerPlaySound" syntax="PlayerPlaySound(playerid, soundid, x, y, z)">
			<attribute name="native"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerDamageDone"/>
			<referrer name="StartQuiz"/>
			<referrer name="getMentioned"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="DrwalTree"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="WarnPlayer"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_tune"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="pc_cmd_csound"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="SecondTimer"/>
			<referrer name="giveMoney"/>
			<param name="playerid">
				The ID of the player for whom to play the sound
			</param>
			<param name="soundid">
				The sound to play
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x coordinate for the sound to play at. (0 for no position)
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y coordinate for the sound to play at. (0 for no position)
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				z coordinate for the sound to play at. (0 for no position)
			</param>
			<library>a_players</library>  <summary>Plays the specified sound for a player.</summary>            <seealso name="PlayCrimeReportForPlayer" />  <seealso name="PlayAudioStreamForPlayer" />  <seealso name="StopAudioStreamForPlayer" />  <remarks>Only use the coordinates if you want the sound to be played at a certain position.  Set  coordinates all to 0 to just play the sound.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:PlayerSpectatePlayer" syntax="PlayerSpectatePlayer(playerid, targetid, mode)">
			<attribute name="native"/>
			<referrer name="WC_PlayerSpectatePlayer"/>
			<param name="playerid">
				The ID of the player that will spectate
			</param>
			<param name="targetid">
				The ID of the player that should be spectated
			</param>
			<param name="mode">
				The mode to spectate with (optional=<b><c>SPECTATE_MODE_NORMAL</c></b>)
			</param>
			<library>a_players</library>  <summary>Makes a player spectate (watch) another player.</summary>        <seealso name="PlayerSpectateVehicle" />  <seealso name="TogglePlayerSpectating" />  <remarks>Order is CRITICAL! Ensure that you use <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>  before <a href="#PlayerSpectatePlayer">PlayerSpectatePlayer</a>. </remarks>  <remarks>playerid and targetid's virtual world and interior must be the same for this function to  work properly. </remarks>  <remarks>  <b>Spectate modes:</b><br />  <ul>  <li><b><c>SPECTATE_MODE_NORMAL</c></b> - normal spectate mode (third person point of view).  Camera can not be changed.</li>  <li><b><c>SPECTATE_MODE_FIXED </c></b> - use SetPlayerCameraPos after this to position the player's  camera, and it will track the player/vehicle set with PlayerSpectatePlayer/PlayerSpectateVehicle.</li>  <li><b><c>SPECTATE_MODE_SIDE</c></b> - the camera will be attached to the side of the player/vehicle  (like when you're in first-person camera on a bike and you do a wheelie).</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  One of the players specified does not exist.  </returns> 
		</member>
		<member name="M:PlayerSpectateVehicle" syntax="PlayerSpectateVehicle(playerid, targetid, mode)">
			<attribute name="native"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<param name="playerid">
				The ID of the player who should spectate a vehicle
			</param>
			<param name="targetid">
				The ID of the vehicle the player should spectate
			</param>
			<param name="mode">
				The spectate mode.  Can generally be left blank as it defaults to 'normal'
			</param>
			<library>a_players</library>  <summary>Sets a player to spectate another vehicle.  Their camera will be attached to the vehicle  as if they are driving it.</summary>        <seealso name="PlayerSpectatePlayer" />  <seealso name="TogglePlayerSpectating" />  <remarks>Order is CRITICAL! Ensure that you use <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>  before <a href="#PlayerSpectatePlayer">PlayerSpectatePlayer</a>. </remarks>  <remarks>playerid and targetid have to be in the same interior for this function to work properly.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Note that success is reported if the player  is not in spectator mode (<a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>), but nothing  will happen. <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a> MUST be used first.<br  />  <b><c>0</c></b>: The function failed to execute.  The player, vehicle, or both don't exist.  </returns> 
		</member>
		<member name="M:PlayerTextDrawAlignment" syntax="PlayerTextDrawAlignment(playerid, text, alignment)">
			<attribute name="native"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawAlignment"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the alignment of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the alignment of
			</param>
			<param name="alignment">
				<b><c>1</c></b>-left <b><c>2</c></b>-centered <b><c>3</c></b>-right
			</param>
			<library>a_players</library>  <summary>Set the text alignment of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks>  <remarks>For alignment <b><c>2</c></b> (center) the x and y values of TextSize need to be swapped,  see notes at <a href="#PlayerTextDrawTextSize">PlayerTextDrawTextSize</a>. </remarks> 
		</member>
		<member name="M:PlayerTextDrawBackgroundColor" syntax="PlayerTextDrawBackgroundColor(playerid, text, colour)">
			<attribute name="native"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawBackgroundColo"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the background colour of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the background colour of
			</param>
			<param name="colour">
				The colour that the textdraw should be set to
			</param>
			<library>a_players</library>  <summary>Adjust the background colour of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks>  <remarks>If <a href="#PlayerTextDrawSetOutline">PlayerTextDrawSetOutline</a> is used with size &gt;  0, the outline colour will match the colour used in <a href="#PlayerTextDrawBackgroundColor">PlayerTextDrawBackgroundColor</a>.  Changing the value of colour seems to alter the colour used in <a href="#PlayerTextDrawColor">PlayerTextDrawColor</a></remarks> 
		</member>
		<member name="M:PlayerTextDrawBoxColor" syntax="PlayerTextDrawBoxColor(playerid, text, colour)">
			<attribute name="native"/>
			<referrer name="SetPlayerProgressBarColour"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawBoxColor"/>
			<param name="playerid">
				The ID of the player whose textdraw to set the box colour of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player textdraw to set the box colour of
			</param>
			<param name="colour">
				The colour to set.  Alpha (transparency) is supported
			</param>
			<library>a_players</library>  <summary>Sets the colour of a textdraw's box (<a href="#PlayerTextDrawUseBox">PlayerTextDrawUseBox</a>).</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:PlayerTextDrawColor" syntax="PlayerTextDrawColor(playerid, text, colour)">
			<attribute name="native"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawColor"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player who's textdraw to set the colour of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The TextDraw to change
			</param>
			<param name="colour">
				The colour in hexadecimal format
			</param>
			<library>a_players</library>  <summary>Sets the text colour of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks>  <remarks>You can also use Gametext colours in textdraws.</remarks>  <remarks>The textdraw must be re-shown to the player in order to update the colour.</remarks> 
		</member>
		<member name="M:PlayerTextDrawDestroy" syntax="PlayerTextDrawDestroy(playerid, text)">
			<attribute name="native"/>
			<referrer name="DestroyPlayerProgressBar"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="DestroyModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawDestroy"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player who's player-textdraw to destroy
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to destroy
			</param>
			<library>a_players</library>  <summary>Destroy a player-textdraw.</summary>      <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:PlayerTextDrawFont" syntax="PlayerTextDrawFont(playerid, text, font)">
			<attribute name="native"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawFont"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to change the font of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to change the font of
			</param>
			<param name="font">
				There are four font styles.  A font value greater than <b><c>3</c></b> does not  display, and anything greater than <b><c>16</c></b> crashes the client.  See  <a href="http://wiki.sa-mp.com/wiki/PlayerTextDrawFont">http://wiki.sa-mp.com/wiki/PlayerTextDrawFont</a>
			</param>
			<library>a_players</library>  <summary>Change the font of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:PlayerTextDrawHide" syntax="PlayerTextDrawHide(playerid, text)">
			<attribute name="native"/>
			<referrer name="HidePlayerProgressBar"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="WC_PlayerTextDrawHide"/>
			<referrer name="SetHealthBarVisible"/>
			<referrer name="PlayerDeath"/>
			<referrer name="DamageFeedUpdateText"/>
			<param name="playerid">
				The ID of the player to hide the textdraw for
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to hide
			</param>
			<library>a_players</library>  <summary>Hide a player-textdraw from the player it was created for.</summary>      <seealso name="PlayerTextDrawShow" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:PlayerTextDrawLetterSize" syntax="PlayerTextDrawLetterSize(playerid, text, width, height)">
			<attribute name="native"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawLetterSize"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the letter size of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to change the letter size of
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				Width of a char
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				Height of a char
			</param>
			<library>a_players</library>  <summary>Sets the width and height of the letters in a player-textdraw.</summary>          <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks>  <remarks>When using this function purely for the benefit of affecting the textdraw box, multiply  'y' by <b><c>0.135</c></b> to convert to <a href="#TextDrawTextSize">TextDrawTextSize</a>-like measurements</remarks>  <remarks>Fonts appear to look the best with an x to y ratio of <b><c>1</c></b> to <b><c>4</c></b>  (e.g.  if x is <b><c>0.5</c></b> then y should be <b><c>2</c></b>).</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetOutline" syntax="PlayerTextDrawSetOutline(playerid, text, size)">
			<attribute name="native"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawSetOutline"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the outline of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the outline of
			</param>
			<param name="size">
				The thickness of the outline
			</param>
			<library>a_players</library>  <summary>Set the outline of a player-textdraw.  The outline colour cannot be changed unless  <a href="#PlayerTextDrawBackgroundColor">PlayerTextDrawBackgroundColor</a>  is used.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetPreviewModel" syntax="PlayerTextDrawSetPreviewModel(playerid, text, modelIndex)">
			<attribute name="native"/>
			<referrer name="SetModelSelectionModelBox"/>
			<referrer name="WC_PlayerTextDrawSetPreviewMode"/>
			<param name="playerid">
				The PlayerTextDraw player ID
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The textdraw ID that will display the 3D preview
			</param>
			<param name="modelIndex">
				The GTA SA or SA:MP model ID to display
			</param>
			<library>a_players</library>  <summary>Sets a player textdraw 2D preview sprite of a specified model ID.</summary>        <seealso name="PlayerTextDrawSetPreviewRot" />  <seealso name="PlayerTextDrawSetPreviewVehCol" />  <seealso name="PlayerTextDrawFont" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks>This function was added in <b>SA-MP 0.3x</b> and will not work in earlier versions!</remarks>  <remarks>The textdraw MUST use the font type <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> in order  for this function to have effect.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  If an invalid model is passed 'success' is  reported, but the model will appear as a yellow/black question mark.<br />  <b><c>0</c></b>: The function failed to execute.  Player and/or textdraw do not exist.  </returns> 
		</member>
		<member name="M:PlayerTextDrawSetPreviewRot" syntax="PlayerTextDrawSetPreviewRot(playerid, text, rotX, rotY, rotZ, zoom)">
			<attribute name="native"/>
			<referrer name="SetModelSelectionModelBox"/>
			<referrer name="WC_PlayerTextDrawSetPreviewRot"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to change
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to change
			</param>
			<param name="rotX">
				<paraminfo>Float </paraminfo>
				The x rotation value
			</param>
			<param name="rotY">
				<paraminfo>Float </paraminfo>
				The y rotation value
			</param>
			<param name="rotZ">
				<paraminfo>Float </paraminfo>
				The z rotation value
			</param>
			<param name="zoom">
				<paraminfo>Float </paraminfo>
				The zoom value, smaller values make the camera closer and larger values make the  camera further away (optional=<b><c>1.0</c></b>)
			</param>
			<library>a_players</library>  <summary>Sets the rotation and zoom of a 3D model preview player-textdraw.</summary>              <seealso name="TextDrawSetPreviewRot" />  <seealso name="PlayerTextDrawSetPreviewModel" />  <seealso name="PlayerTextDrawSetPreviewVehCol" />  <seealso name="PlayerTextDrawFont" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks>This function was added in <b>SA-MP 0.3x</b> and will not work in earlier versions!</remarks>  <remarks>The textdraw MUST use the font type <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> and already  have a model set in order for this function to have effect.</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetPreviewVehCol" syntax="PlayerTextDrawSetPreviewVehCol(playerid, text, colour1, colour2)">
			<attribute name="native"/>
			<referrer name="SetModelSelectionModelBox"/>
			<referrer name="WC_PlayerTextDrawSetPreviewVehC"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to change
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player's player-textdraw to change
			</param>
			<param name="colour1">
				The <a href="http://wiki.sa-mp.com/wiki/Vehicle_Color_IDs">colour</a> to set  the vehicle's primary colour to
			</param>
			<param name="colour2">
				The <a href="http://wiki.sa-mp.com/wiki/Vehicle_Color_IDs">colour</a> to set  the vehicle's secondary colour to
			</param>
			<library>a_players</library>  <summary>Set the colour of a vehicle in a player-textdraw model preview (if a vehicle is shown).</summary>          <seealso name="PlayerTextDrawSetPreviewModel" />  <seealso name="PlayerTextDrawSetPreviewRot" />  <seealso name="PlayerTextDrawFont" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks>This function was added in <b>SA-MP 0.3x</b> and will not work in earlier versions!</remarks>  <remarks>The textdraw MUST use the font <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> and be showing  a vehicle in order for this function to have effect.</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetProportional" syntax="PlayerTextDrawSetProportional(playerid, text, set)">
			<attribute name="native"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawSetProportiona"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the proportionality of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the proportionality of
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable proportionality, <b><c>0</c></b> to disable
			</param>
			<library>a_players</library>  <summary>Appears to scale text spacing to a proportional ratio.  Useful when using  <a href="#PlayerTextDrawLetterSize">PlayerTextDrawLetterSize</a>  to ensure the text has even character spacing.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetSelectable" syntax="PlayerTextDrawSetSelectable(playerid, text, set)">
			<attribute name="native"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawSetSelectable"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the selectability of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the selectability of
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				Set the player-textdraw selectable (<b><c>1</c></b>) or non-selectable (<b><c>0</c></b>).  By default this is <b><c>0</c></b>
			</param>
			<library>a_players</library>  <summary>Toggles whether a player-textdraw can be selected or not.</summary>        <seealso name="SelectTextDraw" />  <seealso name="CancelSelectTextDraw" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks>  <remarks><a href="#PlayerTextDrawSetSelectable">PlayerTextDrawSetSelectable</a> MUST be used BEFORE  the textdraw is shown to the player.</remarks>  <remarks>Use <a href="#PlayerTextDrawTextSize">PlayerTextDrawTextSize</a> to define the clickable  area.</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetShadow" syntax="PlayerTextDrawSetShadow(playerid, text, size)">
			<attribute name="native"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawSetShadow"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to show
			</param>
			<param name="size">
				The size of the shadow. <b><c>0</c></b> will hide the shadow
			</param>
			<library>a_players</library>  <summary>Show a player-textdraw to the player it was created for.</summary>        <seealso name="PlayerTextDrawHide" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetString" syntax="PlayerTextDrawSetString(playerid, text, string[])">
			<attribute name="native"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="SetModelSelectionModelBox"/>
			<referrer name="WC_PlayerTextDrawSetString"/>
			<referrer name="DamageFeedUpdateText"/>
			<param name="playerid">
				The ID of the player who's textdraw string to set
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to change
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The new string for the TextDraw
			</param>
			<library>a_players</library>  <summary>Change the text of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks>  <remarks>There are limits to the length of textdraw strings! See <a href="http://wiki.sa-mp.com/wiki/Limits">Limits</a>  for more info.</remarks>  <remarks>You don't have to show the TextDraw again in order to apply the changes.</remarks> 
		</member>
		<member name="M:PlayerTextDrawShow" syntax="PlayerTextDrawShow(playerid, text)">
			<attribute name="native"/>
			<referrer name="ShowPlayerProgressBar"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionModelBox"/>
			<referrer name="WC_PlayerTextDrawShow"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdateText"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to show
			</param>
			<library>a_players</library>  <summary>Show a player-textdraw to the player it was created for.</summary>      <seealso name="PlayerTextDrawHide" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:PlayerTextDrawTextSize" syntax="PlayerTextDrawTextSize(playerid, text, width, height)">
			<attribute name="native"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawTextSize"/>
			<referrer name="UpdateHealthBar"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the size of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the size of
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				The size on the x axis (left/right) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				The size on the y axis (up/down) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>a_players</library>  <summary>Change the size of a player-textdraw (box if <a href="#PlayerTextDrawUseBox">PlayerTextDrawUseBox</a>  is enabled and/or clickable area for use with <a href="#PlayerTextDrawSetSelectable">PlayerTextDrawSetSelectable</a>).</summary>          <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks>  <remarks>  The x and y have different meanings with different PlayerTextDrawAlignment values:<br />  <ul>  <li><b><c>1</c></b> (left): they are the right-most corner of the box, absolute coordinates.</li>  <li><b><c>2</c></b> (center): they need to inverted (switch the two) and the x value is the overall  width of the box.</li>  <li><b><c>3</c></b> (right): the x and y are the coordinates of the left-most corner of the box  </li>  </ul>  </remarks>  <remarks>  Using font type <b><c>4</c></b> (sprite) and <b><c>5</c></b> (model preview) converts x and y of  this function from corner coordinates to WIDTH and HEIGHT (offsets).<br />  The TextDraw box starts <b><c>10.0</c></b> units up and <b><c>5.0</c></b> to the left as the origin  (<a href="#TextDrawCreate">TextDrawCreate</a> coordinate).<br />  This function defines the clickable area for use with <a href="#PlayerTextDrawSetSelectable">PlayerTextDrawSetSelectable</a>,  whether a box is shown or not.  </remarks> 
		</member>
		<member name="M:PlayerTextDrawUseBox" syntax="PlayerTextDrawUseBox(playerid, text, use)">
			<attribute name="native"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="CreateModelSelectionPlayerTDs"/>
			<referrer name="WC_PlayerTextDrawUseBox"/>
			<param name="playerid">
				The ID of the player whose textdraw to toggle the box of
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to toggle the box of
			</param>
			<param name="use">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to use a box or <b><c>0</c></b> to not use a box
			</param>
			<library>a_players</library>  <summary>Toggle the box on a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColor" />  <seealso name="PlayerTextDrawBoxColor" />  <seealso name="PlayerTextDrawBackgroundColor" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>This feature (player-textdraws) was added in <b>SA-MP 0.3e</b> and will not work in earlier  versions!</remarks> 
		</member>
		<member name="M:Polaczenie" syntax="Polaczenie(playerid)">
			<stacksize value="5"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_re"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_setrank"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Pop" syntax="Pop(&amp;arg)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<dependency name="true"/>
			<param name="arg">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:PremiumError" syntax="PremiumError(playerid)">
			<stacksize value="6"/>
			<referrer name="pc_cmd_vpozostalo"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="pc_cmd_ownrank"/>
			<dependency name="dialogBox"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:PrepareMining" syntax="PrepareMining(playerid, mineid)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="MinePickaxeLevel"/>
			<dependency name="MineStarted"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="math_random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="mineid">
			</param>
		</member>
		<member name="M:PrepareVehicleRespawn" syntax="PrepareVehicleRespawn()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="RespawnVehicles"/>
			<dependency name="false"/>
		</member>
		<member name="M:PrintAmxHeader" syntax="PrintAmxHeader()">
			<stacksize value="9"/>
			<referrer name="ScriptInit_Dump"/>
			<dependency name="AMX_HDR_AMX_VERSION"/>
			<dependency name="AMX_HDR_CIP"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_FILE_VERSION"/>
			<dependency name="AMX_HDR_FLAGS"/>
			<dependency name="AMX_HDR_HEA"/>
			<dependency name="AMX_HDR_LIBRARIES"/>
			<dependency name="AMX_HDR_MAGIC"/>
			<dependency name="AMX_HDR_NAMETABLE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="AMX_HDR_SIZE"/>
			<dependency name="AMX_HDR_STP"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="PrintAmxNameTable"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:PrintAmxNameTable" syntax="PrintAmxNameTable(start, end, decode, dereference)">
			<stacksize value="73"/>
			<referrer name="PrintAmxHeader"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="NtCopy"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<dependency name="printf"/>
			<param name="start">
			</param>
			<param name="end">
			</param>
			<param name="decode">
			</param>
			<param name="dereference">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:PrintArg" syntax="PrintArg(n)">
			<stacksize value="1"/>
			<dependency name="print"/>
			<param name="n">
				The numeric parameter position to print.
			</param>
			  <returns>  Prints a string passed as a vararg to the calling function.  </returns> 
		</member>
		<member name="M:PrintBacktrace" syntax="PrintBacktrace()">
			<attribute name="native"/>
			<referrer name="_PrintBufferAmxBacktrace"/>
		</member>
		<member name="M:PrivCarTimer" syntax="PrivCarTimer(playerid)">
			<stacksize value="266"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="GetVehSpeed"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="SwitchVehicleEngine"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdatePrivCarLabel"/>
			<dependency name="UpdatePrivCarLabel"/>
			<dependency name="false"/>
			<dependency name="pVeh"/>
			<dependency name="pVehDist"/>
			<dependency name="pVehEngine"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehGas"/>
			<dependency name="pVehGasEnabled"/>
			<dependency name="pVehID"/>
			<dependency name="pVehLabel"/>
			<dependency name="pVehSell"/>
			<dependency name="pVehSpawned"/>
			<dependency name="pVehUlepszenie"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ProcessDamage" syntax="ProcessDamage(&amp;playerid, &amp;issuerid, &amp;amount, &amp;weaponid, &amp;bodypart, &amp;bullets)">
			<stacksize value="14"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="AddRejectedHit"/>
			<dependency name="DAMAGE_TYPE_MULTIPLIER"/>
			<dependency name="DAMAGE_TYPE_RANGE"/>
			<dependency name="DAMAGE_TYPE_RANGE_MULTIPLIER"/>
			<dependency name="DAMAGE_TYPE_STATIC"/>
			<dependency name="FIGHT_STYLE_KNEEHEAD"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerFightingStyle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="HIT_TOO_FAR_FROM_ORIGIN"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="IsHighRateWeapon"/>
			<dependency name="IsMeleeWeapon"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="WC_INVALID_DAMAGE"/>
			<dependency name="WC_INVALID_DISTANCE"/>
			<dependency name="WC_NO_ERROR"/>
			<dependency name="WC_NO_ISSUER"/>
			<dependency name="WEAPON_AK47"/>
			<dependency name="WEAPON_CHAINSAW"/>
			<dependency name="WEAPON_COLLISION"/>
			<dependency name="WEAPON_COLT45"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="WEAPON_DROWN"/>
			<dependency name="WEAPON_FIREEXTINGUISHER"/>
			<dependency name="WEAPON_M4"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="WEAPON_MP5"/>
			<dependency name="WEAPON_PARACHUTE"/>
			<dependency name="WEAPON_RIFLE"/>
			<dependency name="WEAPON_SAWEDOFF"/>
			<dependency name="WEAPON_SHOTGSPA"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="WEAPON_SILENCED"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="WEAPON_SPRAYCAN"/>
			<dependency name="WEAPON_TEC9"/>
			<dependency name="WEAPON_UZI"/>
			<dependency name="WEAPON_VEHICLE"/>
			<dependency name="e_Length"/>
			<dependency name="floatfract"/>
			<dependency name="s_DamageRangeRanges"/>
			<dependency name="s_DamageRangeSteps"/>
			<dependency name="s_DamageRangeValues"/>
			<dependency name="s_DamageType"/>
			<dependency name="s_LagCompMode"/>
			<dependency name="s_LastExplosive"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_WeaponDamage"/>
			<dependency name="s_WeaponRange"/>
			<dependency name="true"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="issuerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="amount">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="weaponid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="bodypart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="bullets">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Przegral" syntax="Przegral(playerid)">
			<stacksize value="4"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="floatround"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_online"/>
			<dependency name="player_session"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Push" syntax="Push(arg)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="PushString"/>
			<dependency name="false"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<dependency name="true"/>
			<param name="arg">
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:PushString" syntax="PushString(string[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<dependency name="Push"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:PutPlayerInVehicle" syntax="PutPlayerInVehicle(playerid, vehicleid, seatid)">
			<attribute name="native"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<referrer name="orig_PutPlayerInVehicle"/>
			<param name="playerid">
				The ID of the player to put in a vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle to put the player in
			</param>
			<param name="seatid">
				The ID of the seat to put the player in
			</param>
			<library>a_players</library>  <summary>Puts a player in a vehicle.</summary>        <seealso name="RemovePlayerFromVehicle" />  <seealso name="GetPlayerVehicleid" />  <seealso name="GetPlayerVehicleSeat" />  <seealso name="OnPlayerEnterVehicle" />  <remarks>If this function is used on a player that is already in a vehicle, other players will still  see them in their previous vehicle.  To fix this, first remove the player from the vehicle.</remarks>  <remarks>If the seat is invalid or is taken, will cause a crash when they EXIT the vehicle.</remarks>  <remarks>You can use <a href="#GetPlayerVehicleSeat">GetPlayerVehicleSeat</a> in a loop to check  if a seat is occupied by any players.</remarks>  <remarks>  <b>Seats:</b><br />  <ul>  <li><b><c>0</c></b> - driver.</li>  <li><b><c>1</c></b> - front passenger.</li>  <li><b><c>2</c></b> - back-left passenger.</li>  <li><b><c>3</c></b> - back-right passenger.</li>  <li><b><c>4+</c></b> - passenger seats (coach etc.).</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player or vehicle don't exist.  </returns> 
		</member>
		<member name="M:PutPlayerSumo" syntax="PutPlayerSumo(playerid, arenaid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_SetVehicleHealth"/>
			<dependency name="sumoCar"/>
			<dependency name="sumoCar"/>
			<dependency name="sumoVehicle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="arenaid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:R@" syntax="R@(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Random" syntax="Random(minOrMax, max, ...)">
			<stacksize value="1"/>
			<param name="minOrMax">
				Upper bound, or lower bound with 2+ parameters or when less than naught.
			</param>
			<param name="max">
				Upper bound.
			</param>
			<param name="...">
			</param>
			    <param>Value(s) to not return.</param>  <remarks>  Generate a random number between the given numbers (min &lt;= n &lt; max).  Default minimum is 0 (changes the parameter order).  This uses a compile-  time macro to detect the number of parameters and adjust the implementation  accordingly.  Also when there is only one parameter and it is below naught,  it uses naught as the max and the parameter as the min instead.  Won't  return the value <c>except</c> if it is between the limits.  So can be  called with one, two, or three parameters.  Don't try  <c>Random(0, _, 2);</c> for example, it won't work.  With more than two  parameters all the rest are numbers that should not be returned.  </remarks> 
		</member>
		<member name="M:RandomFloat" syntax="RandomFloat(min, max, dp)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="float"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<dependency name="random"/>
			<param name="min">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
				Upper bound.
			</param>
			<param name="dp">
				How small to make the differences
			</param>
			<param name="minmax">Lower bound, or upper bound when only parameter.</param>      <remarks>  Generate a random float between the given numbers (min &lt;= n &lt; max).  Default minimum is 0.0 (changes the parameter order).  </remarks> 
		</member>
		<member name="M:RandomGangReward" syntax="RandomGangReward(gangid)">
			<stacksize value="5"/>
			<referrer name="ZonesReward"/>
			<dependency name="GANG_ULEP_SZEJK"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="math_random"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:RandomMax" syntax="RandomMax(max)">
			<stacksize value="3"/>
			<dependency name="YSI_Random__"/>
			<param name="max">
				Upper bound.
			</param>
			  <remarks>  Generate a random number between the given numbers (min &lt;= n &lt; max).  Default minimum is 0 (changes the parameter order).  This uses a compile-  time macro to detect the number of parameters and adjust the implementation  accordingly.  Also when there is only one parameter and it is below naught,  it uses naught as the max and the parameter as the min instead.  </remarks> 
		</member>
		<member name="M:RandomMinMax" syntax="RandomMinMax(min, max)">
			<stacksize value="3"/>
			<dependency name="YSI_Random__"/>
			<param name="min">
				Lower bound.
			</param>
			<param name="max">
				Upper bound.
			</param>
			    <remarks>  Generate a random number  between the given numbers (min &lt;= n &lt; max).  </remarks> 
		</member>
		<member name="M:RandomMinMaxExcept" syntax="RandomMinMaxExcept(min, max, except)">
			<stacksize value="3"/>
			<dependency name="YSI_Random__"/>
			<param name="min">
				Lower bound.
			</param>
			<param name="max">
				Upper bound.
			</param>
			<param name="except">
				Value to not return.
			</param>
			      <remarks>  Generate a random number between the given numbers (min &lt;= n &lt; max).  Won't return the value <c>except</c> if it is between the limits.  </remarks> 
		</member>
		<member name="M:RandomMinMaxExceptMany" syntax="RandomMinMaxExceptMany(min, max, ...)">
			<stacksize value="7"/>
			<dependency name="YSI_Random__"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<param name="min">
				Lower bound.
			</param>
			<param name="max">
				Upper bound.
			</param>
			<param name="...">
				Values to not return.
			</param>
			      <remarks>  Generate a random number between the given numbers (min &lt;= n &lt; max).  Default minimum is 0 (changes the parameter order).  Won't return any of  the extra parameter values, so you can do:  <code>  Random(0, 20, 11, 12, 13);  </code>  To randomly select <c>0-10, 14-19</c> (inclusive).  </remarks> 
		</member>
		<member name="M:RandomMulberry32" syntax="RandomMulberry32()">
			<stacksize value="1"/>
			<remarks>  Relatively high quality 32-bit PRNG.  </remarks> 
		</member>
		<member name="M:RandomSpawn" syntax="RandomSpawn(playerid)">
			<stacksize value="12"/>
			<referrer name="RandomSpawn"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="Iter_Random_Internal"/>
			<dependency name="Iter_Single@Teleports"/>
			<dependency name="Iterator@Teleports"/>
			<dependency name="Teleport"/>
			<dependency name="false"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_a"/>
			<dependency name="teleport_interior"/>
			<dependency name="teleport_spawn"/>
			<dependency name="teleport_x"/>
			<dependency name="teleport_y"/>
			<dependency name="teleport_z"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RandomSplitMix32" syntax="RandomSplitMix32()">
			<stacksize value="1"/>
			<remarks>  Slightly lower quality 32-bit PRNG.  </remarks> 
		</member>
		<member name="M:RandomVaultCode" syntax="RandomVaultCode()">
			<stacksize value="7"/>
			<referrer name="Heist_Init"/>
			<dependency name="bankHeistCode"/>
			<dependency name="format"/>
			<dependency name="printf"/>
			<dependency name="random"/>
		</member>
		<member name="M:RandomVaultReward" syntax="RandomVaultReward()">
			<stacksize value="274"/>
			<referrer name="OnDialogHeist"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="VW_HEIST"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="heistRobbed"/>
			<dependency name="math_random"/>
			<dependency name="strdot"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vaultPositionData"/>
			<dependency name="vaultPositionData"/>
			<dependency name="vault_gas"/>
			<dependency name="vault_label"/>
			<dependency name="vault_reward"/>
			<dependency name="vault_robbed"/>
		</member>
		<member name="M:Range" syntax="Range(arr[], num)">
			<stacksize value="4"/>
			<dependency name="cellmax"/>
			<dependency name="cellmin"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  The mathematical range of the values of the array.  </returns> 
		</member>
		<member name="M:RawMemCpy_" syntax="RawMemCpy_(dest, src, index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="rawMemcpy"/>
			<referrer name="YHNPS_Insert"/>
			<referrer name="YHNPS_Push"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Callback_Restore_"/>
			<param name="dest">
				Destination address.
			</param>
			<param name="src">
				Source data.
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
				Number of bytes to copy.
			</param>
			<param name="maxlength">
			</param>
			<summary>  RawMemCpy  </summary>        <remarks>  Like memcpy, but takes addresses instead of arrays.  Also far less secure  because it doesn't check the destination size - it just assumes it is large  enough.  </remarks> 
		</member>
		<member name="M:RawMemSet" syntax="RawMemSet(address, value, size)">
			<stacksize value="1"/>
			<referrer name="MemSet"/>
			<referrer name="memset"/>
			<referrer name="rawMemset"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="address">
				Array or address to set to a value.
			</param>
			<param name="value">
				What to set the cells to.
			</param>
			<param name="size">
				Number of bytes to fill.
			</param>
			      <remarks>  Based on code by Slice:  <a href="http://forum.sa-mp.com/showthread.php?p=1606781#post1606781" />  Modified to use binary flags instead of a loop.  "MemSet" takes an array, the size of the array, and a value to fill it with  and sets the whole array to that value.  "RawMemSet" is similar, but takes an AMX data segment address instead and  the size is in bytes, not cells.  However, the size must still be a multiple  of 4.  </remarks> 
		</member>
		<member name="M:ReadAmxCell" syntax="ReadAmxCell(offset)">
			<stacksize value="5"/>
			<dependency name="GetAmxAddress"/>
			<dependency name="ReadPhysMemoryCell"/>
			<param name="offset">
			</param>
			<library>amx_assembly amx</library> <summary> Reads a cell from the AMX struct. </summary>
		</member>
		<member name="M:ReadAmxMemoryArray" syntax="ReadAmxMemoryArray(address, values[], size)">
			<stacksize value="2"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="address">
			</param>
			<param name="values">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:ReadOpcodeNearThis" syntax="ReadOpcodeNearThis(offset)">
			<tagname value="Opcode"/>
			<stacksize value="2"/>
			<referrer name="HaveToRelocateOpcodes"/>
			<referrer name="RelocateOpcodeNow"/>
			<dependency name="OP_NONE"/>
			<param name="offset">
			</param>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:ReadPhysMemory" syntax="ReadPhysMemory(address, dest[], num)">
			<stacksize value="5"/>
			<dependency name="AbsToRel"/>
			<param name="address">
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="num">
			</param>
			<library>amx_assembly phys_memory</library>
		</member>
		<member name="M:ReadPhysMemoryCell" syntax="ReadPhysMemoryCell(address)">
			<stacksize value="5"/>
			<referrer name="ReadAmxCell"/>
			<dependency name="AbsToRel"/>
			<param name="address">
			</param>
			<library>amx_assembly phys_memory</library>
		</member>
		<member name="M:RefreshGameList" syntax="RefreshGameList()">
			<stacksize value="264"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="RefreshGameList"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
		</member>
		<member name="M:RefreshInfoTD" syntax="RefreshInfoTD(playerid, businessid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="BUSINESS_CASINO"/>
			<dependency name="BUSINESS_GUNSHOP"/>
			<dependency name="GunShopDay"/>
			<dependency name="GunShopDay"/>
			<dependency name="KillTimer"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_reward"/>
			<dependency name="business_type"/>
			<dependency name="pBusinessTimer"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_business"/>
			<dependency name="strdot"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
		</member>
		<member name="M:RefreshSpec" syntax="RefreshSpec(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PlayerSpectateVehicle"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="WC_PlayerSpectatePlayer"/>
			<dependency name="WC_SetPlayerVirtualWorld"/>
			<dependency name="WC_TogglePlayerSpectating"/>
			<dependency name="acc_SetPlayerInterior"/>
			<dependency name="pSpectate"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Regex_Check" syntax="Regex_Check(str[], r, flags)">
			<attribute name="native"/>
			<referrer name="containsIP"/>
			<referrer name="isValidPassword"/>
			<referrer name="correctNick"/>
			<referrer name="checkIP"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="r">
				<paraminfo>Regex </paraminfo>
			</param>
			<param name="flags">
				<paraminfo>E_MATCH_FLAG </paraminfo>
			</param>
		</member>
		<member name="M:Regex_New" syntax="Regex_New(pattern[], flags, grammar)">
			<tagname value="Regex"/>
			<attribute name="native"/>
			<referrer name="containsIP"/>
			<referrer name="isValidPassword"/>
			<referrer name="correctNick"/>
			<referrer name="checkIP"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="flags">
				<paraminfo>E_REGEX_FLAG </paraminfo>
			</param>
			<param name="grammar">
				<paraminfo>E_REGEX_GRAMMAR </paraminfo>
			</param>
		</member>
		<member name="M:RejectDuelTimer" syntax="RejectDuelTimer(playerid, enemyid, reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="pc_cmd_duel"/>
			<dependency name="KillTimer"/>
			<dependency name="ResetDuelData"/>
			<dependency name="msg"/>
			<dependency name="pDuelTimer"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
			<param name="enemyid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:RelToAbs" syntax="RelToAbs(address)">
			<stacksize value="3"/>
			<referrer name="refabs"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetDat"/>
			<param name="address">
			</param>
			<library>amx_assembly phys_memory</library>
		</member>
		<member name="M:RelocateOpcode" syntax="RelocateOpcode(opcode)">
			<tagname value="Opcode"/>
			<stacksize value="3"/>
			<referrer name="IsOpcodeRelocationRequired"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
			<referrer name="CallNative"/>
			<referrer name="CallNativeByAddress"/>
			<referrer name="AsmEmitOpcode"/>
			<referrer name="AsmEmitPadding"/>
			<referrer name="CodeScanInit"/>
			<referrer name="CGen_SetupCodeSpace"/>
			<referrer name="ThirdParty_OnCodeInit"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="YVA2_CodeGenShiftCode"/>
			<referrer name="Inline_DoRetnGen"/>
			<dependency name="InitOpcodeTable"/>
			<dependency name="opcode_table"/>
			<dependency name="opcode_table_is_ready"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:RelocateOpcodeNow" syntax="RelocateOpcodeNow(opcode)">
			<tagname value="Opcode"/>
			<stacksize value="5"/>
			<referrer name="RelocateOpcodeNow"/>
			<referrer name="InitOpcodeTable"/>
			<dependency name="HaveToRelocateOpcodes"/>
			<dependency name="OP_ADD"/>
			<dependency name="OP_ADDR_ALT"/>
			<dependency name="OP_ADDR_PRI"/>
			<dependency name="OP_ADD_C"/>
			<dependency name="OP_ALIGN_ALT"/>
			<dependency name="OP_ALIGN_PRI"/>
			<dependency name="OP_AND"/>
			<dependency name="OP_BOUNDS"/>
			<dependency name="OP_BREAK"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_CMPS"/>
			<dependency name="OP_CONST_ALT"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_DEC"/>
			<dependency name="OP_DEC_ALT"/>
			<dependency name="OP_DEC_I"/>
			<dependency name="OP_DEC_PRI"/>
			<dependency name="OP_DEC_S"/>
			<dependency name="OP_EQ"/>
			<dependency name="OP_EQ_C_ALT"/>
			<dependency name="OP_EQ_C_PRI"/>
			<dependency name="OP_FILL"/>
			<dependency name="OP_GEQ"/>
			<dependency name="OP_GRTR"/>
			<dependency name="OP_HALT"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_IDXADDR"/>
			<dependency name="OP_IDXADDR_B"/>
			<dependency name="OP_INC"/>
			<dependency name="OP_INC_ALT"/>
			<dependency name="OP_INC_I"/>
			<dependency name="OP_INC_PRI"/>
			<dependency name="OP_INC_S"/>
			<dependency name="OP_INVERT"/>
			<dependency name="OP_JEQ"/>
			<dependency name="OP_JGEQ"/>
			<dependency name="OP_JGRTR"/>
			<dependency name="OP_JLEQ"/>
			<dependency name="OP_JLESS"/>
			<dependency name="OP_JNEQ"/>
			<dependency name="OP_JNZ"/>
			<dependency name="OP_JSGEQ"/>
			<dependency name="OP_JSGRTR"/>
			<dependency name="OP_JSLEQ"/>
			<dependency name="OP_JSLESS"/>
			<dependency name="OP_JUMP"/>
			<dependency name="OP_JZER"/>
			<dependency name="OP_LCTRL"/>
			<dependency name="OP_LEQ"/>
			<dependency name="OP_LESS"/>
			<dependency name="OP_LIDX"/>
			<dependency name="OP_LIDX_B"/>
			<dependency name="OP_LOAD_ALT"/>
			<dependency name="OP_LOAD_I"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_LOAD_S_ALT"/>
			<dependency name="OP_LOAD_S_PRI"/>
			<dependency name="OP_LODB_I"/>
			<dependency name="OP_LREF_ALT"/>
			<dependency name="OP_LREF_PRI"/>
			<dependency name="OP_LREF_S_ALT"/>
			<dependency name="OP_LREF_S_PRI"/>
			<dependency name="OP_MOVE_ALT"/>
			<dependency name="OP_MOVE_PRI"/>
			<dependency name="OP_MOVS"/>
			<dependency name="OP_NEG"/>
			<dependency name="OP_NEQ"/>
			<dependency name="OP_NOP"/>
			<dependency name="OP_NOT"/>
			<dependency name="OP_OR"/>
			<dependency name="OP_POP_ALT"/>
			<dependency name="OP_POP_PRI"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_PUSH"/>
			<dependency name="OP_PUSH_ADR"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="OP_PUSH_PRI"/>
			<dependency name="OP_PUSH_S"/>
			<dependency name="OP_RET"/>
			<dependency name="OP_RETN"/>
			<dependency name="OP_SCTRL"/>
			<dependency name="OP_SDIV"/>
			<dependency name="OP_SDIV_ALT"/>
			<dependency name="OP_SGEQ"/>
			<dependency name="OP_SGRTR"/>
			<dependency name="OP_SHL"/>
			<dependency name="OP_SHL_C_ALT"/>
			<dependency name="OP_SHL_C_PRI"/>
			<dependency name="OP_SHR"/>
			<dependency name="OP_SHR_C_ALT"/>
			<dependency name="OP_SHR_C_PRI"/>
			<dependency name="OP_SIGN_ALT"/>
			<dependency name="OP_SIGN_PRI"/>
			<dependency name="OP_SLEQ"/>
			<dependency name="OP_SLESS"/>
			<dependency name="OP_SMUL"/>
			<dependency name="OP_SMUL_C"/>
			<dependency name="OP_SREF_ALT"/>
			<dependency name="OP_SREF_PRI"/>
			<dependency name="OP_SREF_S_ALT"/>
			<dependency name="OP_SREF_S_PRI"/>
			<dependency name="OP_SSHR"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_STOR_ALT"/>
			<dependency name="OP_STOR_I"/>
			<dependency name="OP_STOR_PRI"/>
			<dependency name="OP_STOR_S_ALT"/>
			<dependency name="OP_STOR_S_PRI"/>
			<dependency name="OP_STRB_I"/>
			<dependency name="OP_SUB"/>
			<dependency name="OP_SUB_ALT"/>
			<dependency name="OP_SWAP_ALT"/>
			<dependency name="OP_SWAP_PRI"/>
			<dependency name="OP_SWITCH"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="OP_UDIV"/>
			<dependency name="OP_UDIV_ALT"/>
			<dependency name="OP_UMUL"/>
			<dependency name="OP_XCHG"/>
			<dependency name="OP_XOR"/>
			<dependency name="OP_ZERO"/>
			<dependency name="OP_ZERO_ALT"/>
			<dependency name="OP_ZERO_PRI"/>
			<dependency name="OP_ZERO_S"/>
			<dependency name="ReadOpcodeNearThis"/>
			<dependency name="__Pawn"/>
			<dependency name="debug"/>
			<dependency name="false"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly opcode</library> <remarks> Based on this idea: http://forum.sa-mp.com/showthread.php?t=358084 </remarks>
		</member>
		<member name="M:RemoveBuildingForPlayer" syntax="RemoveBuildingForPlayer(playerid, modelid, centerX, centerY, centerZ, radius)">
			<attribute name="native"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="RemoveDefaultVendingMachines"/>
			<referrer name="RemoveObjects"/>
			<param name="playerid">
				The ID of the player to remove the objects for
			</param>
			<param name="modelid">
				The model to remove
			</param>
			<param name="centerX">
				<paraminfo>Float </paraminfo>
				The x coordinate around which the objects will be removed
			</param>
			<param name="centerY">
				<paraminfo>Float </paraminfo>
				The y coordinate around which the objects will be removed
			</param>
			<param name="centerZ">
				<paraminfo>Float </paraminfo>
				The z coordinate around which the objects will be removed
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The radius around the specified point to remove objects with the specified model
			</param>
			<library>a_players</library>  <summary>Removes a standard San Andreas model for a single player within a specified range.</summary>              <seealso name="DestroyObject" />  <seealso name="DestroyPlayerObject" />  <remarks>This function was added in <b>SA-MP 0.3d</b> and will not work in earlier versions!</remarks>  <remarks>There appears to be a limit of around <b><c>1000</c></b> lines/objects.  There is no workaround.  </remarks>  <remarks>When removing the same object for a player, they will crash.  Commonly, players crash when  reconnecting to the server because the server removes buildings on <a href="#OnPlayerConnect">OnPlayerConnect</a>.  </remarks>  <remarks>In <b>SA-MP 0.3.7</b> you can use <b><c>-1</c></b> for the modelid to remove all objects  within the specified radius.</remarks> 
		</member>
		<member name="M:RemoveDefaultVendingMachines" syntax="RemoveDefaultVendingMachines(playerid)">
			<stacksize value="9"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ScriptInit"/>
			<dependency name="RemoveBuildingForPlayer"/>
			<dependency name="e_Model"/>
			<dependency name="e_PosX"/>
			<dependency name="e_PosY"/>
			<dependency name="e_PosZ"/>
			<dependency name="sc_VendingMachines"/>
			<dependency name="sc_VendingMachines"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RemoveObjects" syntax="RemoveObjects(playerid)">
			<stacksize value="8"/>
			<referrer name="WC_OnPlayerConnect"/>
			<dependency name="RemoveBuildingForPlayer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RemovePlayerAttachedObject" syntax="RemovePlayerAttachedObject(playerid, index)">
			<attribute name="native"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<param name="playerid">
				The ID of the player to remove the object from
			</param>
			<param name="index">
				The index of the object to remove (set with <a href="#SetPlayerAttachedObject">SetPlayerAttachedObject</a>)
			</param>
			<library>a_players</library>  <summary>Remove an attached object from a player.</summary>      <seealso name="SetPlayerAttachedObject" />  <seealso name="IsPlayerAttachedObjectSlotUsed" />  <remarks>This function was added in <b>SA-MP 0.3c</b> and will not work in earlier versions!</remarks>  <returns><b><c>1</c></b> on success, <b><c>0</c></b> on failure.</returns> 
		</member>
		<member name="M:RemovePlayerFromVehicle" syntax="RemovePlayerFromVehicle(playerid)">
			<attribute name="native"/>
			<referrer name="ac_RemovePlayerFromVehicle"/>
			<referrer name="orig_RemovePlayerFromVehicle"/>
			<param name="playerid">
				The ID of the player to remove from their vehicle
			</param>
			<library>a_players</library>  <summary>Removes/ejects a player from their vehicle.</summary>    <seealso name="PutPlayerInVehicle" />  <remarks>  The exiting animation is not synced for other players.<br />  This function will not work when used in <a href="#OnPlayerEnterVehicle">OnPlayerEnterVehicle</a>,  because the player isn't in the vehicle when the callback is called.  Use <a href="#OnPlayerStateChange">OnPlayerStateChange</a>  instead.<br />  The player isn't removed if he is in a RC Vehicle.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:RemovePlayerMapIcon" syntax="RemovePlayerMapIcon(playerid, iconid)">
			<attribute name="native"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<param name="playerid">
				The ID of the player whose icon to remove
			</param>
			<param name="iconid">
				The ID of the icon to remove.  This is the second parameter of  <a href="#SetPlayerMapIcon">SetPlayerMapIcon</a>
			</param>
			<library>a_players</library>  <summary>Removes a map icon that was set earlier for a player using <a href="#SetPlayerMapIcon">SetPlayerMapIcon</a>.</summary>      <seealso name="SetPlayerMapIcon" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  </returns> 
		</member>
		<member name="M:RemovePlayerWeapon" syntax="RemovePlayerWeapon(playerid, weaponid)">
			<attribute name="native"/>
			<referrer name="CancelMining"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:RemoveVehicleComponent" syntax="RemoveVehicleComponent(vehicleid, componentid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				ID of the vehicle
			</param>
			<param name="componentid">
				ID of the <a href="http://wiki.sa-mp.com/wiki/Car_Component_ID">component</a>  to remove
			</param>
			<library>a_vehicles</library>  <summary>Remove a component from a vehicle.</summary>      <seealso name="AddVehicleComponent" />  <seealso name="GetVehicleComponentInSlot" />  <seealso name="GetVehicleComponentType" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" /> 
		</member>
		<member name="M:RepairVehicle" syntax="RepairVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_RepairVehicle"/>
			<referrer name="orig_RepairVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle to repair
			</param>
			<library>a_vehicles</library>  <summary>Fully repairs a vehicle, including visual damage (bumps, dents, scratches, popped tires  etc.).</summary>    <seealso name="SetVehicleHealth" />  <seealso name="GetVehicleHealth" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:RequestCallback" syntax="RequestCallback(id, path[], method, callback, body[], headers)">
			<tagname value="Request"/>
			<stacksize value="1"/>
			<param name="id">
				<paraminfo>RequestsClient </paraminfo>
			</param>
			<param name="path">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="method">
				<paraminfo>E_HTTP_METHOD </paraminfo>
			</param>
			<param name="callback">
				<paraminfo>F@_@iisi </paraminfo>
			</param>
			<param name="body">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="headers">
				<paraminfo>Headers </paraminfo>
			</param>
		</member>
		<member name="M:RequestJSONCallback" syntax="RequestJSONCallback(id, path[], method, callback, json, headers)">
			<tagname value="Request"/>
			<stacksize value="1"/>
			<param name="id">
				<paraminfo>RequestsClient </paraminfo>
			</param>
			<param name="path">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="method">
				<paraminfo>E_HTTP_METHOD </paraminfo>
			</param>
			<param name="callback">
				<paraminfo>F@_@iii </paraminfo>
			</param>
			<param name="json">
				<paraminfo>Node </paraminfo>
			</param>
			<param name="headers">
				<paraminfo>Headers </paraminfo>
			</param>
		</member>
		<member name="M:ResetAccountData" syntax="ResetAccountData(playerid)">
			<stacksize value="2"/>
			<referrer name="ResetPlayerData"/>
			<dependency name="pAccountSettings"/>
			<dependency name="pAccountSettings"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetDeepArray_Entry" syntax="ResetDeepArray_Entry(...)">
			<stacksize value="8"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="getarg"/>
			<param name="...">
			</param>
		</member>
		<member name="M:ResetDuelData" syntax="ResetDuelData(playerid)">
			<stacksize value="1"/>
			<referrer name="CheckDuel"/>
			<referrer name="RejectDuelTimer"/>
			<referrer name="ResetPlayerData"/>
			<dependency name="false"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pDuelInvite"/>
			<dependency name="pDuelRoundCount"/>
			<dependency name="pDuelRounds"/>
			<dependency name="pDuelSync"/>
			<dependency name="pDuelTick"/>
			<dependency name="pDuelWeapon"/>
			<dependency name="pDuelWeapon"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetGameData" syntax="ResetGameData(playerid)">
			<stacksize value="8"/>
			<referrer name="ResetPlayerData"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="pGame"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetGangData" syntax="ResetGangData(playerid)">
			<stacksize value="7"/>
			<referrer name="ResetPlayerData"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@GangMember"/>
			<dependency name="Iter_Single@Sparing"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="e_sparingKillerData"/>
			<dependency name="false"/>
			<dependency name="pGang"/>
			<dependency name="pGangCreatorColor"/>
			<dependency name="pGangCreatorName"/>
			<dependency name="pGangCreatorName"/>
			<dependency name="pGangCreatorTag"/>
			<dependency name="pGangCreatorTag"/>
			<dependency name="pGangInvites"/>
			<dependency name="pGangInvites"/>
			<dependency name="pGangRankColor"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankName"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="pGangTransferCost"/>
			<dependency name="pGangTransferID"/>
			<dependency name="pTransferData"/>
			<dependency name="pTransferData"/>
			<dependency name="sparingKillerData"/>
			<dependency name="sparingKillerData"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetMoneyTD" syntax="ResetMoneyTD(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="pMoneyTimer"/>
			<dependency name="tdMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerData" syntax="ResetPlayerData(playerid)">
			<stacksize value="8"/>
			<referrer name="@yH_ResetPlayerData@04"/>
			<referrer name="@yH_ResetPlayerData@07"/>
			<referrer name="@yH_ResetPlayerData@08"/>
			<referrer name="@yH_ResetPlayerData@0@"/>
			<referrer name="@yH_ResetPlayerData@0C"/>
			<referrer name="@yH_ResetPlayerData@0D"/>
			<referrer name="@yH_ResetPlayerData@0E"/>
			<referrer name="@yH_ResetPlayerData@0F"/>
			<referrer name="@yH_ResetPlayerData@0G"/>
			<referrer name="@yH_ResetPlayerData@0H"/>
			<referrer name="@yH_ResetPlayerData@0J"/>
			<referrer name="@yH_ResetPlayerData@0R"/>
			<referrer name="@yH_ResetPlayerData@0S"/>
			<referrer name="@yH_ResetPlayerData@0T"/>
			<referrer name="@yH_ResetPlayerData@0U"/>
			<referrer name="@yH_ResetPlayerData@0V"/>
			<referrer name="@yH_ResetPlayerData@0W"/>
			<referrer name="@yH_ResetPlayerData@0X"/>
			<referrer name="@yH_ResetPlayerData@0Y"/>
			<referrer name="@yH_ResetPlayerData@0Z"/>
			<referrer name="@yH_ResetPlayerData@0b"/>
			<referrer name="@yH_ResetPlayerData@0d"/>
			<referrer name="@yH_ResetPlayerData@0f"/>
			<referrer name="@yH_ResetPlayerData@0g"/>
			<referrer name="@yH_ResetPlayerData@0j"/>
			<referrer name="@yH_ResetPlayerData@0o"/>
			<referrer name="@yH_ResetPlayerData@0x"/>
			<referrer name="@yH_ResetPlayerData@11"/>
			<referrer name="@yH_ResetPlayerData@12"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Areny"/>
			<dependency name="Iter_Single@Permission"/>
			<dependency name="Iter_Single@Premium"/>
			<dependency name="Iterator@Areny"/>
			<dependency name="Iterator@Areny"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="ResetAccountData"/>
			<dependency name="ResetDuelData"/>
			<dependency name="ResetGameData"/>
			<dependency name="ResetGangData"/>
			<dependency name="ResetPrivCarData"/>
			<dependency name="ResetRaceCreatorData"/>
			<dependency name="ResetTeleportData"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="WEAPON_MP5"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="e_playerData"/>
			<dependency name="false"/>
			<dependency name="pArena"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaKills"/>
			<dependency name="pArenaKills"/>
			<dependency name="pCheatDetected"/>
			<dependency name="pCheatTemp"/>
			<dependency name="pCheatWH"/>
			<dependency name="pDrawVisible"/>
			<dependency name="pDuelPoints"/>
			<dependency name="pDuelRank"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRankColor"/>
			<dependency name="pOwnRankHave"/>
			<dependency name="pSecretAnswer"/>
			<dependency name="pSecretAnswer"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretPinCode"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="pStalyInterior"/>
			<dependency name="pStalyPos"/>
			<dependency name="pStalyPos"/>
			<dependency name="pWeapons"/>
			<dependency name="pWeapons"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_business"/>
			<dependency name="player_gangbase"/>
			<dependency name="player_holding"/>
			<dependency name="player_lastPM"/>
			<dependency name="player_lastmessage"/>
			<dependency name="player_poolID"/>
			<dependency name="player_sparingGangSpec"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerMoney" syntax="ResetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="ac_ResetPlayerMoney"/>
			<referrer name="orig_ResetPlayerMoney"/>
			<param name="playerid">
				The ID of the player to reset the money of
			</param>
			<library>a_players</library>  <summary>Reset a player's money to $0.</summary>    <seealso name="GetPlayerMoney" />  <seealso name="GivePlayerMoney" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:ResetPlayerWeapons" syntax="ResetPlayerWeapons(playerid)">
			<attribute name="native"/>
			<referrer name="ac_ResetPlayerWeapons"/>
			<referrer name="orig_ResetPlayerWeapons"/>
			<param name="playerid">
				The ID of the player whose weapons to remove
			</param>
			<library>a_players</library>  <summary>Removes all weapons from a player.</summary>    <seealso name="GivePlayerWeapon" />  <seealso name="GetPlayerWeapon" />  <remarks>To remove individual weapons from a player, set their ammo to <b><c>0</c></b> using  <a href="#SetPlayerAmmo">SetPlayerAmmo</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:ResetPrivCarData" syntax="ResetPrivCarData(playerid)">
			<stacksize value="1"/>
			<referrer name="ResetPlayerData"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehFetch"/>
			<dependency name="pVehFetch"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehID"/>
			<dependency name="pVehKeyData"/>
			<dependency name="pVehKeyData"/>
			<dependency name="pVehManage"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetQuestData" syntax="ResetQuestData(playerid)">
			<stacksize value="1"/>
			<dependency name="false"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyMoney"/>
			<dependency name="pDailyQuest"/>
			<dependency name="pDailyStatus"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetRaceCreatorData" syntax="ResetRaceCreatorData(playerid)">
			<stacksize value="5"/>
			<referrer name="AddRaceArena"/>
			<referrer name="ResetPlayerData"/>
			<dependency name="false"/>
			<dependency name="pRaceCreatorCP"/>
			<dependency name="pRaceCreatorCP"/>
			<dependency name="pRaceCreatorCPs"/>
			<dependency name="pRaceCreatorModel"/>
			<dependency name="pRaceCreatorName"/>
			<dependency name="pRaceCreatorName"/>
			<dependency name="pRaceCreatorPoints"/>
			<dependency name="pRaceCreatorSpawn"/>
			<dependency name="pRaceCreatorSpawn"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetRaceTimer" syntax="ResetRaceTimer(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="RaceTimer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetStaticAmxHeader" syntax="ResetStaticAmxHeader()">
			<stacksize value="4"/>
			<referrer name="GetAmxHeader"/>
			<referrer name="GetAmxHeaderComponent"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
			<referrer name="Hooks_CompressPublics"/>
			<referrer name="_Hooks_RepairStub"/>
			<dependency name="GetAmxHeaderNow"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:ResetTeleportData" syntax="ResetTeleportData(playerid)">
			<stacksize value="5"/>
			<referrer name="AddTeleport"/>
			<referrer name="ResetPlayerData"/>
			<dependency name="false"/>
			<dependency name="pTeleportCreatorCMD"/>
			<dependency name="pTeleportCreatorCMD"/>
			<dependency name="pTeleportCreatorInterior"/>
			<dependency name="pTeleportCreatorName"/>
			<dependency name="pTeleportCreatorName"/>
			<dependency name="pTeleportCreatorPos"/>
			<dependency name="pTeleportCreatorPos"/>
			<dependency name="pTeleportCreatorSpawn"/>
			<dependency name="pTeleportCreatorType"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetTimerWP" syntax="ResetTimerWP()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="wpTimer"/>
		</member>
		<member name="M:ResetUlepszeniaData" syntax="ResetUlepszeniaData(playerid)">
			<stacksize value="2"/>
			<dependency name="false"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="pUlepszeniaLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResolveJITAddress" syntax="ResolveJITAddress(addr)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<library>amx_assembly amx_jit</library>
		</member>
		<member name="M:ResolveYSIScriptfileDirs" syntax="ResolveYSIScriptfileDirs()">
			<stacksize value="66"/>
			<referrer name="OnJITCompile"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="E_YSI_DIR"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_gsDefaultDirs"/>
			<dependency name="YSI_gsDefaultDirs"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="io_write"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<remarks>  Check if all the YSI scriptfiles directories exist.  Checks for `.gitkeep`  in each folder, then each folder without `YSI/` prefix, then just nothing.  </remarks> 
		</member>
		<member name="M:RespawnDA" syntax="RespawnDA(playerid)">
			<stacksize value="13"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Teleport"/>
			<dependency name="VW_DA"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="deathArenaID"/>
			<dependency name="deathArenaInterior"/>
			<dependency name="deathPosLVPD"/>
			<dependency name="deathPosLVPD"/>
			<dependency name="deathPosWH"/>
			<dependency name="deathPosWH"/>
			<dependency name="false"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RespawnGG" syntax="RespawnGG(playerid)">
			<stacksize value="12"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="GG_GetWeapon"/>
			<dependency name="Teleport"/>
			<dependency name="VW_GG"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RespawnVehicles" syntax="RespawnVehicles(privcars)">
			<stacksize value="2007"/>
			<referrer name="PrepareVehicleRespawn"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleTrailer"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iterator@Player"/>
			<dependency name="VehiclePrivate"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_createdVehicle"/>
			<dependency name="true"/>
			<param name="privcars">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:RespawnWG" syntax="RespawnWG(playerid)">
			<stacksize value="11"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="SetHealth"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="Teleport"/>
			<dependency name="VW_WG"/>
			<dependency name="WC_SetPlayerTeam"/>
			<dependency name="WarPosition"/>
			<dependency name="WarPosition"/>
			<dependency name="WarWeapons"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="player_warTeam"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResyncPlayer" syntax="ResyncPlayer(playerid)">
			<stacksize value="4"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<dependency name="SaveSyncData"/>
			<dependency name="SpawnPlayerInPlace"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ReturnPlayerName" syntax="ReturnPlayerName(playerid)">
			<stacksize value="29"/>
			<dependency name="GetPlayerName"/>
			<dependency name="ReturnPlayerName"/>
			<param name="playerid">
				Player whose name you want to get.
			</param>
			<summary>  ReturnPlayerName  </summary>    <remarks>  Get a player's name.  </remarks> 
		</member>
		<member name="M:ReturnPlayerRPName" syntax="ReturnPlayerRPName(playerid)">
			<stacksize value="30"/>
			<dependency name="GetPlayerRPName"/>
			<dependency name="ReturnPlayerRPName"/>
			<param name="playerid">
				Player whose name you want to get.
			</param>
			<summary>  ReturnPlayerRPName  </summary>    <remarks>  Get a player's name, with <c>_</c> replaced by <c> </c>.  </remarks> 
		</member>
		<member name="M:ReturnStringArg" syntax="ReturnStringArg(idx)">
			<stacksize value="145"/>
			<dependency name="ReturnStringArg"/>
			<dependency name="strcat"/>
			<param name="idx">
				Index of the string in the parameters.
			</param>
			  <returns>  string  </returns>  <remarks>  Is passed the result of getarg, which will be the address of a string (in  theory) and uses that for DMA to get the string.  </remarks> 
		</member>
		<member name="M:ReturnWeaponName" syntax="ReturnWeaponName(weaponid)">
			<stacksize value="26"/>
			<dependency name="ReturnWeaponName"/>
			<dependency name="WC_GetWeaponName"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:Roulette_Refresh" syntax="Roulette_Refresh(businessid, rouletteid)">
			<attribute name="public"/>
			<stacksize value="135"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="rouletteLabel"/>
			<dependency name="rouletteLabel"/>
			<dependency name="roulettePlayer"/>
			<dependency name="roulettePlayer"/>
			<param name="businessid">
			</param>
			<param name="rouletteid">
			</param>
		</member>
		<member name="M:Roulette_Start" syntax="Roulette_Start(playerid, businessid, rouletteid, typeid)">
			<stacksize value="137"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<dependency name="SetTimerEx"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="pRouletteColor"/>
			<dependency name="pRouletteCount"/>
			<dependency name="pRouletteTimer"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="rouletteLabel"/>
			<dependency name="rouletteLabel"/>
			<dependency name="roulettePlayer"/>
			<dependency name="roulettePlayer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
			<param name="rouletteid">
			</param>
			<param name="typeid">
			</param>
		</member>
		<member name="M:Roulette_Timer" syntax="Roulette_Timer(playerid, businessid, rouletteid)">
			<attribute name="public"/>
			<stacksize value="179"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="AddBusinessMoney"/>
			<dependency name="GetRouletteColor"/>
			<dependency name="GetRouletteColor"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="businessData"/>
			<dependency name="business_price"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pRouletteColor"/>
			<dependency name="pRouletteCount"/>
			<dependency name="pRouletteNumber"/>
			<dependency name="pRouletteTimer"/>
			<dependency name="pRouletteTokens"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="rouletteLabel"/>
			<dependency name="rouletteLabel"/>
			<dependency name="roulettePlayer"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
			<param name="rouletteid">
			</param>
		</member>
		<member name="M:RoyalePickup" syntax="RoyalePickup(playerid, pickupid)">
			<stacksize value="8"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GameStarted"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="RoyaleWeaponID"/>
			<dependency name="RoyaleWeaponPickup"/>
			<dependency name="WC_GetPlayerArmour"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="giveWeapon"/>
			<dependency name="pGame"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:RunBaseOptions" syntax="RunBaseOptions(playerid, baseid)">
			<tagname value="Task"/>
			<stacksize value="114"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0O"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_baza"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<dependency name="CheckGangBase"/>
			<dependency name="DIALOG_BASE_BUY"/>
			<dependency name="DIALOG_BASE_PANEL"/>
			<dependency name="DIALOG_BASE_SELL_PANEL"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="GangBaseCost"/>
			<dependency name="GangBaseName"/>
			<dependency name="GangBaseName"/>
			<dependency name="GangBaseOwner"/>
			<dependency name="GangBaseSell"/>
			<dependency name="GangBaseSettings"/>
			<dependency name="GetBaseObjectCount"/>
			<dependency name="base_pickup"/>
			<dependency name="catstr"/>
			<dependency name="dialogBox"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_tag"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
			<param name="baseid">
			</param>
		</member>
		<member name="M:RunDriveExams" syntax="RunDriveExams(playerid)">
			<tagname value="Task"/>
			<stacksize value="12"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0C"/>
			<dependency name="DIALOG_DRIVING_EXAM"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="drivingExamData"/>
			<dependency name="drivingExamData"/>
			<dependency name="exam_cost"/>
			<dependency name="exam_name"/>
			<dependency name="format"/>
			<dependency name="pDriveLicense"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RunDuelMatch" syntax="RunDuelMatch(playerid, enemyid)">
			<stacksize value="13"/>
			<referrer name="pc_cmd_aduel"/>
			<dependency name="GetTickCount"/>
			<dependency name="KillTimer"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateDuelBox"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelRounds"/>
			<dependency name="pDuelSync"/>
			<dependency name="pDuelTick"/>
			<dependency name="pDuelTimer"/>
			<dependency name="pDuelWeapon"/>
			<dependency name="pDuelWeapon"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="player_nickname"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="enemyid">
			</param>
		</member>
		<member name="M:RunJobPanel" syntax="RunJobPanel(playerid)">
			<tagname value="Task"/>
			<stacksize value="39"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0S"/>
			<referrer name="OnDialogJob"/>
			<dependency name="CountJobUlepszenia"/>
			<dependency name="DIALOG_PRACA_PANEL"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="JobDay"/>
			<dependency name="catstr"/>
			<dependency name="getJobName"/>
			<dependency name="getJobName"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobScore"/>
			<dependency name="pJobScore"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_job_points"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RunObjects" syntax="RunObjects()">
			<stacksize value="588"/>
			<referrer name="Init_Map"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="CreateDynamicObjectEx"/>
			<dependency name="CreateObject"/>
			<dependency name="CreateSumoObjects"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="SetDynamicObjectMaterialText"/>
			<dependency name="SetObjectMaterial"/>
			<dependency name="VW_BANK"/>
			<dependency name="VW_JAIL"/>
			<dependency name="VW_WP"/>
			<dependency name="VW_WYBIERALKA"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="wpObjectData"/>
		</member>
		<member name="M:RunPlayerStats" syntax="RunPlayerStats(playerid, selectedid)">
			<tagname value="Task"/>
			<stacksize value="38"/>
			<referrer name="pc_cmd_stats"/>
			<referrer name="ac_OnPlayerClickPlayer"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ACH_DEATHS"/>
			<dependency name="ACH_KILLS"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DUEL_RANK_CHAMPION"/>
			<dependency name="EOS"/>
			<dependency name="GetAchievement"/>
			<dependency name="GetPlayerBudget"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="getDuelName"/>
			<dependency name="getDuelName"/>
			<dependency name="getDuelPoints"/>
			<dependency name="getMoney"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="getRatio"/>
			<dependency name="pDuelPoints"/>
			<dependency name="pDuelRank"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_admin"/>
			<dependency name="player_adminLevel"/>
			<dependency name="player_level"/>
			<dependency name="player_nickname"/>
			<dependency name="player_online"/>
			<dependency name="player_session"/>
			<dependency name="player_visits"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
			<param name="selectedid">
			</param>
		</member>
		<member name="M:RunPrivCarList" syntax="RunPrivCarList(playerid, tpHere)">
			<tagname value="Task"/>
			<stacksize value="36"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<dependency name="DIALOG_PRIVCAR_TELEPORT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="GetEngineColor"/>
			<dependency name="GetEngineName"/>
			<dependency name="GetEngineName"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="SetPVarInt"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehFetch"/>
			<dependency name="pVehFetch"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="task_new"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="tpHere">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:RunPrivCarManage" syntax="RunPrivCarManage(playerid, privcarid)">
			<tagname value="Task"/>
			<stacksize value="65"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ChangePrivCarModel"/>
			<referrer name="pc_cmd_pmanage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CountPojazdUlepszenia"/>
			<dependency name="DIALOG_PRIVCAR_MANAGE"/>
			<dependency name="DIALOG_STYLE_TABLIST"/>
			<dependency name="EOS"/>
			<dependency name="GetKeyCount"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="format"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="pVeh"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehFuelAmount"/>
			<dependency name="pVehGas"/>
			<dependency name="pVehGasEnabled"/>
			<dependency name="pVehManage"/>
			<dependency name="pVehModel"/>
			<dependency name="pVehObjectCount"/>
			<dependency name="pVehRegisterColor"/>
			<dependency name="pVehRegisterName"/>
			<dependency name="pVehRegisterName"/>
			<dependency name="pVehSpawned"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:RunRaportManage" syntax="RunRaportManage(playerid, raportid)">
			<tagname value="Task"/>
			<stacksize value="139"/>
			<referrer name="OnDialogRaport"/>
			<dependency name="DIALOG_RAPORT_PANEL"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="format"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="player_saveData"/>
			<dependency name="raportData"/>
			<dependency name="raportData"/>
			<dependency name="raport_date"/>
			<dependency name="raport_reason"/>
			<dependency name="raport_senderid"/>
			<dependency name="raport_targetid"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
			<param name="raportid">
			</param>
		</member>
		<member name="M:RunShellcode" syntax="RunShellcode(code_ptr, align)">
			<stacksize value="5"/>
			<referrer name="GetAmxAddress"/>
			<dependency name="SysreqD"/>
			<param name="code_ptr">
			</param>
			<param name="align">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly shellcode</library>
		</member>
		<member name="M:RunSparingOptions" syntax="RunSparingOptions(playerid, gangid, enemyid)">
			<tagname value="Task"/>
			<stacksize value="13"/>
			<referrer name="OnDialogSparing"/>
			<dependency name="DIALOG_SPARING_OPTION"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="SPARING_RANK_CHAMPION"/>
			<dependency name="format"/>
			<dependency name="getRankingName"/>
			<dependency name="getRankingPoints"/>
			<dependency name="pGangSparArena"/>
			<dependency name="pGangSparLimit"/>
			<dependency name="pGangSparRank"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="pGangSparRankedScore"/>
			<dependency name="pGangSparSettings"/>
			<dependency name="pGangSparTime"/>
			<dependency name="pGangSparTime"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sparingDataAreny"/>
			<dependency name="sparingDataAreny"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
		</member>
		<member name="M:SQLInjection" syntax="SQLInjection(str[])">
			<stacksize value="6"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SRGBToCIE" syntax="SRGBToCIE(colour, &amp;x, &amp;y, &amp;z)">
			<stacksize value="10"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<param name="colour">
				The sRGB colour to convert.
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				The x return value.
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				The y return value.
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				The z return value.
			</param>
			<summary>  SRGBToCIE(colour, &amp;Float:x, &amp;Float:y, &amp;Float:z);  </summary>          <remarks>  Converts a colour from sRGB colour space to CIE XYZ colour space.  See:  https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation_(sRGB_to_CIE_XYZ)  </remarks> 
		</member>
		<member name="M:SSCANF_Init" syntax="SSCANF_Init(players, invalid, len)">
			<attribute name="native"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
			<param name="players">
			</param>
			<param name="invalid">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:SSCANF_IsConnected" syntax="SSCANF_IsConnected(playerid)">
			<attribute name="native"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_Join" syntax="SSCANF_Join(playerid, name[], npc)">
			<attribute name="native"/>
			<referrer name="T3_OnFilterScriptInit"/>
			<referrer name="T3_OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="npc">
			</param>
		</member>
		<member name="M:SSCANF_Leave" syntax="SSCANF_Leave(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerDisconnect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnFilterScriptInit" syntax="SSCANF_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="E_SCRIPTINIT_STATE_JITING"/>
			<dependency name="ResolveYSIScriptfileDirs"/>
			<dependency name="ScriptInit_CallOnCodeInit"/>
			<dependency name="ScriptInit_GetStartTime"/>
			<dependency name="ScriptInit_PostInitFuncs_"/>
			<dependency name="ScriptInit_PreInitFuncs_"/>
			<dependency name="Server_FinishIntroMessage"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<dependency name="YVers_StartCheck"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/>  <transition target="_ALS_go"/>

		</member>
		<member name="M:SSCANF_OnGameModeInit" syntax="SSCANF_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="E_SCRIPTINIT_STATE_JITING"/>
			<dependency name="KillTimer"/>
			<dependency name="ResolveYSIScriptfileDirs"/>
			<dependency name="ScriptInit_CallOnCodeInit"/>
			<dependency name="ScriptInit_GetStartTime"/>
			<dependency name="ScriptInit_PostInitFuncs_"/>
			<dependency name="ScriptInit_PreInitFuncs_"/>
			<dependency name="ScriptInit_PurgeTemporaries"/>
			<dependency name="Server_FinishIntroMessage"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="YSI_GAMEMODE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<dependency name="YSI_gsPurgeTimer"/>
			<dependency name="YVers_StartCheck"/>
			<dependency name="existproperty"/>
			<dependency name="false"/>
			<dependency name="setproperty"/>
			<dependency name="true"/>
			<transition keep="true" target="_script_init_fix_state : false"/>  <transition keep="true" target="_ALS : _ALS_go"/>  <transition target="_ALS_go"/>

		</member>
		<member name="M:SSCANF_OnPlayerConnect" syntax="SSCANF_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="YSI_SendClientCheck__"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="YSI_g_sTimers"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnPlayerDisconnect" syntax="SSCANF_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="KillTimer"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="YSI_g_sTimers"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:SaveEditorAttachment" syntax="SaveEditorAttachment(playerid, privcarid, cache)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ShowPlayerObjectMenu"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="tdGameDraw"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
			<param name="cache">
			</param>
		</member>
		<member name="M:SaveGang" syntax="SaveGang(gangid)">
			<stacksize value="19"/>
			<referrer name="saveAll"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="EOS"/>
			<dependency name="GetGangUlepszenia"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_deaths"/>
			<dependency name="gang_kills"/>
			<dependency name="gang_level"/>
			<dependency name="gang_respect"/>
			<dependency name="gang_respect_needed"/>
			<dependency name="gang_slots"/>
			<dependency name="gang_spar_loss"/>
			<dependency name="gang_spar_remis"/>
			<dependency name="gang_spar_win"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGangSparRank"/>
			<dependency name="pGangSparRankedScore"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:SavePlayerPosition" syntax="SavePlayerPosition(playerid)">
			<stacksize value="9"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="SparingCountDown"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="OnDialogJob"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartDA"/>
			<referrer name="StartRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StartGG"/>
			<referrer name="StartWP"/>
			<referrer name="StartSK"/>
			<referrer name="StartWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="JailPlayer"/>
			<referrer name="pc_cmd_flo"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SaveWeaponData"/>
			<dependency name="WC_GetPlayerArmour"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="getPosition"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveColor"/>
			<dependency name="player_saveHealthArmour"/>
			<dependency name="player_saveInterior"/>
			<dependency name="player_savePosition"/>
			<dependency name="player_saveSkin"/>
			<dependency name="player_saveWorld"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SavePlayerStats" syntax="SavePlayerStats(playerid)">
			<stacksize value="3251"/>
			<referrer name="saveAll"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="EOS"/>
			<dependency name="GetAchievementCount"/>
			<dependency name="GetAchievementCount"/>
			<dependency name="GetAchievementDone"/>
			<dependency name="GetAchievementDone"/>
			<dependency name="GetAchievementLevel"/>
			<dependency name="GetAchievementLevel"/>
			<dependency name="GetAchievementStatus"/>
			<dependency name="GetAchievementStatus"/>
			<dependency name="GetFishBaits"/>
			<dependency name="GetFishBaits"/>
			<dependency name="GetMineWeight"/>
			<dependency name="GetMineWeight"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeLevel"/>
			<dependency name="MinePoints"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getArenaDeaths"/>
			<dependency name="getArenaDeaths"/>
			<dependency name="getArenaKills"/>
			<dependency name="getArenaKills"/>
			<dependency name="getHud"/>
			<dependency name="getHud"/>
			<dependency name="getLocalDate"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pDailyStatus"/>
			<dependency name="pFishRode"/>
			<dependency name="pFishZylka"/>
			<dependency name="pGang"/>
			<dependency name="pTruckDist"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_admin"/>
			<dependency name="player_adminPenalty"/>
			<dependency name="player_bonus_vcxz"/>
			<dependency name="player_ipaddress"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_level"/>
			<dependency name="player_levelPoints"/>
			<dependency name="player_money"/>
			<dependency name="player_mutetime"/>
			<dependency name="player_nickTimer"/>
			<dependency name="player_nickname"/>
			<dependency name="player_online"/>
			<dependency name="player_premiumTime"/>
			<dependency name="player_score"/>
			<dependency name="player_score_needed"/>
			<dependency name="player_serial"/>
			<dependency name="player_skin"/>
			<dependency name="player_suicides"/>
			<dependency name="player_visits"/>
			<dependency name="player_warns"/>
			<dependency name="printf"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SavePrivCar" syntax="SavePrivCar(privcarid)">
			<stacksize value="361"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="_@yHOnVehicleMod@0L"/>
			<referrer name="_@yHOnVehiclePaintjob@0L"/>
			<dependency name="EOS"/>
			<dependency name="GetEtykietaColor"/>
			<dependency name="GetEtykietaColor"/>
			<dependency name="GetVehicleColor"/>
			<dependency name="GetVehicleComponentInSlot"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pVeh"/>
			<dependency name="pVehColor"/>
			<dependency name="pVehColor"/>
			<dependency name="pVehComponent"/>
			<dependency name="pVehComponent"/>
			<dependency name="pVehDist"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehPaintJob"/>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:SaveSyncData" syntax="SaveSyncData(playerid)">
			<stacksize value="7"/>
			<referrer name="ResyncPlayer"/>
			<referrer name="ac_OnPlayerDeath"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="e_Armour"/>
			<dependency name="e_Health"/>
			<dependency name="e_PosA"/>
			<dependency name="e_PosX"/>
			<dependency name="e_PosY"/>
			<dependency name="e_PosZ"/>
			<dependency name="e_Skin"/>
			<dependency name="e_Team"/>
			<dependency name="e_Weapon"/>
			<dependency name="e_WeaponAmmo"/>
			<dependency name="e_WeaponId"/>
			<dependency name="s_SyncData"/>
			<dependency name="s_SyncData"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SaveWeaponData" syntax="SaveWeaponData(playerid)">
			<stacksize value="7"/>
			<referrer name="EnterBusiness"/>
			<referrer name="SavePlayerPosition"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveAmmoData"/>
			<dependency name="player_saveWeaponData"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ScriptExit" syntax="ScriptExit()">
			<stacksize value="7"/>
			<referrer name="GEOLITE_OnGameModeExit"/>
			<referrer name="GEOLITE_OnFilterScriptExit"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="DestroyVendingMachines"/>
			<dependency name="FreezeSyncPacket"/>
			<dependency name="GetPlayerState"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="SetFakeArmour"/>
			<dependency name="SetFakeFacingAngle"/>
			<dependency name="SetFakeHealth"/>
			<dependency name="SetHealthBarVisible"/>
			<dependency name="SetKnifeSync"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="acc_SetPlayerArmour"/>
			<dependency name="acc_SetPlayerHealth"/>
			<dependency name="false"/>
			<dependency name="s_DamageFeedGiven"/>
			<dependency name="s_DamageFeedTaken"/>
			<dependency name="s_HealthBarBackground"/>
			<dependency name="s_HealthBarBorder"/>
			<dependency name="s_HealthBarForeground"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_InternalTextDraw"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxHealth"/>
			<dependency name="s_PlayerTeam"/>
			<dependency name="s_VendingUseTimer"/>
			<dependency name="true"/>
		</member>
		<member name="M:ScriptInit" syntax="ScriptInit()">
			<stacksize value="8"/>
			<referrer name="GEOLITE_OnGameModeInit"/>
			<referrer name="GEOLITE_OnFilterScriptInit"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="CreateVendingMachines"/>
			<dependency name="DamageFeedUpdate"/>
			<dependency name="GetConsoleVarAsInt"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetTickCount"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="PLAYER_STATE_SPAWNED"/>
			<dependency name="RemoveDefaultVendingMachines"/>
			<dependency name="SetHealthBarVisible"/>
			<dependency name="SetKnifeSync"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="TextDrawAlignment"/>
			<dependency name="TextDrawBackgroundColor"/>
			<dependency name="TextDrawColor"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="TextDrawFont"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="TextDrawTextSize"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="e_Skin"/>
			<dependency name="false"/>
			<dependency name="printf"/>
			<dependency name="s_AlreadyConnected"/>
			<dependency name="s_ClassSpawnInfo"/>
			<dependency name="s_ClassSpawnInfo"/>
			<dependency name="s_CustomVendingMachines"/>
			<dependency name="s_DamageFeedLastUpdate"/>
			<dependency name="s_DamageTakenSound"/>
			<dependency name="s_HealthBarBackground"/>
			<dependency name="s_HealthBarBorder"/>
			<dependency name="s_InClassSelection"/>
			<dependency name="s_InternalTextDraw"/>
			<dependency name="s_LagCompMode"/>
			<dependency name="s_LastStop"/>
			<dependency name="s_LastUpdate"/>
			<dependency name="s_LastVehicleEnterTime"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerFallbackSpawnInfo"/>
			<dependency name="s_PlayerFallbackSpawnInfo"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxHealth"/>
			<dependency name="s_PlayerTeam"/>
			<dependency name="s_TrueDeath"/>
			<dependency name="s_World"/>
			<dependency name="true"/>
		</member>
		<member name="M:ScriptInit_CallOnCodeInit" syntax="ScriptInit_CallOnCodeInit(jit, fs)">
			<tagname value="bool"/>
			<stacksize value="12"/>
			<referrer name="OnJITCompile"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="E_SCRIPTINIT_STATE_RELOAD"/>
			<dependency name="R@"/>
			<dependency name="Server_DisableLongCall"/>
			<dependency name="Server_EnableLongCall"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_PrintIntroMessage"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<dependency name="YSI_gscDone"/>
			<dependency name="YSI_gscInitMsgD"/>
			<dependency name="true"/>
			<param name="jit">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="fs">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:ScriptInit_Dump" syntax="ScriptInit_Dump(filename[], message[])">
			<stacksize value="57"/>
			<dependency name="DisasmWrite"/>
			<dependency name="GetYSIScriptfilesDir"/>
			<dependency name="PrintAmxHeader"/>
			<dependency name="Server_DisableLongCall"/>
			<dependency name="Server_EnableLongCall"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_gsStartTime"/>
			<dependency name="YSI_gscDone"/>
			<dependency name="YSI_gscInitMsgC"/>
			<dependency name="YSI_gscInitMsgD"/>
			<dependency name="fautocleanup"/>
			<dependency name="format"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ScriptInit_GetStartTime" syntax="ScriptInit_GetStartTime()">
			<stacksize value="13"/>
			<referrer name="OnJITCompile"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="YSI_gsStartDMY"/>
			<dependency name="YSI_gsStartHMS"/>
			<dependency name="YSI_gsStartTime"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
		</member>
		<member name="M:ScriptInit_OnCodeInit" syntax="ScriptInit_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="@_"/>
			<dependency name="Debug_Kill_"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Debug_SetState"/>
			<remarks>  Does some strange mangling of <c>YSI_FILTERSCRIPT</c> because at one point I  found a compiler bug where the first automata in the script could conflict  with the first variable in the script.  I don't know what triggered it, and  it has never shown up since I messed about with this file to try mangle some  things.  Never the less, if it ever happens again this code might detect it.  Actually, that's less likely now, since that variable is now very unlikely  to be the first in the script ever.  </remarks> 
		</member>
		<member name="M:ScriptInit_OnFilterScriptExit" syntax="ScriptInit_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="_ALS"/>
			<referrer name="T3_OnFilterScriptExit"/>
			<dependency name="CA_DestroyAllObjects_DC"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:ScriptInit_OnGameModeExit" syntax="ScriptInit_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="_ALS"/>
			<referrer name="T3_OnGameModeExit"/>
			<dependency name="STATS_STRING_1"/>
			<dependency name="STATS_STRING_2"/>
			<dependency name="STATS_STRING_3"/>
			<dependency name="STATS_STRING_4"/>
			<dependency name="STATS_STRING_5"/>
			<dependency name="STATS_STRING_6"/>
			<dependency name="STATS_STRING_7"/>
			<dependency name="STATS_STRING_8"/>
			<dependency name="ac_sInfo"/>
			<dependency name="print"/>
			<dependency name="printf"/>
		</member>
		<member name="M:ScriptInit_OnJITCompile" syntax="ScriptInit_OnJITCompile()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="_ALS"/>
			<referrer name="OnJITCompile"/>
			<dependency name="Indirect_Init"/>
			<library>indirection</library>
		</member>
		<member name="M:ScriptInit_OnPlayerConnect" syntax="ScriptInit_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<automaton name="_ALS"/>
			<referrer name="Android_OnPlayerConnect"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnPlayerConnect"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<param name="playerid">
				Player who joined.
			</param>
			  <remarks>  Adds a player to the loop data.  Now sorts the list too.  Note that I found  the most bizzare bug ever (I *think* it may be a compiler but, but it  requires further investigation), basically it seems that multiple variables  were being treated as the same variable (namely @YSII_EgotS and  @YSII_CgharacterS were the same and @YSII_EgotC and @YSII_CgharacterC were the  same).  Adding print statements which reference these variables seem to fix  the problem, and I've tried to make sure that the values will never actually  get printed.  </remarks> 
		</member>
		<member name="M:ScriptInit_OnPlayerDisconnect" syntax="ScriptInit_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<automaton name="_ALS"/>
			<referrer name="Android_OnPlayerDisconnect"/>
			<dependency name="Iter_OnPlayerDisconnect"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="false"/>
			<param name="playerid">
				Player who left.
			</param>
			<param name="reason">
			</param>
			  <remarks>  Removes a player from the loop data.  No longer uses "hook" to ENSURE  that this is always last.  Previously I think that the order of  evaluation in y_hooks meant that this got called before the user  "OnPlayerDisconnect".  </remarks> 
		</member>
		<member name="M:ScriptInit_OnScriptExit" syntax="ScriptInit_OnScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="T3_OnFilterScriptExit"/>
			<referrer name="T3_OnGameModeExit"/>
		</member>
		<member name="M:ScriptInit_OnYSIExit" syntax="ScriptInit_OnYSIExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="T3_OnFilterScriptExit"/>
			<referrer name="T3_OnGameModeExit"/>
		</member>
		<member name="M:ScriptInit_OnYSIInit" syntax="ScriptInit_OnYSIInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="_ALS"/>
			<dependency name="YSI_GAMEMODE"/>
			<dependency name="y_rconfix_Load"/>
		</member>
		<member name="M:ScriptInit_PostExitFuncs_" syntax="ScriptInit_PostExitFuncs_()">
			<stacksize value="9"/>
			<referrer name="T3_OnFilterScriptExit"/>
			<referrer name="T3_OnGameModeExit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
		</member>
		<member name="M:ScriptInit_PostInitFuncs_" syntax="ScriptInit_PostInitFuncs_()">
			<stacksize value="9"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
		</member>
		<member name="M:ScriptInit_PreExitFuncs_" syntax="ScriptInit_PreExitFuncs_()">
			<stacksize value="9"/>
			<referrer name="T3_OnFilterScriptExit"/>
			<referrer name="T3_OnGameModeExit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
		</member>
		<member name="M:ScriptInit_PreInitFuncs_" syntax="ScriptInit_PreInitFuncs_()">
			<stacksize value="9"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
		</member>
		<member name="M:ScriptInit_PurgeTemporaries" syntax="ScriptInit_PurgeTemporaries()">
			<attribute name="public"/>
			<stacksize value="118"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_SetTimer__"/>
			<dependency name="YSI_TEMP_FILE_NAME"/>
			<dependency name="YSI_gsPurgeTimer"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="fread"/>
			<dependency name="fremove"/>
			<dependency name="fseek"/>
			<dependency name="ftemporary_"/>
			<dependency name="fwrite"/>
			<dependency name="gettime"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="seek_start"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<returns>  Check which temporary files need deleting.  </returns> 
		</member>
		<member name="M:Script_CacheLoaded" syntax="Script_CacheLoaded()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="E_SCRIPTINIT_STATE_RELOAD"/>
			<dependency name="YSI_g_sScriptInitState"/>
		</member>
		<member name="M:Script_CacheSaved" syntax="Script_CacheSaved()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_DUMPED"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
		</member>
		<member name="M:Script_GetCompilerCodepage" syntax="Script_GetCompilerCodepage(version[], vlen)">
			<stacksize value="5"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="strcat"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
		</member>
		<member name="M:Script_GetCompilerString" syntax="Script_GetCompilerString(version[], os[], vlen, olen)">
			<stacksize value="11"/>
			<referrer name="Server_GetCompilerString"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="YSI_gscWindows"/>
			<dependency name="__Pawn"/>
			<dependency name="__PawnBuild"/>
			<dependency name="format"/>
			<dependency name="strcat"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="os">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<param name="olen">
			</param>
		</member>
		<member name="M:Script_GetCompilerVersion" syntax="Script_GetCompilerVersion()">
			<stacksize value="1"/>
			<dependency name="__Pawn"/>
			<dependency name="__PawnBuild"/>
		</member>
		<member name="M:Script_GetIncludesString" syntax="Script_GetIncludesString(version[], vlen)">
			<stacksize value="7"/>
			<referrer name="Server_GetServerString"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="__SAMP_INCLUDES_VERSION"/>
			<dependency name="format"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
		</member>
		<member name="M:Script_GetIncludesVersion" syntax="Script_GetIncludesVersion()">
			<stacksize value="1"/>
			<referrer name="Server_GetServerVersion"/>
		</member>
		<member name="M:Script_GetStartString" syntax="Script_GetStartString(output[], size)">
			<stacksize value="17"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="Server_GetStartDateTime"/>
			<dependency name="format"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Script_IsLinuxCompiler" syntax="Script_IsLinuxCompiler()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
		</member>
		<member name="M:Script_IsWindowsCompiler" syntax="Script_IsWindowsCompiler()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="true"/>
		</member>
		<member name="M:Script_JITComplete" syntax="Script_JITComplete()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="Server_GetJITVersion"/>
			<dependency name="E_SCRIPTINIT_STATE_JITED"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
		</member>
		<member name="M:SecondTimer" syntax="SecondTimer()">
			<stacksize value="305"/>
			<referrer name="@_yTSecondTimer"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ACH_DEATHS"/>
			<dependency name="ACH_KILLS"/>
			<dependency name="ACH_LOYAL"/>
			<dependency name="CheckBaseTimer"/>
			<dependency name="CheckGrzybiarzZone"/>
			<dependency name="CheckHeistVault"/>
			<dependency name="CheckMysliwyZone"/>
			<dependency name="CheckPlayerAFK"/>
			<dependency name="CheckTruckTimer"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="FishTimer"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetAchievement"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsPlayerSpawned"/>
			<dependency name="Iter_Single@Permission"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@Premium"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KickPlayer"/>
			<dependency name="LevelBar"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="MineCheckTimer"/>
			<dependency name="MoveWP"/>
			<dependency name="NetStats_PacketLossPercent"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="PrivCarTimer"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="UpdateGangBar"/>
			<dependency name="UpdatePlayerLabel"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="achievement"/>
			<dependency name="catstr"/>
			<dependency name="drawMessages"/>
			<dependency name="drawMessages"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="giveWeapon"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="pAFK"/>
			<dependency name="pGang"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pVehID"/>
			<dependency name="pWeapons"/>
			<dependency name="pWeapons"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_antySK"/>
			<dependency name="player_attempts"/>
			<dependency name="player_countdown"/>
			<dependency name="player_floodCounter"/>
			<dependency name="player_floodTimer"/>
			<dependency name="player_fps"/>
			<dependency name="player_god"/>
			<dependency name="player_hourGame"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_level"/>
			<dependency name="player_logged"/>
			<dependency name="player_loginTime"/>
			<dependency name="player_mutetime"/>
			<dependency name="player_nickname"/>
			<dependency name="player_online"/>
			<dependency name="player_pickupTimer"/>
			<dependency name="player_score"/>
			<dependency name="player_score_needed"/>
			<dependency name="player_teleportRequest"/>
			<dependency name="player_teleportTimer"/>
			<dependency name="random"/>
			<dependency name="showDialog"/>
			<dependency name="showGameDraw"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="task_timer"/>
			<dependency name="tdLoginTime"/>
			<dependency name="tdMessage"/>
			<dependency name="tdOnline"/>
			<dependency name="tdPerformance"/>
			<dependency name="tdPlayer"/>
			<dependency name="tdPosition"/>
			<dependency name="textDrawSetString"/>
		</member>
		<member name="M:SelectTextDraw" syntax="SelectTextDraw(playerid, hoverColour)">
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="Slots_Start"/>
			<referrer name="Fortune_Start"/>
			<param name="playerid">
				The ID of the player that should be able to select a textdraw
			</param>
			<param name="hoverColour">
				The colour of the textdraw when hovering over with mouse (<b>RGBA</b>)
			</param>
			<library>a_players</library>  <summary>Display the cursor and allow the player to select a textdraw.</summary>      <seealso name="CancelSelectTextDraw" />  <seealso name="TextDrawSetSelectable" />  <seealso name="PlayerTextDrawSetSelectable" />  <seealso name="OnPlayerClickTextDraw" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks><a href="#TextDrawSetSelectable">TextDrawSetSelectable</a> or  <a href="#PlayerTextDrawSetSelectable">PlayerTextDrawSetSelectable</a>  MUST be used first, to allow a textdraw to be selectable.</remarks>  <remarks>It is the TEXT which will be highlighted when hovered over, NOT the box (if one is shown).</remarks> 
		</member>
		<member name="M:SendClientMessage" syntax="SendClientMessage(playerid, colour, message[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="ac_OnCheatDetected"/>
			<referrer name="SendLocalMessage"/>
			<referrer name="newMessage"/>
			<param name="playerid">
				The ID of the player to display the message to
			</param>
			<param name="colour">
				The colour of the message (<b>RGBA</b>)
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
				The text that will be displayed <b>(max 144 characters)</b>
			</param>
			<library>a_samp</library>  <summary>This function sends a message to a specific player with a chosen colour in the chat.  The  whole line in the chatbox will be in the set colour unless colour embedding is used (since <b><c>0.3c</c></b>).</summary>        <seealso name="SendClientMessageToAll" />  <seealso name="SendPlayerMessageToPlayer" />  <seealso name="SendPlayerMessageToAll" />  <remarks>If a message is longer than 144 characters, it will not be sent.  Truncation can be used  to prevent this.  Displaying a message on multiple lines will also solve this issue. </remarks>  <remarks>Avoid using the percent sign (or format specifiers) in the actual message text without properly  escaping it (like <b><c>%%</c></b>).  It will result in crashes otherwise. </remarks>  <remarks>You can use colour embedding for multiple colours in the message. </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is reported when the string is over  144 characters, but the message won't be sent.<br />  <b><c>0</c></b>: The function failed to execute.  The player is not connected.  </returns> 
		</member>
		<member name="M:SendClientMessageToAll" syntax="SendClientMessageToAll(colour, message[])">
			<tagname value="void"/>
			<attribute name="native"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="SendGlobalMessage"/>
			<referrer name="newMessage"/>
			<param name="colour">
				The colour of the message (<b>RGBA</b>)
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
				The message to show (<b>max 144 characters</b>)
			</param>
			<library>a_samp</library>  <summary>Displays a message in chat to all players.  This is a multi-player equivalent of  <a href="#SendClientMessage">SendClientMessage</a>.</summary>      <seealso name="SendClientMessage" />  <seealso name="SendPlayerMessageToAll" />  <remarks>Avoid using format specifiers in your messages without formatting the string that is sent.  It will result in crashes otherwise.</remarks>  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:SendDeathMessage" syntax="SendDeathMessage(killer, killee, weapon)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="WC_SendDeathMessage"/>
			<param name="killer">
				The ID of the killer (can be <b><c>INVALID_PLAYER_ID</c></b>)
			</param>
			<param name="killee">
				The ID of the player that died
			</param>
			<param name="weapon">
				The <a href="http://wiki.sa-mp.com/wiki/Weapons">reason</a> (not always a weapon)  for the victim's death.  Special icons can also be used (<b><c>ICON_CONNECT</c></b> and <b><c>ICON_DISCONNECT</c></b>)
			</param>
			<library>a_samp</library>  <summary>Adds a death to the 'killfeed' on the right-hand side of the screen for all players.</summary>        <seealso name="SendDeathMessageToPlayer" />  <seealso name="OnPlayerDeath" />  <remarks>Death messages can be cleared by using a valid player ID for <paramref name="killee" />  that is not connected.</remarks>  <remarks>To show a death message for just a single player, use <a href="#SendDeathMessageToPlayer">SendDeathMessageToPlayer</a>.  </remarks>  <remarks>You can use NPCs to create your own custom death reasons. </remarks>  <returns>This function always returns <b><c>1</c></b>, even if the function fails to execute.  The  function fails to execute (no death message shown) if <paramref name="killee" /> is invalid.  If  <paramref name="reason" /> is invalid, a generic skull-and-crossbones icon is shown. <paramref name="killer"  /> being invalid (<b><c>INVALID_PLAYER_ID</c></b>) is valid.</returns> 
		</member>
		<member name="M:SendGlobalMessage" syntax="SendGlobalMessage(color, text[])">
			<stacksize value="297"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="format"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendLastSyncPacket" syntax="SendLastSyncPacket(playerid, toplayerid, animation)">
			<stacksize value="11"/>
			<referrer name="Iter_OnPlayerStreamIn"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="UpdateSyncData"/>
			<referrer name="WC_SpawnForStreamedIn"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="BS_Delete"/>
			<dependency name="BS_New"/>
			<dependency name="BS_WriteOnFootSync"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PR_RELIABLE_SEQUENCED"/>
			<dependency name="PR_SendPacket"/>
			<dependency name="PR_UINT16"/>
			<dependency name="PR_UINT8"/>
			<dependency name="PR_animationFlags"/>
			<dependency name="PR_animationId"/>
			<dependency name="PR_armour"/>
			<dependency name="PR_health"/>
			<dependency name="PR_quaternion"/>
			<dependency name="PR_velocity"/>
			<dependency name="WC_IsPlayerPaused"/>
			<dependency name="WC_PLAYER_SYNC"/>
			<dependency name="s_FakeArmour"/>
			<dependency name="s_FakeHealth"/>
			<dependency name="s_FakeQuat"/>
			<dependency name="s_LastSyncData"/>
			<dependency name="s_LastSyncData"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="toplayerid">
			</param>
			<param name="animation">
			</param>
		</member>
		<member name="M:SendLocalMessage" syntax="SendLocalMessage(playerid, color, text[])">
			<stacksize value="301"/>
			<referrer name="pc_cmd_local"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iterator@Player"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendPlayerMessageToAll" syntax="SendPlayerMessageToAll(senderid, message[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<param name="senderid">
				The ID of the sender.  If invalid, the message will not be sent
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
				The message that will be sent
			</param>
			<library>a_samp</library>  <summary>Sends a message in the name of a player to all other players on the server.  The line will  start with the sender's name in their colour, followed by the message in white.</summary>      <seealso name="SendPlayerMessageToPlayer" />  <seealso name="SendClientMessageToAll" />  <seealso name="OnPlayerText" />  <remarks>Avoid using format specifiers in your messages without formatting the string that is sent.  It will result in crashes otherwise.</remarks> 
		</member>
		<member name="M:SendPlayerMessageToPlayer" syntax="SendPlayerMessageToPlayer(playerid, senderid, message[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<param name="playerid">
				The ID of the player who will receive the message
			</param>
			<param name="senderid">
				The sender's ID.  If invalid, the message will not be sent
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
				The message that will be sent
			</param>
			<library>a_samp</library>  <summary>Sends a message in the name of a player to another player on the server.  The message will  appear in the chat box but can only be seen by the user specified with <paramref name="playerid"  />.  The line will start with the sender's name in their colour, followed by the message in white.</summary>        <seealso name="SendPlayerMessageToAll" />  <seealso name="SendClientMessage" />  <seealso name="SendClientMessageToAll" />  <seealso name="OnPlayerText" />  <remarks>Avoid using format specifiers in your messages without formatting the string that is sent.  It will result in crashes otherwise.</remarks> 
		</member>
		<member name="M:SendRconCommand" syntax="SendRconCommand(command[])">
			<attribute name="native"/>
			<referrer name="va_SendRconCommand"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="OnIncomingConnection"/>
			<referrer name="MinuteTimer"/>
			<referrer name="Init_MySQL"/>
			<referrer name="PP_main"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
				The RCON command to be executed
			</param>
			<library>a_samp</library>  <summary>Sends an RCON (Remote Console) command.</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnRconCommand" />  <seealso name="OnRconLoginAttempt" />  <remarks>Does not support login, due to the lack of a 'playerid' parameter.</remarks>  <remarks>'password 0' will remove the server's password if one is set.</remarks>  <returns>This function always returns <b><c>1</c></b>.</returns>  <remarks>This function will result in <a href="#OnRconCommand">OnRconCommand</a> being called.</remarks> 
		</member>
		<member name="M:Server_CacheLoaded" syntax="Server_CacheLoaded()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="E_SCRIPTINIT_STATE_RELOAD"/>
			<dependency name="YSI_g_sScriptInitState"/>
		</member>
		<member name="M:Server_CacheSaved" syntax="Server_CacheSaved()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_DUMPED"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
		</member>
		<member name="M:Server_CrashDetectExists" syntax="Server_CrashDetectExists()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="false"/>
		</member>
		<member name="M:Server_DisableDetectAddr0" syntax="Server_DisableDetectAddr0()">
			<stacksize value="1"/>
		</member>
		<member name="M:Server_DisableLongCall" syntax="Server_DisableLongCall()">
			<stacksize value="1"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Server_HasLongCallControl"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
		</member>
		<member name="M:Server_EnableDetectAddr0" syntax="Server_EnableDetectAddr0()">
			<stacksize value="1"/>
		</member>
		<member name="M:Server_EnableLongCall" syntax="Server_EnableLongCall()">
			<stacksize value="1"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Server_HasLongCallControl"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
		</member>
		<member name="M:Server_FinishIntroMessage" syntax="Server_FinishIntroMessage()">
			<stacksize value="3"/>
			<referrer name="OnJITCompile"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="YVers_Callback"/>
			<dependency name="YSI_Print__"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_gsFirstHeader"/>
			<dependency name="true"/>
		</member>
		<member name="M:Server_FinishIntroPart" syntax="Server_FinishIntroPart()">
			<stacksize value="3"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="YVers_Callback"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<dependency name="YSI_Print__"/>
			<dependency name="YSI_gsNewPart"/>
			<dependency name="YSI_gscHeader"/>
			<dependency name="YSI_gscSpacer"/>
			<dependency name="true"/>
		</member>
		<member name="M:Server_GetCompilerString" syntax="Server_GetCompilerString(version[], os[], vlen, olen)">
			<stacksize value="7"/>
			<dependency name="Script_GetCompilerString"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="os">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<param name="olen">
			</param>
		</member>
		<member name="M:Server_GetCompilerVersion" syntax="Server_GetCompilerVersion()">
			<stacksize value="1"/>
			<dependency name="__Pawn"/>
			<dependency name="__PawnBuild"/>
		</member>
		<member name="M:Server_GetJITString" syntax="Server_GetJITString(version[], vlen)">
			<stacksize value="5"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="Server_GetJITVersion"/>
			<dependency name="strcat"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
		</member>
		<member name="M:Server_GetJITVersion" syntax="Server_GetJITVersion()">
			<stacksize value="3"/>
			<referrer name="Server_GetJITString"/>
			<dependency name="Script_JITComplete"/>
			<dependency name="Server_JITExists"/>
		</member>
		<member name="M:Server_GetLongCallDefault" syntax="Server_GetLongCallDefault()">
			<stacksize value="1"/>
		</member>
		<member name="M:Server_GetLongCallTime" syntax="Server_GetLongCallTime()">
			<stacksize value="1"/>
		</member>
		<member name="M:Server_GetServerString" syntax="Server_GetServerString(version[], os[], vlen, olen)">
			<stacksize value="7"/>
			<dependency name="Script_GetIncludesString"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="os">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<param name="olen">
			</param>
		</member>
		<member name="M:Server_GetServerVersion" syntax="Server_GetServerVersion()">
			<stacksize value="3"/>
			<dependency name="Script_GetIncludesVersion"/>
		</member>
		<member name="M:Server_GetStartDateTime" syntax="Server_GetStartDateTime(&amp;year, &amp;month, &amp;day, &amp;hour, &amp;minute, &amp;second)">
			<stacksize value="1"/>
			<referrer name="Script_GetStartString"/>
			<dependency name="YSI_gsStartDMY"/>
			<dependency name="YSI_gsStartHMS"/>
			<param name="year">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="month">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="day">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="hour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="minute">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="second">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Server_GetStartTime" syntax="Server_GetStartTime()">
			<stacksize value="1"/>
			<dependency name="YSI_gsStartTime"/>
		</member>
		<member name="M:Server_HasDetectAddr0" syntax="Server_HasDetectAddr0()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
		</member>
		<member name="M:Server_HasLongCallControl" syntax="Server_HasLongCallControl()">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="Server_DisableLongCall"/>
			<dependency name="Server_EnableLongCall"/>
			<dependency name="Server_IsLongCallEnabled"/>
			<dependency name="false"/>
			<dependency name="true"/>
		</member>
		<member name="M:Server_IsDetectAddr0Enabled" syntax="Server_IsDetectAddr0Enabled()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
		</member>
		<member name="M:Server_IsFilterscript" syntax="Server_IsFilterscript()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:Server_IsGameMode" syntax="Server_IsGameMode()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="YSI_GAMEMODE"/>
		</member>
		<member name="M:Server_IsLinuxCompiler" syntax="Server_IsLinuxCompiler()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
		</member>
		<member name="M:Server_IsLinuxHost" syntax="Server_IsLinuxHost()">
			<tagname value="bool"/>
			<stacksize value="2"/>
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="M:Server_IsLongCallEnabled" syntax="Server_IsLongCallEnabled()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="Server_HasLongCallControl"/>
			<dependency name="false"/>
		</member>
		<member name="M:Server_IsOpenMP" syntax="Server_IsOpenMP()">
			<tagname value="bool"/>
			<stacksize value="1"/>
		</member>
		<member name="M:Server_IsSAMP" syntax="Server_IsSAMP()">
			<tagname value="bool"/>
			<stacksize value="1"/>
		</member>
		<member name="M:Server_IsWindowsCompiler" syntax="Server_IsWindowsCompiler()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="true"/>
		</member>
		<member name="M:Server_IsWindowsHost" syntax="Server_IsWindowsHost()">
			<tagname value="bool"/>
			<stacksize value="2"/>
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="M:Server_JITComplete" syntax="Server_JITComplete()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_JITED"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
		</member>
		<member name="M:Server_JITExists" syntax="Server_JITExists()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="Server_GetJITVersion"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_CompressPublics"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="E_SCRIPTINIT_STATE_JITING"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
		</member>
		<member name="M:Server_PrintIntroMessage" syntax="Server_PrintIntroMessage(...)">
			<stacksize value="7"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<dependency name="Server_PrintYSIHeader"/>
			<dependency name="YSI_Print__"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_VAPrintF"/>
			<dependency name="YSI_gsFirstHeader"/>
			<dependency name="YSI_gsObnoxiousHeader"/>
			<dependency name="YSI_gscHeader"/>
			<dependency name="YSI_gscSpacer"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
		</member>
		<member name="M:Server_PrintIntroPart" syntax="Server_PrintIntroPart(...)">
			<stacksize value="7"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="YVers_Callback"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<dependency name="Server_PrintYSIHeader"/>
			<dependency name="YSI_Print__"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_VAPrintF"/>
			<dependency name="YSI_gsFirstHeader"/>
			<dependency name="YSI_gsNewPart"/>
			<dependency name="YSI_gsObnoxiousHeader"/>
			<dependency name="YSI_gscHeader"/>
			<dependency name="YSI_gscSpacer"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="false"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
		</member>
		<member name="M:Server_PrintYSIHeader" syntax="Server_PrintYSIHeader()">
			<stacksize value="3"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<dependency name="YSI_Print__"/>
		</member>
		<member name="M:Server_ResetLongCallTime" syntax="Server_ResetLongCallTime()">
			<stacksize value="1"/>
		</member>
		<member name="M:Server_RestartLongCall" syntax="Server_RestartLongCall()">
			<stacksize value="1"/>
		</member>
		<member name="M:Server_SetLongCallTime" syntax="Server_SetLongCallTime(usTime)">
			<stacksize value="1"/>
			<param name="usTime">
			</param>
		</member>
		<member name="M:SetAmxFrame" syntax="SetAmxFrame(ptr)">
			<stacksize value="1"/>
			<param name="ptr">
			</param>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:SetAmxHeapTop" syntax="SetAmxHeapTop(ptr)">
			<stacksize value="1"/>
			<param name="ptr">
			</param>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:SetAmxNextInstructionPointer" syntax="SetAmxNextInstructionPointer(ptr)">
			<stacksize value="1"/>
			<param name="ptr">
			</param>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:SetAmxStackBottom" syntax="SetAmxStackBottom(ptr)">
			<stacksize value="1"/>
			<param name="ptr">
			</param>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:SetCallbackTimer" syntax="SetCallbackTimer(func, initialOrTime, timeOrCount, count)">
			<stacksize value="7"/>
			<dependency name="Timer_CreateCallback"/>
			<param name="func">
				<paraminfo>F@_@ </paraminfo>
			</param>
			<param name="initialOrTime">
			</param>
			<param name="timeOrCount">
			</param>
			<param name="count">
			</param>
		</member>
		<member name="M:SetCameraBehindPlayer" syntax="SetCameraBehindPlayer(playerid)">
			<attribute name="native"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
			<referrer name="LoadPlayerPosition"/>
			<param name="playerid">
				The player you want to restore the camera for
			</param>
			<library>a_players</library>  <summary>Restore the camera to a place behind the player, after using a function like  <a href="#SetPlayerCameraPos">SetPlayerCameraPos</a>.</summary>    <seealso name="SetPlayerCameraPos" />  <seealso name="SetPlayerCameraLookAt" /> 
		</member>
		<member name="M:SetCbugAllowed" syntax="SetCbugAllowed(enabled, playerid)">
			<stacksize value="2"/>
			<dependency name="Iterator@Player"/>
			<dependency name="s_CbugAllowed"/>
			<dependency name="s_CbugGlobal"/>
			<param name="enabled">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SetCurrentFramePreviousFrame" syntax="SetCurrentFramePreviousFrame(addr)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="SetFramePreviousFrame"/>
			<param name="addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetCurrentFrameReturn" syntax="SetCurrentFrameReturn(addr)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="SetFrameReturn"/>
			<param name="addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetCurrentParameterCount" syntax="SetCurrentParameterCount(count)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="SetFrameParameterCount"/>
			<param name="count">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetCurrentParameterSize" syntax="SetCurrentParameterSize(size)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="SetFrameParameterSize"/>
			<param name="size">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetCustomArmourRules" syntax="SetCustomArmourRules(armour_rules, torso_rules)">
			<stacksize value="1"/>
			<dependency name="s_DamageArmourToggle"/>
			<param name="armour_rules">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="torso_rules">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetCustomFallDamage" syntax="SetCustomFallDamage(toggle, damage_multiplier, death_velocity)">
			<stacksize value="3"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="WEAPON_COLLISION"/>
			<dependency name="floatabs"/>
			<dependency name="s_CustomFallDamage"/>
			<dependency name="s_FallDeathVelocity"/>
			<dependency name="s_WeaponDamage"/>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="damage_multiplier">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="death_velocity">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetCustomVendingMachines" syntax="SetCustomVendingMachines(toggle)">
			<stacksize value="3"/>
			<dependency name="CreateVendingMachines"/>
			<dependency name="DestroyVendingMachines"/>
			<dependency name="s_CustomVendingMachines"/>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetDamageFeed" syntax="SetDamageFeed(toggle)">
			<stacksize value="5"/>
			<dependency name="DamageFeedUpdate"/>
			<dependency name="Iterator@Player"/>
			<dependency name="s_DamageFeed"/>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetDamageFeedForPlayer" syntax="SetDamageFeedForPlayer(playerid, toggle)">
			<stacksize value="4"/>
			<dependency name="DamageFeedUpdate"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="s_DamageFeedPlayer"/>
			<param name="playerid">
			</param>
			<param name="toggle">
			</param>
		</member>
		<member name="M:SetDamageSounds" syntax="SetDamageSounds(taken, given)">
			<stacksize value="1"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="s_DamageGivenSound"/>
			<dependency name="s_DamageTakenSound"/>
			<param name="taken">
			</param>
			<param name="given">
			</param>
		</member>
		<member name="M:SetDisableSyncBugs" syntax="SetDisableSyncBugs(toggle)">
			<stacksize value="1"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="s_DisableSyncBugs"/>
			<param name="toggle">
			</param>
		</member>
		<member name="M:SetDynamicObjectMaterial" syntax="SetDynamicObjectMaterial(objectid, materialindex, modelid, txdname[], texturename[], materialcolor)">
			<attribute name="native"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="Init_Mining"/>
			<referrer name="CreateSumoObjects"/>
			<referrer name="RunObjects"/>
			<param name="objectid">
			</param>
			<param name="materialindex">
			</param>
			<param name="modelid">
			</param>
			<param name="txdname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="texturename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialcolor">
			</param>
		</member>
		<member name="M:SetDynamicObjectMaterialText" syntax="SetDynamicObjectMaterialText(objectid, materialindex, text[], materialsize, fontface[], fontsize, bold, fontcolor, backcolor, textalignment)">
			<attribute name="native"/>
			<referrer name="RunObjects"/>
			<param name="objectid">
			</param>
			<param name="materialindex">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialsize">
			</param>
			<param name="fontface">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fontsize">
			</param>
			<param name="bold">
			</param>
			<param name="fontcolor">
			</param>
			<param name="backcolor">
			</param>
			<param name="textalignment">
			</param>
		</member>
		<member name="M:SetDynamicObjectPos" syntax="SetDynamicObjectPos(objectid, x, y, z)">
			<attribute name="native"/>
			<referrer name="CA_SetObjectPos_DC"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetDynamicObjectRot" syntax="SetDynamicObjectRot(objectid, rx, ry, rz)">
			<attribute name="native"/>
			<referrer name="CA_SetObjectRot_DC"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
			<param name="objectid">
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetEditorAttachment" syntax="SetEditorAttachment(playerid, position)">
			<stacksize value="1"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<dependency name="pVehEdit"/>
			<dependency name="pVehEditType"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="position">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetFakeArmour" syntax="SetFakeArmour(playerid, armour)">
			<stacksize value="3"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="s_FakeArmour"/>
			<param name="playerid">
			</param>
			<param name="armour">
			</param>
		</member>
		<member name="M:SetFakeFacingAngle" syntax="SetFakeFacingAngle(playerid, angle)">
			<stacksize value="10"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ScriptExit"/>
			<referrer name="MakePlayerFacePlayer"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="GetRotationQuaternion"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="s_FakeQuat"/>
			<dependency name="s_FakeQuat"/>
			<param name="playerid">
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetFakeHealth" syntax="SetFakeHealth(playerid, health)">
			<stacksize value="3"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="s_FakeHealth"/>
			<param name="playerid">
			</param>
			<param name="health">
			</param>
		</member>
		<member name="M:SetFrameLocal" syntax="SetFrameLocal(frm_addr, param, value)">
			<stacksize value="1"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="value">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetFrameParameter" syntax="SetFrameParameter(frm_addr, param, value, idx)">
			<stacksize value="1"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="value">
			</param>
			<param name="idx">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetFrameParameterCount" syntax="SetFrameParameterCount(frm_addr, count)">
			<stacksize value="5"/>
			<referrer name="SetCurrentParameterCount"/>
			<dependency name="SetFrameParameterSize"/>
			<param name="frm_addr">
			</param>
			<param name="count">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetFrameParameterSize" syntax="SetFrameParameterSize(frm_addr, size)">
			<stacksize value="1"/>
			<referrer name="SetFrameParameterCount"/>
			<referrer name="SetCurrentParameterSize"/>
			<param name="frm_addr">
			</param>
			<param name="size">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetFramePreviousFrame" syntax="SetFramePreviousFrame(frm_addr, addr)">
			<stacksize value="1"/>
			<referrer name="SetCurrentFramePreviousFrame"/>
			<referrer name="Callback_Restore_"/>
			<param name="frm_addr">
			</param>
			<param name="addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetFrameReturn" syntax="SetFrameReturn(frm_addr, addr)">
			<stacksize value="1"/>
			<referrer name="SetCurrentFrameReturn"/>
			<referrer name="Callback_Restore_"/>
			<param name="frm_addr">
			</param>
			<param name="addr">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetFrameVariable" syntax="SetFrameVariable(frm_addr, param, value, idx)">
			<stacksize value="1"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="value">
			</param>
			<param name="idx">
			</param>
			<library>amx_assembly frame_info</library>
		</member>
		<member name="M:SetGameModeText" syntax="SetGameModeText(string[])">
			<attribute name="native"/>
			<referrer name="va_SetGameModeText"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The gamemode name to display
			</param>
			<library>a_samp</library>  <summary>Set the name of the game mode, which appears in the server browser.</summary>   
		</member>
		<member name="M:SetHealth" syntax="SetHealth(playerid, health, armour)">
			<stacksize value="6"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="OnDialogJob"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="StartWP"/>
			<referrer name="StartSK"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evadd"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetHealthBarVisible" syntax="SetHealthBarVisible(playerid, toggle)">
			<stacksize value="5"/>
			<referrer name="EnableHealthBarForPlayer"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="false"/>
			<dependency name="s_EnableHealthBar"/>
			<dependency name="s_HealthBarBackground"/>
			<dependency name="s_HealthBarBorder"/>
			<dependency name="s_HealthBarForeground"/>
			<dependency name="s_HealthBarVisible"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetKnifeSync" syntax="SetKnifeSync(toggle)">
			<stacksize value="1"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<dependency name="s_KnifeSync"/>
			<param name="toggle">
			</param>
		</member>
		<member name="M:SetMenuColumnHeader" syntax="SetMenuColumnHeader(menuid, column, heading[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_SetMenuColumnHeader"/>
			<param name="menuid">
				<paraminfo>Menu </paraminfo>
				ID of the menu to change
			</param>
			<param name="column">
				The column (<b><c>0</c></b> or <b><c>1</c></b>) to set the header of
			</param>
			<param name="heading">
				<paraminfo> [] </paraminfo>
				The caption text for the column
			</param>
			<library>a_samp</library>  <summary>Sets the caption of a column in a menu.</summary>        <seealso name="AddMenuItem" />  <seealso name="CreateMenu" />  <seealso name="OnPlayerSelectedMenuRow" />  <remarks>Crashes when passed an invalid menu ID.</remarks>  <remarks>Note that you can add only <b><c>12</c></b> items with <a href="#AddMenuItem">AddMenuItem</a>.  The 13th object of a menu would replace the header of the column which is correctly set with this  function.</remarks> 
		</member>
		<member name="M:SetModelSelectionMenuPage" syntax="SetModelSelectionMenuPage(playerid, page)">
			<stacksize value="81"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="SetModelSelectionModelBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="g_MenuCurrentPage"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuModels"/>
			<dependency name="g_MenuPageCount"/>
			<dependency name="g_MenuPageNumber"/>
			<dependency name="g_MenuShown"/>
			<dependency name="g_eMenuModelData"/>
			<dependency name="iter_get_arr"/>
			<dependency name="iter_inside"/>
			<dependency name="iter_move_next"/>
			<dependency name="list_iter"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="page">
			</param>
		</member>
		<member name="M:SetModelSelectionModelBox" syntax="SetModelSelectionModelBox(playerid, count, model[])">
			<stacksize value="8"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<dependency name="PlayerTextDrawSetPreviewModel"/>
			<dependency name="PlayerTextDrawSetPreviewRot"/>
			<dependency name="PlayerTextDrawSetPreviewVehCol"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_eItemRotX"/>
			<dependency name="g_eItemRotY"/>
			<dependency name="g_eItemRotZ"/>
			<dependency name="g_eItemUseRotation"/>
			<dependency name="g_eItemVehicleColor"/>
			<dependency name="g_eItemZoom"/>
			<dependency name="g_eMenuModel"/>
			<dependency name="g_eMenuModelText"/>
			<param name="playerid">
			</param>
			<param name="count">
			</param>
			<param name="model">
				<paraminfo> [72] </paraminfo>
			</param>
		</member>
		<member name="M:SetObjectMaterial" syntax="SetObjectMaterial(objectid, materialIndex, modelid, textureLibrary[], textureName[], materialColour)">
			<attribute name="native"/>
			<referrer name="RunObjects"/>
			<param name="objectid">
				The ID of the object to change the texture of
			</param>
			<param name="materialIndex">
				The material index on the object to change (<b><c>0</c></b> to <b><c>15</c></b>)
			</param>
			<param name="modelid">
				The modelid on which the replacement texture is located.  Use <b><c>0</c></b>  for alpha.  Use <b><c>-1</c></b> to change the material colour without altering the texture
			</param>
			<param name="textureLibrary">
				<paraminfo> [] </paraminfo>
				The name of the txd file which contains the replacement texture (use  <b><c>"none"</c></b> if not required)
			</param>
			<param name="textureName">
				<paraminfo> [] </paraminfo>
				The name of the texture to use as the replacement (use <b><c>"none"</c></b>  if not required)
			</param>
			<param name="materialColour">
				The object colour to set, as an integer or hex in <b>ARGB</b> colour  format.  Using <b><c>0</c></b> keeps the existing material colour (optional=<b><c>0</c></b>)
			</param>
			<library>a_objects</library>  <summary>Replace the texture of an object with the texture from another model in the game.</summary>              <seealso name="SetPlayerObjectMaterial" />  <seealso name="SetObjectMaterialText" />  <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>Vertex lightning of the object will disappear if material colour is changed.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  </returns> 
		</member>
		<member name="M:SetObjectMaterialText" syntax="SetObjectMaterialText(objectid, text[], materialIndex, materialSize, fontFace[], fontSize, bold, fontColour, backgroundColour, textalignment)">
			<attribute name="native"/>
			<referrer name="va_SetObjectMaterialText"/>
			<param name="objectid">
				The ID of the object to replace the texture of with text
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text to show on the object. (MAX <b>2048</b> characters)
			</param>
			<param name="materialIndex">
				The object's material index to replace with text (optional=<b><c>0</c></b>)
			</param>
			<param name="materialSize">
				The size of the material (optional=<b><c>OBJECT_MATERIAL_SIZE_256x128</c></b>)
			</param>
			<param name="fontFace">
				<paraminfo> [] </paraminfo>
				The font to use (optional=<b><c>"Arial"</c></b>)
			</param>
			<param name="fontSize">
				The size of the text (MAX <b>255</b>) (optional=<b><c>24</c></b>)
			</param>
			<param name="bold">
				<paraminfo>bool </paraminfo>
				Bold text.  Set to <b><c>1</c></b> for bold, <b><c>0</c></b> for not (optional=<b><c>1</c></b>)
			</param>
			<param name="fontColour">
				The colour of the text, in <b>ARGB</b> format (optional=<b><c>-1</c></b>)
			</param>
			<param name="backgroundColour">
				The background colour, in <b>ARGB</b> format (optional=<b><c>0</c></b>)
			</param>
			<param name="textalignment">
			</param>
			<library>a_objects</library>  <summary>Replace the texture of an object with text.</summary>                    <param name="textAlignment">The alignment of the text (optional=<b><c>OBJECT_MATERIAL_TEXT_ALIGN_LEFT</c></b>)</param>  <seealso name="SetPlayerObjectMaterialText" />  <seealso name="SetObjectMaterial" />  <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>Color embedding can be used for multiple colours in the text.</remarks>  <remarks>  <b>Alignment:</b><br />  <ul>  <li><b><c>OBJECT_MATERIAL_TEXT_ALIGN_LEFT</c></b> 0</li>  <li><b><c>OBJECT_MATERIAL_TEXT_ALIGN_CENTER</c></b> 1</li>  <li><b><c>OBJECT_MATERIAL_TEXT_ALIGN_RIGHT</c></b> 2</li>  </ul>  </remarks>  <remarks>  <b>Sizes:</b><br />  <ul>  <li><b><c>OBJECT_MATERIAL_SIZE_32x32</c></b> 10</li>  <li><b><c>OBJECT_MATERIAL_SIZE_64x32</c></b> 20</li>  <li><b><c>OBJECT_MATERIAL_SIZE_64x64</c></b> 30</li>  <li><b><c>OBJECT_MATERIAL_SIZE_128x32</c></b> 40</li>  <li><b><c>OBJECT_MATERIAL_SIZE_128x64</c></b> 50</li>  <li><b><c>OBJECT_MATERIAL_SIZE_128x128</c></b> 60</li>  <li><b><c>OBJECT_MATERIAL_SIZE_256x32</c></b> 70</li>  <li><b><c>OBJECT_MATERIAL_SIZE_256x64</c></b> 80</li>  <li><b><c>OBJECT_MATERIAL_SIZE_256x128</c></b> 90</li>  <li><b><c>OBJECT_MATERIAL_SIZE_256x256</c></b> 100</li>  <li><b><c>OBJECT_MATERIAL_SIZE_512x64</c></b> 110</li>  <li><b><c>OBJECT_MATERIAL_SIZE_512x128</c></b> 120</li>  <li><b><c>OBJECT_MATERIAL_SIZE_512x256</c></b> 130</li>  <li><b><c>OBJECT_MATERIAL_SIZE_512x512</c></b> 140</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  </returns> 
		</member>
		<member name="M:SetObjectPos" syntax="SetObjectPos(objectid, x, y, z)">
			<attribute name="native"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="CA_SetObjectPos_DC"/>
			<param name="objectid">
				The ID of the object to set the position of.  Returned by <a href="#CreateObject">CreateObject</a>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the object at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to position the object at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to position the object at
			</param>
			<library>a_objects</library>  <summary>Change the position of an object.</summary>          <seealso name="GetObjectPos" />  <seealso name="SetObjectRot" />  <seealso name="GetPlayerObjectPos" />  <seealso name="CreateObject" />  <returns>This function always returns <b><c>1</c></b>, even if the object specified does not exist.</returns> 
		</member>
		<member name="M:SetObjectRot" syntax="SetObjectRot(objectid, rotX, rotY, rotZ)">
			<attribute name="native"/>
			<referrer name="PHY_ApplyRotation"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<referrer name="CA_SetObjectRot_DC"/>
			<param name="objectid">
				The ID of the object to set the rotation of
			</param>
			<param name="rotX">
				<paraminfo>Float </paraminfo>
				The x rotation
			</param>
			<param name="rotY">
				<paraminfo>Float </paraminfo>
				The y rotation
			</param>
			<param name="rotZ">
				<paraminfo>Float </paraminfo>
				The z rotation
			</param>
			<library>a_objects</library>  <summary>Set the rotation of an object on the three axes (x, y and z).</summary>          <seealso name="GetObjectRot" />  <seealso name="GetObjectPos" />  <seealso name="CreateObject" />  <seealso name="SetPlayerObjectRot" />  <returns>This function always returns <b><c>1</c></b>, even if the object doesn't exist.</returns> 
		</member>
		<member name="M:SetPVarFloat" syntax="SetPVarFloat(playerid, pvar[], value)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="OnPlayerFishing"/>
			<param name="playerid">
				The ID of the player whose player variable will be set
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The float you want to save in the player variable
			</param>
			<library>a_players</library>  <summary>Set a float player variable's value.</summary>        <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Either the player specified is not connected,  or the variable name is null or over 40 characters.  </returns> 
		</member>
		<member name="M:SetPVarInt" syntax="SetPVarInt(playerid, pvar[], value)">
			<attribute name="native"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0F"/>
			<referrer name="_@yHOnPlayerExitVehicle@0F"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="GieldaSellPanel"/>
			<referrer name="SetVehicleToSell"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="SparingCountDown"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="OnDialogJob"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_obiekty"/>
			<referrer name="IsBlockCommand"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="ac_OnDialogResponse"/>
			<param name="playerid">
				The ID of the player whose player variable will be set
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<param name="value">
				The integer to be set
			</param>
			<library>a_players</library>  <summary>Set an integer player variable.</summary>        <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <remarks>Variables aren't reset until after <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  is called, so the values are still accessible in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Either the player specified is not connected,  or the variable name is null or over 40 characters.  </returns> 
		</member>
		<member name="M:SetPVarString" syntax="SetPVarString(playerid, pvar[], value[])">
			<attribute name="native"/>
			<referrer name="va_SetPVarString"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="OnDialogAccount"/>
			<param name="playerid">
				The ID of the player whose player variable will be set
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
				The string you want to save in the player variable
			</param>
			<library>a_players</library>  <summary>Saves a string into a player variable.</summary>        <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" /> 
		</member>
		<member name="M:SetPickupVirtualWorld" syntax="SetPickupVirtualWorld(pickupid, virtualworld)">
			<attribute name="native"/>
			<referrer name="FetchCasino"/>
			<referrer name="FetchGunShop"/>
			<param name="pickupid">
			</param>
			<param name="virtualworld">
			</param>
		</member>
		<member name="M:SetPlayerAmmo" syntax="SetPlayerAmmo(playerid, weaponid, ammo)">
			<attribute name="native"/>
			<referrer name="ac_SetPlayerAmmo"/>
			<referrer name="orig_SetPlayerAmmo"/>
			<param name="playerid">
				The ID of the player to set the weapon ammo of
			</param>
			<param name="weaponid">
				The ID of the <a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> to set  the ammo of.
			</param>
			<param name="ammo">
				The amount of ammo to set
			</param>
			<library>a_players</library>  <summary>Set the ammo of a player's weapon.</summary>        <seealso name="GetPlayerAmmo" />  <seealso name="GivePlayerWeapon" />  <seealso name="SetPlayerArmedWeapon" />  <remarks>Set the ammo to <b><c>0</c></b> to remove a weapon from a player's inventory.  Note that  the weapon will still show up in <a href="#GetPlayerWeaponData">GetPlayerWeaponData</a>, albeit with  <b><c>0</c></b> ammo.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is also returned when the weapon  specified is invalid.<br />  <b><c>0</c></b>: The function failed to execute.  The player isn't connected.<br />  </returns> 
		</member>
		<member name="M:SetPlayerArmedWeapon" syntax="SetPlayerArmedWeapon(playerid, weaponid)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="WC_CbugPunishment"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="WC_DeathSkipEnd"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<param name="playerid">
				The ID of the player to arm with a weapon
			</param>
			<param name="weaponid">
				The ID of the weapon that the player should be armed with
			</param>
			<library>a_players</library>  <summary>Sets which weapon (that a player already has) the player is holding.</summary>      <seealso name="GivePlayerWeapon" />  <seealso name="GetPlayerWeapon" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This function arms a player with a weapon they <b>already have</b>; it does not give them  a new weapon.  See <a href="#GivePlayerWeapon">GivePlayerWeapon</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is returned even when the function  fails to execute (the player doesn't have the weapon specified, or it is an invalid weapon).<br />  <b><c>0</c></b>: The function failed to execute.  The player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerArmour" syntax="SetPlayerArmour(playerid, armour)">
			<attribute name="native"/>
			<referrer name="ac_SetPlayerArmour"/>
			<referrer name="orig_SetPlayerArmour"/>
			<param name="playerid">
				The ID of the player to set the armour of
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
				The amount of armour to set, as a percentage (float).  Values larger than <b><c>100</c></b>  are valid, but won't be displayed in the HUD's armour bar
			</param>
			<library>a_players</library>  <summary>Set a player's armor level.</summary>      <seealso name="GetPlayerArmour" />  <seealso name="SetPlayerHealth" />  <seealso name="GetPlayerHealth" />  <remarks>Armour is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b></remarks>  <remarks>The function's name is armour, not armor (Americanized).  This is inconsistent with the  rest of SA-MP, so remember that.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerAttachedObject" syntax="SetPlayerAttachedObject(playerid, index, modelid, bone, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, materialColour1, materialColour2)">
			<attribute name="native"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Grabarz_TakeTrumna"/>
			<referrer name="OnPlayerFishing"/>
			<param name="playerid">
				The ID of the player to attach the object to
			</param>
			<param name="index">
				The index (slot) to assign the object to (0-9 since 0.3d, 0-4 in previous versions)
			</param>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Objects">model</a> to attach
			</param>
			<param name="bone">
				The bone to attach the object to
			</param>
			<param name="offsetX">
				<paraminfo>Float </paraminfo>
				x axis offset for the object position (optional=<b><c>0.0</c></b>)
			</param>
			<param name="offsetY">
				<paraminfo>Float </paraminfo>
				y axis offset for the object position (optional=<b><c>0.0</c></b>)
			</param>
			<param name="offsetZ">
				<paraminfo>Float </paraminfo>
				z axis offset for the object position (optional=<b><c>0.0</c></b>)
			</param>
			<param name="rotX">
				<paraminfo>Float </paraminfo>
				x axis rotation of the object (optional=<b><c>0.0</c></b>)
			</param>
			<param name="rotY">
				<paraminfo>Float </paraminfo>
				y axis rotation of the object (optional=<b><c>0.0</c></b>)
			</param>
			<param name="rotZ">
				<paraminfo>Float </paraminfo>
				z axis rotation of the object (optional=<b><c>0.0</c></b>)
			</param>
			<param name="scaleX">
				<paraminfo>Float </paraminfo>
				x axis scale of the object (optional=<b><c>1.0</c></b>)
			</param>
			<param name="scaleY">
				<paraminfo>Float </paraminfo>
				y axis scale of the object (optional=<b><c>1.0</c></b>)
			</param>
			<param name="scaleZ">
				<paraminfo>Float </paraminfo>
				z axis scale of the object (optional=<b><c>1.0</c></b>)
			</param>
			<param name="materialColour1">
				The first object colour to set <b>ARGB</b> (optional=<b><c>0</c></b>)
			</param>
			<param name="materialColour2">
				The second object colour to set <b>ARGB</b> (optional=<b><c>0</c></b>)
			</param>
			<library>a_players</library>  <summary>Attach an object to a specific bone on a player.</summary>                                <seealso name="RemovePlayerAttachedObject" />  <seealso name="IsPlayerAttachedObjectSlotUsed" />  <seealso name="EditAttachedObject" />  <remarks>This function was added in <b>SA-MP 0.3c</b> and will not work in earlier versions!</remarks>  <remarks>In version <b>0.3d</b> and onwards, <b><c>10</c></b> objects can be attached to a single  player (index <b><c>0</c></b>-<b><c>9</c></b>).  In earlier versions, the limit is <b><c>5</c></b>  (index <b><c>0</c></b>-<b><c>4</c></b>).</remarks>  <remarks>This function is separate from the <a href="#CreateObject">CreateObject</a>/  <a href="#CreatePlayerObject">CreatePlayerObject</a>  pools.</remarks>  <remarks>  <b>Bone IDs:</b><br />  <ul>  <li><b><c>1</c></b> - spine</li>  <li><b><c>2</c></b> - head</li>  <li><b><c>3</c></b> - left upper arm</li>  <li><b><c>4</c></b> - right upper arm</li>  <li><b><c>5</c></b> - left hand</li>  <li><b><c>6</c></b> - right hand</li>  <li><b><c>7</c></b> - left thigh</li>  <li><b><c>8</c></b> - right thigh</li>  <li><b><c>9</c></b> - left foot</li>  <li><b><c>10</c></b> - right foot</li>  <li><b><c>11</c></b> - right calf</li>  <li><b><c>12</c></b> - left calf</li>  <li><b><c>13</c></b> - left forearm</li>  <li><b><c>14</c></b> - right forearm</li>  <li><b><c>15</c></b> - left clavicle (shoulder)</li>  <li><b><c>16</c></b> - right clavicle (shoulder)</li>  <li><b><c>17</c></b> - neck</li>  <li><b><c>18</c></b> - jaw </li>  </ul>  </remarks>  <returns><b><c>1</c></b> on success, <b><c>0</c></b> on failure.</returns> 
		</member>
		<member name="M:SetPlayerCameraLookAt" syntax="SetPlayerCameraLookAt(playerid, x, y, z, cut)">
			<attribute name="native"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<param name="playerid">
				The ID of the player whose camera to set
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate for the player's camera to look at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate for the player's camera to look at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate for the player's camera to look at
			</param>
			<param name="cut">
				The style of the change.  Can be used to interpolate (change slowly) from old pos  to new pos using <b><c>CAMERA_MOVE</c></b>.  Added in <b>0.3e</b>.  Leave out for older versions  (optional=<b><c>CAMERA_CUT</c></b>)
			</param>
			<library>a_players</library>  <summary>Set the direction a player's camera looks at.  Generally meant to be used in combination  with <a href="#SetPlayerCameraPos">SetPlayerCameraPos</a>.</summary>            <seealso name="SetPlayerCameraPos" />  <seealso name="SetCameraBehindPlayer" />  <seealso name="GetPlayerCameraPos" />  <seealso name="GetPlayerCameraFrontVector" />  <remarks>Using the camera functions directly after enabling spectator mode doesn't work.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerCameraPos" syntax="SetPlayerCameraPos(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<param name="playerid">
				ID of the player
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to place the camera at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to place the camera at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to place the camera at
			</param>
			<library>a_players</library>  <summary>Sets the camera to a specific position for a player.</summary>          <seealso name="SetPlayerCameraLookAt" />  <seealso name="SetCameraBehindPlayer" />  <remarks>You may also have to use <a href="#SetPlayerCameraLookAt">SetPlayerCameraLookAt</a> with  this function in order to work properly.</remarks>  <remarks>Use <a href="#SetCameraBehindPlayer">SetCameraBehindPlayer</a> to reset the camera to behind  the player.</remarks>  <remarks>Using the camera functions directly after enabling spectator mode doesn't work.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified doesn't exist.  </returns> 
		</member>
		<member name="M:SetPlayerColor" syntax="SetPlayerColor(playerid, colour)">
			<attribute name="native"/>
			<referrer name="SparingRespawn"/>
			<referrer name="pc_cmd_tkolor"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_invisible"/>
			<referrer name="@yH_SetPlayerColor@13"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="pc_cmd_exit"/>
			<param name="playerid">
				The ID of the player whose colour to set
			</param>
			<param name="colour">
				The colour to set.  Supports alpha values (<b>RGBA</b>)
			</param>
			<library>a_players</library>  <summary>Set the colour of a player's nametag and marker (radar blip).</summary>      <seealso name="SetPlayerMarkerForPlayer" />  <seealso name="GetPlayerColor" />  <seealso name="ChangeVehicleColor" />  <remarks>This function will change player's colour for everyone, even if player's colour was changed  with <a href="#SetPlayerMarkerForPlayer">SetPlayerMarkerForPlayer</a> for any other player. </remarks>  <remarks>If used under <a href="#OnPlayerConnect">OnPlayerConnect</a>, the affecting player will  not see the colour in the TAB menu. </remarks> 
		</member>
		<member name="M:SetPlayerDraw" syntax="SetPlayerDraw(playerid, toggle)">
			<stacksize value="7"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="UpdateHud"/>
			<dependency name="UpdateQuizDraw"/>
			<dependency name="WC_PlayerTextDrawColor"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="bombaPickup"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyQuest"/>
			<dependency name="quizData"/>
			<dependency name="quiz_active"/>
			<dependency name="tdAreny"/>
			<dependency name="tdBomba"/>
			<dependency name="tdBox"/>
			<dependency name="tdDate"/>
			<dependency name="tdGameLimit"/>
			<dependency name="tdGameList"/>
			<dependency name="tdLogo"/>
			<dependency name="tdMessage"/>
			<dependency name="tdMoney"/>
			<dependency name="tdOnline"/>
			<dependency name="tdPasek"/>
			<dependency name="tdPerformance"/>
			<dependency name="tdPlayer"/>
			<dependency name="tdPosition"/>
			<dependency name="tdQuest"/>
			<dependency name="tdQuiz"/>
			<dependency name="tdWalizka"/>
			<dependency name="togglePlayerTextDraw"/>
			<dependency name="toggleTextDraw"/>
			<dependency name="walizkaPickup"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerDrunkLevel" syntax="SetPlayerDrunkLevel(playerid, level)">
			<attribute name="native"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<param name="playerid">
				The ID of the player to set the drunkenness of
			</param>
			<param name="level">
				The level of drunkenness to set
			</param>
			<library>a_players</library>  <summary>Sets the drunk level of a player which makes the player's camera sway and vehicles hard  to control.</summary>      <seealso name="GetPlayerDrunkLevel" />  <remarks>  Players' drunk level will automatically decrease over time, based on their FPS (players with <b><c>50</c></b>  FPS will lose <b><c>50</c></b> 'levels' per second.  This is useful for determining a player's FPS!).<br  />  In <b>0.3a</b> the drunk level will decrement and stop at <b><c>2000</c></b>.  In <b>0.3b+</b>  the drunk level decrements to <b><c>0</c></b>)<br />  Levels over <b><c>2000</c></b> make the player drunk (camera swaying and vehicles difficult to  control).<br />  Max drunk level is <b><c>50000</c></b>.<br />  While the drunk level is above <b><c>5000</c></b>, the player's HUD (radar etc.) will be hidden.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerFacingAngle" syntax="SetPlayerFacingAngle(playerid, ang)">
			<attribute name="native"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="MakePlayerFacePlayer"/>
			<referrer name="setPosition"/>
			<param name="playerid">
				The ID of the player to set the facing angle of
			</param>
			<param name="ang">
				<paraminfo>Float </paraminfo>
				The angle the player should face
			</param>
			<library>a_players</library>  <summary>Set a player's facing angle (z rotation).</summary>      <seealso name="GetPlayerFacingAngle" />  <seealso name="SetPlayerPos" />  <remarks>Angles are reversed in GTA:SA; 90 degrees would be East in the real world, but in GTA:SA  90 degrees is in fact West.  North and South are still 0/360 and 180.  To convert this, simply do  <b>360 - angle</b>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerFightingStyle" syntax="SetPlayerFightingStyle(playerid, style)">
			<attribute name="native"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="pc_cmd_style"/>
			<param name="playerid">
				The ID of player to set the fighting style of
			</param>
			<param name="style">
				The fighting style that should be set
			</param>
			<library>a_players</library>  <summary>Set a player's special fighting style.  To use in-game, aim and press the 'secondary attack'  key (<b>ENTER</b> by default).</summary>      <seealso name="GetPlayerFightingStyle" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This does not affect normal fist attacks - only special/secondary attacks (aim + press 'secondary  attack' key).</remarks>  <remarks>  <b>Fighting styles:</b><br />  <ul>  <li><b><c>FIGHT_STYLE_NORMAL</c></b></li>  <li><b><c>FIGHT_STYLE_BOXING</c></b></li>  <li><b><c>FIGHT_STYLE_KUNGFU</c></b></li>  <li><b><c>FIGHT_STYLE_KNEEHEAD</c></b></li>  <li><b><c>FIGHT_STYLE_GRABKICK</c></b></li>  <li><b><c>FIGHT_STYLE_ELBOW</c></b></li>  </ul>  </remarks> 
		</member>
		<member name="M:SetPlayerHealth" syntax="SetPlayerHealth(playerid, health)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ac_SetPlayerHealth"/>
			<referrer name="orig_SetPlayerHealth"/>
			<param name="playerid">
				The ID of the player to set the health of
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
				The value to set the player's health to.  Max health that can be displayed in  the HUD is <b><c>100</c></b>, though higher values are valid
			</param>
			<library>a_players</library>  <summary>Set the health of a player.</summary>      <seealso name="GetPlayerHealth" />  <seealso name="GetPlayerArmour" />  <seealso name="SetPlayerArmour" />  <remarks>Health is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b></remarks>  <remarks>If a player's health is set to <b><c>0</c></b> or a minus value, they will die instantly.</remarks>  <remarks>If a player's health is below <b><c>10</c></b> or above <b><c>98303</c></b>, their health  bar will flash. </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerInterior" syntax="SetPlayerInterior(playerid, interiorid)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ac_SetPlayerInterior"/>
			<referrer name="orig_SetPlayerInterior"/>
			<param name="playerid">
				The ID of the player to set the interior of
			</param>
			<param name="interiorid">
				The <a href="http://wiki.sa-mp.com/wiki/Interiorids">interior ID</a> to  set the player in
			</param>
			<library>a_players</library>  <summary>Set a player's interior.  A list of currently known interiors and their positions can be  found <a href="http://wiki.sa-mp.com/wiki/Interiorids">here</a>.</summary>      <seealso name="GetPlayerInterior" />  <seealso name="LinkVehicleToInterior" />  <seealso name="OnPlayerInteriorChange" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerMapIcon" syntax="SetPlayerMapIcon(playerid, iconid, x, y, z, markerType, colour, style)">
			<attribute name="native"/>
			<referrer name="StartWP"/>
			<param name="playerid">
				The ID of the player to set the map icon for
			</param>
			<param name="iconid">
				The player's icon ID, ranging from <b><c>0</c></b> to <b><c>99</c></b>.  This  means there is a maximum of <b><c>100</c></b> map icons.  ID can be used in <a href="#RemovePlayerMapIcon">RemovePlayerMapIcon</a>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to place the map icon at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to place the map icon at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to place the map icon at
			</param>
			<param name="markerType">
				The icon to set
			</param>
			<param name="colour">
				The colour of the icon (<b>RGBA</b>).  This should only be used with the square  icon (ID: <b><c>0</c></b>)
			</param>
			<param name="style">
				The style of icon (optional=<b><c>MAPICON_LOCAL</c></b>)
			</param>
			<library>a_players</library>  <summary>Place an icon/marker on a player's map.  Can be used to mark locations such as banks and  hospitals to players.</summary>                  <seealso name="RemovePlayerMapIcon" />  <seealso name="SetPlayerMarkerForPlayer" />  <remarks>If you use an invalid marker type, it will create ID <b><c>1</c></b> (White Square). </remarks>  <remarks>If you use an icon ID that is already in use, it will replace the current map icon using  that ID. </remarks>  <remarks>Marker type <b><c>1</c></b> (square), <b><c>2</c></b> (player blip), <b><c>4</c></b> (north),  and <b><c>56</c></b> (single airstrip blip) will cause your game to crash if you have map legends  enabled while viewing the map.</remarks>  <remarks>  <b>Map icon styles:</b><br />  <ul>  <li><b><c>0 MAPICON_LOCAL</c></b> - close proximity only</li>  <li><b><c>1 MAPICON_GLOBAL</c></b> - show on radar edge as long as in range</li>  <li><b><c>2 MAPICON_LOCAL_CHECKPOINT</c></b> - Close proximity only (with checkpoint)</li>  <li><b><c>3 MAPICON_GLOBAL_CHECKPOINT</c></b> - Show on radar edge as long as in range (with  checkpoint)</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerMaxArmour" syntax="SetPlayerMaxArmour(playerid, value)">
			<stacksize value="1"/>
			<dependency name="s_PlayerMaxArmour"/>
			<param name="playerid">
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerMaxHealth" syntax="SetPlayerMaxHealth(playerid, value)">
			<stacksize value="1"/>
			<dependency name="s_PlayerMaxHealth"/>
			<param name="playerid">
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerName" syntax="SetPlayerName(playerid, name[])">
			<attribute name="native"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_fake"/>
			<param name="playerid">
				The ID of the player to set the name of
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name to set.  Must be 1-24 characters long and only contain valid characters  (<b>0-9</b>, <b>a-z</b>, <b>A-z</b>, <b>[]</b>, <b>()</b>, <b>$</b>, <b>@</b>, <b>.</b>, <b>_</b>,  <b>=</b>)
			</param>
			<library>a_players</library>  <summary>Sets the name of a player.</summary>      <seealso name="GetPlayerName" />  <remarks>Changing the players' name to the same name but with different character cases (e.g. "John"  to "JOHN") will not work. </remarks>  <remarks>If used in <a href="#OnPlayerConnect">OnPlayerConnect</a>, the new name will <b>not</b>  be shown for the connecting player. </remarks>  <remarks>Passing a null string as the new name will crash the server. </remarks>  <remarks>Player names can be up to 24 characters when using this function, but when joining the server  from the SA-MP server browser, players' names must be no more than 20 and less than 3 characters  (the server will deny entry).  This allows for 4 characters extra when using <a href="#SetPlayerName">SetPlayerName</a>.  </remarks>  <returns>  <b><c>1</c></b> The name was changed successfully.<br />  <b><c>0</c></b> The player already has that name.<br />  <b><c>-1</c></b> The name can not be changed (it's already in use, too long or has invalid characters).  </returns> 
		</member>
		<member name="M:SetPlayerObjectMaterialText" syntax="SetPlayerObjectMaterialText(playerid, objectid, text[], materialIndex, materialSize, fontFace[], fontSize, bold, fontColour, backgroundColour, textalignment)">
			<attribute name="native"/>
			<referrer name="va_SetPlayerObjectMaterialText"/>
			<param name="playerid">
				The ID of the player whose player object to set the text of
			</param>
			<param name="objectid">
				The ID of the object on which to place the text
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text to set
			</param>
			<param name="materialIndex">
				The material index to replace with text (optional=<b><c>0</c></b>)
			</param>
			<param name="materialSize">
				The size of the material (optional=<b><c>OBJECT_MATERIAL_SIZE_256x128</c></b>)
			</param>
			<param name="fontFace">
				<paraminfo> [] </paraminfo>
				The font to use (optional=<b><c>"Arial"</c></b>)
			</param>
			<param name="fontSize">
				The size of the text (MAX 255) (optional=<b><c>24</c></b>)
			</param>
			<param name="bold">
				<paraminfo>bool </paraminfo>
				Bold text.  Set to <b><c>1</c></b> for bold, <b><c>0</c></b> for not (optional=<b><c>1</c></b>)
			</param>
			<param name="fontColour">
				The colour of the text (optional=<b><c>-1</c></b>)
			</param>
			<param name="backgroundColour">
				The background colour (optional=<b><c>0</c></b>)
			</param>
			<param name="textalignment">
			</param>
			<library>a_objects</library>  <summary>Replace the texture of a player object with text.</summary>                      <param name="textAlignment">The alignment of the text (optional=<b><c>OBJECT_MATERIAL_TEXT_ALIGN_LEFT</c></b>)</param>  <seealso name="SetObjectMaterialText" />  <seealso name="SetPlayerObjectMaterial" />  <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks>Color embedding can be used for multiple colours in the text.</remarks>  <remarks>  <b>Alignment:</b><br />  <ul>  <li><b><c>OBJECT_MATERIAL_TEXT_ALIGN_LEFT</c></b> 0</li>  <li><b><c>OBJECT_MATERIAL_TEXT_ALIGN_CENTER</c></b> 1</li>  <li><b><c>OBJECT_MATERIAL_TEXT_ALIGN_RIGHT</c></b> 2</li>  </ul>  </remarks>  <remarks>  <b>Sizes:</b><br />  <ul>  <li><b><c>OBJECT_MATERIAL_SIZE_32x32</c></b> 10</li>  <li><b><c>OBJECT_MATERIAL_SIZE_64x32</c></b> 20</li>  <li><b><c>OBJECT_MATERIAL_SIZE_64x64</c></b> 30</li>  <li><b><c>OBJECT_MATERIAL_SIZE_128x32</c></b> 40</li>  <li><b><c>OBJECT_MATERIAL_SIZE_128x64</c></b> 50</li>  <li><b><c>OBJECT_MATERIAL_SIZE_128x128</c></b> 60</li>  <li><b><c>OBJECT_MATERIAL_SIZE_256x32</c></b> 70</li>  <li><b><c>OBJECT_MATERIAL_SIZE_256x64</c></b> 80</li>  <li><b><c>OBJECT_MATERIAL_SIZE_256x128</c></b> 90</li>  <li><b><c>OBJECT_MATERIAL_SIZE_256x256</c></b> 100</li>  <li><b><c>OBJECT_MATERIAL_SIZE_512x64</c></b> 110</li>  <li><b><c>OBJECT_MATERIAL_SIZE_512x128</c></b> 120</li>  <li><b><c>OBJECT_MATERIAL_SIZE_512x256</c></b> 130</li>  <li><b><c>OBJECT_MATERIAL_SIZE_512x512</c></b> 140</li>  </ul>  </remarks> 
		</member>
		<member name="M:SetPlayerPos" syntax="SetPlayerPos(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="ac_SetPlayerPos"/>
			<referrer name="orig_SetPlayerPos"/>
			<param name="playerid">
				The ID of the player to set the position of
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the player at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to position the player at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to position the player at
			</param>
			<library>a_players</library>  <summary>Set a player's position.</summary>          <seealso name="SetPlayerPosFindZ" />  <seealso name="SetPlayerFacingAngle" />  <seealso name="GetPlayerPos" />  <seealso name="SetVehiclePos" />  <seealso name="GetVehiclePos" />  <remarks>Using this function on a player in a vehicle will instantly remove them from the vehicle.  Useful for quickly ejecting players.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerPosFindZ" syntax="SetPlayerPosFindZ(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="ac_SetPlayerPosFindZ"/>
			<referrer name="orig_SetPlayerPosFindZ"/>
			<param name="playerid">
				The ID of the player to set the position of
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the player at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the player at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to position the player at
			</param>
			<library>a_players</library>  <summary>This sets the players position then adjusts the players z-coordinate to the nearest solid  ground under the position.</summary>          <seealso name="SetPlayerPos" />  <seealso name="OnPlayerClickMap" />  <remarks>This function does not work if the new coordinates are far away from where the player currently  is.  The z height will be <b><c>0</c></b>, which will likely put them underground.  It is highly  recommended that the <a href="http://forum.sa-mp.com/showthread.php?t=275492">MapAndreas plugin</a>  be used instead.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerProgressBarColour" syntax="SetPlayerProgressBarColour(playerid, barid, colour)">
			<stacksize value="5"/>
			<referrer name="changeBarColor"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="_updateGangBarEx"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="PlayerTextDrawBoxColor"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_back"/>
			<dependency name="pbar_colour"/>
			<dependency name="pbar_fill"/>
			<dependency name="pbar_main"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="colour">
			</param>
		</member>
		<member name="M:SetPlayerProgressBarDirection" syntax="SetPlayerProgressBarDirection(playerid, barid, direction)">
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="_progress2_renderBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_direction"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="direction">
			</param>
		</member>
		<member name="M:SetPlayerProgressBarHeight" syntax="SetPlayerProgressBarHeight(playerid, barid, height)">
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="_progress2_renderBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_height"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerProgressBarMaxValue" syntax="SetPlayerProgressBarMaxValue(playerid, barid, max)">
			<stacksize value="6"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="_updateGangBarEx"/>
			<referrer name="Slots_Start"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="SecondTimer"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_maxValue"/>
			<dependency name="pbar_progressValue"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerProgressBarPos" syntax="SetPlayerProgressBarPos(playerid, barid, x, y)">
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="_progress2_renderBar"/>
			<dependency name="false"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_posX"/>
			<dependency name="pbar_posY"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerProgressBarValue" syntax="SetPlayerProgressBarValue(playerid, barid, value)">
			<stacksize value="11"/>
			<referrer name="SetPlayerProgressBarMaxValue"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="_updateGangBarEx"/>
			<referrer name="Slots_Start"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="BAR_DIRECTION_DOWN"/>
			<dependency name="BAR_DIRECTION_LEFT"/>
			<dependency name="BAR_DIRECTION_RIGHT"/>
			<dependency name="BAR_DIRECTION_UP"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="ShowPlayerProgressBar"/>
			<dependency name="_bar_percent"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_direction"/>
			<dependency name="pbar_height"/>
			<dependency name="pbar_main"/>
			<dependency name="pbar_maxValue"/>
			<dependency name="pbar_posX"/>
			<dependency name="pbar_progressValue"/>
			<dependency name="pbar_show"/>
			<dependency name="pbar_width"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerProgressBarWidth" syntax="SetPlayerProgressBarWidth(playerid, barid, width)">
			<stacksize value="5"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="_progress2_renderBar"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_width"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerScore" syntax="SetPlayerScore(playerid, score)">
			<attribute name="native"/>
			<referrer name="addLevelScore"/>
			<referrer name="OnPlayerLogged"/>
			<param name="playerid">
				The ID of the player to set the score of
			</param>
			<param name="score">
				The value to set the player's score to
			</param>
			<library>a_players</library>  <summary>Set a player's score.  Players' scores are shown in the scoreboard (shown by holding the  TAB key).</summary>      <seealso name="GetPlayerScore" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerSkin" syntax="SetPlayerSkin(playerid, skinid)">
			<attribute name="native"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<param name="playerid">
				The ID of the player to set the skin of
			</param>
			<param name="skinid">
				The <a href="http://wiki.sa-mp.com/wiki/Skins">skin</a> the player should use
			</param>
			<library>a_players</library>  <summary>Set the skin of a player.  A player's skin is their character model.</summary>      <seealso name="GetPlayerSkin" />  <seealso name="SetSpawnInfo" />  <remarks>If a player's skin is set when they are crouching, in a vehicle, or performing certain animations,  they will become frozen or otherwise glitched.  This can be fixed by using  <a href="#TogglePlayerControllable">TogglePlayerControllable</a>.  Players can be detected as being crouched through <a href="#GetPlayerSpecialAction">GetPlayerSpecialAction</a>  (<b><c>SPECIAL_ACTION_DUCK</c></b>).</remarks>  <remarks>Setting a player's skin when he is dead may crash players around him.</remarks>  <remarks>Note that 'success' is reported even when skin ID is invalid (not <b><c>0</c></b>-<b><c>311</c></b>,  or <b><c>74</c></b>), but the skin will be set to ID <b><c>0</c></b> (CJ).</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.<br  />  </returns> 
		</member>
		<member name="M:SetPlayerSpecialAction" syntax="SetPlayerSpecialAction(playerid, actionid)">
			<attribute name="native"/>
			<referrer name="ac_SetPlayerSpecialAction"/>
			<referrer name="orig_SetPlayerSpecialAction"/>
			<param name="playerid">
				The player that should perform the action
			</param>
			<param name="actionid">
				The action that should be performed
			</param>
			<library>a_players</library>  <summary>This function allows to set players special action.</summary>      <seealso name="GetPlayerSpecialAction" />  <seealso name="ApplyAnimation" />  <remarks>Removing jetpacks from players by setting their special action to <b><c>0</c></b> causes  the sound to stay until death.</remarks>  <remarks>  <b>Special actions: (marked with * cannot be set)</b><br />  <ul>  <li><b><c>0 - SPECIAL_ACTION_NONE</c></b></li>  <li><b><c>2 - SPECIAL_ACTION_USEJETPACK</c></b></li>  <li><b><c>5 - SPECIAL_ACTION_DANCE1</c></b></li>  <li><b><c>6 - SPECIAL_ACTION_DANCE2</c></b></li>  <li><b><c>7 - SPECIAL_ACTION_DANCE3</c></b></li>  <li><b><c>8 - SPECIAL_ACTION_DANCE4</c></b></li>  <li><b><c>10 - SPECIAL_ACTION_HANDSUP</c></b></li>  <li><b><c>11 - SPECIAL_ACTION_USECELLPHONE</c></b></li>  <li><b><c>12 - SPECIAL_ACTION_SITTING *</c></b></li>  <li><b><c>13 - SPECIAL_ACTION_STOPUSECELLPHONE</c></b></li>  </ul>  <b>added in SA-MP 0.3:</b><br />  <ul>  <li><b><c>1 - SPECIAL_ACTION_DUCK *</c></b> - Detect if the player is crouching.</li>  <li><b><c>3 - SPECIAL_ACTION_ENTER_VEHICLE *</c></b> - Detect if the player is entering a vehicle  via an animation.</li>  <li><b><c>4 - SPECIAL_ACTION_EXIT_VEHICLE *</c></b> - Detect if the player is exiting a vehicle  via an animation.</li>  <li><b><c>20 - SPECIAL_ACTION_DRINK_BEER</c></b> - Will increase the player's drunk level when  used</li>  <li><b><c>21 - SPECIAL_ACTION_SMOKE_CIGGY</c></b> - Will give the player a cigar</li>  <li><b><c>22 - SPECIAL_ACTION_DRINK_WINE</c></b> - Will give the player a wine bottle to get  drunk from</li>  <li><b><c>23 - SPECIAL_ACTION_DRINK_SPRUNK</c></b> - Will give the player a sprunk bottle to  drink from</li>  <li><b><c>68 - SPECIAL_ACTION_PISSING</c></b> - Will make make the player perform the pissing  animation with visible pee.</li>  </ul>  <b>added in SA-MP 0.3e:</b><br />  <ul>  <li><b><c>24 - SPECIAL_ACTION_CUFFED</c></b> - Will force the player in to cuffs (hands are behind  their back) (<b>does not work on CJ skin</b>)</li>  </ul>  <b>added in SA-MP 0.3x:</b><br />  <ul>  <li><b><c>25 - SPECIAL_ACTION_CARRY</c></b>         - Will apply a 'carrying' animation to the  player and make them unable to sprint, jump or punch (<b>does not work on CJ skin</b>)</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerTeam" syntax="SetPlayerTeam(playerid, teamid)">
			<attribute name="native"/>
			<referrer name="WC_SetPlayerTeam"/>
			<referrer name="ac_OnPlayerConnect"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ScriptInit"/>
			<referrer name="ScriptExit"/>
			<param name="playerid">
				The ID of the player you want to set the team of
			</param>
			<param name="teamid">
				The team to put the player in.  Use <b><c>NO_TEAM</c></b> to remove the player  from any team
			</param>
			<library>a_players</library>  <summary>Set the team of a player.</summary>      <seealso name="GetPlayerTeam" />  <seealso name="SetTeamCount" />  <seealso name="EnableVehicleFriendlyFire" />  <remarks>Players can not damage/kill players on the same team unless they use a knife to slit their  throat.  As of <b>SA-MP 0.3x</b>, players are also unable to damage vehicles driven by a player from  the same team.  This can be enabled with <a href="#EnableVehicleFriendlyFire">EnableVehicleFriendlyFire</a>.</remarks>  <remarks><b><c>255</c></b> (or <b><c>NO_TEAM</c></b>) is the default team to be able to shoot other  players, not <b><c>0</c></b>.</remarks> 
		</member>
		<member name="M:SetPlayerTime" syntax="SetPlayerTime(playerid, hour, minute)">
			<attribute name="native"/>
			<referrer name="pc_cmd_evczas"/>
			<referrer name="pc_cmd_time"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<param name="playerid">
				The ID of the player to set the game time of
			</param>
			<param name="hour">
				Hour to set (0-23)
			</param>
			<param name="minute">
				Minutes to set (0-59)
			</param>
			<library>a_players</library>  <summary>Sets the game time for a player.  If a player's clock is enabled (<a href="#TogglePlayerClock">TogglePlayerClock</a>)  the time displayed by it will update automatically.</summary>        <seealso name="SetWorldTime" />  <seealso name="GetPlayerTime" />  <seealso name="TogglePlayerClock" />  <remarks>Using this function under <a href="#OnPlayerConnect">OnPlayerConnect</a> doesn't work.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerVelocity" syntax="SetPlayerVelocity(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ac_SetPlayerVelocity"/>
			<referrer name="orig_SetPlayerVelocity"/>
			<param name="playerid">
				The player to apply the speed to
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The velocity (speed) on the x axis
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The velocity (speed) on the y axis
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The velocity (speed) on the z axis
			</param>
			<library>a_players</library>  <summary>Set a player's velocity on the x, y and z axes.</summary>          <seealso name="GetPlayerVelocity" />  <seealso name="SetVehicleVelocity" />  <seealso name="GetVehicleVelocity" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerVirtualWorld" syntax="SetPlayerVirtualWorld(playerid, virtualWorld)">
			<attribute name="native"/>
			<referrer name="WC_SetPlayerVirtualWorld"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ScriptInit"/>
			<referrer name="UpdatePlayerVirtualWorld"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<param name="playerid">
				The ID of the player you want to set the virtual world of
			</param>
			<param name="virtualWorld">
				The virtual world ID to put the player in
			</param>
			<library>a_players</library>  <summary>Set the virtual world of a player.  They can only see other players or vehicles that are  in that same world.</summary>      <seealso name="GetPlayerVirtualWorld" />  <seealso name="SetVehicleVirtualWorld" />  <remarks>The default virtual world is <b><c>0</c></b></remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerWeather" syntax="SetPlayerWeather(playerid, weather)">
			<attribute name="native"/>
			<referrer name="pc_cmd_evpogoda"/>
			<referrer name="pc_cmd_weather"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<param name="playerid">
				The ID of the player whose weather to set
			</param>
			<param name="weather">
				The <a href="http://wiki.sa-mp.com/wiki/Weatherid">weather</a> to set
			</param>
			<library>a_players</library>  <summary>Set a player's weather.</summary>      <seealso name="SetWeather" />  <seealso name="SetGravity" />  <remarks>If <a href="#TogglePlayerClock">TogglePlayerClock</a> is enabled, weather will slowly change  over time, instead of changing instantly.</remarks> 
		</member>
		<member name="M:SetPlayerWorldBounds" syntax="SetPlayerWorldBounds(playerid, maxX, minX, maxY, minY)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<param name="playerid">
				The ID of the player to set the world boundaries of
			</param>
			<param name="maxX">
				<paraminfo>Float </paraminfo>
				The maximum x coordinate the player can go to
			</param>
			<param name="minX">
				<paraminfo>Float </paraminfo>
				The minimum x coordinate the player can go to
			</param>
			<param name="maxY">
				<paraminfo>Float </paraminfo>
				The maximum y coordinate the player can go to
			</param>
			<param name="minY">
				<paraminfo>Float </paraminfo>
				The minimum y coordinate the player can go to
			</param>
			<library>a_players</library>  <summary>Set the world boundaries for a player.  Players can not go out of the boundaries (they will  be pushed back in).</summary>            <seealso name="GangZoneCreate" />  <remarks>This function does not work if used in <a href="#OnPlayerConnect">OnPlayerConnect</a></remarks>  <remarks>A player's world boundaries can be reset by setting them to <b><c>20000.0</c></b>, <b><c>-20000.0</c></b>,  <b><c>20000.0</c></b>, <b><c>-20000.0</c></b>.  These are the default values.</remarks>  <remarks>This function doesn't work in interiors!</remarks> 
		</member>
		<member name="M:SetRandomQuest" syntax="SetRandomQuest(playerid)">
			<stacksize value="138"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="GetQuestName"/>
			<dependency name="GetQuestName"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyMoney"/>
			<dependency name="pDailyQuest"/>
			<dependency name="pDailyStatus"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="random"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="tdQuest"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SetRespawnTime" syntax="SetRespawnTime(ms)">
			<stacksize value="4"/>
			<dependency name="max"/>
			<dependency name="s_RespawnTime"/>
			<param name="ms">
			</param>
		</member>
		<member name="M:SetSVarInt" syntax="SetSVarInt(svar[], value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Logger_ToggleDebug"/>
			<param name="svar">
				<paraminfo> [] </paraminfo>
				The name of the server variable
			</param>
			<param name="value">
				The integer to be set
			</param>
			<library>a_samp</library>  <summary>Set an integer server variable.</summary>      <seealso name="GetSVarInt" />  <seealso name="SetSVarString" />  <seealso name="GetSVarString" />  <seealso name="SetSVarFloat" />  <seealso name="GetSVarFloat" />  <seealso name="DeleteSVar" />  <remarks>This function was added in <b>SA-MP 0.3.7 R2</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The variable name is null or over 40 characters.  </returns> 
		</member>
		<member name="M:SetSVarString" syntax="SetSVarString(svar[], value[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_SetSVarString"/>
			<param name="svar">
				<paraminfo> [] </paraminfo>
				The name of the server variable
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
				The string to be set
			</param>
			<library>a_samp</library>  <summary>Set a string server variable.</summary>      <seealso name="SetSVarInt" />  <seealso name="GetSVarInt" />  <seealso name="GetSVarString" />  <seealso name="SetSVarFloat" />  <seealso name="GetSVarFloat" />  <seealso name="DeleteSVar" />  <remarks>This function was added in <b>SA-MP 0.3.7 R2</b> and will not work in earlier versions!</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The variable name is null or over 40 characters.  </returns> 
		</member>
		<member name="M:SetServerRule" syntax="SetServerRule(name[], value[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="va_SetServerRule"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetSpawnInfo" syntax="SetSpawnInfo(playerid, team, skin, x, y, z, rotation, weapon1, ammo1, weapon2, ammo2, weapon3, ammo3)">
			<attribute name="native"/>
			<referrer name="ac_SetSpawnInfo"/>
			<referrer name="orig_SetSpawnInfo"/>
			<param name="playerid">
				The Playerid of who you want to set the spawn information
			</param>
			<param name="team">
				The Team-ID of the chosen player
			</param>
			<param name="skin">
				The skin which the player will spawn with
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x-coordinate of the player's spawn position
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y-coordinate of the player's spawn position
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z-coordinate of the player's spawn position
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
				The direction in which the player needs to be facing after spawning
			</param>
			<param name="weapon1">
				The first spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo1">
				The amount of ammunition for the primary spawnweapon
			</param>
			<param name="weapon2">
				The second spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo2">
				The amount of ammunition for the second spawnweapon
			</param>
			<param name="weapon3">
				The third spawn-<a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> for  the player
			</param>
			<param name="ammo3">
				The amount of ammunition for the third spawnweapon
			</param>
			<library>a_players</library>  <summary>This function can be used to change the spawn information of a specific player.  It allows  you to automatically set someone's spawn weapons, their team, skin and spawn position, normally used  in case of minigames or automatic-spawn systems.  This function is more crash-safe then using <a  href="#SetPlayerSkin">SetPlayerSkin</a> in <a href="#OnPlayerSpawn">OnPlayerSpawn</a> and/or  <a href="#OnPlayerRequestClass">OnPlayerRequestClass</a>,  even though this has been fixed in 0.2.</summary>                            <seealso name="SetPlayerSkin" />  <seealso name="SetPlayerTeam" />  <seealso name="SpawnPlayer" /> 
		</member>
		<member name="M:SetTimer" syntax="SetTimer(functionName[], interval, repeating)">
			<attribute name="native"/>
			<referrer name="OnScriptInit@E"/>
			<referrer name="Init_Quiz"/>
			<referrer name="StopQuiz"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="MinuteTimer"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				Name of the function to call as a string.  This must be a public function  (forwarded).  A null string here will crash the server
			</param>
			<param name="interval">
				Interval in milliseconds
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
				Whether the timer should repeat or not
			</param>
			<library>a_samp</library>  <summary>Sets a 'timer' to call a function after some time.  Can be set to repeat.</summary>        <seealso name="SetTimerEx" />  <seealso name="KillTimer" />  <remarks>Timer intervals are not accurate (roughly 25% off).  There's a fix available  <a href="http://forum.sa-mp.com/showthread.php?t=289675">here</a>.  </remarks>  <remarks>Timer IDs are never used twice.  You can use <a href="#KillTimer">KillTimer</a> on a timer  ID and it won't matter if it's running or not. </remarks>  <remarks>The function that should be called must be public. </remarks>  <remarks>The use of many timers will result in increased memory/cpu usage. </remarks>  <returns>The ID of the timer that was started.  Timer IDs start at <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:SetTimerEx" syntax="SetTimerEx(functionName[], interval, repeating, format[], ...)">
			<attribute name="native"/>
			<referrer name="ac_AntiCheatKickWithDesync"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="WC_KillVehicle"/>
			<referrer name="InflictDamage"/>
			<referrer name="PlayerDeath"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="achievement"/>
			<referrer name="StartQuiz"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ChangePrivCarModel"/>
			<referrer name="giveGangBudget"/>
			<referrer name="pc_cmd_atakuj"/>
			<referrer name="StartGangWar"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="UpdateGangBar"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingRespawn"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="DrwalTree"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Z"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="PrepareMining"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="giveWeapon"/>
			<referrer name="Teleport"/>
			<referrer name="FreezePlayer"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="showGameDraw"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<referrer name="giveMoney"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				The name of a public function to call when the timer expires
			</param>
			<param name="interval">
				Interval in milliseconds
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
				Whether the timer should be called repeatedly (can only be stopped with <a  href="#KillTimer">KillTimer</a>) or only once
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				Special format indicating the types of values the timer will pass
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
				Indefinite number of arguments to pass (must follow format specified in previous parameter)
			</param>
			<library>a_samp</library>  <summary>Sets a timer to call a function after the specified interval.  This variant ('Ex') can pass  parameters (such as a player ID) to the function.</summary>            <seealso name="SetTimer" />  <seealso name="KillTimer" />  <seealso name="CallLocalFunction" />  <seealso name="CallRemoteFunction" />  <remarks>Timer intervals are not accurate (roughly 25% off).  There's a fix available  <a href="http://forum.sa-mp.com/showthread.php?t=289675">here</a>.  </remarks>  <remarks>Timer IDs are never used twice.  You can use KillTimer() on a timer ID and it won't matter  if it's running or not. </remarks>  <remarks>The function that should be called must be public. </remarks>  <remarks>The use of many timers will result in increased memory/cpu usage. </remarks>  <remarks>  <b>Format syntax:</b><br />  <ul>  <li><b><c>i</c></b> - integer</li>  <li><b><c>d</c></b> - integer</li>  <li><b><c>a</c></b> - array The next parameter must be an integer (<b><c>"i"</c></b>) with the  array's size <b>[CURRENTLY UNUSABLE]</b></li>  <li><b><c>s</c></b> - string <b>[CURRENTLY UNUSABLE]</b></li>  <li><b><c>f</c></b> - float</li>  <li><b><c>b</c></b> - boolean</li>  </ul>  </remarks>  <returns>The ID of the timer that was started.  Timer IDs start at <b><c>1</c></b> and are never  reused.  There are no internal checks to verify that the parameters passed are valid (e.g.  duration  not a minus value).</returns> 
		</member>
		<member name="M:SetVehicleAngularVelocity" syntax="SetVehicleAngularVelocity(vehicleid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_SetVehicleAngularVelocity"/>
			<referrer name="orig_SetVehicleAngularVelocity"/>
			<param name="vehicleid">
				The ID of the vehicle to set the velocity of
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The amount of velocity in the angular x direction
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The amount of velocity in the angular y direction 
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The amount of velocity in the angular z direction
			</param>
			<library>a_vehicles</library>  <summary>Sets the angular x, y and z velocity of a vehicle.</summary>          <seealso name="SetVehicleVelocity" />  <seealso name="GetVehicleVelocity" />  <remarks>This function was added in <b>SA-MP 0.3b</b> and will not work in earlier versions!</remarks>  <remarks>This function has no effect on un-occupied vehicles and does not effect trains.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleFakePosForPlayer" syntax="SetVehicleFakePosForPlayer(playerid, vehicleid, x, y, z)">
			<stacksize value="16"/>
			<dependency name="BS_Delete"/>
			<dependency name="BS_New"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PR_FLOAT"/>
			<dependency name="PR_SendRPC"/>
			<dependency name="PR_UINT16"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleFakeZAngleForPlayer" syntax="SetVehicleFakeZAngleForPlayer(playerid, vehicleid, z_angle)">
			<stacksize value="10"/>
			<dependency name="BS_Delete"/>
			<dependency name="BS_New"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PR_FLOAT"/>
			<dependency name="PR_SendRPC"/>
			<dependency name="PR_UINT16"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleHealth" syntax="SetVehicleHealth(vehicleid, health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ac_SetVehicleHealth"/>
			<referrer name="orig_SetVehicleHealth"/>
			<param name="vehicleid">
				The ID of the vehicle to set the health of
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
				The health, given as a float value
			</param>
			<library>a_vehicles</library>  <summary>Set a vehicle's health.  When a vehicle's health decreases the engine will produce smoke,  and finally fire when it decreases to less than 250 (25%).</summary>      <seealso name="GetVehicleHealth" />  <seealso name="RepairVehicle" />  <seealso name="SetPlayerHealth" />  <seealso name="OnVehicleDeath" />  <remarks>Full vehicle health is <b><c>1000</c></b>, however higher values are possible and increase  the health of the vehicle.</remarks>  <remarks>  <b>Health:</b><br />  <ul>  <li>&gt; 650 - undamaged</li>  <li>650-550 - white Smoke</li>  <li>550-390 - grey Smoke</li>  <li>390-250 - black Smoke</li>  <li>&lt; 250 - on fire (will explode seconds later)</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleNumberPlate" syntax="SetVehicleNumberPlate(vehicleid, numberPlate[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="StartRC"/>
			<param name="vehicleid">
				The ID of the vehicle to set the number plate of
			</param>
			<param name="numberPlate">
				<paraminfo> [] </paraminfo>
				The text that should be displayed on the number plate
			</param>
			<library>a_vehicles</library>  <summary>Set a vehicle numberPlate.</summary>      <seealso name="SetVehicleToRespawn" />  <seealso name="ChangeVehicleColor" />  <seealso name="ChangeVehiclePaintjob" />  <remarks>This function was added in <b>SA-MP 0.3c</b> and will not work in earlier versions!</remarks>  <remarks>You can use colour embedding on the number plate text.</remarks>  <remarks>  This function has no internal error checking.  Do not assign custom number plates to vehicles without  plates (boats, planes, etc) as this will result in some unneeded processing time on the client.<br  />  The vehicle must be re-spawned or re-streamed for the changes to take effect.<br />  There's a limit of 32 characters on each number plate (including embedded colours).<br />  The text length that can be seen on the number plate is around 9 to 10 characters, more characters  will cause the text to split.<br />  Some vehicle models has a backward number plate, e.g.  Boxville (498) (as an alternative to this  vehicle you can use vehicle model ID 609, which is a duplicated Boxville (aka Boxburg), but with  a regular number plate).<br />  This function only works in versions <b>0.2.1</b>, <b>0.2.2</b>, <b>0.2x</b> and <b>0.3c</b> (and  beyond).  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.<br />  </returns> 
		</member>
		<member name="M:SetVehicleParamsEx" syntax="SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SwitchVehicleEngine"/>
			<referrer name="SwitchVehicleDoors"/>
			<param name="vehicleid">
				The ID of the vehicle to set the parameters of
			</param>
			<param name="engine">
				Engine status. <b><c>0</c></b> - Off, <b><c>1</c></b> - On
			</param>
			<param name="lights">
				Light status. <b><c>0</c></b> - Off, <b><c>1</c></b> - On
			</param>
			<param name="alarm">
				Vehicle alarm status.  If on, the alarm starts. <b><c>0</c></b> - Off, <b><c>1</c></b>  - On
			</param>
			<param name="doors">
				Door lock status. <b><c>0</c></b> - Unlocked, <b><c>1</c></b> - Locked
			</param>
			<param name="bonnet">
				Bonnet (hood) status. <b><c>0</c></b> - Closed, <b><c>1</c></b> - Open
			</param>
			<param name="boot">
				Boot/trunk status. <b><c>0</c></b> - Closed, <b><c>1</c></b> - Open
			</param>
			<param name="objective">
				Toggle the objective arrow above the vehicle. <b><c>0</c></b> - Off, <b><c>1</c></b>  - On
			</param>
			<library>a_vehicles</library>  <summary>Sets a vehicle's parameters for all players.</summary>                  <seealso name="GetVehicleParamsEx" />  <seealso name="SetVehicleParamsForPlayer" />  <seealso name="UpdateVehicleDamageStatus" />  <remarks>This function was added in <b>SA-MP 0.3c</b> and will not work in earlier versions! </remarks>  <remarks>The alarm will not reset when finished, you'll need to reset it by yourself with this function.  </remarks>  <remarks>Lights also operate during the day (Only when <a href="#ManualVehicleEngineAndLights">ManualVehicleEngineAndLights</a>  is enabled). </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehiclePassengerDamage" syntax="SetVehiclePassengerDamage(toggle)">
			<stacksize value="1"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="s_VehiclePassengerDamage"/>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetVehiclePos" syntax="SetVehiclePos(vehicleid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_SetVehiclePos"/>
			<referrer name="orig_SetVehiclePos"/>
			<param name="vehicleid">
				Vehicle ID that you want set new position
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the vehicle at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to position the vehicle at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to position the vehicle at
			</param>
			<library>a_vehicles</library>  <summary>Set a vehicle's position.</summary>          <seealso name="SetPlayerPos" />  <seealso name="GetVehiclePos" />  <seealso name="SetVehicleZAngle" />  <remarks>An empty vehicle will not fall after being teleported into the air.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:SetVehiclePosition" syntax="SetVehiclePosition(vehicleid, x, y, z, a)">
			<stacksize value="7"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="acc_SetVehiclePos"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="a">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleToRespawn" syntax="SetVehicleToRespawn(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_SetVehicleToRespawn"/>
			<referrer name="orig_SetVehicleToRespawn"/>
			<param name="vehicleid">
				The ID of the vehicle to respawn
			</param>
			<library>a_vehicles</library>  <summary>Sets a vehicle back to the position at where it was created.</summary>    <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleToSell" syntax="SetVehicleToSell(playerid, privcarid, modelid)">
			<stacksize value="9"/>
			<referrer name="LoadPlayerPrivCars"/>
			<dependency name="CreatePrivCar"/>
			<dependency name="GetFreeGieldaPoint"/>
			<dependency name="SetPVarInt"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
			<param name="modelid">
			</param>
		</member>
		<member name="M:SetVehicleUnoccupiedDamage" syntax="SetVehicleUnoccupiedDamage(toggle)">
			<stacksize value="1"/>
			<dependency name="s_VehicleUnoccupiedDamage"/>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleVelocity" syntax="SetVehicleVelocity(vehicleid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ac_SetVehicleVelocity"/>
			<referrer name="orig_SetVehicleVelocity"/>
			<param name="vehicleid">
				The ID of the vehicle to set the velocity of
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The velocity in the x direction
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The velocity in the y direction 
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The velocity in the z direction
			</param>
			<library>a_vehicles</library>  <summary>Sets the x, y and z velocity of a vehicle.</summary>          <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>This function has no affect on un-occupied vehicles and does not affect trains.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleVirtualWorld" syntax="SetVehicleVirtualWorld(vehicleid, virtualWorld)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="Taxi_Start"/>
			<referrer name="Drwal_Start"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="StartRC"/>
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="CreateSumoObjects"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_exit"/>
			<param name="vehicleid">
				The ID of vehicle to set the virtual world of
			</param>
			<param name="virtualWorld">
				The ID of the virtual world to put the vehicle in
			</param>
			<library>a_vehicles</library>  <summary>Sets the 'virtual world' of a vehicle.  Players will only be able to see vehicles in their  own virtual world.</summary>      <seealso name="GetVehicleVirtualWorld" />  <seealso name="SetPlayerVirtualWorld" /> 
		</member>
		<member name="M:SetVehicleZAngle" syntax="SetVehicleZAngle(vehicleid, angle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="setPosition"/>
			<referrer name="SetVehiclePosition"/>
			<param name="vehicleid">
				The ID of the vehicle to set the rotation of
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The z angle to set
			</param>
			<library>a_vehicles</library>  <summary>Set the z rotation (yaw) of a vehicle.</summary>      <seealso name="GetVehicleZAngle" />  <seealso name="SetVehiclePos" />  <remarks>A vehicle's x and y (pitch and roll) rotation will be reset when this function is used.  The x and y rotations can not be set.</remarks>  <remarks>This function does not work on unoccupied vehicles.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:SetWeaponArmourRule" syntax="SetWeaponArmourRule(weaponid, affects_armour, torso_only)">
			<stacksize value="1"/>
			<dependency name="s_DamageArmour"/>
			<dependency name="s_DamageArmour"/>
			<param name="weaponid">
			</param>
			<param name="affects_armour">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="torso_only">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetWeaponDamage" syntax="SetWeaponDamage(weaponid, damage_type, amount, ...)">
			<stacksize value="7"/>
			<dependency name="DAMAGE_TYPE_MULTIPLIER"/>
			<dependency name="DAMAGE_TYPE_RANGE"/>
			<dependency name="DAMAGE_TYPE_RANGE_MULTIPLIER"/>
			<dependency name="DAMAGE_TYPE_STATIC"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="getarg"/>
			<dependency name="s_DamageRangeRanges"/>
			<dependency name="s_DamageRangeRanges"/>
			<dependency name="s_DamageRangeSteps"/>
			<dependency name="s_DamageRangeValues"/>
			<dependency name="s_DamageRangeValues"/>
			<dependency name="s_DamageType"/>
			<dependency name="s_WeaponDamage"/>
			<param name="weaponid">
			</param>
			<param name="damage_type">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="...">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetWeaponMaxRange" syntax="SetWeaponMaxRange(weaponid, range)">
			<stacksize value="4"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="s_WeaponRange"/>
			<param name="weaponid">
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetWeaponName" syntax="SetWeaponName(weaponid, name[])">
			<stacksize value="5"/>
			<dependency name="g_WeaponName"/>
			<dependency name="g_WeaponName"/>
			<dependency name="strunpack"/>
			<param name="weaponid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetWeaponShootRate" syntax="SetWeaponShootRate(weaponid, max_rate)">
			<stacksize value="1"/>
			<dependency name="s_MaxWeaponShootRate"/>
			<param name="weaponid">
			</param>
			<param name="max_rate">
			</param>
		</member>
		<member name="M:ShowAchievementList" syntax="ShowAchievementList(playerid, typeid)">
			<stacksize value="13"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_ACHIEVEMENT_LIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="achievementData"/>
			<dependency name="achievementData"/>
			<dependency name="achievement_levelable"/>
			<dependency name="achievement_levels"/>
			<dependency name="achievement_name"/>
			<dependency name="achievement_required"/>
			<dependency name="false"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievementData"/>
			<dependency name="pAchievementData"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="showDialog"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="typeid">
			</param>
		</member>
		<member name="M:ShowAdminLogin" syntax="ShowAdminLogin(playerid, string[])">
			<stacksize value="25"/>
			<referrer name="pc_cmd_aduty"/>
			<dependency name="DIALOG_ADMIN_LOGIN"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_adminLoad"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowAdminRanking" syntax="ShowAdminRanking(playerid, index, title[])">
			<attribute name="public"/>
			<stacksize value="320"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DIALOG_ADMIN_DUTY"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_index_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="cellmax"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="s"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="index">
			</param>
			<param name="title">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowAsyncModelSelectionMenu" syntax="ShowAsyncModelSelectionMenu(playerid, header[], items)">
			<tagname value="Task"/>
			<stacksize value="7"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="ModelSelectionTask"/>
			<dependency name="PAWN_PLUS_EXTRA_ID"/>
			<dependency name="ShowModelSelectionMenu"/>
			<dependency name="task_delete"/>
			<dependency name="task_new"/>
			<dependency name="task_valid"/>
			<param name="playerid">
			</param>
			<param name="header">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="items">
				<paraminfo>List </paraminfo>
			</param>
		</member>
		<member name="M:ShowAttachmentList" syntax="ShowAttachmentList(playerid, privcarid)">
			<stacksize value="15"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<dependency name="AddModelMenuItem"/>
			<dependency name="DIALOG_PRIVCAR_MANAGE"/>
			<dependency name="EOS"/>
			<dependency name="E_MODEL_SELECTION_INDEX"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="ShowAsyncModelSelectionMenu"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachment_modelid"/>
			<dependency name="attachment_name"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="list_new"/>
			<dependency name="mysql_pquery"/>
			<dependency name="task_await_arr"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:ShowBanManage" syntax="ShowBanManage(playerid, bannedid)">
			<tagname value="Task"/>
			<stacksize value="379"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="pc_cmd_checkban"/>
			<dependency name="ConvertTime"/>
			<dependency name="DIALOG_BAN_MANAGE"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<dependency name="task_new"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="bannedid">
			</param>
		</member>
		<member name="M:ShowBankPanel" syntax="ShowBankPanel(playerid)">
			<stacksize value="10"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@08"/>
			<referrer name="OnBankDialog"/>
			<dependency name="DIALOG_BANK_PANEL"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="pBank"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowBaseObjectList" syntax="ShowBaseObjectList(playerid, gangid, baseid)">
			<stacksize value="15"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<dependency name="AddModelMenuItem"/>
			<dependency name="DIALOG_BASE_PANEL"/>
			<dependency name="EOS"/>
			<dependency name="E_MODEL_SELECTION_INDEX"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="GangBaseObjectCount"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="ShowAsyncModelSelectionMenu"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="base_obj_modelid"/>
			<dependency name="base_obj_name"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gang_budget"/>
			<dependency name="list_new"/>
			<dependency name="mysql_pquery"/>
			<dependency name="strdot"/>
			<dependency name="task_await_arr"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
			<param name="baseid">
			</param>
		</member>
		<member name="M:ShowBaseObjectShop" syntax="ShowBaseObjectShop(playerid, baseid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<dependency name="DIALOG_BASE_OBJECTS"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GetBaseObjectCount"/>
			<dependency name="base_obj_modelid"/>
			<dependency name="base_obj_name"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_objectData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="baseid">
			</param>
		</member>
		<member name="M:ShowBaseObjectsMenu" syntax="ShowBaseObjectsMenu(playerid, baseid, i)">
			<stacksize value="101"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<dependency name="DIALOG_BASE_OBJECT_MENU"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="GangBaseObjectIndex"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="SetPVarInt"/>
			<dependency name="base_obj_modelid"/>
			<dependency name="base_obj_name"/>
			<dependency name="format"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
			<param name="baseid">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:ShowBetPanel" syntax="ShowBetPanel(playerid, betid)">
			<stacksize value="12"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<dependency name="DIALOG_BET_REWARD"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="betData"/>
			<dependency name="betData"/>
			<dependency name="bet_name"/>
			<dependency name="catstr"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="pBetGang"/>
			<dependency name="pBetReward"/>
			<dependency name="pBetTarget"/>
			<dependency name="pBetType"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="betid">
			</param>
		</member>
		<member name="M:ShowBusinessManage" syntax="ShowBusinessManage(playerid, businessid)">
			<stacksize value="10"/>
			<referrer name="OnBusinessResponse"/>
			<dependency name="BUSINESS_CASINO"/>
			<dependency name="BUSINESS_GUNSHOP"/>
			<dependency name="DIALOG_BUSINESS_MANAGE"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_license"/>
			<dependency name="business_name"/>
			<dependency name="business_price"/>
			<dependency name="business_reward"/>
			<dependency name="business_type"/>
			<dependency name="catstr"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
		</member>
		<member name="M:ShowBusinessPanel" syntax="ShowBusinessPanel(playerid, businessid)">
			<stacksize value="192"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0c"/>
			<dependency name="DIALOG_BUSINESS_PANEL"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessType"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_cost"/>
			<dependency name="business_name"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_position"/>
			<dependency name="business_type"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_num_rows"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
		</member>
		<member name="M:ShowCasinoShop" syntax="ShowCasinoShop(playerid, businessid)">
			<stacksize value="10"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<dependency name="DIALOG_CASINO_SHOP"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_price"/>
			<dependency name="catstr"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
		</member>
		<member name="M:ShowEngineSelect" syntax="ShowEngineSelect(playerid)">
			<stacksize value="10"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<dependency name="DIALOG_PRIVCAR_ENGINE"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowFishBaits" syntax="ShowFishBaits(playerid)">
			<stacksize value="10"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<dependency name="DIALOG_FISH_BAIT"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="fishBaitData"/>
			<dependency name="fishBaitData"/>
			<dependency name="fish_bait_money"/>
			<dependency name="fish_bait_name"/>
			<dependency name="format"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishBait"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowFishRodes" syntax="ShowFishRodes(playerid)">
			<stacksize value="10"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<dependency name="DIALOG_FISH_RODE"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="fishRodeData"/>
			<dependency name="fishRodeData"/>
			<dependency name="fish_rode_money"/>
			<dependency name="fish_rode_name"/>
			<dependency name="pFishZylka"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowFishUlepszenia" syntax="ShowFishUlepszenia(playerid)">
			<stacksize value="11"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<dependency name="DIALOG_FISH_ULEPSZENIA"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="fishUlepszeniaData"/>
			<dependency name="fishUlepszeniaData"/>
			<dependency name="fish_ulep_money"/>
			<dependency name="fish_ulep_name"/>
			<dependency name="format"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowGangCreator" syntax="ShowGangCreator(playerid, type)">
			<stacksize value="11"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_GANG_CREATOR_COLOR"/>
			<dependency name="DIALOG_GANG_CREATOR_NAME"/>
			<dependency name="DIALOG_GANG_CREATOR_TAG"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="getMoney"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:ShowGangInformation" syntax="ShowGangInformation(playerid, gangid)">
			<tagname value="Task"/>
			<stacksize value="320"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iterator@GangZones"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_num_rows"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_deaths"/>
			<dependency name="gang_kills"/>
			<dependency name="gang_level"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_respect"/>
			<dependency name="gang_respect_needed"/>
			<dependency name="gang_slots"/>
			<dependency name="gang_spar_loss"/>
			<dependency name="gang_spar_remis"/>
			<dependency name="gang_spar_win"/>
			<dependency name="gang_tag"/>
			<dependency name="getRankingName"/>
			<dependency name="getRankingPoints"/>
			<dependency name="getRatio"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="mysql_query"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pGangSparRank"/>
			<dependency name="pGangSparRankedScore"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pc_cmd_team"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_gangData"/>
			<dependency name="s"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="task_await"/>
			<dependency name="task_new"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
		</member>
		<member name="M:ShowGangList" syntax="ShowGangList(playerid)">
			<stacksize value="12"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_GANG_LIST"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_gangData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowGangTop" syntax="ShowGangTop(playerid)">
			<stacksize value="10"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_GANG_TOP"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowGangZones" syntax="ShowGangZones(playerid)">
			<stacksize value="165"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iterator@GangZones"/>
			<dependency name="cellmax"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pc_cmd_team"/>
			<dependency name="s"/>
			<dependency name="strx"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowGieldaPanel" syntax="ShowGieldaPanel(playerid)">
			<stacksize value="13"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CountVehicleSellPlayer"/>
			<dependency name="CountVehicleToSell"/>
			<dependency name="DIALOG_GIELDA_MAIN"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowLoginPanel" syntax="ShowLoginPanel(playerid, string[])">
			<stacksize value="10"/>
			<referrer name="FindAccount"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordChecked"/>
			<dependency name="DIALOG_LOGIN"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowMarketManage" syntax="ShowMarketManage(playerid, targetid)">
			<tagname value="Task"/>
			<stacksize value="140"/>
			<referrer name="OnDialogGangMarket"/>
			<dependency name="DIALOG_GANG_MARKET_TYPE"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gang_ownerid"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_gang_loan"/>
			<dependency name="player_gang_loan_expire"/>
			<dependency name="player_nickname"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="task_new"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
		</member>
		<member name="M:ShowMissionDraw" syntax="ShowMissionDraw(playerid, header[], info[], money)">
			<stacksize value="41"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<dependency name="KillTimer"/>
			<dependency name="MissionTimer"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<dependency name="strlen"/>
			<dependency name="tdMissionDraw"/>
			<param name="playerid">
			</param>
			<param name="header">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="info">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:ShowModelSelectionMenu" syntax="ShowModelSelectionMenu(playerid, header[], extraid, items)">
			<stacksize value="5"/>
			<referrer name="ShowAsyncModelSelectionMenu"/>
			<dependency name="GetTickCount"/>
			<dependency name="HideModelSelectionMenu"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ShowModelSelectionMenuTextDraws"/>
			<dependency name="false"/>
			<dependency name="g_MenuCooldownTick"/>
			<dependency name="g_MenuCurrentPage"/>
			<dependency name="g_MenuExtraID"/>
			<dependency name="g_MenuModels"/>
			<dependency name="g_MenuPageCount"/>
			<dependency name="g_MenuShown"/>
			<dependency name="list_size"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="header">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="extraid">
			</param>
			<param name="items">
				<paraminfo>List </paraminfo>
			</param>
		</member>
		<member name="M:ShowModelSelectionMenuTextDraws" syntax="ShowModelSelectionMenuTextDraws(playerid, header[])">
			<stacksize value="80"/>
			<referrer name="ShowModelSelectionMenu"/>
			<dependency name="CreateModelSelectionPlayerTDs"/>
			<dependency name="DestroyModelSelectionPlayerTDs"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SelectTextDraw"/>
			<dependency name="SetModelSelectionModelBox"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="format"/>
			<dependency name="g_MenuBackground"/>
			<dependency name="g_MenuBottomBanner"/>
			<dependency name="g_MenuCloseButton"/>
			<dependency name="g_MenuHeaderText"/>
			<dependency name="g_MenuLeftArrow"/>
			<dependency name="g_MenuModels"/>
			<dependency name="g_MenuPageNumber"/>
			<dependency name="g_MenuRightArrow"/>
			<dependency name="g_MenuTopBanner"/>
			<dependency name="g_eMenuModelData"/>
			<dependency name="iter_get_arr"/>
			<dependency name="iter_inside"/>
			<dependency name="iter_move_next"/>
			<dependency name="list_iter"/>
			<dependency name="list_size"/>
			<param name="playerid">
			</param>
			<param name="header">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowNameTagForAll" syntax="ShowNameTagForAll(playerid)">
			<stacksize value="6"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="Iterator@Player"/>
			<dependency name="ShowPlayerNameTagForPlayer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowPinCodePanel" syntax="ShowPinCodePanel(playerid, string[])">
			<stacksize value="10"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordChecked"/>
			<dependency name="DIALOG_PINCODE_LOGIN"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowPlayerDialogPages" syntax="ShowPlayerDialogPages(playerid, function[], style, caption[], button1[], button2[], items_per_page, nextbutton[], backbutton[])">
			<stacksize value="14"/>
			<dependency name="NDP_DIALOG_TYPE_DIALOG"/>
			<dependency name="NDP_DialogInvoke"/>
			<param name="playerid">
			</param>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="style">
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="items_per_page">
			</param>
			<param name="nextbutton">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="backbutton">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowPlayerGangMembers" syntax="ShowPlayerGangMembers(playerid, gangid)">
			<attribute name="public"/>
			<stacksize value="241"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="ShowGangInformation"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="cellmax"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="s"/>
			<dependency name="task_await"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
		</member>
		<member name="M:ShowPlayerNameTagForPlayer" syntax="ShowPlayerNameTagForPlayer(playerid, targetid, show)">
			<attribute name="native"/>
			<referrer name="HideNameTagForAll"/>
			<referrer name="ShowNameTagForAll"/>
			<param name="playerid">
				Player who will see the results of this function
			</param>
			<param name="targetid">
				Player whose name tag will be shown or hidden
			</param>
			<param name="show">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b>-show name tag, <b><c>0</c></b>-hide name tag
			</param>
			<library>a_players</library>  <summary>This functions allows you to toggle the drawing of player nametags, healthbars and armor  bars which display above their head.  For use of a similar function like this on a global level,  <a href="#ShowNameTags">ShowNameTags</a> function.</summary>        <seealso name="ShowNameTags" />  <seealso name="DisableNameTagLOS" />  <seealso name="SetPlayerMarkerForPlayer" />  <remarks><a href="#ShowNameTags">ShowNameTags</a> must be set to <b><c>1</c></b> to be able to show  name tags with ShowPlayerNameTagForPlayer, that means that in order to be effective you need to <c>ShowPlayerNameTagForPlayer(forplayerid,  playerid, 0)</c> ahead of time(<a href="#OnPlayerStreamIn">OnPlayerStreamIn</a> is a good spot).</remarks> 
		</member>
		<member name="M:ShowPlayerObjectMenu" syntax="ShowPlayerObjectMenu(playerid, privcarid, i)">
			<stacksize value="101"/>
			<referrer name="SaveEditorAttachment"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<dependency name="DIALOG_PRIVCAR_ATTACH_SELECT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="SetPVarInt"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachment_modelid"/>
			<dependency name="attachment_name"/>
			<dependency name="format"/>
			<dependency name="pVehObject"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:ShowPlayerProgressBar" syntax="ShowPlayerProgressBar(playerid, barid)">
			<stacksize value="5"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<referrer name="addLevelScore"/>
			<referrer name="changeBarColor"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="_updateGangBarEx"/>
			<referrer name="Slots_Start"/>
			<referrer name="OnPlayerFishing"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_back"/>
			<dependency name="pbar_fill"/>
			<dependency name="pbar_main"/>
			<dependency name="pbar_show"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="barid">
				<paraminfo>PlayerBar </paraminfo>
			</param>
		</member>
		<member name="M:ShowPrivCarObjects" syntax="ShowPrivCarObjects(playerid, privcarid)">
			<stacksize value="12"/>
			<referrer name="OnDialogPrivCarManage"/>
			<dependency name="DIALOG_PRIVCAR_ATTACHMENT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachmentObjectData"/>
			<dependency name="attachment_modelid"/>
			<dependency name="attachment_name"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="mysql_query"/>
			<dependency name="pVehObjectCount"/>
			<dependency name="pVehSpawned"/>
			<dependency name="pVehUlepszenie"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_objectData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:ShowPrivCarUlepszenia" syntax="ShowPrivCarUlepszenia(playerid, privcarid)">
			<stacksize value="11"/>
			<referrer name="OnDialogPrivCarManage"/>
			<dependency name="DIALOG_PRIVCAR_ULEPSZENIA"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="pVehSpawned"/>
			<dependency name="pVehUlepszenie"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="ulep_money"/>
			<dependency name="ulep_name"/>
			<dependency name="ulepszeniaPojazdData"/>
			<dependency name="ulepszeniaPojazdData"/>
			<param name="playerid">
			</param>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:ShowQuestionPanel" syntax="ShowQuestionPanel(playerid, string[])">
			<stacksize value="10"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordChecked"/>
			<dependency name="DIALOG_QUESTION_LOGIN"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="pSecretQuestion"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowRegisterPanel" syntax="ShowRegisterPanel(playerid, string[])">
			<stacksize value="10"/>
			<referrer name="FindAccount"/>
			<referrer name="OnDialogAccount"/>
			<dependency name="DIALOG_REGISTER"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowRegulamin" syntax="ShowRegulamin(playerid)">
			<stacksize value="11"/>
			<referrer name="pc_cmd_regulamin"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowRoulettePanel" syntax="ShowRoulettePanel(playerid, businessid, rouletteid)">
			<stacksize value="13"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="DIALOG_ROULETTE_PANEL"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pRouletteColor"/>
			<dependency name="pRouletteTokens"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="roulettePlayer"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
			<param name="rouletteid">
			</param>
		</member>
		<member name="M:ShowSparingPanel" syntax="ShowSparingPanel(playerid, gangid)">
			<stacksize value="12"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_sparspec"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<dependency name="CheckPlayerGame"/>
			<dependency name="DIALOG_SPARING_SPECTATE"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="player_sparingData"/>
			<dependency name="player_sparingGangSpec"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
		</member>
		<member name="M:ShowTeleportManage" syntax="ShowTeleportManage(playerid, i)">
			<stacksize value="29"/>
			<referrer name="OnDialogTeleportManage"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_TELEPORT_CHANGE"/>
			<dependency name="EOS"/>
			<dependency name="GetTeleportType"/>
			<dependency name="GetTeleportType"/>
			<dependency name="format"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_teleportData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strx"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_a"/>
			<dependency name="teleport_category"/>
			<dependency name="teleport_cmd"/>
			<dependency name="teleport_name"/>
			<dependency name="teleport_spawn"/>
			<dependency name="teleport_x"/>
			<dependency name="teleport_y"/>
			<dependency name="teleport_z"/>
			<param name="playerid">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:ShowTeleports" syntax="ShowTeleports(playerid, category)">
			<stacksize value="12"/>
			<referrer name="OnDialogTeleport"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_TELEPORT_SELECT"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@Teleports"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="teleportData"/>
			<dependency name="teleportData"/>
			<dependency name="teleport_category"/>
			<dependency name="teleport_cmd"/>
			<dependency name="teleport_name"/>
			<param name="playerid">
			</param>
			<param name="category">
			</param>
		</member>
		<member name="M:ShowTruckMenu" syntax="ShowTruckMenu(playerid)">
			<stacksize value="119"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_TRUCK_PANEL"/>
			<dependency name="EOS"/>
			<dependency name="GetDistanceBetweenPoints3D"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="truckData"/>
			<dependency name="truckData"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowTutorial" syntax="ShowTutorial(playerid)">
			<stacksize value="10"/>
			<referrer name="pc_cmd_tutorial"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_TUTORIAL"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowVaultDialog" syntax="ShowVaultDialog(playerid, string[])">
			<stacksize value="10"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@09"/>
			<referrer name="OnDialogHeist"/>
			<dependency name="DIALOG_HEIST_VAULT"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="EOS"/>
			<dependency name="bankHeistCode"/>
			<dependency name="format"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowZoneForAll" syntax="ShowZoneForAll(zoneid, color, ncolor, bcolor)">
			<stacksize value="5"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="CheckGangWar"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="GangZoneShowForAll"/>
			<dependency name="border"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<dependency name="zIsUsingNumbers"/>
			<dependency name="zMainID"/>
			<param name="zoneid">
			</param>
			<param name="color">
			</param>
			<param name="ncolor">
			</param>
			<param name="bcolor">
			</param>
		</member>
		<member name="M:ShowZoneForPlayer" syntax="ShowZoneForPlayer(playerid, zoneid, color, ncolor, bcolor)">
			<stacksize value="6"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StartWG"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<dependency name="GangZoneShowForPlayer"/>
			<dependency name="border"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<dependency name="zIsUsingNumbers"/>
			<dependency name="zMainID"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
			<param name="color">
			</param>
			<param name="ncolor">
			</param>
			<param name="bcolor">
			</param>
		</member>
		<member name="M:ShuffleDeepArray_Entry" syntax="ShuffleDeepArray_Entry(...)">
			<stacksize value="7"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="getarg"/>
			<dependency name="random"/>
			<param name="...">
			</param>
		</member>
		<member name="M:SkinKobiecy" syntax="SkinKobiecy(skinid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="Taxi_Random"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="skinid">
			</param>
		</member>
		<member name="M:SkipWhitespace" syntax="SkipWhitespace(str[], pos)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to skip over part of.
			</param>
			<param name="pos">
				The start of the whitespace.
			</param>
			    <returns>  The end of the whitespace.  </returns>  <remarks>  Doesn't skip over NULL terminators.  </remarks> 
		</member>
		<member name="M:Slots_Hide" syntax="Slots_Hide(playerid)">
			<stacksize value="6"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="SlotsBar"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="pSlotsCount"/>
			<dependency name="tdCasinoSlot"/>
			<dependency name="tdSlotButton"/>
			<dependency name="tdSlotButton"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Slots_RefreshTD" syntax="Slots_RefreshTD(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="tdCasinoSlot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Slots_Start" syntax="Slots_Start(playerid, businessid, slotid)">
			<stacksize value="7"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0d"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="SelectTextDraw"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="ShowPlayerProgressBar"/>
			<dependency name="SlotsBar"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="pSlotsID"/>
			<dependency name="pSlotsNumber"/>
			<dependency name="pSlotsNumber"/>
			<dependency name="pSlotsSpin"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="random"/>
			<dependency name="slotsPlayer"/>
			<dependency name="slotsTypeData"/>
			<dependency name="slotsTypeData"/>
			<dependency name="tdCasinoSlot"/>
			<dependency name="tdSlotButton"/>
			<dependency name="tdSlotButton"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
			<param name="slotid">
			</param>
		</member>
		<member name="M:Slots_Timer" syntax="Slots_Timer(playerid, businessid, slotid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<dependency name="math_random"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pSlotsCount"/>
			<dependency name="pSlotsNumber"/>
			<dependency name="pSlotsNumber"/>
			<dependency name="pSlotsTimer"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="random"/>
			<dependency name="slotsPlayer"/>
			<dependency name="slotsTypeData"/>
			<dependency name="slotsTypeData"/>
			<dependency name="tdCasinoSlot"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="businessid">
			</param>
			<param name="slotid">
			</param>
		</member>
		<member name="M:SortArrayUsingCompInto_Entry" syntax="SortArrayUsingCompInto_Entry(results[], size, ...)">
			<stacksize value="11"/>
			<dependency name="GetFunctionAddress"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SORT_IS_PLAYERS"/>
			<dependency name="SortArrayUsingCompInto_QS"/>
			<dependency name="getarg"/>
			<dependency name="print"/>
			<param name="results">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:SortArrayUsingCompInto_QS" syntax="SortArrayUsingCompInto_QS(array, results[], func, left, right)">
			<stacksize value="6"/>
			<referrer name="SortArrayUsingCompInto_Entry"/>
			<dependency name="g_sort_stack"/>
			<param name="array">
			</param>
			<param name="results">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="func">
			</param>
			<param name="left">
			</param>
			<param name="right">
			</param>
		</member>
		<member name="M:SortArrayUsingComparator_Entry" syntax="SortArrayUsingComparator_Entry(size, ...)">
			<stacksize value="9"/>
			<dependency name="GetFunctionAddress"/>
			<dependency name="SortArrayUsingComparator_QS"/>
			<dependency name="print"/>
			<param name="size">
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:SortArrayUsingComparator_QS" syntax="SortArrayUsingComparator_QS(array, func, left, right)">
			<stacksize value="6"/>
			<referrer name="SortArrayUsingComparator_Entry"/>
			<dependency name="ExchangeArraySlots"/>
			<dependency name="g_sort_stack"/>
			<param name="array">
			</param>
			<param name="func">
			</param>
			<param name="left">
			</param>
			<param name="right">
			</param>
		</member>
		<member name="M:SortDeepArray_Entry" syntax="SortDeepArray_Entry(&amp;cmp1, &amp;cmp2, size, cmp_tag, cmp_string, ignorecase, order, array[][], ...)">
			<stacksize value="6"/>
			<referrer name="CheckSparing"/>
			<referrer name="StopDA"/>
			<referrer name="UpdateRC"/>
			<dependency name="_SortDeepArray"/>
			<dependency name="g_sort_cmp_offset"/>
			<dependency name="g_sort_cmp_type"/>
			<dependency name="g_sort_ignorecase"/>
			<dependency name="g_sort_order"/>
			<param name="cmp1">
				<paraminfo> {Float,String,string,_} &amp; </paraminfo>
			</param>
			<param name="cmp2">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="cmp_tag">
			</param>
			<param name="cmp_string">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="order">
				<paraminfo>E_SORT_ORDER </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:SparingCountDown" syntax="SparingCountDown(gangid, enemyid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="DIALOG_SPARING_ZESTAW"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="KillTimer"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SparingRespawn"/>
			<dependency name="StopSparing"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_name"/>
			<dependency name="math_random"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGangSparArena"/>
			<dependency name="pGangSparCountDown"/>
			<dependency name="pGangSparCountDown"/>
			<dependency name="pGangSparDraw"/>
			<dependency name="pGangSparDraw"/>
			<dependency name="pGangSparLimit"/>
			<dependency name="pGangSparMembers"/>
			<dependency name="pGangSparOdliczanie"/>
			<dependency name="pGangSparOdliczanie"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="pGangSparSide"/>
			<dependency name="pGangSparTime"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="pGangSparWorld"/>
			<dependency name="pGangSparWorld"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="random"/>
			<dependency name="showDialog"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
		</member>
		<member name="M:SparingRespawn" syntax="SparingRespawn(playerid, gangid, weapons)">
			<stacksize value="12"/>
			<referrer name="SparingCountDown"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Teleport"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="pGangSparSide"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="sparingDataAreny"/>
			<dependency name="sparingDataAreny"/>
			<dependency name="sparing_att"/>
			<dependency name="sparing_def"/>
			<dependency name="sparing_interior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
			<param name="weapons">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SparingSK" syntax="SparingSK(playerid, weapons)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GiveSparingZestaw"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="false"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="player_sparingZestaw"/>
			<param name="playerid">
			</param>
			<param name="weapons">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SparingTimer" syntax="SparingTimer(gangid, enemyid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CheckSparing"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="KillTimer"/>
			<dependency name="StopSparing"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_name"/>
			<dependency name="pGangSparCountDown"/>
			<dependency name="pGangSparCountDown"/>
			<dependency name="pGangSparDraw"/>
			<dependency name="pGangSparDraw"/>
			<dependency name="pGangSparMembers"/>
			<dependency name="pGangSparPoints"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
		</member>
		<member name="M:Sparing_Config" syntax="Sparing_Config(gangid, enemyid, td)">
			<stacksize value="6"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="StopSparing"/>
			<dependency name="WC_TextDrawAlignment"/>
			<dependency name="WC_TextDrawBackgroundColor"/>
			<dependency name="WC_TextDrawColor"/>
			<dependency name="WC_TextDrawCreate"/>
			<dependency name="WC_TextDrawFont"/>
			<dependency name="WC_TextDrawLetterSize"/>
			<dependency name="WC_TextDrawSetOutline"/>
			<dependency name="WC_TextDrawSetProportional"/>
			<dependency name="WC_TextDrawSetShadow"/>
			<dependency name="WC_TextDrawTextSize"/>
			<dependency name="false"/>
			<dependency name="pGangSparArena"/>
			<dependency name="pGangSparArena"/>
			<dependency name="pGangSparCountDown"/>
			<dependency name="pGangSparCountDown"/>
			<dependency name="pGangSparDraw"/>
			<dependency name="pGangSparDraw"/>
			<dependency name="pGangSparInitiator"/>
			<dependency name="pGangSparLimit"/>
			<dependency name="pGangSparMembers"/>
			<dependency name="pGangSparOdliczanie"/>
			<dependency name="pGangSparOdliczanie"/>
			<dependency name="pGangSparPoints"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="pGangSparSettings"/>
			<dependency name="pGangSparSettings"/>
			<dependency name="pGangSparTime"/>
			<dependency name="pGangSparTime"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="true"/>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
			<param name="td">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Sparing_Init" syntax="Sparing_Init(gangid)">
			<stacksize value="1"/>
			<referrer name="FetchGang"/>
			<referrer name="StopSparing"/>
			<dependency name="false"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGangSparAccepted"/>
			<dependency name="pGangSparInitiator"/>
			<dependency name="pGangSparMembers"/>
			<dependency name="pGangSparPoints"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:SpawnPlayer" syntax="SpawnPlayer(playerid)">
			<attribute name="native"/>
			<referrer name="ac_SpawnPlayer"/>
			<referrer name="orig_SpawnPlayer"/>
			<param name="playerid">
				The ID of the player to spawn
			</param>
			<library>a_players</library>  <summary>(Re)Spawns a player.</summary>    <seealso name="SetSpawnInfo" />  <seealso name="AddPlayerClass" />  <seealso name="OnPlayerSpawn" />  <remarks>Kills the player if they are in a vehicle and then they spawn with a bottle in their hand.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SpawnPlayerInPlace" syntax="SpawnPlayerInPlace(playerid)">
			<stacksize value="20"/>
			<referrer name="ResyncPlayer"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerDeath"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="acc_SetSpawnInfo"/>
			<dependency name="acc_SpawnPlayer"/>
			<dependency name="s_PlayerTeam"/>
			<dependency name="s_SpawnInfoModified"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SpecToggle" syntax="SpecToggle(playerid, targetid, toggle)">
			<stacksize value="6"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_specoff"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_betspec"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PlayerSpectateVehicle"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="WC_PlayerSpectatePlayer"/>
			<dependency name="WC_SetPlayerVirtualWorld"/>
			<dependency name="WC_TogglePlayerSpectating"/>
			<dependency name="acc_SetPlayerInterior"/>
			<dependency name="false"/>
			<dependency name="pSpectate"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:StartBTR" syntax="StartBTR()">
			<stacksize value="18"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateRoyaleWeapons"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="HideNameTagForAll"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="RoyaleArenaID"/>
			<dependency name="RoyaleKills"/>
			<dependency name="RoyaleZone"/>
			<dependency name="RoyaleZoneCount"/>
			<dependency name="RoyaleZoneDamage"/>
			<dependency name="RoyaleZonePosition"/>
			<dependency name="RoyaleZoneSwitch"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="ShowZoneForPlayer"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_BTR"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WEAPON_PARACHUTE"/>
			<dependency name="ZoneFlashForPlayer"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveWeapon"/>
			<dependency name="math_random_float"/>
			<dependency name="msgAll"/>
			<dependency name="random"/>
			<dependency name="royaleDataAreny"/>
			<dependency name="royaleDataAreny"/>
			<dependency name="royale_name"/>
			<dependency name="royale_spawn"/>
			<dependency name="royale_zone"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartChowany" syntax="StartChowany()">
			<stacksize value="14"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ChowanyArenaID"/>
			<dependency name="ChowanySzukajacy"/>
			<dependency name="ChowanyZone"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="FreezePlayer"/>
			<dependency name="GAME_CH"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="HideNameTagForAll"/>
			<dependency name="Iter_Random_Internal"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="ShowZoneForPlayer"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_CH"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WC_SetPlayerTeam"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="ZoneFlashForPlayer"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="chowanyDataArena"/>
			<dependency name="chowanyDataArena"/>
			<dependency name="chowany_area"/>
			<dependency name="chowany_hideer"/>
			<dependency name="chowany_interior"/>
			<dependency name="chowany_name"/>
			<dependency name="chowany_seeker"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveWeapon"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_countdown"/>
			<dependency name="random"/>
			<dependency name="showGameDraw"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartDA" syntax="StartDA()">
			<stacksize value="14"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="GAME_DA"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_DA"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="da_damage"/>
			<dependency name="da_id"/>
			<dependency name="da_kills"/>
			<dependency name="deathArenaID"/>
			<dependency name="deathArenaInterior"/>
			<dependency name="deathArenaKills"/>
			<dependency name="deathArenaKills"/>
			<dependency name="deathArenaPlace"/>
			<dependency name="deathPosLVPD"/>
			<dependency name="deathPosLVPD"/>
			<dependency name="deathPosWH"/>
			<dependency name="deathPosWH"/>
			<dependency name="false"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="random"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartGG" syntax="StartGG()">
			<stacksize value="13"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="FreezePlayer"/>
			<dependency name="GAME_GG"/>
			<dependency name="GG_GetWeapon"/>
			<dependency name="GameStarted"/>
			<dependency name="GunGameLevel"/>
			<dependency name="GunGameStatus"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_GG"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveWeapon"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_countdown"/>
			<dependency name="random"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartGangWar" syntax="StartGangWar(playerid, gangid, zoneid)">
			<attribute name="public"/>
			<stacksize value="61"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerInDynamicArea"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="ZoneFlashForAll"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_battleZone"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="msgAll"/>
			<dependency name="pGangWarAttacker"/>
			<dependency name="pGangWarDamage"/>
			<dependency name="pGangWarDamage"/>
			<dependency name="pGangWarDefender"/>
			<dependency name="pGangWarDefenderDef"/>
			<dependency name="pGangWarDefenderExit"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarTime"/>
			<dependency name="pGangWarTimer"/>
			<dependency name="pGangZone"/>
			<dependency name="pGangZoneDamageId"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZoneRectangle"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_zone_damage"/>
			<dependency name="strx"/>
			<dependency name="toUpperCase"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:StartQuiz" syntax="StartQuiz()">
			<attribute name="public"/>
			<stacksize value="161"/>
			<dependency name="EOS"/>
			<dependency name="IsPlayerSpawned"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="math_random"/>
			<dependency name="mix_string"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_logged"/>
			<dependency name="player_quizDone"/>
			<dependency name="quizData"/>
			<dependency name="quiz_active"/>
			<dependency name="quiz_buffer"/>
			<dependency name="quiz_count"/>
			<dependency name="quiz_result"/>
			<dependency name="quiz_saveBuffer"/>
			<dependency name="quiz_tick"/>
			<dependency name="quiz_timer"/>
			<dependency name="quiz_type"/>
			<dependency name="random"/>
			<dependency name="tdQuiz"/>
			<dependency name="toupper"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartRC" syntax="StartRC()">
			<attribute name="public"/>
			<stacksize value="127"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicRaceCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="FreezePlayer"/>
			<dependency name="GAME_RC"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="RaceArenaID"/>
			<dependency name="RaceArenaName"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="RaceCountCPs"/>
			<dependency name="RaceMapIcon"/>
			<dependency name="RaceMatchCP"/>
			<dependency name="RaceMatchCP"/>
			<dependency name="RaceMeta"/>
			<dependency name="RacePlacement"/>
			<dependency name="RaceRecordID"/>
			<dependency name="RaceRecordTime"/>
			<dependency name="RaceStatusData"/>
			<dependency name="RaceStatusData"/>
			<dependency name="RaceTimer"/>
			<dependency name="RaceVehicle"/>
			<dependency name="RaceVehicleBack"/>
			<dependency name="RaceVehicleModel"/>
			<dependency name="RaceVehicleSpawn"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetTimer"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_RC"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WC_SetPlayerVirtualWorld"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="checkTime"/>
			<dependency name="dbconn"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_countdown"/>
			<dependency name="printf"/>
			<dependency name="race_id"/>
			<dependency name="race_status"/>
			<dependency name="sscanf"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:StartSK" syntax="StartSK()">
			<stacksize value="20"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="GAME_SK"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetHealth"/>
			<dependency name="SiankoCount"/>
			<dependency name="SiankoObject"/>
			<dependency name="SiankoTimer"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_SK"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartSM" syntax="StartSM()">
			<stacksize value="15"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="FreezePlayer"/>
			<dependency name="GAME_SM"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_SM"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="acc_SetVehicleHealth"/>
			<dependency name="false"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_countdown"/>
			<dependency name="sumoArenaID"/>
			<dependency name="sumoCar"/>
			<dependency name="sumoCar"/>
			<dependency name="sumoVehicle"/>
			<dependency name="sumoZapisanyCount"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartWG" syntax="StartWG()">
			<attribute name="public"/>
			<stacksize value="104"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateZone"/>
			<dependency name="DestroyZone"/>
			<dependency name="FreezePlayer"/>
			<dependency name="GAME_WG"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetHealth"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="ShowZoneForPlayer"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_WG"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerTeam"/>
			<dependency name="WarArenaID"/>
			<dependency name="WarArenaName"/>
			<dependency name="WarPosition"/>
			<dependency name="WarPosition"/>
			<dependency name="WarResult"/>
			<dependency name="WarTeam"/>
			<dependency name="WarWeapons"/>
			<dependency name="WarZoneID"/>
			<dependency name="WarZonePosition"/>
			<dependency name="ZoneFlashForPlayer"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveWeapon"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_countdown"/>
			<dependency name="player_god"/>
			<dependency name="player_warTeam"/>
			<dependency name="sscanf"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartWP" syntax="StartWP()">
			<stacksize value="128"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="FreezePlayer"/>
			<dependency name="GAME_WP"/>
			<dependency name="GameStarted"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="MAPICON_GLOBAL"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetHealth"/>
			<dependency name="SetPlayerMapIcon"/>
			<dependency name="SetTimer"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_WP"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_countdown"/>
			<dependency name="player_god"/>
			<dependency name="random"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<dependency name="wpArenaID"/>
			<dependency name="wpCountPeople"/>
			<dependency name="wpFallCount"/>
			<dependency name="wpMeta"/>
			<dependency name="wpRecordTime"/>
			<dependency name="wpRecordUID"/>
			<dependency name="wpTimer"/>
			<dependency name="wpWinCP"/>
			<dependency name="operator~(I@T:)"/>
		</member>
		<member name="M:StartZP" syntax="StartZP()">
			<stacksize value="13"/>
			<referrer name="ZapisyGameTimer"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="MaxVehicleZP"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="ShowZoneForPlayer"/>
			<dependency name="StatusZP"/>
			<dependency name="SwitchZP"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_ZP"/>
			<dependency name="VehicleModelZP"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="ZoneFlashForPlayer"/>
			<dependency name="ZoneZP"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="showGameDraw"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:StopAudioStreamForPlayer" syntax="StopAudioStreamForPlayer(playerid)">
			<attribute name="native"/>
			<referrer name="pc_cmd_radio"/>
			<param name="playerid">
				The player you want to stop the audio stream for
			</param>
			<library>a_players</library>  <summary>Stops the current audio stream for a player.</summary>    <seealso name="PlayAudioStreamForPlayer" />  <seealso name="PlayerPlaySound" />  <remarks>This function was added in <b>SA-MP 0.3d</b> and will not work in earlier versions!</remarks> 
		</member>
		<member name="M:StopBTR" syntax="StopBTR(info)">
			<stacksize value="7"/>
			<referrer name="UpdateBTR"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="DestroyZone"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RoyaleArenaID"/>
			<dependency name="RoyaleZone"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="ShowNameTagForAll"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="tdInfo"/>
			<param name="info">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:StopChowany" syntax="StopChowany(reason_type)">
			<stacksize value="60"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="UpdateChowany"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ACH_CH"/>
			<dependency name="CheckBet"/>
			<dependency name="ChowanyArenaID"/>
			<dependency name="ChowanySzukajacy"/>
			<dependency name="ChowanyZone"/>
			<dependency name="DestroyZone"/>
			<dependency name="GAME_CH"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="ShowNameTagForAll"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="achievement"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="showGameDraw"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="reason_type">
			</param>
		</member>
		<member name="M:StopDA" syntax="StopDA(time)">
			<stacksize value="17"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="UpdateDA"/>
			<dependency name="ACH_DA"/>
			<dependency name="CheckBet"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="GAME_DA"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SORT_DESC"/>
			<dependency name="SortDeepArray_Entry"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="achievement"/>
			<dependency name="da_damage"/>
			<dependency name="da_id"/>
			<dependency name="da_kills"/>
			<dependency name="deathArenaKills"/>
			<dependency name="deathArenaKills"/>
			<dependency name="deathArenaPlace"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="g_sort_cmp_array"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="time">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:StopFueling" syntax="StopFueling(playerid)">
			<stacksize value="6"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<dependency name="FuelBar"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="PlayerFueling"/>
			<dependency name="PlayerFuelingAmount"/>
			<dependency name="PlayerFuelingCost"/>
			<dependency name="PlayerFuelingType"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="tdFuel"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StopGG" syntax="StopGG(winner)">
			<stacksize value="9"/>
			<referrer name="UpdateGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="GAME_GG"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="tdInfo"/>
			<param name="winner">
			</param>
		</member>
		<member name="M:StopKillCamera" syntax="StopKillCamera(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="WC_TogglePlayerSpectating"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StopLoopingAnim" syntax="StopLoopingAnim(playerid)">
			<stacksize value="13"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0D"/>
			<referrer name="pc_cmd_astop"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="false"/>
			<dependency name="pAnimation"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StopQuiz" syntax="StopQuiz(done)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimer"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="quizData"/>
			<dependency name="quiz_active"/>
			<dependency name="quiz_timer"/>
			<dependency name="tdQuiz"/>
			<param name="done">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:StopRC" syntax="StopRC()">
			<stacksize value="7"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="UpdateRC"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="GAME_RC"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="RaceMapIcon"/>
			<dependency name="RaceVehicle"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="tdInfo"/>
		</member>
		<member name="M:StopSK" syntax="StopSK(winner)">
			<stacksize value="11"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="UpdateSK"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ACH_SK"/>
			<dependency name="CheckBet"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="GAME_SK"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SiankoCount"/>
			<dependency name="SiankoObject"/>
			<dependency name="SiankoTimer"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="achievement"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="showGameDraw"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="winner">
			</param>
		</member>
		<member name="M:StopSM" syntax="StopSM(reason)">
			<stacksize value="11"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="UpdateSM"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ACH_SM"/>
			<dependency name="CheckBet"/>
			<dependency name="GAME_SM"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="VW_SM"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="achievement"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="showGameDraw"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="sumoArenaID"/>
			<dependency name="sumoCar"/>
			<dependency name="sumoCar"/>
			<dependency name="sumoVehicleCount"/>
			<dependency name="sumoZapisanyCount"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="reason">
			</param>
		</member>
		<member name="M:StopSparing" syntax="StopSparing(gangid, enemyid, reason)">
			<stacksize value="265"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Sparing"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="KillTimer"/>
			<dependency name="Sparing_Config"/>
			<dependency name="Sparing_Init"/>
			<dependency name="WC_TextDrawDestroy"/>
			<dependency name="e_sparingKillerData"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="pGang"/>
			<dependency name="pGangSparDraw"/>
			<dependency name="pGangSparDraw"/>
			<dependency name="pGangSparOdliczanie"/>
			<dependency name="pGangSparOdliczanie"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="sparingKillerData"/>
			<dependency name="sparingKillerData"/>
			<dependency name="strcat"/>
			<param name="gangid">
			</param>
			<param name="enemyid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:StopWG" syntax="StopWG(none)">
			<stacksize value="10"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="UpdateWG"/>
			<dependency name="ACH_WG"/>
			<dependency name="CheckBet"/>
			<dependency name="GAME_WG"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WarResult"/>
			<dependency name="achievement"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="player_warTeam"/>
			<dependency name="showGameDraw"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="none">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:StopWP" syntax="StopWP()">
			<stacksize value="7"/>
			<referrer name="UpdateWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<dependency name="GAME_WP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="tdInfo"/>
		</member>
		<member name="M:StopZP" syntax="StopZP(playerid)">
			<stacksize value="136"/>
			<referrer name="UpdateZP"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="DestroyZone"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SwitchZP"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="VehicleModelZP"/>
			<dependency name="VehicleZP"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="ZoneZP"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msgAll"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StrCpy" syntax="StrCpy(dest[], src[], len)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Destination string.
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
				Source string.
			</param>
			<param name="len">
				(Implicit) maximum length of the destination.
			</param>
			     
		</member>
		<member name="M:StrToLower" syntax="StrToLower(str[], len)">
			<stacksize value="5"/>
			<dependency name="tolower"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to convert.
			</param>
			<param name="len">
				How much of the string to convert.
			</param>
			   
		</member>
		<member name="M:StrToUpper" syntax="StrToUpper(str[], len)">
			<stacksize value="5"/>
			<dependency name="toupper"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to convert.
			</param>
			<param name="len">
				How much of the string to convert.
			</param>
			   
		</member>
		<member name="M:Streamer_DestroyAllVisibleItems" syntax="Streamer_DestroyAllVisibleItems(playerid, type, serverwide)">
			<attribute name="native"/>
			<referrer name="pc_cmd_obiekty"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="serverwide">
			</param>
		</member>
		<member name="M:Streamer_GetDistanceToItem" syntax="Streamer_GetDistanceToItem(x, y, z, type, id, &amp;distance, dimensions)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="ac_Timer"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="distance">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="dimensions">
			</param>
		</member>
		<member name="M:Streamer_GetIntData" syntax="Streamer_GetIntData(type, id, data)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="ac_Timer"/>
			<referrer name="_@yHOnPlayerEnterDynArea@0O"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="data">
			</param>
		</member>
		<member name="M:Streamer_GetItemPos" syntax="Streamer_GetItemPos(type, id, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="BombaExplode"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_GetItemStreamerID" syntax="Streamer_GetItemStreamerID(playerid, type, internalid)">
			<attribute name="native"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="internalid">
			</param>
		</member>
		<member name="M:Streamer_OnItemStreamIn" syntax="Streamer_OnItemStreamIn(type, id, forplayerid)">
			<stacksize value="1"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Streamer_OnItemStreamOut" syntax="Streamer_OnItemStreamOut(type, id, forplayerid)">
			<stacksize value="1"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Streamer_OnPluginError" syntax="Streamer_OnPluginError(error[])">
			<stacksize value="1"/>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_SetFloatData" syntax="Streamer_SetFloatData(type, id, data, value)">
			<attribute name="native"/>
			<referrer name="UpdateEditorAttachment"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="data">
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_SetIntData" syntax="Streamer_SetIntData(type, id, data, value)">
			<attribute name="native"/>
			<referrer name="ac_CreateDynamicPickup"/>
			<referrer name="Init_NoDM"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="data">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Streamer_SetVisibleItems" syntax="Streamer_SetVisibleItems(type, items, playerid)">
			<attribute name="native"/>
			<referrer name="WC_OnGameModeInit"/>
			<param name="type">
			</param>
			<param name="items">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_ToggleIdleUpdate" syntax="Streamer_ToggleIdleUpdate(playerid, toggle)">
			<attribute name="native"/>
			<referrer name="pc_cmd_obiekty"/>
			<param name="playerid">
			</param>
			<param name="toggle">
			</param>
		</member>
		<member name="M:Streamer_ToggleItemUpdate" syntax="Streamer_ToggleItemUpdate(playerid, type, toggle)">
			<attribute name="native"/>
			<referrer name="pc_cmd_obiekty"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="toggle">
			</param>
		</member>
		<member name="M:Streamer_Update" syntax="Streamer_Update(playerid, type)">
			<attribute name="native"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="Teleport"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:Streamer_UpdateEx" syntax="Streamer_UpdateEx(playerid, x, y, z, worldid, interiorid, type, compensatedtime, freezeplayer)">
			<attribute name="native"/>
			<referrer name="ac_Streamer_UpdateEx"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="type">
			</param>
			<param name="compensatedtime">
			</param>
			<param name="freezeplayer">
			</param>
		</member>
		<member name="M:Strip" syntax="Strip(str[])">
			<stacksize value="9"/>
			<dependency name="cellmin"/>
			<dependency name="memcpy"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the start and end of.
			</param>
			 
		</member>
		<member name="M:StripL" syntax="StripL(str[])">
			<stacksize value="9"/>
			<dependency name="cellmin"/>
			<dependency name="memcpy"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the start of.
			</param>
			 
		</member>
		<member name="M:StripNL" syntax="StripNL(str[])">
			<stacksize value="4"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the end of.
			</param>
			  <remarks>  Updated from old versions, should be more efficient  </remarks> 
		</member>
		<member name="M:StripR" syntax="StripR(str[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the end of.
			</param>
			  <remarks>  Updated from old versions, should be more efficient  </remarks> 
		</member>
		<member name="M:Sum" syntax="Sum(arr[], num)">
			<stacksize value="2"/>
			<referrer name="Mean"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need summing.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  All the values in the array added together.  </returns> 
		</member>
		<member name="M:SwitchVehicleDoors" syntax="SwitchVehicleDoors(vehicleid, door_status)">
			<stacksize value="17"/>
			<referrer name="CreateVehicleZP"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="SetVehicleParamsEx"/>
			<param name="vehicleid">
			</param>
			<param name="door_status">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SwitchVehicleEngine" syntax="SwitchVehicleEngine(vehicleid, engine_status)">
			<stacksize value="17"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="CreateVehicleZP"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="SetVehicleParamsEx"/>
			<param name="vehicleid">
			</param>
			<param name="engine_status">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SysreqC" syntax="SysreqC(index, auto_pop)">
			<stacksize value="9"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="index">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:SysreqCN" syntax="SysreqCN(index, args_to_push, auto_pop)">
			<stacksize value="10"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="index">
			</param>
			<param name="args_to_push">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:SysreqD" syntax="SysreqD(address, auto_pop)">
			<stacksize value="9"/>
			<referrer name="RunShellcode"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="address">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:SysreqDN" syntax="SysreqDN(address, args_to_push, auto_pop)">
			<stacksize value="10"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="address">
			</param>
			<param name="args_to_push">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
			<library>amx_assembly dynamic_call</library>
		</member>
		<member name="M:T3_CalculatePercent" syntax="T3_CalculatePercent(value, maxvalue)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxvalue">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_CompressRotation" syntax="T3_CompressRotation(rotation)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_DeCompressRotation"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_GetOrientation"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetRotationFor2Point2D"/>
			<referrer name="T3_GetRotationFor2Point3D"/>
			<referrer name="T3_ShiftDegreeToRadianEx"/>
			<referrer name="T3_ShiftRadianToDegreeEx"/>
			<referrer name="T3_ShiftVectorToRotation"/>
			<referrer name="T3_ShiftPositionToOffset"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_GetPointInCylinder3D"/>
			<referrer name="T3_GetPointInCone3D"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointOnClock"/>
			<referrer name="T3_GetPointOnCylinder3D"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<referrer name="T3_GetPointOnCircularSector"/>
			<referrer name="T3_GetPointOnSphericalSector"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="floatround"/>
			<dependency name="floatround_floor"/>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_DeCompressRotation" syntax="T3_DeCompressRotation(rotation)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_EulerRotate" syntax="T3_EulerRotate(rx, ry, rz, oX, oY, oZ, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="14"/>
			<referrer name="T3_GetPointInFront3DEx"/>
			<dependency name="T3_EulerToQuat"/>
			<dependency name="T3_QuatRotate"/>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_EulerRotateEx" syntax="T3_EulerRotateEx(rx, ry, rz, oX, oY, oZ, &amp;tx, &amp;ty, &amp;tz, mode)">
			<stacksize value="13"/>
			<dependency name="T3_GetQuatFromEuler"/>
			<dependency name="T3_QuatRotate"/>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>EulerModes </paraminfo>
			</param>
		</member>
		<member name="M:T3_EulerToQuat" syntax="T3_EulerToQuat(rx, ry, rz, &amp;qw, &amp;qx, &amp;qy, &amp;qz)">
			<stacksize value="10"/>
			<referrer name="T3_EulerRotate"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatround"/>
			<dependency name="floatsin"/>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qw">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_Exit" syntax="T3_Exit()">
			<stacksize value="27"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
			<dependency name="format"/>
			<dependency name="printf"/>
		</member>
		<member name="M:T3_GetArcPoints3D" syntax="T3_GetArcPoints3D(x, y, z, tx, ty, tz, ry, height, points[][], max_points)">
			<stacksize value="28"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetEllipseRadius"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_ShiftOffsetToPosition"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="points">
				<paraminfo>Float [][3] </paraminfo>
			</param>
			<param name="max_points">
			</param>
		</member>
		<member name="M:T3_GetCube3DPoint" syntax="T3_GetCube3DPoint(orientation, x, y, z, rx, ry, rz, size_x, size_y, size_z, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="15"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_Cube3DOffset"/>
			<dependency name="T3_Cube3DOffset"/>
			<dependency name="T3_ShiftOffsetToPosition"/>
			<param name="orientation">
				<paraminfo>OrientationCube3D </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetDistance1D" syntax="T3_GetDistance1D(x1, x2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_GetPointInCone2D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetDistance2D" syntax="T3_GetDistance2D(x1, y1, x2, y2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_GetLineSize2D"/>
			<referrer name="T3_GetPointFor2Point2D"/>
			<referrer name="T3_GetLineCosTheta2D"/>
			<referrer name="T3_IsPointBetween2Points2D"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInEllipse"/>
			<referrer name="T3_IsPointInEllipticalCylinder"/>
			<referrer name="T3_IsPointInCircle"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetDistance3D" syntax="T3_GetDistance3D(x1, y1, z1, x2, y2, z2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="T3_GetLineSize3D"/>
			<referrer name="T3_GetRotationFor2Point3D"/>
			<referrer name="T3_GetPointFor2Point3D"/>
			<referrer name="T3_GetDistancePointToLine"/>
			<referrer name="T3_GetLineCosTheta3D"/>
			<referrer name="T3_IsPointBetween2Points3D"/>
			<referrer name="T3_ShiftPositionToOffset"/>
			<referrer name="T3_ShiftSpeedToMoveTime"/>
			<referrer name="T3_ShiftMoveTimeToSpeed"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_IsPointInCylinder3D"/>
			<referrer name="T3_IsPointInCone3D"/>
			<referrer name="T3_IsPointInSphere"/>
			<referrer name="T3_GetPointInCylinder3D"/>
			<referrer name="T3_GetPointInCone3D"/>
			<referrer name="T3_GetPointOnCylinder3D"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetDistancePointToLine" syntax="T3_GetDistancePointToLine(px, py, pz, sX, sY, sZ, eX, eY, eZ, &amp;iX, &amp;iY, &amp;iZ)">
			<tagname value="Float"/>
			<stacksize value="11"/>
			<referrer name="T3_IsPointInCylinder3D"/>
			<referrer name="T3_IsPointInCone3D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="iX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="iY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="iZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetDistancePointToLineEx" syntax="T3_GetDistancePointToLineEx(px, py, pz, sX, sY, sZ, eX, eY, eZ, &amp;iX, &amp;iY, &amp;iZ)">
			<tagname value="Float"/>
			<stacksize value="13"/>
			<referrer name="T3_GetNearest2DPointOnPolygon"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="VectorSize"/>
			<dependency name="floatsqroot"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="iX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="iY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="iZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetEllipseRadius" syntax="T3_GetEllipseRadius(x, y, angle)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_IsPointInEllipse"/>
			<referrer name="T3_IsPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointInEllipse"/>
			<referrer name="T3_GetPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointOnEllipse"/>
			<referrer name="T3_GetPointOnEllipticalCyl2D"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="atan"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatpower"/>
			<dependency name="floatsin"/>
			<dependency name="floatsqroot"/>
			<dependency name="floattan"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetGangZone" syntax="T3_GetGangZone(x, y, radius, &amp;minx, &amp;miny, &amp;maxx, &amp;maxy)">
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetLineCosTheta2D" syntax="T3_GetLineCosTheta2D(StartLine1[], EndLine1[], StartLine2[], EndLine2[])">
			<tagname value="Float"/>
			<stacksize value="9"/>
			<referrer name="T3_IsLinesParallel2D"/>
			<referrer name="T3_IsLinesPerpendicular2D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_GetDistance2D"/>
			<dependency name="floatabs"/>
			<param name="StartLine1">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="EndLine1">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="StartLine2">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="EndLine2">
				<paraminfo>Float [2] </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetLineCosTheta3D" syntax="T3_GetLineCosTheta3D(StartLine1[], EndLine1[], StartLine2[], EndLine2[])">
			<tagname value="Float"/>
			<stacksize value="11"/>
			<referrer name="T3_IsLinesParallel3D"/>
			<referrer name="T3_IsLinesPerpendicular3D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="floatabs"/>
			<param name="StartLine1">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="EndLine1">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="StartLine2">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="EndLine2">
				<paraminfo>Float [3] </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetLineSize2D" syntax="T3_GetLineSize2D(points[][], max_points)">
			<tagname value="Float"/>
			<stacksize value="9"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="T3_GetDistance2D"/>
			<param name="points">
				<paraminfo>Float [][2] </paraminfo>
			</param>
			<param name="max_points">
			</param>
		</member>
		<member name="M:T3_GetLineSize3D" syntax="T3_GetLineSize3D(points[][], max_points)">
			<tagname value="Float"/>
			<stacksize value="11"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<param name="points">
				<paraminfo>Float [][3] </paraminfo>
			</param>
			<param name="max_points">
			</param>
		</member>
		<member name="M:T3_GetNearest2DPointOnPolygon" syntax="T3_GetNearest2DPointOnPolygon(polygon_points[], x, y, &amp;tx, &amp;ty, max_points)">
			<stacksize value="25"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_GetDistancePointToLineEx"/>
			<dependency name="T3_IsPolygonClosed"/>
			<dependency name="T3_IsValidPolygon"/>
			<dependency name="cellmax"/>
			<param name="polygon_points">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="max_points">
			</param>
		</member>
		<member name="M:T3_GetOrientation" syntax="T3_GetOrientation(angle)">
			<tagname value="ElementOrientation"/>
			<stacksize value="4"/>
			<referrer name="T3_GetOrientationName"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="o_back"/>
			<dependency name="o_back_left"/>
			<dependency name="o_back_right"/>
			<dependency name="o_front"/>
			<dependency name="o_front_left"/>
			<dependency name="o_front_right"/>
			<dependency name="o_left"/>
			<dependency name="o_right"/>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetOrientationName" syntax="T3_GetOrientationName(orientation_name[], angle, as_compass, maxdest)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="T3_GetOrientation"/>
			<dependency name="T3_OrientationCompass"/>
			<dependency name="T3_OrientationCompass"/>
			<dependency name="T3_OrientationNames"/>
			<dependency name="T3_OrientationNames"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="true"/>
			<param name="orientation_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="as_compass">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="maxdest">
			</param>
		</member>
		<member name="M:T3_GetPointFor2Point2D" syntax="T3_GetPointFor2Point2D(x1, y1, x2, y2, percent_size, &amp;tx, &amp;ty)">
			<stacksize value="11"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_GetDistance2D"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_GetRotationFor2Point2D"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="percent_size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointFor2Point2DEx" syntax="T3_GetPointFor2Point2DEx(x1, y1, x2, y2, distance, &amp;tx, &amp;ty)">
			<stacksize value="10"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_GetRotationFor2Point2D"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointFor2Point3D" syntax="T3_GetPointFor2Point3D(x1, y1, z1, x2, y2, z2, percent_size, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="16"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="percent_size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointFor2Point3DEx" syntax="T3_GetPointFor2Point3DEx(x1, y1, z1, x2, y2, z2, distance, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="14"/>
			<referrer name="T3_ShiftPositionToOffset"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInCircle" syntax="T3_GetPointInCircle(x, y, radius, &amp;tx, &amp;ty)">
			<stacksize value="7"/>
			<referrer name="T3_GetPointInCylinder2D"/>
			<referrer name="T3_GetPointInCone2D"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_SwapFloat"/>
			<dependency name="float"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<dependency name="random"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInCircularSector" syntax="T3_GetPointInCircularSector(x, y, rz, radius, view_angle, &amp;tx, &amp;ty)">
			<stacksize value="11"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="T3_RandomFloatEx"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="view_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInCone2D" syntax="T3_GetPointInCone2D(x, y, minz, maxz, radius_a, radius_b, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="10"/>
			<referrer name="T3_GetPointInCone3D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_GetDistance1D"/>
			<dependency name="T3_GetPointInCircle"/>
			<dependency name="T3_RandomFloat"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_a">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_b">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInCone3D" syntax="T3_GetPointInCone3D(xA, yA, zA, xB, yB, zB, radius_a, radius_b, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetPointInCone2D"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_ShiftOffsetToPosition"/>
			<param name="xA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_a">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_b">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInCube" syntax="T3_GetPointInCube(minx, miny, minz, maxx, maxy, maxz, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="6"/>
			<referrer name="T3_GetPointInCube3D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInCube3D" syntax="T3_GetPointInCube3D(x, y, z, rx, ry, rz, size_x, size_y, size_z, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="18"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="T3_GetPointInCube"/>
			<dependency name="T3_ShiftOffsetToPosition"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInCylinder2D" syntax="T3_GetPointInCylinder2D(x, y, minz, maxz, radius, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="8"/>
			<referrer name="T3_GetPointInCylinder3D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="T3_GetPointInCircle"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInCylinder3D" syntax="T3_GetPointInCylinder3D(xA, yA, zA, xB, yB, zB, radius, &amp;tx, &amp;ty, &amp;tz)">
			<tagname value="bool"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetPointInCylinder2D"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_ShiftOffsetToPosition"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="xA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInEllipse" syntax="T3_GetPointInEllipse(cx, cy, size_x, size_y, &amp;tx, &amp;ty)">
			<stacksize value="11"/>
			<dependency name="T3_GetEllipseRadius"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_RandomFloat"/>
			<param name="cx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInEllipticalCylinder" syntax="T3_GetPointInEllipticalCylinder(cx, cy, minz, maxz, size_x, size_y, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="11"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="T3_GetEllipseRadius"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="cx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInFront2D" syntax="T3_GetPointInFront2D(x, y, rz, radius, &amp;tx, &amp;ty)">
			<stacksize value="4"/>
			<referrer name="T3_GetPointFor2Point2D"/>
			<referrer name="T3_GetPointFor2Point2DEx"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInEllipse"/>
			<referrer name="T3_GetPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointOnClock"/>
			<referrer name="T3_GetPointOnCircle"/>
			<referrer name="T3_GetPointOnCircularSector"/>
			<referrer name="T3_GetPointOnEllipse"/>
			<referrer name="T3_GetPointOnEllipticalCyl2D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInFront3D" syntax="T3_GetPointInFront3D(x, y, z, rx, rz, radius, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="4"/>
			<referrer name="T3_GetPointInFront3DEx"/>
			<referrer name="T3_GetPointFor2Point3D"/>
			<referrer name="T3_GetPointFor2Point3DEx"/>
			<referrer name="T3_ShiftRotationToVector"/>
			<referrer name="T3_ShiftOffsetToPosition"/>
			<referrer name="T3_ShiftPositionToOffset"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_GetPointInSphere"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointOnCylinder3D"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<referrer name="T3_GetPointOnSphericalSector"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInFront3DEx" syntax="T3_GetPointInFront3DEx(x, y, z, rx, ry, rz, radius, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="17"/>
			<referrer name="T3_GetPointOnCylinder3D"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<dependency name="T3_EulerRotate"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInPolygon" syntax="T3_GetPointInPolygon(points[], &amp;tx, &amp;ty, max_points, max_iterations)">
			<stacksize value="17"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_GetPointInRectangle"/>
			<dependency name="T3_IsPointInPolygon"/>
			<dependency name="T3_IsValidPolygon"/>
			<dependency name="printf"/>
			<param name="points">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="max_points">
			</param>
			<param name="max_iterations">
			</param>
		</member>
		<member name="M:T3_GetPointInRectangle" syntax="T3_GetPointInRectangle(minx, miny, maxx, maxy, &amp;tx, &amp;ty)">
			<stacksize value="6"/>
			<referrer name="T3_GetPointInPolygon"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInSphere" syntax="T3_GetPointInSphere(x, y, z, radius, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="12"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_RandomFloat"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointInSphericalSector" syntax="T3_GetPointInSphericalSector(x, y, z, rx, rz, radius, vrx, vrz, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="21"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="T3_RandomFloatEx"/>
			<dependency name="T3_ShiftOffsetToPosition"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vrx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vrz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnCircle" syntax="T3_GetPointOnCircle(x, y, radius, &amp;tx, &amp;ty)">
			<stacksize value="9"/>
			<referrer name="T3_GetPointOnCylinder2D"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_RandomFloat"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnCircularSector" syntax="T3_GetPointOnCircularSector(x, y, rz, radius, view_angle, &amp;tx, &amp;ty)">
			<stacksize value="10"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_RandomFloatEx"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="view_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnClock" syntax="T3_GetPointOnClock(x, y, radius, &amp;tx, &amp;ty, &amp;trz, rz)">
			<tagname value="Float"/>
			<stacksize value="9"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_RandomFloat"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="trz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnCone3D" syntax="T3_GetPointOnCone3D(xA, yA, zA, xB, yB, zB, radius_a, radius_b, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="20"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_GetPointInFront3DEx"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_RandomFloat"/>
			<param name="xA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_a">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_b">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnCube" syntax="T3_GetPointOnCube(minx, miny, minz, maxx, maxy, maxz, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="6"/>
			<referrer name="T3_GetPointOnCube3D"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<dependency name="random"/>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnCube3D" syntax="T3_GetPointOnCube3D(x, y, z, rx, ry, rz, size_x, size_y, size_z, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="18"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="T3_GetPointOnCube"/>
			<dependency name="T3_ShiftOffsetToPosition"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnCylinder2D" syntax="T3_GetPointOnCylinder2D(x, y, minz, maxz, radius, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="8"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="T3_GetPointOnCircle"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnCylinder3D" syntax="T3_GetPointOnCylinder3D(xA, yA, zA, xB, yB, zB, radius, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="20"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_GetPointInFront3DEx"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_RandomFloat"/>
			<param name="xA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnEllipse" syntax="T3_GetPointOnEllipse(cx, cy, size_x, size_y, &amp;tx, &amp;ty)">
			<stacksize value="10"/>
			<dependency name="T3_GetEllipseRadius"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_RandomFloat"/>
			<param name="cx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnEllipticalCyl2D" syntax="T3_GetPointOnEllipticalCyl2D(cx, cy, minz, maxz, size_x, size_y, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="10"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="T3_GetEllipseRadius"/>
			<dependency name="T3_GetPointInFront2D"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="cx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnRectangle" syntax="T3_GetPointOnRectangle(minx, miny, maxx, maxy, &amp;tx, &amp;ty)">
			<stacksize value="6"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<dependency name="random"/>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnSphere" syntax="T3_GetPointOnSphere(x, y, z, radius, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="6"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="acos"/>
			<dependency name="degrees"/>
			<dependency name="float"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<dependency name="random"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetPointOnSphericalSector" syntax="T3_GetPointOnSphericalSector(x, y, z, rx, rz, radius, vrx, vrz, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="20"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_RandomFloatEx"/>
			<dependency name="T3_ShiftOffsetToPosition"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vrx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vrz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetQuatFromEuler" syntax="T3_GetQuatFromEuler(rx, ry, rz, &amp;qw, &amp;qx, &amp;qy, &amp;qz, mode)">
			<stacksize value="10"/>
			<referrer name="T3_EulerRotateEx"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<dependency name="v3Deuler_xyx"/>
			<dependency name="v3Deuler_xyz"/>
			<dependency name="v3Deuler_xzx"/>
			<dependency name="v3Deuler_xzy"/>
			<dependency name="v3Deuler_yxy"/>
			<dependency name="v3Deuler_yxz"/>
			<dependency name="v3Deuler_yzx"/>
			<dependency name="v3Deuler_yzy"/>
			<dependency name="v3Deuler_zxy"/>
			<dependency name="v3Deuler_zxz"/>
			<dependency name="v3Deuler_zyx"/>
			<dependency name="v3Deuler_zyz"/>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qw">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>EulerModes </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetQuatUpVector" syntax="T3_GetQuatUpVector(qw, qx, qy, qz, &amp;vx, &amp;vy, &amp;vz)">
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="qw">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetRandomHit" syntax="T3_GetRandomHit(x, y, z, range, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="3"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="random"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="range">
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetRotationFor2Point2D" syntax="T3_GetRotationFor2Point2D(x, y, tx, ty, &amp;rz)">
			<stacksize value="4"/>
			<referrer name="T3_GetPointFor2Point2D"/>
			<referrer name="T3_GetPointFor2Point2DEx"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInEllipse"/>
			<referrer name="T3_IsPointInEllipticalCylinder"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="atan2"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetRotationFor2Point3D" syntax="T3_GetRotationFor2Point3D(x, y, z, tx, ty, tz, &amp;rx, &amp;rz)">
			<stacksize value="10"/>
			<referrer name="T3_GetPointInFront3DEx"/>
			<referrer name="T3_GetPointFor2Point3D"/>
			<referrer name="T3_GetPointFor2Point3DEx"/>
			<referrer name="T3_ShiftOffsetToPosition"/>
			<referrer name="T3_ShiftPositionToOffset"/>
			<referrer name="T3_IsPointToPointVector"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="T3_GetPointInCylinder3D"/>
			<referrer name="T3_GetPointInCone3D"/>
			<referrer name="T3_GetPointOnCylinder3D"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="acos"/>
			<dependency name="atan2"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetRotationMatrixEuler" syntax="T3_GetRotationMatrixEuler(matrix[][], rx, ry, rz)">
			<stacksize value="10"/>
			<referrer name="T3_ShiftVectorRotation"/>
			<referrer name="T3_ShiftLineRotation"/>
			<referrer name="T3_ShiftLineRotationVector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="matrix">
				<paraminfo>Float [][] </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetRotationMatrixEulerEx" syntax="T3_GetRotationMatrixEulerEx(matrix[][], rx, ry, rz, mode)">
			<stacksize value="10"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<dependency name="v3Deuler_xyx"/>
			<dependency name="v3Deuler_xyz"/>
			<dependency name="v3Deuler_xzx"/>
			<dependency name="v3Deuler_xzy"/>
			<dependency name="v3Deuler_yxy"/>
			<dependency name="v3Deuler_yxz"/>
			<dependency name="v3Deuler_yzx"/>
			<dependency name="v3Deuler_yzy"/>
			<dependency name="v3Deuler_zxy"/>
			<dependency name="v3Deuler_zxz"/>
			<dependency name="v3Deuler_zyx"/>
			<dependency name="v3Deuler_zyz"/>
			<param name="matrix">
				<paraminfo>Float [][] </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>EulerModes </paraminfo>
			</param>
		</member>
		<member name="M:T3_GetWeaponShotPos" syntax="T3_GetWeaponShotPos(playerid, hittype, &amp;fx, &amp;fy, &amp;fz)">
			<stacksize value="12"/>
			<dependency name="BULLET_HIT_TYPE_OBJECT"/>
			<dependency name="BULLET_HIT_TYPE_PLAYER"/>
			<dependency name="BULLET_HIT_TYPE_PLAYER_OBJECT"/>
			<dependency name="BULLET_HIT_TYPE_VEHICLE"/>
			<dependency name="GetPlayerLastShotVectors"/>
			<param name="playerid">
			</param>
			<param name="hittype">
			</param>
			<param name="fx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_Init" syntax="T3_Init()">
			<stacksize value="627"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="EOS"/>
			<dependency name="GetTickCount"/>
			<dependency name="T3_ErrorLevel"/>
			<dependency name="T3_UpTime"/>
			<dependency name="format"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strlen"/>
		</member>
		<member name="M:T3_IsLinesParallel2D" syntax="T3_IsLinesParallel2D(StartLine1[], EndLine1[], StartLine2[], EndLine2[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<referrer name="T3_IsPointBetween2Points2D"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="T3_GetLineCosTheta2D"/>
			<param name="StartLine1">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="EndLine1">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="StartLine2">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="EndLine2">
				<paraminfo>Float [2] </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsLinesParallel3D" syntax="T3_IsLinesParallel3D(StartLine1[], EndLine1[], StartLine2[], EndLine2[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<referrer name="T3_IsPointBetween2Points3D"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="T3_GetLineCosTheta3D"/>
			<param name="StartLine1">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="EndLine1">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="StartLine2">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="EndLine2">
				<paraminfo>Float [3] </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsLinesPerpendicular2D" syntax="T3_IsLinesPerpendicular2D(StartLine1[], EndLine1[], StartLine2[], EndLine2[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="T3_GetLineCosTheta2D"/>
			<param name="StartLine1">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="EndLine1">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="StartLine2">
				<paraminfo>Float [2] </paraminfo>
			</param>
			<param name="EndLine2">
				<paraminfo>Float [2] </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsLinesPerpendicular3D" syntax="T3_IsLinesPerpendicular3D(StartLine1[], EndLine1[], StartLine2[], EndLine2[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="T3_GetLineCosTheta3D"/>
			<param name="StartLine1">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="EndLine1">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="StartLine2">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="EndLine2">
				<paraminfo>Float [3] </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointBetween2Points2D" syntax="T3_IsPointBetween2Points2D(px, py, x1, y1, x2, y2)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="T3_GetDistance2D"/>
			<dependency name="T3_IsLinesParallel2D"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointBetween2Points3D" syntax="T3_IsPointBetween2Points3D(px, py, pz, x1, y1, z1, x2, y2, z2)">
			<tagname value="bool"/>
			<stacksize value="21"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_IsLinesParallel3D"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInCircle" syntax="T3_IsPointInCircle(px, py, x, y, radius)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance2D"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInCircularSector" syntax="T3_IsPointInCircularSector(px, py, x, y, rz, radius, view_angle)">
			<tagname value="bool"/>
			<stacksize value="12"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetDistance2D"/>
			<dependency name="T3_GetRotationFor2Point2D"/>
			<dependency name="T3_RotationInRange"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="floatround"/>
			<dependency name="true"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="view_angle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInCone2D" syntax="T3_IsPointInCone2D(px, py, pz, x, y, minz, maxz, radius_a, radius_b)">
			<tagname value="bool"/>
			<stacksize value="14"/>
			<dependency name="T3_IsPointInCone3D"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_a">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_b">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInCone3D" syntax="T3_IsPointInCone3D(px, py, pz, xA, yA, zA, xB, yB, zB, radius_a, radius_b)">
			<tagname value="bool"/>
			<stacksize value="20"/>
			<referrer name="T3_IsPointInCone2D"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetDistancePointToLine"/>
			<dependency name="false"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_a">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius_b">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInCube" syntax="T3_IsPointInCube(px, py, pz, minx, miny, minz, maxx, maxy, maxz)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="T3_IsPointInCube3D"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInCube3D" syntax="T3_IsPointInCube3D(px, py, pz, x, y, z, rx, ry, rz, size_x, size_y, size_z)">
			<tagname value="bool"/>
			<stacksize value="18"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_IsPointInCube"/>
			<dependency name="T3_ShiftPositionToOffset"/>
			<dependency name="false"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInCylinder2D" syntax="T3_IsPointInCylinder2D(px, py, pz, x, y, minz, maxz, radius)">
			<tagname value="bool"/>
			<stacksize value="13"/>
			<dependency name="T3_IsPointInCylinder3D"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInCylinder3D" syntax="T3_IsPointInCylinder3D(px, py, pz, xA, yA, zA, xB, yB, zB, radius)">
			<tagname value="bool"/>
			<stacksize value="20"/>
			<referrer name="T3_IsPointInCylinder2D"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetDistancePointToLine"/>
			<dependency name="false"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zA">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zB">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInEllipse" syntax="T3_IsPointInEllipse(px, py, cx, cy, size_x, size_y)">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance2D"/>
			<dependency name="T3_GetEllipseRadius"/>
			<dependency name="T3_GetRotationFor2Point2D"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInEllipticalCylinder" syntax="T3_IsPointInEllipticalCylinder(px, py, pz, cx, cy, minz, maxz, size_x, size_y)">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance2D"/>
			<dependency name="T3_GetEllipseRadius"/>
			<dependency name="T3_GetRotationFor2Point2D"/>
			<dependency name="false"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size_y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInPolygon" syntax="T3_IsPointInPolygon(x, y, points[], max_points)">
			<tagname value="bool"/>
			<stacksize value="522"/>
			<referrer name="T3_GetPointInPolygon"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_IsPolygonClosed"/>
			<dependency name="T3_IsValidPolygon"/>
			<dependency name="false"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="points">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="max_points">
			</param>
		</member>
		<member name="M:T3_IsPointInRectangle" syntax="T3_IsPointInRectangle(px, py, minx, miny, maxx, maxy)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInSphere" syntax="T3_IsPointInSphere(px, py, pz, x, y, z, radius)">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointInSphericalSector" syntax="T3_IsPointInSphericalSector(px, py, pz, x, y, z, rx, rz, radius, vrx, vrz)">
			<tagname value="bool"/>
			<stacksize value="29"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_GetRotationMatrixEuler"/>
			<dependency name="T3_MatrixRotateReverse"/>
			<dependency name="VectorSize"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="true"/>
			<param name="px">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="py">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="pz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vrx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vrz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPointToPointVector" syntax="T3_IsPointToPointVector(x, y, z, tx, ty, tz, &amp;vx, &amp;vy, &amp;vz)">
			<tagname value="bool"/>
			<stacksize value="13"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_ShiftRotationToVector"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_IsPolygonClosed" syntax="T3_IsPolygonClosed(points[], max_points)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="T3_IsValidPolygon"/>
			<referrer name="T3_GetNearest2DPointOnPolygon"/>
			<referrer name="T3_IsPointInPolygon"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="points">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="max_points">
			</param>
		</member>
		<member name="M:T3_IsProbable" syntax="T3_IsProbable(chance, accuracy)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_RandomFloat"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="chance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="accuracy">
			</param>
		</member>
		<member name="M:T3_IsValidPolygon" syntax="T3_IsValidPolygon(points[], max_points)">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="T3_GetNearest2DPointOnPolygon"/>
			<referrer name="T3_IsPointInPolygon"/>
			<referrer name="T3_GetPointInPolygon"/>
			<dependency name="T3_IsPolygonClosed"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="points">
				<paraminfo>Float [] </paraminfo>
			</param>
			<param name="max_points">
			</param>
		</member>
		<member name="M:T3_MatrixRotate" syntax="T3_MatrixRotate(matrix[][], oX, oY, oZ, &amp;x, &amp;y, &amp;z)">
			<stacksize value="1"/>
			<referrer name="T3_ShiftVectorRotation"/>
			<referrer name="T3_ShiftLineRotation"/>
			<referrer name="T3_ShiftLineRotationVector"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="matrix">
				<paraminfo>Float [][] </paraminfo>
			</param>
			<param name="oX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_MatrixRotateReverse" syntax="T3_MatrixRotateReverse(matrix[][], oX, oY, oZ, &amp;x, &amp;y, &amp;z)">
			<stacksize value="1"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="matrix">
				<paraminfo>Float [][] </paraminfo>
			</param>
			<param name="oX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_NormCrossProduct" syntax="T3_NormCrossProduct(&amp;x, &amp;y, &amp;z, v1x, v1y, v1z, v2x, v2y, v2z)">
			<stacksize value="5"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="VectorSize"/>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="v1x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v1y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v1z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_NormalizeVector" syntax="T3_NormalizeVector(&amp;x, &amp;y, &amp;z)">
			<tagname value="Float"/>
			<stacksize value="6"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="VectorSize"/>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_OnFilterScriptExit" syntax="T3_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_OnFilterScriptExit"/>
			<dependency name="ScriptInit_OnScriptExit"/>
			<dependency name="ScriptInit_OnYSIExit"/>
			<dependency name="ScriptInit_PostExitFuncs_"/>
			<dependency name="ScriptInit_PreExitFuncs_"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:T3_OnFilterScriptInit" syntax="T3_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_IsConnected"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="true"/>
		</member>
		<member name="M:T3_OnGameModeExit" syntax="T3_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_OnGameModeExit"/>
			<dependency name="ScriptInit_OnScriptExit"/>
			<dependency name="ScriptInit_OnYSIExit"/>
			<dependency name="ScriptInit_PostExitFuncs_"/>
			<dependency name="ScriptInit_PreExitFuncs_"/>
			<dependency name="YSI_GAMEMODE"/>
		</member>
		<member name="M:T3_OnGameModeInit" syntax="T3_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_IsConnected"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="true"/>
		</member>
		<member name="M:T3_OnPlayerKeyStateChange" syntax="T3_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetPlayerSpecialAction"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="KEY_CROUCH"/>
			<dependency name="KEY_SECONDARY_ATTACK"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="acCheatCount"/>
			<dependency name="acDropJpX"/>
			<dependency name="acDropJpY"/>
			<dependency name="acDropJpZ"/>
			<dependency name="acKicked"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSpecAct"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:T3_QuatRotate" syntax="T3_QuatRotate(qw, qx, qy, qz, oX, oY, oZ, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="3"/>
			<referrer name="T3_EulerRotate"/>
			<referrer name="T3_EulerRotateEx"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="qw">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_QuatToEuler" syntax="T3_QuatToEuler(&amp;rx, &amp;ry, &amp;rz, qw, qx, qy, qz)">
			<stacksize value="4"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="asin"/>
			<dependency name="atan2"/>
			<dependency name="floatround"/>
			<param name="rx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="qw">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="qz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_RandomFloat" syntax="T3_RandomFloat(min, max, accuracy)">
			<tagname value="Float"/>
			<stacksize value="6"/>
			<referrer name="T3_RandomFloatEx"/>
			<referrer name="T3_IsProbable"/>
			<referrer name="T3_RandomItemFromArray"/>
			<referrer name="T3_GetPointInCylinder2D"/>
			<referrer name="T3_GetPointInSphere"/>
			<referrer name="T3_GetPointInRectangle"/>
			<referrer name="T3_GetPointInCube"/>
			<referrer name="T3_GetPointInCone2D"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointInEllipse"/>
			<referrer name="T3_GetPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointOnClock"/>
			<referrer name="T3_GetPointOnCircle"/>
			<referrer name="T3_GetPointOnCylinder2D"/>
			<referrer name="T3_GetPointOnCylinder3D"/>
			<referrer name="T3_GetPointOnRectangle"/>
			<referrer name="T3_GetPointOnCube"/>
			<referrer name="T3_GetPointOnCone3D"/>
			<referrer name="T3_GetPointOnEllipse"/>
			<referrer name="T3_GetPointOnEllipticalCyl2D"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<dependency name="random"/>
			<param name="min">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="accuracy">
			</param>
		</member>
		<member name="M:T3_RandomFloatEx" syntax="T3_RandomFloatEx(min, max, accuracy)">
			<tagname value="Float"/>
			<stacksize value="6"/>
			<referrer name="T3_GetPointInCircularSector"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointOnCircularSector"/>
			<referrer name="T3_GetPointOnSphericalSector"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="T3_RandomFloat"/>
			<param name="min">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="accuracy">
			</param>
		</member>
		<member name="M:T3_RandomInteger" syntax="T3_RandomInteger(min, max)">
			<stacksize value="3"/>
			<dependency name="random"/>
			<param name="min">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:T3_RandomItemFromArray" syntax="T3_RandomItemFromArray(items[][], max_items, accuracy)">
			<stacksize value="7"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ItemChance"/>
			<dependency name="ItemID"/>
			<dependency name="T3_RandomFloat"/>
			<param name="items">
				<paraminfo> [][2] </paraminfo>
			</param>
			<param name="max_items">
			</param>
			<param name="accuracy">
			</param>
		</member>
		<member name="M:T3_RecoilVector" syntax="T3_RecoilVector(&amp;vx, &amp;vy, &amp;vz, sx, sy, sz)">
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<param name="vx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="sx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_RotationInRange" syntax="T3_RotationInRange(rotation, r_min, r_max)">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_SwapFloat"/>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="r_min">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="r_max">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftDegreeToGrades" syntax="T3_ShiftDegreeToGrades(value)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="T3_ShiftRadianToGrades"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftDegreeToRadian" syntax="T3_ShiftDegreeToRadian(value)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="T3_ShiftGradesToRadian"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftDegreeToRadianEx" syntax="T3_ShiftDegreeToRadianEx(value)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftGradesToDegree" syntax="T3_ShiftGradesToDegree(value)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="T3_ShiftGradesToRadian"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftGradesToRadian" syntax="T3_ShiftGradesToRadian(value)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="T3_ShiftDegreeToRadian"/>
			<dependency name="T3_ShiftGradesToDegree"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftLineRotation" syntax="T3_ShiftLineRotation(sX, sY, sZ, eX, eY, eZ, rx, ry, rz, &amp;nX, &amp;nY, &amp;nZ)">
			<stacksize value="22"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="T3_GetRotationMatrixEuler"/>
			<dependency name="T3_MatrixRotate"/>
			<param name="sX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="nX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="nY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="nZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftLineRotationVector" syntax="T3_ShiftLineRotationVector(sX, sY, sZ, eX, eY, eZ, rx, ry, rz, &amp;nX, &amp;nY, &amp;nZ)">
			<tagname value="bool"/>
			<stacksize value="23"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetRotationMatrixEuler"/>
			<dependency name="T3_MatrixRotate"/>
			<dependency name="VectorSize"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="sX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="eZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="nX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="nY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="nZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftMoveTimeToSpeed" syntax="T3_ShiftMoveTimeToSpeed(x, y, z, tx, ty, tz, movement_time)">
			<tagname value="Float"/>
			<stacksize value="9"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="movement_time">
			</param>
		</member>
		<member name="M:T3_ShiftOffsetToPosition" syntax="T3_ShiftOffsetToPosition(x, y, z, rx, ry, rz, offset_x, offset_y, offset_z, &amp;tx, &amp;ty, &amp;tz)">
			<stacksize value="15"/>
			<referrer name="T3_GetArcPoints3D"/>
			<referrer name="T3_GetCube3DPoint"/>
			<referrer name="T3_GetPointInCylinder3D"/>
			<referrer name="T3_GetPointInCube3D"/>
			<referrer name="T3_GetPointInCone3D"/>
			<referrer name="T3_GetPointInSphericalSector"/>
			<referrer name="T3_GetPointOnCube3D"/>
			<referrer name="T3_GetPointOnSphericalSector"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_ShiftVectorRotation"/>
			<dependency name="VectorSize"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="offset_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="offset_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="offset_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftPositionToOffset" syntax="T3_ShiftPositionToOffset(x, y, z, rx, ry, rz, &amp;offset_x, &amp;offset_y, &amp;offset_z, tx, ty, tz)">
			<stacksize value="22"/>
			<referrer name="T3_IsPointInCube3D"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="T3_GetPointFor2Point3DEx"/>
			<dependency name="T3_GetPointInFront3D"/>
			<dependency name="T3_GetRotationFor2Point3D"/>
			<dependency name="T3_ShiftVectorRotation"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="offset_x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="offset_y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="offset_z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftRadianToDegree" syntax="T3_ShiftRadianToDegree(value)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="T3_ShiftRadianToGrades"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftRadianToDegreeEx" syntax="T3_ShiftRadianToDegreeEx(value)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="floatabs"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftRadianToGrades" syntax="T3_ShiftRadianToGrades(value)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="T3_ShiftDegreeToGrades"/>
			<dependency name="T3_ShiftRadianToDegree"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftRotationToVector" syntax="T3_ShiftRotationToVector(rx, rz, &amp;vx, &amp;vy, &amp;vz)">
			<stacksize value="12"/>
			<referrer name="T3_IsPointToPointVector"/>
			<dependency name="T3_GetPointInFront3D"/>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="vz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftSpeedToMoveTime" syntax="T3_ShiftSpeedToMoveTime(x, y, z, tx, ty, tz, speed)">
			<stacksize value="9"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetDistance3D"/>
			<dependency name="floatround"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftVectorRotation" syntax="T3_ShiftVectorRotation(x, y, z, rx, ry, rz, &amp;tx, &amp;ty, &amp;tz)">
			<tagname value="bool"/>
			<stacksize value="23"/>
			<referrer name="T3_ShiftOffsetToPosition"/>
			<referrer name="T3_ShiftPositionToOffset"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="T3_GetRotationMatrixEuler"/>
			<dependency name="T3_MatrixRotate"/>
			<dependency name="VectorSize"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="tx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ty">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="tz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_ShiftVectorToRotation" syntax="T3_ShiftVectorToRotation(vx, vy, vz, &amp;rx, &amp;rz)">
			<stacksize value="4"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="T3_CompressRotation"/>
			<dependency name="acos"/>
			<dependency name="atan2"/>
			<param name="vx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_SwapFloat" syntax="T3_SwapFloat(&amp;variable1, &amp;variable2)">
			<stacksize value="2"/>
			<referrer name="T3_RotationInRange"/>
			<referrer name="T3_GetPointInCircle"/>
			<param name="variable1">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="variable2">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T3_SwapInt" syntax="T3_SwapInt(&amp;variable1, &amp;variable2)">
			<stacksize value="2"/>
			<param name="variable1">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="variable2">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:T@" syntax="T@(ret[], ...)">
			<stacksize value="8"/>
			<dependency name="YSI_g_sPropEmpty"/>
			<dependency name="YSI_g_sPropVarArg"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<dependency name="setproperty"/>
			<param name="ret">
				<paraminfo> [144] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Taxi_Random" syntax="Taxi_Random(playerid)">
			<stacksize value="241"/>
			<referrer name="Taxi_Start"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicActor"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicActor"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicActor"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SkinKobiecy"/>
			<dependency name="TaxiActor"/>
			<dependency name="TaxiCP"/>
			<dependency name="TaxiLabel"/>
			<dependency name="TaxiNamesMan"/>
			<dependency name="TaxiNamesWoman"/>
			<dependency name="TaxiNamesWoman"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="VW_TAXI"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="msg"/>
			<dependency name="random"/>
			<dependency name="taxiPositionData"/>
			<dependency name="taxiPositionData"/>
			<dependency name="taxi_actor"/>
			<dependency name="taxi_cp"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Taxi_Start" syntax="Taxi_Start(playerid)">
			<stacksize value="12"/>
			<referrer name="OnDialogJob"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="TaxiClient"/>
			<dependency name="TaxiReward"/>
			<dependency name="TaxiSwitch"/>
			<dependency name="TaxiVehicle"/>
			<dependency name="Taxi_Random"/>
			<dependency name="VW_TAXI"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Teleport" syntax="Teleport(playerid, inVeh, x, y, z, a, interiorid, worldid, freeze)">
			<stacksize value="14"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="Bank_Pickup"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="WordPickup"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="pc_cmd_kurczaktp"/>
			<referrer name="RandomSpawn"/>
			<referrer name="EnterTeleport"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="pc_cmd_tspawn"/>
			<referrer name="SparingRespawn"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="EnterBusiness"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="StartBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StartGG"/>
			<referrer name="RespawnGG"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StartSK"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="JailPlayer"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<referrer name="WC_OnPlayerSpawn"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="FreezePlayer"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="Log"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Streamer_Update"/>
			<dependency name="WC_SetPlayerVirtualWorld"/>
			<dependency name="acc_SetPlayerInterior"/>
			<dependency name="false"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="setPosition"/>
			<param name="playerid">
			</param>
			<param name="inVeh">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="a">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="interiorid">
			</param>
			<param name="worldid">
			</param>
			<param name="freeze">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawAlignment" syntax="TextDrawAlignment(text, alignment)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawAlignment"/>
			<referrer name="ScriptInit"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the alignment of
			</param>
			<param name="alignment">
				<b><c>1</c></b>-left <b><c>2</c></b>-centered <b><c>3</c></b>-right
			</param>
			<library>a_samp</library>  <summary>Set the alignment of text in a text draw.</summary>      <remarks>For alignment <b><c>2</c></b> (center) the x and y values of <a href="#TextSize">TextSize</a>  need to be swapped, see notes at <a href="#TextDrawTextSize">TextDrawTextSize</a>, also position  coordinate become position of center of textdraw and not left/top edges. </remarks> 
		</member>
		<member name="M:TextDrawBackgroundColor" syntax="TextDrawBackgroundColor(text, colour)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawBackgroundColor"/>
			<referrer name="ScriptInit"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the background colour of
			</param>
			<param name="colour">
				The colour that the textdraw should be set to
			</param>
			<library>a_samp</library>  <summary>Adjusts the text draw area background colour (the outline/shadow - NOT the box.  For box  colour, see <a href="#TextDrawBoxColor">TextDrawBoxColor</a>).</summary>      <remarks>If <a href="#TextDrawSetOutline">TextDrawSetOutline</a> is used with size &gt; <b><c>0</c></b>,  the outline colour will match the colour used in <a href="#TextDrawBackgroundColor">TextDrawBackgroundColor</a>.  Changing the value of colour seems to alter the colour used in <a href="#TextDrawColor">TextDrawColor</a></remarks>  <remarks>If you want to change the background colour of a textdraw that is already shown, you don't  have to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawBoxColor" syntax="TextDrawBoxColor(text, colour)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawBoxColor"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="colour">
				The colour (<b>RGBA</b>)
			</param>
			<library>a_samp</library>  <summary>Adjusts the text box colour (only used if <a href="#TextDrawUseBox">TextDrawUseBox</a> 'use'  parameter is <b><c>1</c></b>).</summary>      <remarks>If you want to change the boxcolour of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawColor" syntax="TextDrawColor(text, colour)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawColor"/>
			<referrer name="ScriptInit"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to change the colour of.
			</param>
			<param name="colour">
				The colour to set the textdraw to
			</param>
			<library>a_samp</library>  <summary>Sets the text colour of a textdraw.</summary>      <remarks>You can also use GameText Colors in TextDraws.</remarks>  <remarks>If the TextDraw is already shown, it must be re-shown (<a href="#TextDrawShowForAll">TextDrawShowForAll</a>/<a  href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>) for the changes of this function to take  effect.</remarks> 
		</member>
		<member name="M:TextDrawCreate" syntax="TextDrawCreate(x, y, text[])">
			<tagname value="Text"/>
			<attribute name="native"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawCreate"/>
			<referrer name="ScriptInit"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x (left/right) coordinate to create the textdraw at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y (up/down) coordinate to create the textdraw at
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text that will appear in the textdraw
			</param>
			<library>a_samp</library>  <summary>Creates a textdraw.  Textdraws are, as the name implies, text (mainly - there can be boxes,  sprites and model previews (skins/vehicles/weapons/objects too) that is drawn on a player's screens.</summary>        <remarks>  If you choose values for y that are less than 1, the first text row will be invisible and only  the shadow is visible.<br />  text[] must not be empty or the server will crash! If you need a textdraw that shows nothing, use  a space underscore. <b>Now it's fixed</b>.<br />  If the last character in the text is a space, the text will all be blank.<br />  If part of the text is off-screen, the colour of the text will not show, only the shadow (if enabled)  will.  </remarks>  <remarks>  <em>This applies ONLY to sa-mp versions before 0.3z:</em><br />  Maximum length of textdraw is <b>800</b> characters.  Longer text will crash the client in older  versions.<br />  If you use colour codes (such as <b><c>~R~ ~G~</c></b>) beyond 255th character the client will  crash trying to display the textdraw.  </remarks>  <remarks>  The x, y coordinate is the top left coordinate for the text draw area based on a 640x480 "canvas"  (irrespective of screen resolution).  If you plan on using <a href="#TextDrawAlignment">TextDrawAlignment</a>  with alignment <b><c>3</c></b> (right), the x, y coordinate is the top right coordinate for the text  draw.<br />  This function merely CREATES the textdraw, you must use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>  or <a href="#TextDrawShowForAll">TextDrawShowForAll</a> to show it.<br />  It is recommended to use WHOLE numbers instead of decimal positions when creating textdraws to  ensure resolution friendly design.  </remarks>  <remarks>Keyboard key mapping codes (such as <b><c>~k~~VEHICLE_ENTER_EXIT~</c></b> don't work beyond  255th character. </remarks>  <returns>The ID of the created textdraw.  Textdraw IDs start at <b><c>0</c></b>.</returns> 
		</member>
		<member name="M:TextDrawDestroy" syntax="TextDrawDestroy(text)">
			<attribute name="native"/>
			<referrer name="WC_TextDrawDestroy"/>
			<referrer name="ScriptExit"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to destroy.  Returned by <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>a_samp</library>  <summary>Destroys a previously-created textdraw.</summary>   
		</member>
		<member name="M:TextDrawFont" syntax="TextDrawFont(text, font)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawFont"/>
			<referrer name="ScriptInit"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="font">
				There are four font styles, see  <a href="http://wiki.sa-mp.com/wiki/PlayerTextDrawFont">http://wiki.sa-mp.com/wiki/PlayerTextDrawFont</a>.  Font value <b><c>4</c></b> specifies that this is a txd sprite; <b><c>5</c></b> specifies that this  textdraw can display preview models.  A font value greater than 5 does not display, and anything  greater than 16 crashes the client
			</param>
			<library>a_samp</library>  <summary>Changes the text font.</summary>      <remarks>If you want to change the font of a textdraw that is already shown, you don't have to recreate  it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawHideForAll" syntax="TextDrawHideForAll(text)">
			<attribute name="native"/>
			<referrer name="WC_TextDrawHideForAll"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to hide (returned by <a href="#TextDrawCreate">TextDrawCreate</a>)
			</param>
			<library>a_samp</library>  <summary>Hides a text draw for all players.</summary>    <seealso name="TextDrawShowForPlayer" />  <seealso name="TextDrawHideForPlayer" />  <seealso name="TextDrawShowForAll" /> 
		</member>
		<member name="M:TextDrawHideForPlayer" syntax="TextDrawHideForPlayer(playerid, text)">
			<attribute name="native"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="WC_TextDrawHideForPlayer"/>
			<referrer name="SetHealthBarVisible"/>
			<param name="playerid">
				The ID of the player that the textdraw should be hidden for
			</param>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to hide
			</param>
			<library>a_samp</library>  <summary>Hides a textdraw for a specific player.</summary>      <seealso name="TextDrawHideForAll" />  <seealso name="TextDrawShowForPlayer" />  <seealso name="TextDrawShowForAll" /> 
		</member>
		<member name="M:TextDrawLetterSize" syntax="TextDrawLetterSize(text, width, height)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawLetterSize"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				Width of a char
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				Height of a char
			</param>
			<library>a_samp</library>  <summary>Sets the width and height of the letters.</summary>        <remarks>When using this function purely for the benefit of affecting the TextDraw box, multiply  'y' by <b><c>0.135</c></b> to convert to <a href="#TextDrawTextSize">TextDrawTextSize</a>-like measurements.  <b>Hint</b>: it is easier and extremely precise to use <b><c>LD_SPAC:white</c></b> sprite for box-only  textdraws, <a href="#TextDrawTextSize">TextDrawTextSize</a> will have regular offsets.</remarks>  <remarks>If you want to change the letter size of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible. </remarks>  <remarks>Fonts appear to look the best with an x to y ratio of <b><c>1</c></b> to <b><c>4</c></b>  (e.g.  if x is <b><c>0.5</c></b> then y should be <b><c>2</c></b>). </remarks> 
		</member>
		<member name="M:TextDrawSetOutline" syntax="TextDrawSetOutline(text, size)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawSetOutline"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the text draw to set the outline thickness of
			</param>
			<param name="size">
				The thickness of the outline, as an integer. <b><c>0</c></b> for no outline
			</param>
			<library>a_samp</library>  <summary>Sets the thickness of a textdraw's text's outline. <a href="#TextDrawBackgroundColor">TextDrawBackgroundColor</a>  can be used to change the colour.</summary>      <remarks>If you want to change the outline of a textdraw that is already shown, you don't have to  recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawSetPreviewModel" syntax="TextDrawSetPreviewModel(text, modelIndex)">
			<attribute name="native"/>
			<referrer name="WC_TextDrawSetPreviewModel"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The textdraw ID that will display the 3D preview
			</param>
			<param name="modelIndex">
				The GTA SA or SA:MP model ID to display
			</param>
			<library>a_samp</library>  <summary>Set the model for a textdraw model preview.  Click <a href="http://www.sa-mp.com/stuff/03xShots/pmenu.png">here</a>  to see this function's effect.</summary>      <remarks>This function was added in <b>SA-MP 0.3x</b> and will not work in earlier versions!</remarks>  <remarks>The textdraw MUST use the font type <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> in order  for this function to have effect.</remarks>  <remarks>Use <a href="#TextDrawBackgroundColor">TextDrawBackgroundColor</a> to set the background  colour behind the model.</remarks> 
		</member>
		<member name="M:TextDrawSetPreviewRot" syntax="TextDrawSetPreviewRot(text, rotX, rotY, rotZ, zoom)">
			<attribute name="native"/>
			<referrer name="WC_TextDrawSetPreviewRot"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="rotX">
				<paraminfo>Float </paraminfo>
				The x rotation value
			</param>
			<param name="rotY">
				<paraminfo>Float </paraminfo>
				The y rotation value
			</param>
			<param name="rotZ">
				<paraminfo>Float </paraminfo>
				The z rotation value
			</param>
			<param name="zoom">
				<paraminfo>Float </paraminfo>
				The zoom value, smaller values make the camera closer and larger values make the  camera further away (optional=<b><c>1.0</c></b>)
			</param>
			<library>a_samp</library>  <summary>Sets the rotation and zoom of a 3D model preview textdraw.</summary>          <remarks>This function was added in <b>SA-MP 0.3x</b> and will not work in earlier versions!</remarks>  <remarks>The textdraw MUST use the font type <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> in order  for this function to have effect.</remarks> 
		</member>
		<member name="M:TextDrawSetPreviewVehCol" syntax="TextDrawSetPreviewVehCol(text, colour1, colour2)">
			<attribute name="native"/>
			<referrer name="WC_TextDrawSetPreviewVehCol"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The textdraw ID that is set to display a 3D vehicle model preview
			</param>
			<param name="colour1">
				The primary Color ID to set the vehicle to
			</param>
			<param name="colour2">
				The secondary Color ID to set the vehicle to
			</param>
			<library>a_samp</library>  <summary>If a vehicle model is used in a 3D preview textdraw, this sets the two colour values for  that vehicle.</summary>        <remarks>This function was added in <b>SA-MP 0.3x</b> and will not work in earlier versions!</remarks>  <remarks>The textdraw MUST use the font type <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> in order  for this function to have effect.</remarks> 
		</member>
		<member name="M:TextDrawSetProportional" syntax="TextDrawSetProportional(text, set)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawSetProportional"/>
			<referrer name="ScriptInit"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the proportionality of
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable proportionality, <b><c>0</c></b> to disable
			</param>
			<library>a_samp</library>  <summary>Appears to scale text spacing to a proportional ratio.  Useful when using <a href="#TextDrawLetterSize">TextDrawLetterSize</a>  to ensure the text has even character spacing.</summary>      <remarks>Proportionality is set to <b><c>1</c></b> by default, you might skip this function if you  don't want to disable it. </remarks>  <remarks>If you want to change the proportionality of a textdraw that is already shown, you don't  have to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible. </remarks> 
		</member>
		<member name="M:TextDrawSetSelectable" syntax="TextDrawSetSelectable(text, set)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawSetSelectable"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to make selectable
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to make it selectable, or <b><c>0</c></b> to make it not selectable
			</param>
			<library>a_samp</library>  <summary>Sets whether a textdraw can be selected (clicked on) or not.</summary>      <remarks>This function was added in <b>SA-MP 0.3e</b> and will not work in earlier versions!</remarks>  <remarks><a href="#TextDrawSetSelectable">TextDrawSetSelectable</a> must be used BEFORE the textdraw  is shown to players for it to be selectable.</remarks>  <remarks>Use <a href="#TextDrawTextSize">TextDrawTextSize</a> to define the clickable area.</remarks> 
		</member>
		<member name="M:TextDrawSetShadow" syntax="TextDrawSetShadow(text, size)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawSetShadow"/>
			<referrer name="ScriptInit"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the shadow size of
			</param>
			<param name="size">
				The size of the shadow. <b><c>1</c></b> is generally used for a normal shadow  size. <b><c>0</c></b> disables the shadow completely
			</param>
			<library>a_samp</library>  <summary>Sets the size of a textdraw's text's shadow.</summary>      <remarks>The shadow can be cut by the box area if the size is set too big for the area.</remarks>  <remarks>If you want to change the shadow of a textdraw that is already shown, you don't have to  recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The textdraw does not exist.  </returns> 
		</member>
		<member name="M:TextDrawSetString" syntax="TextDrawSetString(text, string[])">
			<attribute name="native"/>
			<referrer name="va_TextDrawSetString"/>
			<referrer name="WC_TextDrawSetString"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The new string for the TextDraw
			</param>
			<library>a_samp</library>  <summary>Changes the text on a textdraw.</summary>      <remarks>There are limits to the length of textdraw strings - see <a href="http://wiki.sa-mp.com/wiki/Limits">here</a>  for more info.</remarks> 
		</member>
		<member name="M:TextDrawShowForAll" syntax="TextDrawShowForAll(text)">
			<attribute name="native"/>
			<referrer name="WC_TextDrawShowForAll"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to show.  Returned by <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>a_samp</library>  <summary>Shows a textdraw for all players.</summary>    <seealso name="TextDrawShowForPlayer" />  <seealso name="TextDrawHideForPlayer" />  <seealso name="TextDrawHideForAll" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the textdraw specified does not exist.  </returns> 
		</member>
		<member name="M:TextDrawShowForPlayer" syntax="TextDrawShowForPlayer(playerid, text)">
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="WC_TextDrawShowForPlayer"/>
			<referrer name="SetHealthBarVisible"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to show.  Returned by <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>a_samp</library>  <summary>Shows a textdraw for a specific player.</summary>      <remarks>If only a single player will see a textdraw, it might be wise to use player-textdraws instead.  This is also useful for textdraws that need to show information specific for an individual player.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means either the player and/or textdraw  specified does not exist.  </returns> 
		</member>
		<member name="M:TextDrawTextSize" syntax="TextDrawTextSize(text, width, height)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawTextSize"/>
			<referrer name="ScriptInit"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The TextDraw to set the size of
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				The size on the x axis (left/right) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				The size on the y axis (up/down) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>a_samp</library>  <summary>Change the size of a textdraw (box if <a href="#TextDrawUseBox">TextDrawUseBox</a> is enabled  and/or clickable area for use with <a href="#TextDrawSetSelectable">TextDrawSetSelectable</a>).</summary>        <remarks>  The x and y have different meanings with different TextDrawAlignment values:<br />  <ul>  <li><b><c>1</c></b> (left): they are the right-most corner of the box, absolute coordinates.</li>  <li><b><c>2</c></b> (center): they need to inverted (switch the two) and the x value is the overall  width of the box.</li>  <li><b><c>3</c></b> (right): the x and y are the coordinates of the left-most corner of the box  </li>  </ul>  </remarks>  <remarks>  Using font type <b><c>4</c></b> (sprite) and <b><c>5</c></b> (model preview) converts x and y of  this function from corner coordinates to WIDTH and HEIGHT (offsets).<br />  The TextDraw box starts <b><c>10.0</c></b> units up and <b><c>5.0</c></b> to the left as the origin  (<a href="#TextDrawCreate">TextDrawCreate</a> coordinate).<br />  This function defines the clickable area for use with <a href="#TextDrawSetSelectable">TextDrawSetSelectable</a>,  whether a box is shown or not.  </remarks>  <remarks>If you want to change the text size of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawUseBox" syntax="TextDrawUseBox(text, use)">
			<attribute name="native"/>
			<referrer name="Hook_OnGameModeInit"/>
			<referrer name="WC_TextDrawUseBox"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
				The ID of the text textdraw to toggle the box of
			</param>
			<param name="use">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to show a box or <b><c>0</c></b> to not show a box
			</param>
			<library>a_samp</library>  <summary>Toggle whether a textdraw uses a box or not.</summary>      <remarks>If the textdraw is already shown, it must be re-shown (<a href="#TextDrawShowForAll">TextDrawShowForAll</a>/<a  href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>) to show the changes of this function.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the textdraw specified does not exist.  </returns> 
		</member>
		<member name="M:ThirdParty_OnCodeInit" syntax="ThirdParty_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="CGen_SetupCodeSpace"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmInit"/>
			<dependency name="DisasmNextInsn"/>
			<dependency name="OP_NONE"/>
			<dependency name="OP_NOP"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sCodeSpace"/>
		</member>
		<member name="M:Timer_CreateCallback" syntax="Timer_CreateCallback(func, initialOrTime, timeOrCount, count)">
			<stacksize value="12"/>
			<referrer name="SetCallbackTimer"/>
			<referrer name="KickEx"/>
			<referrer name="pc_cmd_ann"/>
			<dependency name="GetTickCount"/>
			<dependency name="Indirect_Claim_"/>
			<dependency name="Indirect_SetMeta_"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="false"/>
			<param name="func">
				<paraminfo>F@_@ </paraminfo>
				Function to call on a timer.
			</param>
			<param name="initialOrTime">
			</param>
			<param name="timeOrCount">
			</param>
			<param name="count">
				How many times to call it.
			</param>
			  <param name="initial">Delay before first call.</param>  <param name="time">Delay between subsequent calls.</param>    <remarks>  There are several ways to use this function:  <c>SetCallbackTimer(func, 100);</c>  Calls the function once every 100ms.  <c>SetCallbackTimer(func, 100, 0);</c>  Same as above (count is <c>0</c>, which means repeat forever).  <c>SetCallbackTimer(func, 100, 5);</c>  Calls the function once every 100ms, but only 5 times.  <c>SetCallbackTimer(func, 100, 200, 0);</c>  Calls the function once every 200ms, but the first call is after just 100ms.  <c>SetCallbackTimer(func, 100, 200, 42);</c>  Calls the function 42 times, first after 100ms, then every 200ms.  When only one parameter is given its <c>time</c>.  When two parameters are given they're <c>time</c> and <c>count</c>.  When all three parameters are given they're <c>initial</c>, <c>time</c>,  and <c>count</c>.  Count is NOT like <c>repeat</c> in <c>SetTimer</c>.  <c>0</c> means repeat  forever, anything not <c>0</c> means call it exactly that many times.  </remarks> 
		</member>
		<member name="M:Timer_GetCallCount" syntax="Timer_GetCallCount(slot)">
			<stacksize value="4"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="_Timer_Get"/>
			<dependency name="_YSI_g_sCurrentTimer"/>
			<param name="slot">
				<paraminfo>Timer </paraminfo>
			</param>
		</member>
		<member name="M:Timer_GetSingleSlot" syntax="Timer_GetSingleSlot(len)">
			<tagname value="Alloc"/>
			<stacksize value="6"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_S"/>
			<referrer name="_Timer_A"/>
			<referrer name="_Timer_B"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFirstSlot"/>
			<dependency name="YSI_g_sLastSlot"/>
			<param name="len">
			</param>
		</member>
		<member name="M:Timer_IsRunning" syntax="Timer_IsRunning(slot)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="_Timer_Get"/>
			<dependency name="_YSI_g_sCurrentTimer"/>
			<param name="slot">
				<paraminfo>Timer </paraminfo>
			</param>
		</member>
		<member name="M:Timer_KillCallback" syntax="Timer_KillCallback(func)">
			<stacksize value="5"/>
			<referrer name="KillCallbackTimer"/>
			<referrer name="pc_cmd_ann"/>
			<dependency name="Indirect_GetMeta_"/>
			<dependency name="Indirect_Release_"/>
			<dependency name="KillTimer"/>
			<param name="func">
				Timer to kill.
			</param>
			  <remarks>  Kill a timer created by <c>SetCallbackTimer</c>.  Normal <c>KillTimer</c>  won't work for them.  </remarks> 
		</member>
		<member name="M:ToHexStr" syntax="ToHexStr(x)">
			<stacksize value="15"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteDataRowHex"/>
			<referrer name="DisasmWriteData"/>
			<dependency name="ToHexStr"/>
			<param name="x">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:ToPrintableAscii" syntax="ToPrintableAscii(c)">
			<stacksize value="4"/>
			<referrer name="DisasmWriteDataRowChar"/>
			<dependency name="IsPrintableAscii"/>
			<param name="c">
			</param>
			<library>amx_assembly disasm</library>
		</member>
		<member name="M:TogglePlayerControllable" syntax="TogglePlayerControllable(playerid, toggle)">
			<attribute name="native"/>
			<referrer name="ac_TogglePlayerControllable"/>
			<referrer name="orig_TogglePlayerControllable"/>
			<param name="playerid">
				The ID of the player to toggle the controllability of
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
				<b><c>0</c></b> to make them uncontrollable, <b><c>1</c></b> to make them controllable
			</param>
			<library>a_players</library>  <summary>Toggles whether a player can control their character or not.  The player will also be unable  to move their camera.</summary>      <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:TogglePlayerSpectating" syntax="TogglePlayerSpectating(playerid, toggle)">
			<attribute name="native"/>
			<referrer name="ac_TogglePlayerSpectating"/>
			<referrer name="orig_TogglePlayerSpectating"/>
			<param name="playerid">
				The ID of the player who should spectate
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable spectating and <b><c>0</c></b> to disable
			</param>
			<library>a_players</library>  <summary>Toggle whether a player is in spectator mode or not.  While in spectator mode a player can  spectate (watch) other players and vehicles.  After using this function, either <a href="#PlayerSpectatePlayer">PlayerSpectatePlayer</a>  or <a href="#PlayerSpectateVehicle">PlayerSpectateVehicle</a> needs to be used.</summary>      <seealso name="PlayerSpectatePlayer" />  <seealso name="PlayerSpectateVehicle" />  <remarks>If the player is not loaded in before setting the spectate status to false, the connection  can be closed unexpectedly.</remarks>  <remarks>When spectator mode is disabled, <a href="#OnPlayerSpawn">OnPlayerSpawn</a> will automatically  be called, if you wish to restore player to state before spectating, you will have to handle that  in <a href="#OnPlayerSpawn">OnPlayerSpawn</a>.  Note also, that player can also go to class selection  before if they used F4 during spectate, a player also CAN die in spectate mode due to various glitches.</remarks>  <remarks>When a player is in spectate mode their HUD is hidden, making it useful for setting a player's  camera without the HUD.  Also, objects near the player's camera will be streamed in, making this  useful for interpolating cameras.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player does not exist.  </returns> 
		</member>
		<member name="M:TransferResetGang" syntax="TransferResetGang(playerid, gangid, loan)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="KillTimer"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="pGangTransferCost"/>
			<dependency name="pGangTransferID"/>
			<dependency name="pGangTransferTimer"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
			<param name="loan">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Trim" syntax="Trim(str[], &amp;start, &amp;end)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to trim.
			</param>
			<param name="start">
				<paraminfo> &amp; </paraminfo>
				Start of the substring.
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
				End of the substring.
			</param>
			      <remarks>  Modifies "start" and "end" to be tight on text in "str".  <c>Strip</c>  removes the characters from the end, so needs a modifiable string, this just  tells you where the ends are.  </remarks> 
		</member>
		<member name="M:Truck_Freeze" syntax="Truck_Freeze(playerid)">
			<attribute name="public"/>
			<stacksize value="242"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="pTruckLabel"/>
			<dependency name="pTruckReward"/>
			<dependency name="pTruckTowar"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="towar_name"/>
			<dependency name="towaryData"/>
			<dependency name="towaryData"/>
			<dependency name="truckData"/>
			<dependency name="truckData"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Truck_Rozladuj" syntax="Truck_Rozladuj(playerid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ACH_TRUCK"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="GetAchievement"/>
			<dependency name="GetPVarFloat"/>
			<dependency name="ShowMissionDraw"/>
			<dependency name="Truck_Stop"/>
			<dependency name="achievement"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="msgAll"/>
			<dependency name="pTruckDist"/>
			<dependency name="pTruckReward"/>
			<dependency name="pTruckTowar"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="towar_name"/>
			<dependency name="towaryData"/>
			<dependency name="towaryData"/>
			<dependency name="truckDay"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Truck_Stop" syntax="Truck_Stop(playerid)">
			<stacksize value="6"/>
			<referrer name="_@yHOnPlayerDeath@0F"/>
			<referrer name="_@yHOnPlayerDisconnect@0F"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="acc_RemovePlayerFromVehicle"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="false"/>
			<dependency name="pTruck"/>
			<dependency name="pTruckCheckpoint"/>
			<dependency name="pTruckIcon"/>
			<dependency name="pTruckLabel"/>
			<dependency name="pTruckReward"/>
			<dependency name="pTruckTowar"/>
			<dependency name="pTruckTrailer"/>
			<dependency name="pTruckVehicle"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TryPPM" syntax="TryPPM(ppm)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="random"/>
			<param name="ppm">
				The likelihood of returning <c>true</c>.
			</param>
			<summary>  TryPPM(ppm);  </summary>    <returns>  <c>true</c>, <c>ppm%oooo</c> of the time; or <c>false</c>  </returns>  <remarks>  Basically a ppm random number generator (that's out of 1000000).  Could be  used to replicate something with a <c>1.0001%</c> chance of happening via:  <br />  <c>TryPPM(10001)</c>  </remarks> 
		</member>
		<member name="M:TryPercentage" syntax="TryPercentage(percentage)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="random"/>
			<param name="percentage">
				The likelihood of returning <c>true</c>.
			</param>
			<summary>  TryPercentage(percentage);  </summary>    <returns>  <c>true</c>, <c>percentage%</c> of the time; or <c>false</c>  </returns>  <remarks>  Basically a percentage random number generator.  </remarks> 
		</member>
		<member name="M:TryPermille" syntax="TryPermille(permille)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="random"/>
			<param name="permille">
				The likelihood of returning <c>true</c>.
			</param>
			<summary>  TryPermille(permille);  </summary>    <returns>  <c>true</c>, <c>permille%o</c> of the time; or <c>false</c>  </returns>  <remarks>  Basically a permille random number generator (that's out of 1000).  Could be  used to replicate something with a <c>42.1%</c> chance of happening via:  <br />  <c>TryPermille(421)</c>  </remarks> 
		</member>
		<member name="M:TuneVehicle" syntax="TuneVehicle(vehicleid)">
			<stacksize value="40"/>
			<referrer name="pc_cmd_tune"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="addVehicleComponent"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:UCMP" syntax="UCMP(value, upper)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				The unsigned number to compare.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			    <returns>  An unsigned comparison between the two values.  </returns> 
		</member>
		<member name="M:UnFreezePlayer" syntax="UnFreezePlayer(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="pFreezeTimer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UnixTime" syntax="UnixTime(type, time)">
			<stacksize value="3"/>
			<referrer name="givePremium"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="BanPlayer"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="pc_cmd_offban"/>
			<dependency name="tolower"/>
			<param name="type">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:Unpack" syntax="Unpack(str[])">
			<stacksize value="149"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<dependency name="Unpack"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to unpack
			</param>
			  <returns>  unpacked string  </returns>  <remarks>  Mainly used for debugging.  </remarks> 
		</member>
		<member name="M:UnrelocateOpcode" syntax="UnrelocateOpcode(opcode)">
			<tagname value="Opcode"/>
			<stacksize value="3"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmDecodeInsnUnsafe"/>
			<referrer name="CodeScanRunFastPrescanRelocate"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="InitOpcodeTable"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="opcode_table"/>
			<dependency name="opcode_table_is_ready"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<library>amx_assembly opcode</library>
		</member>
		<member name="M:Update3DTextLabelText" syntax="Update3DTextLabelText(textid, colour, text[])">
			<attribute name="native"/>
			<referrer name="va_Update3DTextLabelText"/>
			<param name="textid">
				<paraminfo>Text3D </paraminfo>
				The 3D Text Label you want to update
			</param>
			<param name="colour">
				The colour the 3D Text Label should have from now on
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The new text which the 3D Text Label should have from now on
			</param>
			<library>a_samp</library>  <summary>Updates a 3D Text Label text and colour.</summary>        <seealso name="Create3DTextLabel" />  <seealso name="Delete3DTextLabel" />  <seealso name="Attach3DTextLabelToPlayer" />  <seealso name="Attach3DTextLabelToVehicle" />  <seealso name="CreatePlayer3DTextLabel" />  <seealso name="DeletePlayer3DTextLabel" />  <seealso name="UpdatePlayer3DTextLabelText" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>If <paramref name="text" /> is empty, the server/clients next to the text might crash!</remarks> 
		</member>
		<member name="M:UpdateArenaDraw" syntax="UpdateArenaDraw(playerid, arenaid)">
			<stacksize value="34"/>
			<referrer name="_@yHOnPlayerDeath@06"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="GetArenaName"/>
			<dependency name="GetArenaName"/>
			<dependency name="Iter_Single@Areny"/>
			<dependency name="getRatio"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaKills"/>
			<dependency name="pArenaKills"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="strdot"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
			<param name="arenaid">
			</param>
		</member>
		<member name="M:UpdateAreny" syntax="UpdateAreny()">
			<stacksize value="10"/>
			<referrer name="Init_Areny"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<dependency name="Iter_Single@Areny"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="format"/>
			<dependency name="strx"/>
			<dependency name="tdAreny"/>
		</member>
		<member name="M:UpdateBTR" syntax="UpdateBTR()">
			<stacksize value="10"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ACH_BTR"/>
			<dependency name="CheckBet"/>
			<dependency name="ConvertTime"/>
			<dependency name="CreateZone"/>
			<dependency name="CreateZoneBorders"/>
			<dependency name="DestroyZone"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="HideZoneForPlayer"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="RoyaleKills"/>
			<dependency name="RoyaleZone"/>
			<dependency name="RoyaleZoneCount"/>
			<dependency name="RoyaleZoneDamage"/>
			<dependency name="RoyaleZonePosition"/>
			<dependency name="RoyaleZoneSwitch"/>
			<dependency name="ShowZoneForPlayer"/>
			<dependency name="StopBTR"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="ZoneFlashForPlayer"/>
			<dependency name="achievement"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="showGameDraw"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="true"/>
		</member>
		<member name="M:UpdateBaseLabel" syntax="UpdateBaseLabel(baseid)">
			<stacksize value="369"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<dependency name="GangBaseCost"/>
			<dependency name="GangBaseName"/>
			<dependency name="GangBaseName"/>
			<dependency name="GangBaseOwner"/>
			<dependency name="GangBaseSell"/>
			<dependency name="UpdateBaseLabel"/>
			<dependency name="base_pickup"/>
			<dependency name="format"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="strdot"/>
			<param name="baseid">
			</param>
		</member>
		<member name="M:UpdateBusinessLabel" syntax="UpdateBusinessLabel(businessid)">
			<stacksize value="294"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="FetchBusinessName"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessType"/>
			<dependency name="UpdateBusinessLabel"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_cost"/>
			<dependency name="business_name"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_ownername"/>
			<dependency name="business_type"/>
			<dependency name="format"/>
			<dependency name="strdot"/>
			<param name="businessid">
			</param>
		</member>
		<member name="M:UpdateChowany" syntax="UpdateChowany()">
			<stacksize value="9"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="ChowanyArenaID"/>
			<dependency name="ChowanySzukajacy"/>
			<dependency name="GAME_CH"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="Iter_Random_Internal"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="StopChowany"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WC_SetPlayerTeam"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="chowanyDataArena"/>
			<dependency name="chowanyDataArena"/>
			<dependency name="chowany_area"/>
			<dependency name="chowany_interior"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="giveWeapon"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
		</member>
		<member name="M:UpdateDA" syntax="UpdateDA()">
			<stacksize value="6"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="GAME_DA"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="StopDA"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="false"/>
		</member>
		<member name="M:UpdateDuelBox" syntax="UpdateDuelBox(playerid)">
			<stacksize value="163"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="CheckDuelKiller"/>
			<referrer name="DuelRespawn"/>
			<dependency name="DUEL_RANK_CHAMPION"/>
			<dependency name="format"/>
			<dependency name="getDuelName"/>
			<dependency name="getDuelName"/>
			<dependency name="getDuelPoints"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pDuelPoints"/>
			<dependency name="pDuelRank"/>
			<dependency name="pDuelRoundCount"/>
			<dependency name="pDuelRounds"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UpdateDynamic3DTextLabelText" syntax="UpdateDynamic3DTextLabelText(id, color, text[])">
			<attribute name="native"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="CreateKurczak"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="CheckGangWar"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Taxi_Random"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="Roulette_Refresh"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="Init_Mining"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="UpdatePlayerLabel"/>
			<param name="id">
				<paraminfo>Text3D </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:UpdateEditorAttachment" syntax="UpdateEditorAttachment(playerid, keys, updown, leftright)">
			<stacksize value="15"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="AttachDynamicObjectToVehicle"/>
			<dependency name="EOS"/>
			<dependency name="E_STREAMER_ATTACH_OFFSET_X"/>
			<dependency name="E_STREAMER_ATTACH_OFFSET_Y"/>
			<dependency name="E_STREAMER_ATTACH_OFFSET_Z"/>
			<dependency name="E_STREAMER_ATTACH_R_X"/>
			<dependency name="E_STREAMER_ATTACH_R_Y"/>
			<dependency name="E_STREAMER_ATTACH_R_Z"/>
			<dependency name="GetPVarInt"/>
			<dependency name="KEY_DOWN"/>
			<dependency name="KEY_JUMP"/>
			<dependency name="KEY_LEFT"/>
			<dependency name="KEY_NO"/>
			<dependency name="KEY_RIGHT"/>
			<dependency name="KEY_SPRINT"/>
			<dependency name="KEY_UP"/>
			<dependency name="Streamer_SetFloatData"/>
			<dependency name="Streamer_Update"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pVeh"/>
			<dependency name="pVehEdit"/>
			<dependency name="pVehEditType"/>
			<dependency name="pVehEditorPos"/>
			<dependency name="pVehEditorPos"/>
			<dependency name="pVehEditorRot"/>
			<dependency name="pVehEditorRot"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectID"/>
			<dependency name="pVehObjectPos"/>
			<dependency name="pVehObjectPos"/>
			<dependency name="pVehObjectRot"/>
			<dependency name="pVehObjectRot"/>
			<dependency name="s"/>
			<dependency name="showGameDraw"/>
			<param name="playerid">
			</param>
			<param name="keys">
			</param>
			<param name="updown">
			</param>
			<param name="leftright">
			</param>
		</member>
		<member name="M:UpdateGG" syntax="UpdateGG()">
			<stacksize value="6"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="GAME_GG"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="StopGG"/>
			<dependency name="UpdateGameStatus"/>
		</member>
		<member name="M:UpdateGameDraw" syntax="UpdateGameDraw()">
			<stacksize value="266"/>
			<referrer name="UpdateHud"/>
			<referrer name="Init_Games"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="StopDA"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="StopGG"/>
			<referrer name="StartWP"/>
			<referrer name="StopWP"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GetGameLimit"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="format"/>
			<dependency name="tdGameLimit"/>
		</member>
		<member name="M:UpdateGameStatus" syntax="UpdateGameStatus(playerid, gameid)">
			<stacksize value="99"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StartZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="StartDA"/>
			<referrer name="UpdateDA"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StartSM"/>
			<referrer name="UpdateSM"/>
			<referrer name="StartGG"/>
			<referrer name="UpdateGG"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StartWG"/>
			<referrer name="UpdateWG"/>
			<dependency name="ChowanySzukajacy"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GAME_CH"/>
			<dependency name="GAME_DA"/>
			<dependency name="GAME_GG"/>
			<dependency name="GAME_RC"/>
			<dependency name="GAME_SK"/>
			<dependency name="GAME_SM"/>
			<dependency name="GAME_WG"/>
			<dependency name="GAME_WP"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GG_GetWinner"/>
			<dependency name="GameCountDown"/>
			<dependency name="GetWarTeam"/>
			<dependency name="GetWarTeam"/>
			<dependency name="GunGameLevel"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="MaxVehicleZP"/>
			<dependency name="RaceCountCPs"/>
			<dependency name="RacePlacement"/>
			<dependency name="RaceStatusData"/>
			<dependency name="RaceStatusData"/>
			<dependency name="RoyaleKills"/>
			<dependency name="RoyaleZoneDamage"/>
			<dependency name="SiankoCount"/>
			<dependency name="StatusZP"/>
			<dependency name="SwitchZP"/>
			<dependency name="WarResult"/>
			<dependency name="da_damage"/>
			<dependency name="da_kills"/>
			<dependency name="deathArenaKills"/>
			<dependency name="deathArenaKills"/>
			<dependency name="format"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_nickname"/>
			<dependency name="player_warTeam"/>
			<dependency name="race_status"/>
			<dependency name="strx"/>
			<dependency name="sumoZapisanyCount"/>
			<dependency name="tdInfo"/>
			<dependency name="wpCountPeople"/>
			<param name="playerid">
			</param>
			<param name="gameid">
			</param>
		</member>
		<member name="M:UpdateGangBar" syntax="UpdateGangBar(playerid, gangid)">
			<stacksize value="8"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="addGangScore"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="SecondTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
		</member>
		<member name="M:UpdateGangBox" syntax="UpdateGangBox(gangid)">
			<stacksize value="358"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="addGangScore"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_draw"/>
			<dependency name="gang_level"/>
			<dependency name="gang_name"/>
			<dependency name="gang_respect"/>
			<dependency name="gang_respect_needed"/>
			<dependency name="gang_tag"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:UpdateGangZoneLabel" syntax="UpdateGangZoneLabel(zoneid)">
			<stacksize value="272"/>
			<referrer name="Init_GangZones"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="CheckGangWar"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="UpdateGangZoneLabel"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="pGangZoneName"/>
			<dependency name="pGangZoneName"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="strx"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:UpdateGangZones" syntax="UpdateGangZones(gangid)">
			<stacksize value="264"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="HideZoneForAll"/>
			<dependency name="Iterator@GangZones"/>
			<dependency name="ShowZoneForAll"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdateGangZoneLabel"/>
			<dependency name="UpdateGangZoneLabel"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="pGangZone"/>
			<dependency name="pGangZoneLabel"/>
			<dependency name="pGangZoneOwner"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:UpdateHealthBar" syntax="UpdateHealthBar(playerid, force)">
			<stacksize value="10"/>
			<referrer name="WC_SetPlayerHealth"/>
			<referrer name="WC_SetPlayerArmour"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ScriptInit"/>
			<referrer name="SetHealthBarVisible"/>
			<referrer name="InflictDamage"/>
			<referrer name="PlayerDeath"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="PlayerTextDrawAlignment"/>
			<dependency name="PlayerTextDrawBackgroundColor"/>
			<dependency name="PlayerTextDrawColor"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawSetProportional"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="SetFakeArmour"/>
			<dependency name="SetFakeHealth"/>
			<dependency name="UpdateSyncData"/>
			<dependency name="WC_Bar_Calculate"/>
			<dependency name="acc_SetPlayerArmour"/>
			<dependency name="acc_SetPlayerHealth"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="floatround_ceil"/>
			<dependency name="printf"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="s_ForceClassSelection"/>
			<dependency name="s_HealthBarForeground"/>
			<dependency name="s_HealthBarVisible"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastSentArmour"/>
			<dependency name="s_LastSentHealth"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxArmour"/>
			<dependency name="s_PlayerMaxHealth"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="force">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:UpdateHud" syntax="UpdateHud(playerid)">
			<stacksize value="9"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="OnDialogHud"/>
			<dependency name="FishBar"/>
			<dependency name="LevelBar"/>
			<dependency name="PoolBar"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="changeBarColor"/>
			<dependency name="changeHudColor"/>
			<dependency name="changePlayerHudColor"/>
			<dependency name="pHud"/>
			<dependency name="pHud"/>
			<dependency name="tdAchievement"/>
			<dependency name="tdGameList"/>
			<dependency name="tdLicznik"/>
			<dependency name="tdMoney"/>
			<dependency name="tdPasek"/>
			<dependency name="tdPlayer"/>
			<dependency name="tdQuest"/>
			<dependency name="tdQuiz"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UpdateJobDraw" syntax="UpdateJobDraw(playerid, jobid)">
			<stacksize value="112"/>
			<referrer name="Magazynier_Fetch"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TakeTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Start"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<dependency name="ACH_GRABARZ"/>
			<dependency name="ACH_MAGAZYNIER"/>
			<dependency name="DrwalCount"/>
			<dependency name="DrwalReward"/>
			<dependency name="GetAchievement"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GrzybCount"/>
			<dependency name="GrzybReward"/>
			<dependency name="HuntingCount"/>
			<dependency name="HuntingReward"/>
			<dependency name="TaxiReward"/>
			<dependency name="TaxiSwitch"/>
			<dependency name="ZrzutPaczka"/>
			<dependency name="ZrzutPaczkaID"/>
			<dependency name="ZrzutPaczkaName"/>
			<dependency name="ZrzutPaczkaName"/>
			<dependency name="ZrzutReward"/>
			<dependency name="corp_name"/>
			<dependency name="corpsNames"/>
			<dependency name="corpsNames"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getJobName"/>
			<dependency name="getJobName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="grabarzCorps"/>
			<dependency name="grabarzCount"/>
			<dependency name="grabarzEtap"/>
			<dependency name="grabarzReward"/>
			<dependency name="magazynPaczkaType"/>
			<dependency name="magazynReward"/>
			<dependency name="magazynTowar"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="taxiPositionData"/>
			<dependency name="taxiPositionData"/>
			<dependency name="taxi_cp"/>
			<dependency name="tdInfo"/>
			<dependency name="warePaczkaData"/>
			<dependency name="warePaczkaData"/>
			<dependency name="ware_name"/>
			<param name="playerid">
			</param>
			<param name="jobid">
			</param>
		</member>
		<member name="M:UpdateLevelBar" syntax="UpdateLevelBar(playerid, amount)">
			<stacksize value="9"/>
			<referrer name="addLevelScore"/>
			<dependency name="IsPlayerProgressBarVisible"/>
			<dependency name="KillTimer"/>
			<dependency name="LevelBar"/>
			<dependency name="LevelTimer"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_level"/>
			<dependency name="player_score"/>
			<dependency name="player_score_needed"/>
			<dependency name="strdot"/>
			<dependency name="tdLevel"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:UpdateMineLabel" syntax="UpdateMineLabel(mineid)">
			<stacksize value="302"/>
			<referrer name="Init_Mining"/>
			<referrer name="OnPlayerMining"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="GetMineStatus"/>
			<dependency name="GetMineStatus"/>
			<dependency name="MineMiners"/>
			<dependency name="MineType"/>
			<dependency name="UpdateMineLabel"/>
			<dependency name="format"/>
			<dependency name="mineData"/>
			<dependency name="mineData"/>
			<dependency name="mine_color"/>
			<dependency name="mine_name"/>
			<param name="mineid">
			</param>
		</member>
		<member name="M:UpdatePlayer3DTextLabelText" syntax="UpdatePlayer3DTextLabelText(playerid, textid, colour, text[])">
			<attribute name="native"/>
			<referrer name="va_UpdatePlayer3DTextLabelText"/>
			<param name="playerid">
				The ID of the player for which the 3D Text Label was created
			</param>
			<param name="textid">
				<paraminfo>PlayerText3D </paraminfo>
				The 3D Text Label you want to update
			</param>
			<param name="colour">
				The colour the 3D Text Label should have from now on
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The new text which the 3D Text Label should have from now on
			</param>
			<library>a_players</library>  <summary>Updates a player 3D Text Label's text and colour.</summary>          <seealso name="Create3DTextLabel" />  <seealso name="Delete3DTextLabel" />  <seealso name="Attach3DTextLabelToPlayer" />  <seealso name="Attach3DTextLabelToVehicle" />  <seealso name="Update3DTextLabelText" />  <seealso name="CreatePlayer3DTextLabel" />  <seealso name="DeletePlayer3DTextLabel" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>If <paramref name="text" /> is empty, the server/clients next to the text might crash!</remarks> 
		</member>
		<member name="M:UpdatePlayerLabel" syntax="UpdatePlayerLabel(playerid)">
			<stacksize value="375"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="pAFK"/>
			<dependency name="pGang"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRankColor"/>
			<dependency name="pOwnRankHave"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_fps"/>
			<dependency name="player_label"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UpdatePlayerVirtualWorld" syntax="UpdatePlayerVirtualWorld(playerid)">
			<stacksize value="5"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="s_World"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UpdatePrivCarLabel" syntax="UpdatePrivCarLabel(privcarid)">
			<stacksize value="365"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="PrivCarTimer"/>
			<referrer name="OnDialogGieldaBuy"/>
			<dependency name="GetEngineColor"/>
			<dependency name="GetEngineName"/>
			<dependency name="UpdatePrivCarLabel"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="format"/>
			<dependency name="pVehDist"/>
			<dependency name="pVehEngine"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykieta"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehEtykietaName"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehGas"/>
			<dependency name="pVehGasEnabled"/>
			<dependency name="pVehModel"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehOwnerName"/>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:UpdateQuizDraw" syntax="UpdateQuizDraw(playerid)">
			<stacksize value="262"/>
			<referrer name="SetPlayerDraw"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="format"/>
			<dependency name="quizData"/>
			<dependency name="quiz_buffer"/>
			<dependency name="quiz_saveBuffer"/>
			<dependency name="quiz_type"/>
			<dependency name="tdQuiz"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UpdateRC" syntax="UpdateRC()">
			<stacksize value="16"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_RC"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="RaceMapIcon"/>
			<dependency name="RacePlacement"/>
			<dependency name="RaceStatusData"/>
			<dependency name="RaceStatusData"/>
			<dependency name="RaceTimer"/>
			<dependency name="RaceVehicle"/>
			<dependency name="RaceVehicleBack"/>
			<dependency name="SORT_DESC"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SortDeepArray_Entry"/>
			<dependency name="StopRC"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="g_sort_cmp_array"/>
			<dependency name="msg"/>
			<dependency name="pGame"/>
			<dependency name="race_id"/>
			<dependency name="race_status"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
		</member>
		<member name="M:UpdateSK" syntax="UpdateSK()">
			<stacksize value="13"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="CheckBet"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_SK"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_Random_Internal"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SiankoTimer"/>
			<dependency name="StopSK"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WEAPON_SILENCED"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="giveWeapon"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
		</member>
		<member name="M:UpdateSM" syntax="UpdateSM()">
			<stacksize value="13"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CheckBet"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_SM"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="StopSM"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_SM"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="pGame"/>
			<dependency name="sumoVehicle"/>
			<dependency name="tdInfo"/>
		</member>
		<member name="M:UpdateSyncData" syntax="UpdateSyncData(playerid)">
			<stacksize value="6"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="MakePlayerFacePlayer"/>
			<dependency name="GetPlayerState"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="SendLastSyncPacket"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UpdateVehicleDamageStatus" syntax="UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ac_UpdateVehicleDamageStatus"/>
			<referrer name="orig_UpdateVehicleDamageStatus"/>
			<param name="vehicleid">
				The ID of the vehicle to set the damage of
			</param>
			<param name="panels">
				A set of bits containing the panel damage status
			</param>
			<param name="doors">
				A set of bits containing the door damage status
			</param>
			<param name="lights">
				A set of bits containing the light damage status
			</param>
			<param name="tires">
				A set of bits containing the tire damage status
			</param>
			<library>a_vehicles</library>  <summary>Sets the various visual damage statuses of a vehicle, such as popped tires, broken lights  and damaged panels.</summary>            <seealso name="SetVehicleHealth" />  <seealso name="GetVehicleHealth" />  <seealso name="RepairVehicle" />  <seealso name="GetVehicleDamageStatus" />  <seealso name="OnVehicleDamageStatusUpdate" />  <remarks>This function was added in <b>SA-MP 0.3a</b> and will not work in earlier versions!</remarks>  <remarks>  <b>Door states:</b><br />  <ul>  <li><b><c>0x000000FF</c></b> - hood</li>  <li><b><c>0x0000FF00</c></b> - trunk</li>  <li><b><c>0x00FF0000</c></b> - drivers door</li>  <li><b><c>0xFF000000</c></b> - co-drivers door</li>  <li>byte meaning:</li>  <li><b><c>0x1</c></b> - is opened</li>  <li><b><c>0x2</c></b> - is damaged</li>  <li><b><c>0x4</c></b> - is removed</li>  <li>other bytes are unused</li>  </ul>  </remarks>  <remarks>  <b>Light states:</b><br />  <ul>  <li><b><c>0x01</c></b> - front left broken</li>  <li><b><c>0x04</c></b> - front right broken</li>  <li><b><c>0x40</c></b> - back both broken</li>  </ul>  </remarks>  <remarks>  <b>Tire states:</b><br />  <ul>  <li><b><c>0x1</c></b> - back right popped</li>  <li><b><c>0x2</c></b> - front right popped</li>  <li><b><c>0x4</c></b> - back left popped</li>  <li><b><c>0x8</c></b> - front left popped</li>  <li>only check the right states for bikes</li>  </ul>  </remarks> 
		</member>
		<member name="M:UpdateWG" syntax="UpdateWG()">
			<stacksize value="9"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="GAME_WG"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="StopWG"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WarZonePosition"/>
			<dependency name="true"/>
		</member>
		<member name="M:UpdateWP" syntax="UpdateWP()">
			<stacksize value="17"/>
			<referrer name="GameStartedTimer"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_WP"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="StopWP"/>
			<dependency name="Teleport"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="VW_WP"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="pGame"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
			<dependency name="wpArenaID"/>
			<dependency name="wpFallCount"/>
			<dependency name="wpTimer"/>
		</member>
		<member name="M:UpdateZP" syntax="UpdateZP()">
			<stacksize value="9"/>
			<referrer name="GameStartedTimer"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="StopZP"/>
			<dependency name="SwitchZP"/>
			<dependency name="UpdateGameStatus"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="format"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
		</member>
		<member name="M:UsePlayerPedAnims" syntax="UsePlayerPedAnims()">
			<attribute name="native"/>
			<referrer name="ac_UsePlayerPedAnims"/>
			<library>a_samp</library>  <summary>Uses standard player walking animation (animation of the CJ skin) instead of custom animations  for every skin (e.g.  skating for skater skins).</summary>  <seealso name="ApplyAnimation" />  <seealso name="ClearAnimations" />  <remarks>Only works when placed under <a href="#OnGameModeInit">OnGameModeInit</a>.</remarks>  <remarks>Not using this function causes two-handed weapons (not dual-handed - a single weapon that  is held by both hands) to be held in only one hand.</remarks> 
		</member>
		<member name="M:Utils_ChaosMod" syntax="Utils_ChaosMod(playerid)">
			<stacksize value="8"/>
			<referrer name="Android_OnAndroidTimer"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVelocity"/>
			<dependency name="SetPlayerWorldBounds"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SetVehicleVelocity"/>
			<dependency name="random"/>
			<param name="playerid">
				Player to mess up
			</param>
			  <remarks>  Make some random effects on the player.  </remarks> 
		</member>
		<member name="M:Utils_PreSort" syntax="Utils_PreSort(arr[], num)">
			<stacksize value="4"/>
			<referrer name="Mode"/>
			<referrer name="Median"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array to sort.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <remarks>  Sorts the array in place.  Uses bubble sort because it is easy and fast for  pre-sorted arrays (which the callers are likely to be).  </remarks> 
		</member>
		<member name="M:VALID_PLAYERID" syntax="VALID_PLAYERID(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="playerid">
				The player to check.
			</param>
			  <returns>  Is this a valid playerid (NOT, is the player connected).  </returns> 
		</member>
		<member name="M:VA_OnCodeInit" syntax="VA_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="__YSI_g_sHeapStart"/>
			<dependency name="__YSI_g_sUnusedStart"/>
			<dependency name="cellbits"/>
		</member>
		<member name="M:Vacex_Bonus" syntax="Vacex_Bonus(playerid)">
			<attribute name="public"/>
			<stacksize value="41"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ValstrWithOrdinal" syntax="ValstrWithOrdinal(n)">
			<stacksize value="37"/>
			<referrer name="OnRuntimeError"/>
			<dependency name="ValstrWithOrdinal"/>
			<dependency name="strcat"/>
			<dependency name="valstr"/>
			<param name="n">
				The number to convert to a string with ordinal.
			</param>
			  <returns>  Stringises a number, then adds <c>st/nd/rd/th</c>.  </returns> 
		</member>
		<member name="M:VaultHeistTimer" syntax="VaultHeistTimer()">
			<attribute name="public"/>
			<stacksize value="267"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ConvertTime"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="VW_HEIST"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="bankHeistCountDown"/>
			<dependency name="bankHeistEnabled"/>
			<dependency name="bankHeistGas"/>
			<dependency name="bankHeistHacker"/>
			<dependency name="bankHeistLabel"/>
			<dependency name="bankHeistTimer"/>
			<dependency name="bankHeistVault"/>
			<dependency name="bankHeistVaultLabel"/>
			<dependency name="bankHeistVaultOpen"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="heistRobbed"/>
			<dependency name="heist_kurwa"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_countdown"/>
			<dependency name="player_nickname"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vaultPositionData"/>
			<dependency name="vaultPositionData"/>
			<dependency name="vault_gas"/>
			<dependency name="vault_label"/>
		</member>
		<member name="M:VectorSize" syntax="VectorSize(x, y, z)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_NormalizeVector"/>
			<referrer name="T3_NormCrossProduct"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_ShiftVectorRotation"/>
			<referrer name="T3_ShiftOffsetToPosition"/>
			<referrer name="T3_ShiftLineRotationVector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="ac_GetSpeed"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="GetDistanceBetweenPoints3D"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The vector's magnitude on the x axis
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The vector's magnitude on the y axis
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The vector's magnitude on the z axis
			</param>
			<library>a_samp</library>  <summary>Returns the norm (length) of the provided vector.</summary>        <seealso name="GetPlayerDistanceFromPoint" />  <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="floatsqroot" />  <remarks>This function was added in <b>SA-MP 0.3z</b> and will not work in earlier versions!</remarks>  <returns>The norm (length) of the provided vector as a float.</returns> 
		</member>
		<member name="M:WC_AddPlayerClass" syntax="WC_AddPlayerClass(modelid, spawn_x, spawn_y, spawn_z, z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<stacksize value="15"/>
			<referrer name="Init_Map"/>
			<dependency name="acc_AddPlayerClass"/>
			<dependency name="e_Ammo1"/>
			<dependency name="e_Ammo2"/>
			<dependency name="e_Ammo3"/>
			<dependency name="e_PosX"/>
			<dependency name="e_PosY"/>
			<dependency name="e_PosZ"/>
			<dependency name="e_Rot"/>
			<dependency name="e_Skin"/>
			<dependency name="e_Team"/>
			<dependency name="e_Weapon1"/>
			<dependency name="e_Weapon2"/>
			<dependency name="e_Weapon3"/>
			<dependency name="s_ClassSpawnInfo"/>
			<dependency name="s_ClassSpawnInfo"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:WC_AddPlayerClassEx" syntax="WC_AddPlayerClassEx(teamid, modelid, spawn_x, spawn_y, spawn_z, z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<stacksize value="16"/>
			<dependency name="acc_AddPlayerClassEx"/>
			<dependency name="e_Ammo1"/>
			<dependency name="e_Ammo2"/>
			<dependency name="e_Ammo3"/>
			<dependency name="e_PosX"/>
			<dependency name="e_PosY"/>
			<dependency name="e_PosZ"/>
			<dependency name="e_Rot"/>
			<dependency name="e_Skin"/>
			<dependency name="e_Team"/>
			<dependency name="e_Weapon1"/>
			<dependency name="e_Weapon2"/>
			<dependency name="e_Weapon3"/>
			<dependency name="s_ClassSpawnInfo"/>
			<dependency name="s_ClassSpawnInfo"/>
			<param name="teamid">
			</param>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:WC_AddStaticVehicle" syntax="WC_AddStaticVehicle(modelid, x, y, z, angle, color1, color2)">
			<stacksize value="11"/>
			<dependency name="acc_AddStaticVehicle"/>
			<dependency name="s_VehicleAlive"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:WC_AddStaticVehicleEx" syntax="WC_AddStaticVehicleEx(modelid, x, y, z, angle, color1, color2, respawn_delay, addsiren)">
			<stacksize value="13"/>
			<dependency name="acc_AddStaticVehicleEx"/>
			<dependency name="s_VehicleAlive"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
			</param>
		</member>
		<member name="M:WC_ApplyAnimation" syntax="WC_ApplyAnimation(playerid, animlib[], animname[], fDelta, loop, lockx, locky, freeze, time, forcesync)">
			<stacksize value="12"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="LoopingAnim"/>
			<referrer name="StopLoopingAnim"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0Z"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="PrepareMining"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="s_IsDying"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fDelta">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="loop">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="lockx">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="locky">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="freeze">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="forcesync">
			</param>
		</member>
		<member name="M:WC_Bar_Calculate" syntax="WC_Bar_Calculate(width, max, value)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="UpdateHealthBar"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="width">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_CbugPunishment" syntax="WC_CbugPunishment(playerid, weapon)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="ClearAnimations"/>
			<dependency name="FreezeSyncPacket"/>
			<dependency name="IsPlayerDying"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="weapon">
			</param>
		</member>
		<member name="M:WC_ClearAnimations" syntax="WC_ClearAnimations(playerid, forcesync)">
			<stacksize value="4"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="StopLoopingAnim"/>
			<referrer name="MagazynPacked"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TakeTrumna"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="CancelMining"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0q"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="Vacex_Bonus"/>
			<dependency name="ClearAnimations"/>
			<dependency name="GetTickCount"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastStop"/>
			<param name="playerid">
			</param>
			<param name="forcesync">
			</param>
		</member>
		<member name="M:WC_CreatePlayerTextDraw" syntax="WC_CreatePlayerTextDraw(playerid, x, y, text[])">
			<tagname value="PlayerText"/>
			<stacksize value="7"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="false"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:WC_CreateVehicle" syntax="WC_CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay, addsiren)">
			<stacksize value="13"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="Taxi_Start"/>
			<referrer name="Drwal_Start"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="StartRC"/>
			<referrer name="CreateSumoObjects"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="RunObjects"/>
			<dependency name="acc_CreateVehicle"/>
			<dependency name="s_VehicleAlive"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_DamageFeedUpdate" syntax="WC_DamageFeedUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DamageFeedUpdate"/>
			<dependency name="IsDamageFeedActive"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="s_DamageFeedTimer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_DeathSkipEnd" syntax="WC_DeathSkipEnd(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="acc_GivePlayerWeapon"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="acc_SetPlayerSpecialAction"/>
			<dependency name="acc_TogglePlayerControllable"/>
			<dependency name="e_Weapon"/>
			<dependency name="e_WeaponAmmo"/>
			<dependency name="e_WeaponId"/>
			<dependency name="s_SyncData"/>
			<dependency name="s_SyncData"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_DelayedDeath" syntax="WC_DelayedDeath(playerid, issuerid, reason)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="WC_OnPlayerDeath"/>
			<dependency name="s_DelayedDeathTimer"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:WC_DestroyVehicle" syntax="WC_DestroyVehicle(vehicleid)">
			<stacksize value="4"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="Truck_Stop"/>
			<referrer name="@yH_DestroyVehicle@0K"/>
			<referrer name="DestroyPrivCar"/>
			<referrer name="ExitPraca"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerDeath@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="MineCheckTimer"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="KillTimer"/>
			<dependency name="acc_DestroyVehicle"/>
			<dependency name="false"/>
			<dependency name="s_LastVehicleShooter"/>
			<dependency name="s_VehicleAlive"/>
			<dependency name="s_VehicleRespawnTimer"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:WC_GetPlayerArmour" syntax="WC_GetPlayerArmour(playerid, &amp;armour)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="CheckDuel"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="RoyalePickup"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="SavePlayerPosition"/>
			<dependency name="s_PlayerArmour"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:WC_GetPlayerHealth" syntax="WC_GetPlayerHealth(playerid, &amp;health)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="CheckDuel"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="CheckBaseTimer"/>
			<referrer name="CheckMysliwyZone"/>
			<referrer name="CheckGrzybiarzZone"/>
			<referrer name="UpdateChowany"/>
			<referrer name="UpdateZP"/>
			<referrer name="UpdateBTR"/>
			<referrer name="RoyalePickup"/>
			<referrer name="UpdateWG"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="SavePlayerPosition"/>
			<dependency name="s_PlayerHealth"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:WC_GetPlayerState" syntax="WC_GetPlayerState(playerid)">
			<stacksize value="3"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0c"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="UpdateSM"/>
			<referrer name="CheckBet"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="pc_cmd_tune"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="SavePlayerPosition"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<dependency name="GetPlayerState"/>
			<dependency name="PLAYER_STATE_WASTED"/>
			<dependency name="s_IsDying"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_GetPlayerTeam" syntax="WC_GetPlayerTeam(playerid)">
			<stacksize value="3"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="s_PlayerTeam"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_GetPlayerVirtualWorld" syntax="WC_GetPlayerVirtualWorld(playerid)">
			<stacksize value="4"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="CountPlayerHeist"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="SavePlayerPosition"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="WC_OnPlayerDamage"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="s_World"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_GetWeaponName" syntax="WC_GetWeaponName(weaponid, weapon[], len)">
			<stacksize value="6"/>
			<referrer name="ReturnWeaponName"/>
			<referrer name="GetRejectedHit"/>
			<referrer name="DamageFeedUpdateText"/>
			<dependency name="format"/>
			<dependency name="g_WeaponName"/>
			<dependency name="g_WeaponName"/>
			<dependency name="strunpack"/>
			<param name="weaponid">
			</param>
			<param name="weapon">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:WC_IsPlayerInCheckpoint" syntax="WC_IsPlayerInCheckpoint(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerInCheckpoint"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_IsPlayerInRaceCheckpoint" syntax="WC_IsPlayerInRaceCheckpoint(playerid)">
			<stacksize value="4"/>
			<dependency name="IsPlayerInRaceCheckpoint"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_IsPlayerPaused" syntax="WC_IsPlayerPaused(playerid)">
			<stacksize value="2"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="SendLastSyncPacket"/>
			<dependency name="GetTickCount"/>
			<dependency name="s_LastUpdate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_IsPlayerSpawned" syntax="WC_IsPlayerSpawned(playerid)">
			<stacksize value="3"/>
			<referrer name="WC_IsPlayerInCheckpoint"/>
			<referrer name="WC_IsPlayerInRaceCheckpoint"/>
			<referrer name="WC_SetPlayerSpecialAction"/>
			<referrer name="ac_OnPlayerPickUpPickup"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="ac_OnPlayerEnterCheckpoint"/>
			<referrer name="ac_OnPlayerEnterRaceCheckpoint"/>
			<referrer name="InflictDamage"/>
			<dependency name="GetPlayerState"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="PLAYER_STATE_SPAWNED"/>
			<dependency name="false"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="s_IsDying"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_IsValidVehicle" syntax="WC_IsValidVehicle(vehicleid)">
			<attribute name="native"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:WC_KillVehicle" syntax="WC_KillVehicle(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ac_OnVehicleDeath"/>
			<dependency name="false"/>
			<dependency name="s_VehicleRespawnTimer"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:WC_OnDeadVehicleSpawn" syntax="WC_OnDeadVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="s_VehicleRespawnTimer"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:WC_OnFilterScriptExit" syntax="WC_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="GEOLITE_OnFilterScriptExit"/>
		</member>
		<member name="M:WC_OnFilterScriptInit" syntax="WC_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="GEOLITE_OnFilterScriptInit"/>
		</member>
		<member name="M:WC_OnGameModeExit" syntax="WC_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="_ALS"/>
			<referrer name="GEOLITE_OnGameModeExit"/>
			<dependency name="dbconn"/>
			<dependency name="mysql_close"/>
		</member>
		<member name="M:WC_OnGameModeInit" syntax="WC_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="_ALS"/>
			<referrer name="GEOLITE_OnGameModeInit"/>
			<dependency name="CA_Init"/>
			<dependency name="DisableNameTagLOS"/>
			<dependency name="EnableAntiCheat"/>
			<dependency name="EnableAntiNOP"/>
			<dependency name="Init_MySQL"/>
			<dependency name="SetDamageSounds"/>
			<dependency name="SetDisableSyncBugs"/>
			<dependency name="SetVehiclePassengerDamage"/>
			<dependency name="Streamer_SetVisibleItems"/>
			<dependency name="acc_DisableInteriorEnterExits"/>
			<dependency name="acc_EnableStuntBonusForAll"/>
			<dependency name="acc_UsePlayerPedAnims"/>
			<dependency name="false"/>
			<dependency name="true"/>
		</member>
		<member name="M:WC_OnInvalidWeaponDamage" syntax="WC_OnInvalidWeaponDamage(playerid, damagedid, amount, weaponid, bodypart, error, given)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnInvalidWeaponDamage"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
			<param name="error">
			</param>
			<param name="given">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_OnPlayerConnect" syntax="WC_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerConnect"/>
			<dependency name="CreatePlayerDesign"/>
			<dependency name="CreatePlayerProgressBar"/>
			<dependency name="FindAccount"/>
			<dependency name="FishBar"/>
			<dependency name="FuelBar"/>
			<dependency name="GPCI"/>
			<dependency name="GangBar"/>
			<dependency name="GetPlayerAutonomousSystem"/>
			<dependency name="GetPlayerCity"/>
			<dependency name="GetPlayerCountry"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="GetPlayerName"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="LevelBar"/>
			<dependency name="PoolBar"/>
			<dependency name="RemoveObjects"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SlotsBar"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="animationList"/>
			<dependency name="animationList"/>
			<dependency name="connects"/>
			<dependency name="false"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_city"/>
			<dependency name="player_country"/>
			<dependency name="player_ipaddress"/>
			<dependency name="player_isp"/>
			<dependency name="player_nickname"/>
			<dependency name="player_serial"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_OnPlayerDamage" syntax="WC_OnPlayerDamage(&amp;playerid, &amp;amount, &amp;issuerid, &amp;weapon, &amp;bodypart)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerDamage"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ChowanySzukajacy"/>
			<dependency name="EVENT_TYPE_NODM"/>
			<dependency name="EVENT_TYPE_NONE"/>
			<dependency name="EventStarted"/>
			<dependency name="EventType"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_CH"/>
			<dependency name="GAME_DA"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameStarted"/>
			<dependency name="IsPlayerInDynamicArea"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="VW_BANK"/>
			<dependency name="VW_HEIST"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="da_damage"/>
			<dependency name="da_id"/>
			<dependency name="deathArenaKills"/>
			<dependency name="deathArenaKills"/>
			<dependency name="gangData"/>
			<dependency name="gang_battleZone"/>
			<dependency name="gettime"/>
			<dependency name="pAFK"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pDuelSync"/>
			<dependency name="pGame"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGangSparInitiator"/>
			<dependency name="pGangSparSettings"/>
			<dependency name="pGangWarAttacker"/>
			<dependency name="pGangWarDamage"/>
			<dependency name="pGangWarDamage"/>
			<dependency name="pGangWarTime"/>
			<dependency name="pGangZoneArea"/>
			<dependency name="pGangZoneRectangle"/>
			<dependency name="pNoDM"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_battleTimer"/>
			<dependency name="player_god"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_zone_damage"/>
			<dependency name="sparingKillerData"/>
			<dependency name="sparingKillerData"/>
			<dependency name="sparing_damage"/>
			<dependency name="sparing_playerid"/>
			<param name="playerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="amount">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="issuerid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="weapon">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="bodypart">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:WC_OnPlayerDamageDone" syntax="WC_OnPlayerDamageDone(playerid, amount, issuerid, weapon, bodypart)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerDamageDone"/>
			<param name="playerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="issuerid">
			</param>
			<param name="weapon">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:WC_OnPlayerDeath" syntax="WC_OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="InflictDamage"/>
			<referrer name="WC_DelayedDeath"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="ACH_DEATHS"/>
			<dependency name="ACH_KILLS"/>
			<dependency name="CheckDuelKiller"/>
			<dependency name="CheckGangAchievement"/>
			<dependency name="CheckQuest"/>
			<dependency name="FALSE"/>
			<dependency name="GANG_ULEP_KIBICE"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="GangUlepszeniaLevel"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="Log"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_PlayerSpectatePlayer"/>
			<dependency name="WC_SendDeathMessage"/>
			<dependency name="WC_TogglePlayerSpectating"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="achievement"/>
			<dependency name="addGangScore"/>
			<dependency name="false"/>
			<dependency name="gangData"/>
			<dependency name="gang_deaths"/>
			<dependency name="gang_kills"/>
			<dependency name="giveGangBudget"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGangSparInitiator"/>
			<dependency name="pGangSparPoints"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_battleTimer"/>
			<dependency name="player_killstreak"/>
			<dependency name="player_nickname"/>
			<dependency name="sparingKillerData"/>
			<dependency name="sparing_kills"/>
			<dependency name="tdLicznik"/>
			<dependency name="togglePlayerTextDraw"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:WC_OnPlayerDeathFinished" syntax="WC_OnPlayerDeathFinished(playerid, cancelable)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerDeathFinished"/>
			<param name="playerid">
			</param>
			<param name="cancelable">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_OnPlayerDisconnect" syntax="WC_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="278"/>
			<automaton name="_ALS"/>
			<referrer name="MS_OnPlayerDisconnect"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyPrivCar"/>
			<dependency name="Dialog_Hide"/>
			<dependency name="GetQuitReason"/>
			<dependency name="GetQuitReason"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Iterator@Player"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="Log"/>
			<dependency name="ResetPlayerData"/>
			<dependency name="SaveGang"/>
			<dependency name="SavePlayerStats"/>
			<dependency name="SetPlayerDraw"/>
			<dependency name="UpdateGangBox"/>
			<dependency name="false"/>
			<dependency name="msgAdmins"/>
			<dependency name="pGang"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehSpawned"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_city"/>
			<dependency name="player_country"/>
			<dependency name="player_ipaddress"/>
			<dependency name="player_isp"/>
			<dependency name="player_label"/>
			<dependency name="player_logged"/>
			<dependency name="player_nickname"/>
			<dependency name="player_teleportRequest"/>
			<dependency name="player_teleportTimer"/>
			<dependency name="toLowerCase"/>
			<dependency name="toLowerCase"/>
			<dependency name="toUpperCase"/>
			<dependency name="toUpperCase"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:WC_OnPlayerEnterCheckpoint" syntax="WC_OnPlayerEnterCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerEnterCheckpoint"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_OnPlayerEnterRaceCheckpoint" syntax="WC_OnPlayerEnterRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_OnPlayerEnterVehicle" syntax="WC_OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:WC_OnPlayerExitVehicle" syntax="WC_OnPlayerExitVehicle(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerExitVehicle"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:WC_OnPlayerKeyStateChange" syntax="WC_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="KEY_CTRL_BACK"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="KEY_SUBMISSION"/>
			<dependency name="KEY_YES"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PlayerFueling"/>
			<dependency name="RemoveVehicleComponent"/>
			<dependency name="SPECIAL_ACTION_PISSING"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ShowSparingPanel"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="false"/>
			<dependency name="math_random"/>
			<dependency name="pJob"/>
			<dependency name="pJobUlepszenia"/>
			<dependency name="pSpectate"/>
			<dependency name="pc_cmd_flip"/>
			<dependency name="pc_cmd_napraw"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_bonus_vcxz"/>
			<dependency name="player_sparingGangSpec"/>
			<dependency name="player_sparspec"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:WC_OnPlayerLeaveCheckpoint" syntax="WC_OnPlayerLeaveCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerLeaveCheckpoint"/>
			<referrer name="PlayerDeath"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_OnPlayerLeaveRaceCheckpoint" syntax="WC_OnPlayerLeaveRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="PlayerDeath"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_OnPlayerPickUpPickup" syntax="WC_OnPlayerPickUpPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerPickUpPickup"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:WC_OnPlayerPrepareDeath" syntax="WC_OnPlayerPrepareDeath(playerid, animlib[], animname[], &amp;anim_lock, &amp;respawn_time)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerPrepareDeath"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="anim_lock">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="respawn_time">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:WC_OnPlayerRequestClass" syntax="WC_OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<dependency name="SetPlayerCameraLookAt"/>
			<dependency name="SetPlayerCameraPos"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="Teleport"/>
			<dependency name="VW_WYBIERALKA"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="ac_Streamer_UpdateEx"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:WC_OnPlayerSpawn" syntax="WC_OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckGangBase"/>
			<dependency name="DuelRespawn"/>
			<dependency name="EnableSpawnKill"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_DA"/>
			<dependency name="GAME_GG"/>
			<dependency name="GAME_WG"/>
			<dependency name="GameStarted"/>
			<dependency name="GangBaseSettings"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="JailPlayer"/>
			<dependency name="JoinPlayerArena"/>
			<dependency name="KickEx"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="Log"/>
			<dependency name="RandomSpawn"/>
			<dependency name="RespawnDA"/>
			<dependency name="RespawnGG"/>
			<dependency name="RespawnWG"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="ShowNameTagForAll"/>
			<dependency name="SparingRespawn"/>
			<dependency name="Teleport"/>
			<dependency name="base_spawn"/>
			<dependency name="false"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangBasesData"/>
			<dependency name="pArena"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pGame"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pStalyInterior"/>
			<dependency name="pStalyPos"/>
			<dependency name="pStalyPos"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_battleTimer"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_lastInterior"/>
			<dependency name="player_lastPos"/>
			<dependency name="player_logged"/>
			<dependency name="player_nickname"/>
			<dependency name="player_respawn"/>
			<dependency name="player_skin"/>
			<dependency name="player_spawnData"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_OnPlayerStateChange" syntax="WC_OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="44"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="FindKeyPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="SetTimerEx"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehiclePrivate"/>
			<dependency name="VehiclePrivateID"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="catstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="pVeh"/>
			<dependency name="pVehID"/>
			<dependency name="pVehOwner"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehSell"/>
			<dependency name="pVehSellCost"/>
			<dependency name="pVehSellPoint"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="tdLicznik"/>
			<dependency name="togglePlayerTextDraw"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:WC_OnPlayerStreamIn" syntax="WC_OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="Iter_OnPlayerStreamIn"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:WC_OnPlayerUpdate" syntax="WC_OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="GetPlayerDrunkLevel"/>
			<dependency name="GetPlayerKeys"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehSpeed"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SetPlayerDrunkLevel"/>
			<dependency name="UpdateEditorAttachment"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="acc_RepairVehicle"/>
			<dependency name="format"/>
			<dependency name="pVehEdit"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_drunk"/>
			<dependency name="player_fps"/>
			<dependency name="player_god"/>
			<dependency name="strx"/>
			<dependency name="tdLicznik"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_OnPlayerUseVendingMachine" syntax="WC_OnPlayerUseVendingMachine(playerid, &amp;health_given)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerUseVendingMachine"/>
			<param name="playerid">
			</param>
			<param name="health_given">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:WC_OnPlayerWeaponShot" syntax="WC_OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="hittype">
			</param>
			<param name="hitid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_OnRejectedHit" syntax="WC_OnRejectedHit(playerid, hit[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnRejectedHit"/>
			<param name="playerid">
			</param>
			<param name="hit">
				<paraminfo> [33] </paraminfo>
			</param>
		</member>
		<member name="M:WC_OnVehicleDeath" syntax="WC_OnVehicleDeath(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnVehicleDeath"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:WC_OnVehicleSpawn" syntax="WC_OnVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ac_OnVehicleSpawn"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:WC_PlayerDeathRespawn" syntax="WC_PlayerDeathRespawn(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="FreezeSyncPacket"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnPlayerDeathFinished"/>
			<dependency name="SetFakeFacingAngle"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="acc_SetPlayerPos"/>
			<dependency name="acc_TogglePlayerSpectating"/>
			<dependency name="false"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_TrueDeath"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_PlayerSpectatePlayer" syntax="WC_PlayerSpectatePlayer(playerid, targetplayerid, mode)">
			<stacksize value="5"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<referrer name="WC_OnPlayerDeath"/>
			<dependency name="PlayerSpectatePlayer"/>
			<dependency name="s_Spectating"/>
			<param name="playerid">
			</param>
			<param name="targetplayerid">
			</param>
			<param name="mode">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawAlignment" syntax="WC_PlayerTextDrawAlignment(playerid, text, alignment)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawAlignment"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="alignment">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawBackgroundColo" syntax="WC_PlayerTextDrawBackgroundColo(playerid, text, color)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawBackgroundColor"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawBoxColor" syntax="WC_PlayerTextDrawBoxColor(playerid, text, color)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="Fortune_Start"/>
			<referrer name="setPlayerTextDrawColor"/>
			<dependency name="PlayerTextDrawBoxColor"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawColor" syntax="WC_PlayerTextDrawColor(playerid, text, color)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="_@yHSetPlayerColor@13"/>
			<referrer name="setPlayerTextDrawColor"/>
			<dependency name="PlayerTextDrawColor"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawDestroy" syntax="WC_PlayerTextDrawDestroy(playerid, text)">
			<stacksize value="4"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawFont" syntax="WC_PlayerTextDrawFont(playerid, text, font)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="font">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawHide" syntax="WC_PlayerTextDrawHide(playerid, text)">
			<stacksize value="4"/>
			<referrer name="HideLevelBar"/>
			<referrer name="HideAchievement"/>
			<referrer name="CheckQuest"/>
			<referrer name="StopQuiz"/>
			<referrer name="CheckDuel"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="Truck_Stop"/>
			<referrer name="SaveEditorAttachment"/>
			<referrer name="StopFueling"/>
			<referrer name="ExitPraca"/>
			<referrer name="_@yHOnPlayerPickUpPickup@0c"/>
			<referrer name="Slots_Hide"/>
			<referrer name="Fortune_Hide"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopZP"/>
			<referrer name="StopDA"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="UpdateWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="_@yHSetPlayerColor@13"/>
			<referrer name="togglePlayerTextDraw"/>
			<referrer name="hideGameDraw"/>
			<referrer name="HideMissionDraw"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="ResetMoneyTD"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawLetterSize" syntax="WC_PlayerTextDrawLetterSize(playerid, text, x, y)">
			<stacksize value="6"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawSetOutline" syntax="WC_PlayerTextDrawSetOutline(playerid, text, size)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawSetPreviewMode" syntax="WC_PlayerTextDrawSetPreviewMode(playerid, text, modelindex)">
			<stacksize value="5"/>
			<dependency name="PlayerTextDrawSetPreviewModel"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="modelindex">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawSetPreviewRot" syntax="WC_PlayerTextDrawSetPreviewRot(playerid, text, fRotX, fRotY, fRotZ, fZoom)">
			<stacksize value="8"/>
			<dependency name="PlayerTextDrawSetPreviewRot"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZoom">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawSetPreviewVehC" syntax="WC_PlayerTextDrawSetPreviewVehC(playerid, text, color1, color2)">
			<stacksize value="6"/>
			<dependency name="PlayerTextDrawSetPreviewVehCol"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawSetProportiona" syntax="WC_PlayerTextDrawSetProportiona(playerid, text, set)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawSetProportional"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawSetSelectable" syntax="WC_PlayerTextDrawSetSelectable(playerid, text, set)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawSetSelectable"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawSetShadow" syntax="WC_PlayerTextDrawSetShadow(playerid, text, size)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawSetString" syntax="WC_PlayerTextDrawSetString(playerid, text, string[])">
			<stacksize value="5"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="UpdateQuizDraw"/>
			<referrer name="StartQuiz"/>
			<referrer name="Slots_RefreshTD"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="playerTextDrawSetString"/>
			<referrer name="showGameDraw"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="SecondTimer"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawShow" syntax="WC_PlayerTextDrawShow(playerid, text)">
			<stacksize value="4"/>
			<referrer name="addLevelScore"/>
			<referrer name="achievement"/>
			<referrer name="StartQuiz"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogJob"/>
			<referrer name="Slots_Start"/>
			<referrer name="Fortune_Start"/>
			<referrer name="EnterBusiness"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartDA"/>
			<referrer name="StartRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StartGG"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="StartSK"/>
			<referrer name="StartWG"/>
			<referrer name="FindAccount"/>
			<referrer name="_@yHSetPlayerColor@13"/>
			<referrer name="togglePlayerTextDraw"/>
			<referrer name="showGameDraw"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="giveMoney"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawTextSize" syntax="WC_PlayerTextDrawTextSize(playerid, text, x, y)">
			<stacksize value="6"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_PlayerTextDrawUseBox" syntax="WC_PlayerTextDrawUseBox(playerid, text, use)">
			<stacksize value="5"/>
			<referrer name="CreatePlayerDesign"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="use">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_SecondKnifeAnim" syntax="WC_SecondKnifeAnim(playerid)">
			<attribute name="public"/>
			<stacksize value="37"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_SendDeathMessage" syntax="WC_SendDeathMessage(killer, killee, weapon)">
			<stacksize value="5"/>
			<referrer name="WC_OnPlayerDeath"/>
			<dependency name="SendDeathMessage"/>
			<dependency name="WEAPON_DROWN"/>
			<dependency name="WEAPON_M4"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="WEAPON_ROCKETLAUNCHER"/>
			<dependency name="WEAPON_VEHICLE"/>
			<param name="killer">
			</param>
			<param name="killee">
			</param>
			<param name="weapon">
			</param>
		</member>
		<member name="M:WC_SetPlayerArmour" syntax="WC_SetPlayerArmour(playerid, armour)">
			<stacksize value="5"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="SparingRespawn"/>
			<referrer name="SparingSK"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="DeleteGodDA"/>
			<referrer name="StartRC"/>
			<referrer name="StartBTR"/>
			<referrer name="RoyalePickup"/>
			<referrer name="StartSM"/>
			<referrer name="StartGG"/>
			<referrer name="RespawnGG"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="EnableSpawnKill"/>
			<referrer name="SetHealth"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerMaxArmour"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_SetPlayerHealth" syntax="WC_SetPlayerHealth(playerid, health, armour)">
			<stacksize value="5"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="WC_VendingMachineUsed"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="CheckHeistVault"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="CheckBaseTimer"/>
			<referrer name="SparingRespawn"/>
			<referrer name="SparingSK"/>
			<referrer name="CheckMysliwyZone"/>
			<referrer name="CheckGrzybiarzZone"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StartZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="DeleteGodDA"/>
			<referrer name="StartRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="RoyalePickup"/>
			<referrer name="StartSM"/>
			<referrer name="StartGG"/>
			<referrer name="RespawnGG"/>
			<referrer name="UpdateWG"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kill"/>
			<referrer name="LoadPlayerPosition"/>
			<referrer name="EnableSpawnKill"/>
			<referrer name="SetHealth"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="InflictDamage"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxArmour"/>
			<dependency name="s_PlayerMaxHealth"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_SetPlayerPos" syntax="WC_SetPlayerPos(playerid, x, y, z)">
			<stacksize value="7"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_tpxyz"/>
			<referrer name="setPosition"/>
			<dependency name="GetTickCount"/>
			<dependency name="acc_SetPlayerPos"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastStop"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_SetPlayerPosFindZ" syntax="WC_SetPlayerPosFindZ(playerid, x, y, z)">
			<stacksize value="7"/>
			<dependency name="GetTickCount"/>
			<dependency name="acc_SetPlayerPosFindZ"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastStop"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_SetPlayerSpecialAction" syntax="WC_SetPlayerSpecialAction(playerid, actionid)">
			<stacksize value="5"/>
			<referrer name="StopLoopingAnim"/>
			<referrer name="pc_cmd_tancz"/>
			<referrer name="pc_cmd_call"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TakeTrumna"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="ExitPraca"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="pc_cmd_jetpack"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<dependency name="acc_SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
		</member>
		<member name="M:WC_SetPlayerTeam" syntax="WC_SetPlayerTeam(playerid, team)">
			<stacksize value="4"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="LoadPlayerPosition"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="s_PlayerTeam"/>
			<param name="playerid">
			</param>
			<param name="team">
			</param>
		</member>
		<member name="M:WC_SetPlayerVelocity" syntax="WC_SetPlayerVelocity(playerid, X, Y, Z)">
			<stacksize value="7"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="GetTickCount"/>
			<dependency name="acc_SetPlayerVelocity"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastStop"/>
			<param name="playerid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_SetPlayerVirtualWorld" syntax="WC_SetPlayerVirtualWorld(playerid, worldid)">
			<stacksize value="4"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<referrer name="OnDialogJob"/>
			<referrer name="StartRC"/>
			<referrer name="Teleport"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_World"/>
			<param name="playerid">
			</param>
			<param name="worldid">
			</param>
		</member>
		<member name="M:WC_SetSpawnForStreamedIn" syntax="WC_SetSpawnForStreamedIn(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="s_SpawnForStreamedIn"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_SetSpawnInfo" syntax="WC_SetSpawnInfo(playerid, team, skin, x, y, z, rotation, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<stacksize value="16"/>
			<dependency name="acc_SetSpawnInfo"/>
			<dependency name="e_Ammo1"/>
			<dependency name="e_Ammo2"/>
			<dependency name="e_Ammo3"/>
			<dependency name="e_PosX"/>
			<dependency name="e_PosY"/>
			<dependency name="e_PosZ"/>
			<dependency name="e_Rot"/>
			<dependency name="e_Skin"/>
			<dependency name="e_Team"/>
			<dependency name="e_Weapon1"/>
			<dependency name="e_Weapon2"/>
			<dependency name="e_Weapon3"/>
			<dependency name="false"/>
			<dependency name="s_PlayerClass"/>
			<dependency name="s_PlayerSpawnInfo"/>
			<dependency name="s_PlayerSpawnInfo"/>
			<dependency name="s_SpawnInfoModified"/>
			<param name="playerid">
			</param>
			<param name="team">
			</param>
			<param name="skin">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:WC_SpawnForStreamedIn" syntax="WC_SpawnForStreamedIn(playerid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<dependency name="BS_Delete"/>
			<dependency name="BS_New"/>
			<dependency name="BS_WriteValue"/>
			<dependency name="ClearAnimationsForPlayer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PR_SendRPC"/>
			<dependency name="PR_UINT32"/>
			<dependency name="SendLastSyncPacket"/>
			<dependency name="WC_RPC_REQUEST_SPAWN"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_SpawnPlayer" syntax="WC_SpawnPlayer(playerid)">
			<stacksize value="4"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="LoadPlayerPosition"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="acc_SpawnPlayer"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxHealth"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:WC_TextDrawAlignment" syntax="WC_TextDrawAlignment(text, alignment)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawAlignment"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="alignment">
			</param>
		</member>
		<member name="M:WC_TextDrawBackgroundColor" syntax="WC_TextDrawBackgroundColor(text, color)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawBackgroundColor"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:WC_TextDrawBoxColor" syntax="WC_TextDrawBoxColor(text, color)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="setTextDrawColor"/>
			<dependency name="TextDrawBoxColor"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:WC_TextDrawColor" syntax="WC_TextDrawColor(text, color)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="setTextDrawColor"/>
			<dependency name="TextDrawColor"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:WC_TextDrawCreate" syntax="WC_TextDrawCreate(x, y, text[])">
			<tagname value="Text"/>
			<stacksize value="6"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="false"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawDestroy" syntax="WC_TextDrawDestroy(text)">
			<stacksize value="3"/>
			<referrer name="StopSparing"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawFont" syntax="WC_TextDrawFont(text, font)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawFont"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="font">
			</param>
		</member>
		<member name="M:WC_TextDrawHideForAll" syntax="WC_TextDrawHideForAll(text)">
			<stacksize value="3"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="toggleTextDraw"/>
			<dependency name="TextDrawHideForAll"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawHideForPlayer" syntax="WC_TextDrawHideForPlayer(playerid, text)">
			<stacksize value="4"/>
			<referrer name="HideBudgetDraw"/>
			<referrer name="CheckGangWar"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="SparingCountDown"/>
			<referrer name="HideRankedPoints"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="Slots_Hide"/>
			<referrer name="Fortune_Hide"/>
			<referrer name="toggleTextDraw"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="ac_OnPlayerLeaveDynamicArea"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawLetterSize" syntax="WC_TextDrawLetterSize(text, x, y)">
			<stacksize value="5"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawLetterSize"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawSetOutline" syntax="WC_TextDrawSetOutline(text, size)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawSetOutline"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:WC_TextDrawSetPreviewModel" syntax="WC_TextDrawSetPreviewModel(text, modelindex)">
			<stacksize value="4"/>
			<dependency name="TextDrawSetPreviewModel"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="modelindex">
			</param>
		</member>
		<member name="M:WC_TextDrawSetPreviewRot" syntax="WC_TextDrawSetPreviewRot(text, fRotX, fRotY, fRotZ, fZoom)">
			<stacksize value="7"/>
			<dependency name="TextDrawSetPreviewRot"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZoom">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawSetPreviewVehCol" syntax="WC_TextDrawSetPreviewVehCol(text, color1, color2)">
			<stacksize value="5"/>
			<dependency name="TextDrawSetPreviewVehCol"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:WC_TextDrawSetProportional" syntax="WC_TextDrawSetProportional(text, set)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawSetSelectable" syntax="WC_TextDrawSetSelectable(text, set)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<dependency name="TextDrawSetSelectable"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawSetShadow" syntax="WC_TextDrawSetShadow(text, size)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:WC_TextDrawSetString" syntax="WC_TextDrawSetString(text, string[])">
			<stacksize value="4"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="UpdateAreny"/>
			<referrer name="UpdateGangBox"/>
			<referrer name="StartGangWar"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="UpdateGameDraw"/>
			<referrer name="textDrawSetString"/>
			<referrer name="MinuteTimer"/>
			<referrer name="PP_main"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawShowForAll" syntax="WC_TextDrawShowForAll(text)">
			<stacksize value="3"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="toggleTextDraw"/>
			<dependency name="TextDrawShowForAll"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawShowForPlayer" syntax="WC_TextDrawShowForPlayer(playerid, text)">
			<stacksize value="4"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="giveGangBudget"/>
			<referrer name="StartGangWar"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="SparingCountDown"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Slots_Start"/>
			<referrer name="Fortune_Start"/>
			<referrer name="FindAccount"/>
			<referrer name="toggleTextDraw"/>
			<referrer name="ac_OnPlayerEnterDynamicArea"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawTextSize" syntax="WC_TextDrawTextSize(text, x, y)">
			<stacksize value="5"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<referrer name="CreateGangZoneDraw"/>
			<referrer name="Sparing_Config"/>
			<dependency name="TextDrawTextSize"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WC_TextDrawUseBox" syntax="WC_TextDrawUseBox(text, use)">
			<stacksize value="4"/>
			<referrer name="CreateDesign"/>
			<referrer name="CreateGangDesign"/>
			<dependency name="TextDrawUseBox"/>
			<dependency name="s_InternalTextDraw"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="use">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_TogglePlayerControllable" syntax="WC_TogglePlayerControllable(playerid, toggle)">
			<stacksize value="5"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Stop"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="SaveEditorAttachment"/>
			<referrer name="StopFueling"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="PrepareMining"/>
			<referrer name="CancelMining"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="PutPlayerSumo"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="FreezePlayer"/>
			<referrer name="UnFreezePlayer"/>
			<referrer name="LoadPlayerPosition"/>
			<dependency name="GetTickCount"/>
			<dependency name="acc_TogglePlayerControllable"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastStop"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_TogglePlayerSpectating" syntax="WC_TogglePlayerSpectating(playerid, toggle)">
			<stacksize value="5"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="StopKillCamera"/>
			<dependency name="KillTimer"/>
			<dependency name="acc_TogglePlayerSpectating"/>
			<dependency name="false"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_VendingUseTimer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:WC_VendingMachineUsed" syntax="WC_VendingMachineUsed(playerid, health_given)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="GetPlayerState"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxHealth"/>
			<dependency name="s_VendingUseTimer"/>
			<param name="playerid">
			</param>
			<param name="health_given">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:WarnPlayer" syntax="WarnPlayer(playerid, adminid, reason[])">
			<stacksize value="35"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="pc_cmd_warn"/>
			<dependency name="BanPlayer"/>
			<dependency name="IsKicked"/>
			<dependency name="LOG_PUNISH"/>
			<dependency name="Log"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_adminPenalty"/>
			<dependency name="player_adminPoints"/>
			<dependency name="player_nickname"/>
			<dependency name="player_warns"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:WasPlayerInVehicle" syntax="WasPlayerInVehicle(playerid, time)">
			<stacksize value="2"/>
			<referrer name="ac_OnPlayerDeath"/>
			<dependency name="GetTickCount"/>
			<dependency name="s_LastVehicleTick"/>
			<param name="playerid">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:WordPickup" syntax="WordPickup(playerid, pickupid)">
			<stacksize value="12"/>
			<referrer name="ac_OnPlayerPickUpDynamicPickup"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Teleport"/>
			<dependency name="VW_WORD"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:WriteAmxCell" syntax="WriteAmxCell(offset, value)">
			<stacksize value="6"/>
			<dependency name="GetAmxAddress"/>
			<dependency name="WritePhysMemoryCell"/>
			<param name="offset">
			</param>
			<param name="value">
			</param>
			<library>amx_assembly amx</library> <summary> Writes a cell to the AMX struct. </summary>
		</member>
		<member name="M:WriteAmxMemoryArray" syntax="WriteAmxMemoryArray(address, values[], size)">
			<stacksize value="2"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="address">
			</param>
			<param name="values">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>amx_assembly amx_memory</library>
		</member>
		<member name="M:WritePhysMemory" syntax="WritePhysMemory(address, src[], num)">
			<stacksize value="5"/>
			<dependency name="AbsToRel"/>
			<param name="address">
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="num">
			</param>
			<library>amx_assembly phys_memory</library>
		</member>
		<member name="M:WritePhysMemoryCell" syntax="WritePhysMemoryCell(address, what)">
			<stacksize value="5"/>
			<referrer name="WriteAmxCell"/>
			<dependency name="AbsToRel"/>
			<param name="address">
			</param>
			<param name="what">
			</param>
			<library>amx_assembly phys_memory</library>
		</member>
		<member name="M:WriteToLog" syntax="WriteToLog(type, string[])">
			<stacksize value="588"/>
			<referrer name="Log"/>
			<dependency name="LOG_CHAT"/>
			<dependency name="LOG_CMD"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="LOG_PUNISH"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="format"/>
			<dependency name="fwrite"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="io_append"/>
			<dependency name="io_readwrite"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<param name="type">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:X@" syntax="X@(n)">
			<stacksize value="6"/>
			<dependency name="YSI_g_sPropReturn"/>
			<dependency name="setproperty"/>
			<param name="n">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:YHNPS_Find" syntax="YHNPS_Find(heap, end, value)">
			<stacksize value="4"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellmin"/>
			<param name="heap">
			</param>
			<param name="end">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:YHNPS_Insert" syntax="YHNPS_Insert(heap, count, value, ptr)">
			<stacksize value="10"/>
			<referrer name="YHNPS_Push"/>
			<dependency name="RawMemCpy_"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="cellmax"/>
			<param name="heap">
			</param>
			<param name="count">
			</param>
			<param name="value">
			</param>
			<param name="ptr">
			</param>
		</member>
		<member name="M:YHNPS_Push" syntax="YHNPS_Push(heap, &amp;allocated, &amp;nativeCount, &amp;stockCount, base, find, replace)">
			<stacksize value="7"/>
			<referrer name="CGen_OnCodeInit"/>
			<dependency name="GetNativeAddressFromIndex"/>
			<dependency name="HeapAllocCells"/>
			<dependency name="RawMemCpy_"/>
			<dependency name="YHNPS_Insert"/>
			<dependency name="cellmax"/>
			<dependency name="max"/>
			<param name="heap">
			</param>
			<param name="allocated">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="nativeCount">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="stockCount">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="base">
			</param>
			<param name="find">
			</param>
			<param name="replace">
			</param>
		</member>
		<member name="M:YSI_DB_Query__" syntax="YSI_DB_Query__(db, query[])">
			<tagname value="DBResult"/>
			<attribute name="native"/>
			<referrer name="va_DBQuery"/>
			<param name="db">
				<paraminfo>DB </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:YSI_Format__" syntax="YSI_Format__(dest[], size, format[], ...)">
			<attribute name="native"/>
			<referrer name="Debug_PrintArray"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:YSI_HTTP__" syntax="YSI_HTTP__(index, method, url[], data[], callback[])">
			<attribute name="native"/>
			<referrer name="HTTPCallback"/>
			<param name="index">
			</param>
			<param name="method">
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:YSI_IsNumeric__" syntax="YSI_IsNumeric__()">
			<stacksize value="1"/>
		</member>
		<member name="M:YSI_PrintF__" syntax="YSI_PrintF__(format[], ...)">
			<attribute name="native"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:YSI_Print__" syntax="YSI_Print__(string[])">
			<attribute name="native"/>
			<referrer name="Server_PrintYSIHeader"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroPart"/>
			<referrer name="Server_FinishIntroMessage"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:YSI_Random__" syntax="YSI_Random__(max)">
			<attribute name="native"/>
			<referrer name="RandomMinMaxExceptMany"/>
			<referrer name="RandomMinMaxExcept"/>
			<referrer name="RandomMinMax"/>
			<referrer name="RandomMax"/>
			<param name="max">
			</param>
		</member>
		<member name="M:YSI_SendClientCheck__" syntax="YSI_SendClientCheck__(playerid, type, memoryAddress, memoryOffset, byteCount)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="memoryAddress">
			</param>
			<param name="memoryOffset">
			</param>
			<param name="byteCount">
			</param>
		</member>
		<member name="M:YSI_SendRconCommand__" syntax="YSI_SendRconCommand__(str[])">
			<attribute name="native"/>
			<referrer name="y_rconfix_Load"/>
			<referrer name="y_rconfix_Unload"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:YSI_SetTimerEx__" syntax="YSI_SetTimerEx__(funcname[], interval, repeating, format[], ...)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_InlineByName"/>
			<referrer name="Callback_Claim_"/>
			<referrer name="Inline_UI_"/>
			<referrer name="Inline_OnCodeInit"/>
			<referrer name="_Timer_D"/>
			<referrer name="@y_inlineTimerCount"/>
			<referrer name="@y_inlineTimerStart"/>
			<referrer name="Timer_CreateCallback"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:YSI_SetTimer__" syntax="YSI_SetTimer__(funcname[], interval, repeating)">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="_Timer_I"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:YSI_StrUnpack__" syntax="YSI_StrUnpack__(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="Inline_GenerateLocalsCopy"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:YSI_VAPrintF" syntax="YSI_VAPrintF(fmt[], addr)">
			<attribute name="native"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<param name="fmt">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addr">
			</param>
		</member>
		<member name="M:YVA2_CodeGenDeepCleanup" syntax="YVA2_CodeGenDeepCleanup(ctx[], depth, returningString)">
			<stacksize value="5"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitStack"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="depth">
			</param>
			<param name="returningString">
			</param>
		</member>
		<member name="M:YVA2_CodeGenMainCleanup" syntax="YVA2_CodeGenMainCleanup(ctx[])">
			<stacksize value="5"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitAdd"/>
			<dependency name="AsmEmitLctrl"/>
			<dependency name="AsmEmitLoadPri"/>
			<dependency name="AsmEmitPopAlt"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitStorPri"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:YVA2_CodeGenPushSite" syntax="YVA2_CodeGenPushSite(ctx[], pushedBytes, skippedBytes, offset)">
			<stacksize value="5"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitAddrPri"/>
			<dependency name="AsmEmitCallAbs"/>
			<dependency name="AsmEmitHeap"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="YSI_g_sDoPushAddr"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="pushedBytes">
			</param>
			<param name="skippedBytes">
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:YVA2_CodeGenShiftCode" syntax="YVA2_CodeGenShiftCode(dest, src, end)">
			<stacksize value="4"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="OP_NOP"/>
			<dependency name="RelocateOpcode"/>
			<param name="dest">
			</param>
			<param name="src">
			</param>
			<param name="end">
			</param>
		</member>
		<member name="M:YVA2_DoPush" syntax="YVA2_DoPush(skippedBytes, pushedBytes, pushRequirements)">
			<stacksize value="1"/>
			<referrer name="YVA2_DummyPush"/>
			<referrer name="Hooks_OnCodeInit"/>
			<dependency name="memcpy"/>
			<param name="skippedBytes">
			</param>
			<param name="pushedBytes">
			</param>
			<param name="pushRequirements">
			</param>
		</member>
		<member name="M:YVA2_DummyPush" syntax="YVA2_DummyPush(skippedBytes, pushedBytes, pushRequirements, dummy0, dummy1, dummy2, dummy3, dummy4, dummy5)">
			<stacksize value="6"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_TextDrawSetString"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_fprintf"/>
			<referrer name="va_SendRconCommand"/>
			<referrer name="va_SetGameModeText"/>
			<referrer name="va_DBQuery"/>
			<referrer name="va_ShowPlayerDialog"/>
			<referrer name="va_CreateMenu"/>
			<referrer name="va_AddMenuItem"/>
			<referrer name="va_SetMenuColumnHeader"/>
			<referrer name="va_SetObjectMaterialText"/>
			<referrer name="va_SetPlayerObjectMaterialText"/>
			<referrer name="va_Create3DTextLabel"/>
			<referrer name="va_Update3DTextLabelText"/>
			<referrer name="va_CreatePlayer3DTextLabel"/>
			<referrer name="va_UpdatePlayer3DTextLabelText"/>
			<referrer name="va_SetSVarString"/>
			<referrer name="va_SetPVarString"/>
			<referrer name="va_AddServerRule"/>
			<referrer name="va_SetServerRule"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
			<referrer name="AddDialogListitem"/>
			<referrer name="Log"/>
			<referrer name="catstr"/>
			<referrer name="msg"/>
			<referrer name="msgAll"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="msgAdmins"/>
			<referrer name="textDrawSetString"/>
			<referrer name="playerTextDrawSetString"/>
			<dependency name="Debug_Print0"/>
			<dependency name="TRUE"/>
			<dependency name="YSI_g_sInitialised"/>
			<dependency name="YVA2_DoPush"/>
			<dependency name="YVA2_Initalise"/>
			<param name="skippedBytes">
			</param>
			<param name="pushedBytes">
			</param>
			<param name="pushRequirements">
			</param>
			<param name="dummy0">
			</param>
			<param name="dummy1">
			</param>
			<param name="dummy2">
			</param>
			<param name="dummy3">
			</param>
			<param name="dummy4">
			</param>
			<param name="dummy5">
			</param>
		</member>
		<member name="M:YVA2_FoundCall" syntax="YVA2_FoundCall(m[])">
			<stacksize value="17"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmEmitHeap"/>
			<dependency name="AsmEmitPushAlt"/>
			<dependency name="AsmEmitPushS"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitSysreqC"/>
			<dependency name="CodeScanGetMatchAddressData"/>
			<dependency name="CodeScanGetMatchDisasm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchLength"/>
			<dependency name="CodeScanGetMatchStack"/>
			<dependency name="Debug_Kill_"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmNextInsn"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_POP_PRI"/>
			<dependency name="YSI_g_sContexts"/>
			<dependency name="YSI_g_sContexts"/>
			<dependency name="YSI_g_sLength"/>
			<dependency name="YSI_g_sMaxNesting"/>
			<dependency name="YSI_g_sPassthroughNestings"/>
			<dependency name="YSI_g_sSkips"/>
			<dependency name="YSI_g_sStacks"/>
			<dependency name="YVA2_CodeGenDeepCleanup"/>
			<dependency name="YVA2_CodeGenMainCleanup"/>
			<dependency name="YVA2_CodeGenPushSite"/>
			<dependency name="YVA2_CodeGenShiftCode"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="cellmin"/>
			<dependency name="charbits"/>
			<dependency name="gAmxAssemblyAddress_"/>
			<param name="m">
				<paraminfo> [172] </paraminfo>
			</param>
		</member>
		<member name="M:YVA2_FoundPush" syntax="YVA2_FoundPush(m[])">
			<stacksize value="12"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="CodeScanGetMatchAddress"/>
			<dependency name="CodeScanGetMatchAsm"/>
			<dependency name="CodeScanGetMatchDisasm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchLength"/>
			<dependency name="CodeScanGetMatchStack"/>
			<dependency name="Debug_Kill_"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmNextInsn"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="YSI_g_sContexts"/>
			<dependency name="YSI_g_sContexts"/>
			<dependency name="YSI_g_sInitialised"/>
			<dependency name="YSI_g_sLength"/>
			<dependency name="YSI_g_sMaxNesting"/>
			<dependency name="YSI_g_sPassthroughNestings"/>
			<dependency name="YSI_g_sSkips"/>
			<dependency name="YSI_g_sStacks"/>
			<dependency name="cellbits"/>
			<dependency name="cellmin"/>
			<dependency name="charbits"/>
			<dependency name="max"/>
			<param name="m">
				<paraminfo> [172] </paraminfo>
			</param>
		</member>
		<member name="M:YVA2_Initalise" syntax="YVA2_Initalise()">
			<stacksize value="1147"/>
			<referrer name="YVA2_DummyPush"/>
			<referrer name="Hooks_OnCodeInit"/>
			<dependency name="CodeScanAddMatcher"/>
			<dependency name="CodeScanInit"/>
			<dependency name="CodeScanMatcher"/>
			<dependency name="CodeScanMatcherInit_"/>
			<dependency name="CodeScanMatcherPattern_"/>
			<dependency name="CodeScanRunFast"/>
			<dependency name="CodeScanner"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_MOVE_PRI"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="OP_PUSH_PRI"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_STOR_I"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_ZERO_PRI"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="YVA2_FoundCall"/>
			<dependency name="YVA2_FoundPush"/>
			<dependency name="gCodeScanCallback_match"/>
		</member>
		<member name="M:YVers_Callback" syntax="YVers_Callback(index, code, data[])">
			<attribute name="public"/>
			<stacksize value="48"/>
			<dependency name="Server_FinishIntroMessage"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<param name="index">
			</param>
			<param name="code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="	index">Not used.</param>  <param name="	code">Response code from the server.</param>  <param name="	data[]">HTTP data sent from the server.</param>  <remarks>  This is called when my server responds to the HTTP request sent above  (or when it doesn't).  This prints information on the current and any  future versions of YSI.  Note that it only does a strcmp to determine if  the version is newer - people can't have versions newer than the latest,  onlyolder or equal (unless they play with the version numbers, but then  that's their own fault).  </remarks> 
		</member>
		<member name="M:YVers_OnYSIInit" syntax="YVers_OnYSIInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
		</member>
		<member name="M:YVers_PrintHeader" syntax="YVers_PrintHeader()">
			<stacksize value="61"/>
			<referrer name="YVers_StartCheck"/>
			<dependency name="@_"/>
			<dependency name="GetConsoleVarAsString"/>
			<dependency name="Script_GetCompilerCodepage"/>
			<dependency name="Script_GetCompilerString"/>
			<dependency name="Script_GetIncludesString"/>
			<dependency name="Script_GetStartString"/>
			<dependency name="Server_CrashDetectExists"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_GetJITString"/>
			<dependency name="Server_HasLongCallControl"/>
			<dependency name="Server_IsLinuxHost"/>
			<dependency name="Server_IsWindowsHost"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_gscLinux"/>
			<dependency name="YSI_gscWindows"/>
			<dependency name="__Pawn"/>
			<dependency name="__date"/>
			<dependency name="__time"/>
			<dependency name="format"/>
		</member>
		<member name="M:YVers_StartCheck" syntax="YVers_StartCheck()">
			<stacksize value="3"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="YVers_PrintHeader"/>
			<returns>  OnYSIInit  </returns>  <remarks>  Constructor.  Checks to see if there is a new version available.  This code can not use ANY of the rest of YSI as it needs to be  included by everything first.  </remarks> 
		</member>
		<member name="M:Yield_OnCodeInit" syntax="Yield_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="AddressofResolve"/>
			<dependency name="Indirect_Init"/>
		</member>
		<member name="M:ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ" syntax="ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ()">
			<stacksize value="1"/>
			<hidden />  <remarks>  This function only exists to hide other functions.  It starts a massive  comment block in the pawndoc XML output that hides all internal  functions - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal functions appear in the  generated documentation always.  This is the best way to hide them.  You  still see one function (this one), but at least the documentation for  this one function can explain why it exists.  <p />  This is <c>ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ</c> and starts the internal  functions block.  This is the last possible name before the first  character is <c>_</c> when the functions are sorted lexicographically  (alphabetically).  There's also <c>ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZY</c>  that starts the variables block; they could have the same name if they  were not declared in the same scope, but they might not always be  separately defined.  <p />  Note that the actual hiding itself is done by an XML comment started  here and ended later.  </remarks>  <!-- 
		</member>
		<member name="M:ZapisyGameTimer" syntax="ZapisyGameTimer(gameid)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GAME_CH"/>
			<dependency name="GAME_DA"/>
			<dependency name="GAME_GG"/>
			<dependency name="GAME_RC"/>
			<dependency name="GAME_SK"/>
			<dependency name="GAME_SM"/>
			<dependency name="GAME_WG"/>
			<dependency name="GAME_WP"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameDrawShowed"/>
			<dependency name="GameStarted"/>
			<dependency name="GameTimer"/>
			<dependency name="GetGameLimit"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="StartBTR"/>
			<dependency name="StartChowany"/>
			<dependency name="StartDA"/>
			<dependency name="StartGG"/>
			<dependency name="StartSK"/>
			<dependency name="StartSM"/>
			<dependency name="StartWP"/>
			<dependency name="StartZP"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_TextDrawHideForAll"/>
			<dependency name="dbconn"/>
			<dependency name="false"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGame"/>
			<dependency name="tdGameZapisy"/>
			<dependency name="textDrawSetString"/>
			<dependency name="true"/>
			<param name="gameid">
			</param>
		</member>
		<member name="M:ZoneBordersFlashForAll" syntax="ZoneBordersFlashForAll(zoneid, color)">
			<stacksize value="4"/>
			<dependency name="GangZoneFlashForAll"/>
			<dependency name="border"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<param name="zoneid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:ZoneBordersFlashForPlayer" syntax="ZoneBordersFlashForPlayer(playerid, zoneid, color)">
			<stacksize value="5"/>
			<dependency name="GangZoneFlashForPlayer"/>
			<dependency name="border"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:ZoneBordersStopFlashForAll" syntax="ZoneBordersStopFlashForAll(zoneid)">
			<stacksize value="3"/>
			<dependency name="GangZoneStopFlashForAll"/>
			<dependency name="border"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:ZoneBordersStopFlashForPlayer" syntax="ZoneBordersStopFlashForPlayer(playerid, zoneid)">
			<stacksize value="4"/>
			<dependency name="GangZoneStopFlashForPlayer"/>
			<dependency name="border"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingBorders"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:ZoneFlashForAll" syntax="ZoneFlashForAll(zoneid, color)">
			<stacksize value="4"/>
			<referrer name="StartGangWar"/>
			<dependency name="GangZoneFlashForAll"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zMainID"/>
			<param name="zoneid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:ZoneFlashForPlayer" syntax="ZoneFlashForPlayer(playerid, zoneid, color)">
			<stacksize value="5"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StartWG"/>
			<dependency name="GangZoneFlashForPlayer"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zMainID"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:ZoneNumberFlashForAll" syntax="ZoneNumberFlashForAll(zoneid, color)">
			<stacksize value="5"/>
			<dependency name="GangZoneFlashForAll"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingNumbers"/>
			<param name="zoneid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:ZoneNumberFlashForPlayer" syntax="ZoneNumberFlashForPlayer(playerid, zoneid, color)">
			<stacksize value="6"/>
			<dependency name="GangZoneFlashForPlayer"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingNumbers"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:ZoneNumberStopFlashForAll" syntax="ZoneNumberStopFlashForAll(zoneid)">
			<stacksize value="4"/>
			<dependency name="GangZoneStopFlashForAll"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingNumbers"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:ZoneNumberStopFlashForPlayer" syntax="ZoneNumberStopFlashForPlayer(playerid, zoneid)">
			<stacksize value="5"/>
			<dependency name="GangZoneStopFlashForPlayer"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zIsUsingNumbers"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:ZoneStopFlashForAll" syntax="ZoneStopFlashForAll(zoneid)">
			<stacksize value="3"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<dependency name="GangZoneStopFlashForAll"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zMainID"/>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:ZoneStopFlashForPlayer" syntax="ZoneStopFlashForPlayer(playerid, zoneid)">
			<stacksize value="4"/>
			<dependency name="GangZoneStopFlashForPlayer"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zMainID"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:ZonesReward" syntax="ZonesReward()">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CountGangZones"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="RandomGangReward"/>
			<dependency name="addGangScore"/>
			<dependency name="countGangMembers"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_tag"/>
			<dependency name="giveGangBudget"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="strdot"/>
		</member>
		<member name="M:ZrzutLoaded" syntax="ZrzutLoaded(playerid)">
			<attribute name="public"/>
			<stacksize value="115"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicRaceCP"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="JobDay"/>
			<dependency name="MAPICON_GLOBAL"/>
			<dependency name="SetPVarInt"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="ZrzutCP"/>
			<dependency name="ZrzutMapIcon"/>
			<dependency name="ZrzutPaczka"/>
			<dependency name="ZrzutPaczkaCount"/>
			<dependency name="ZrzutPaczkaID"/>
			<dependency name="ZrzutPaczkaName"/>
			<dependency name="ZrzutPaczkaName"/>
			<dependency name="ZrzutPositions"/>
			<dependency name="ZrzutPositions"/>
			<dependency name="ZrzutReward"/>
			<dependency name="ZrzutSwitch"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<dependency name="random"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Zrzut_Start" syntax="Zrzut_Start(playerid)">
			<stacksize value="12"/>
			<referrer name="OnDialogJob"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="ZrzutPaczkaCount"/>
			<dependency name="ZrzutReward"/>
			<dependency name="ZrzutSwitch"/>
			<dependency name="ZrzutVehicle"/>
			<dependency name="ZrzutWaga"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@BULLET_HIT_TYPE" syntax="_@BULLET_HIT_TYPE()">
			<stacksize value="1"/>
			<dependency name="__BULLET_HIT_TYPE"/>
		</member>
		<member name="M:_@CAMERA_MOVE" syntax="_@CAMERA_MOVE()">
			<tagname value="CAMERA_MOVE"/>
			<stacksize value="1"/>
		</member>
		<member name="M:_@CAM_MODE" syntax="_@CAM_MODE()">
			<stacksize value="1"/>
			<dependency name="__CAM_MODE"/>
		</member>
		<member name="M:_@CARMODTYPE" syntax="_@CARMODTYPE()">
			<stacksize value="1"/>
			<dependency name="__CARMODTYPE"/>
		</member>
		<member name="M:_@CLICK_SOURCE" syntax="_@CLICK_SOURCE()">
			<stacksize value="1"/>
			<dependency name="__CLICK_SOURCE"/>
		</member>
		<member name="M:_@CP_TYPE" syntax="_@CP_TYPE()">
			<stacksize value="1"/>
			<dependency name="__CP_TYPE"/>
		</member>
		<member name="M:_@DIALOG_STYLE" syntax="_@DIALOG_STYLE()">
			<stacksize value="1"/>
			<dependency name="__DIALOG_STYLE"/>
		</member>
		<member name="M:_@DOWNLOAD_REQUEST" syntax="_@DOWNLOAD_REQUEST()">
			<stacksize value="1"/>
			<dependency name="__DOWNLOAD_REQUEST"/>
		</member>
		<member name="M:_@Dialog_Set" syntax="_@Dialog_Set(playerid, dialogid)">
			<stacksize value="8"/>
			<referrer name="Dialog_ShowCallback"/>
			<referrer name="Dialog_Show"/>
			<referrer name="Dialog_Hide"/>
			<referrer name="_@yHOnDialogResponse@01"/>
			<referrer name="Dialog_ShowPlayerDialog"/>
			<dependency name="D@"/>
			<dependency name="F@"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
		</member>
		<member name="M:_@EDIT_RESPONSE" syntax="_@EDIT_RESPONSE()">
			<stacksize value="1"/>
			<dependency name="__EDIT_RESPONSE"/>
		</member>
		<member name="M:_@FIGHT_STYLE" syntax="_@FIGHT_STYLE()">
			<stacksize value="1"/>
			<dependency name="__FIGHT_STYLE"/>
		</member>
		<member name="M:_@FORCE_SYNC" syntax="_@FORCE_SYNC()">
			<stacksize value="1"/>
			<dependency name="__FORCE_SYNC"/>
		</member>
		<member name="M:_@HTTP_ERROR" syntax="_@HTTP_ERROR()">
			<stacksize value="1"/>
			<dependency name="__HTTP_ERROR"/>
		</member>
		<member name="M:_@HTTP_METHOD" syntax="_@HTTP_METHOD()">
			<stacksize value="1"/>
			<dependency name="__HTTP_METHOD"/>
		</member>
		<member name="M:_@Hy" syntax="_@Hy(address, name[], callback[], order, fallback)">
			<stacksize value="69"/>
			<automaton name="y_hooks_scan"/>
			<referrer name="@yH_OnScriptInit@000"/>
			<referrer name="@yH_OnPlayerDisconnect@000"/>
			<referrer name="@yH_OnScriptExit@000"/>
			<referrer name="@yH_OnPlayerDisconnect@01"/>
			<referrer name="@yH_OnDialogResponse@01"/>
			<referrer name="@yH_OnPlayerConnect@02"/>
			<referrer name="@yH_OnPlayerDisconnect@02"/>
			<referrer name="@yH_OnDialogResponse@03"/>
			<referrer name="@yH_OnDialogResponse@04"/>
			<referrer name="@yH_OnPlayerPickUpDynPickup@05"/>
			<referrer name="@yH_OnPlayerDeath@06"/>
			<referrer name="@yH_OnPlayerKeyStateChange@07"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@08"/>
			<referrer name="@yH_OnPlayerKeyStateChange@09"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@09"/>
			<referrer name="@yH_OnPlayerDeath@0@"/>
			<referrer name="@yH_OnPlayerDisconnect@0A"/>
			<referrer name="@yH_OnDialogResponse@0B"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0C"/>
			<referrer name="@yH_OnDialogResponse@0C"/>
			<referrer name="@yH_OnPlayerExitVehicle@0C"/>
			<referrer name="@yH_OnPlayerDeath@0C"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0C"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0D"/>
			<referrer name="@yH_OnPlayerDeath@0F"/>
			<referrer name="@yH_OnPlayerDisconnect@0F"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0F"/>
			<referrer name="@yH_OnDialogResponse@0F"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0F"/>
			<referrer name="@yH_OnPlayerExitVehicle@0F"/>
			<referrer name="@yH_OnPlayerUpdate@0G"/>
			<referrer name="@yH_OnPlayerShootDynObject@0H"/>
			<referrer name="@yH_OnDialogResponse@0I"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0J"/>
			<referrer name="@yH_OnPlayerUpdate@0J"/>
			<referrer name="@yH_OnVehicleMod@0L"/>
			<referrer name="@yH_OnVehiclePaintjob@0L"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0M"/>
			<referrer name="@yH_OnPlayerDeath@0N"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0O"/>
			<referrer name="@yH_OnPlayerEnterDynArea@0O"/>
			<referrer name="@yH_OnPlayerLeaveDynArea@0O"/>
			<referrer name="@yH_OnDialogResponse@0O"/>
			<referrer name="@yH_OnDialogResponse@0P"/>
			<referrer name="@yH_OnPlayerEditDynObject@0P"/>
			<referrer name="@yH_OnDialogResponse@0Q"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0S"/>
			<referrer name="@yH_OnPlayerDeath@0S"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0U"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0U"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0U"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0V"/>
			<referrer name="@yH_OnPlayerExitVehicle@0V"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0W"/>
			<referrer name="@yH_OnPlayerShootDynObject@0X"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Y"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Z"/>
			<referrer name="@yH_OnDialogResponse@0b"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0c"/>
			<referrer name="@yH_OnPlayerPickUpPickup@0c"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0d"/>
			<referrer name="@yH_OnPlayerClickTextDraw@0d"/>
			<referrer name="@yH_OnDialogResponse@0d"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0e"/>
			<referrer name="@yH_OnDialogResponse@0g"/>
			<referrer name="@yH_OnDialogResponse@0h"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0i"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0k"/>
			<referrer name="@yH_OnDialogResponse@0l"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0m"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0m"/>
			<referrer name="@yH_OnPlayerExitVehicle@0m"/>
			<referrer name="@yH_OnPlayerDeath@0m"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0m"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0n"/>
			<referrer name="@yH_OnPlayerDisconnect@0o"/>
			<referrer name="@yH_OnDialogResponse@0o"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0o"/>
			<referrer name="@yH_OnPlayerUpdate@0o"/>
			<referrer name="@yH_OnPlayerDeath@0p"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0q"/>
			<referrer name="@yH_OnPlayerDeath@0r"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0s"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0s"/>
			<referrer name="@yH_OnPlayerExitVehicle@0s"/>
			<referrer name="@yH_OnPlayerDeath@0t"/>
			<referrer name="@yH_OnPlayerDeath@0u"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0v"/>
			<referrer name="@yH_OnPlayerDeath@0v"/>
			<referrer name="@yH_OnPlayerDeath@0w"/>
			<referrer name="@yH_OnPlayerDisconnect@0x"/>
			<referrer name="@yH_OnPlayerDeath@0x"/>
			<referrer name="@yH_OnDialogResponse@0y"/>
			<referrer name="@yH_OnDialogResponse@0z"/>
			<referrer name="@yH_OnPlayerWeaponShot@10"/>
			<referrer name="@yH_OnDialogResponse@11"/>
			<dependency name="Debug_Kill_"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Hooks_ExtractName"/>
			<dependency name="YSI_g_sAddress"/>
			<dependency name="YSI_g_sName"/>
			<dependency name="cellmin"/>
			<dependency name="strcmp"/>
			<param name="address">
				The hook implementation location.
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name of the implementation function.
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
				The optional hooked callback name.
			</param>
			<param name="order">
				Where in the list to call this hook.
			</param>
			<param name="fallback">
				Is this an old style <c>hook</c> callback?
			</param>
			          <returns>  Should this function be added to the current list of hooks?  </returns>  <remarks>  Called from inside the <c>@yH_</c> functions, to register themselves.  </remarks> 
		</member>
		<member name="M:_@KEY" syntax="_@KEY()">
			<stacksize value="1"/>
			<dependency name="__KEY"/>
		</member>
		<member name="M:_@MAPICON" syntax="_@MAPICON()">
			<stacksize value="1"/>
			<dependency name="__MAPICON"/>
		</member>
		<member name="M:_@OBJECT_MATERIAL_SIZE" syntax="_@OBJECT_MATERIAL_SIZE()">
			<stacksize value="1"/>
			<dependency name="__OBJECT_MATERIAL_SIZE"/>
		</member>
		<member name="M:_@OBJECT_MATERIAL_TEXT_ALIGN" syntax="_@OBJECT_MATERIAL_TEXT_ALIGN()">
			<stacksize value="1"/>
			<dependency name="__OBJECT_MATERIAL_TEXT_ALIGN"/>
		</member>
		<member name="M:_@PLAYER_MARKERS_MODE" syntax="_@PLAYER_MARKERS_MODE()">
			<stacksize value="1"/>
			<dependency name="__PLAYER_MARKERS_MODE"/>
		</member>
		<member name="M:_@PLAYER_RECORDING_TYPE" syntax="_@PLAYER_RECORDING_TYPE()">
			<stacksize value="1"/>
			<dependency name="__PLAYER_RECORDING_TYPE"/>
		</member>
		<member name="M:_@PLAYER_STATE" syntax="_@PLAYER_STATE()">
			<stacksize value="1"/>
			<dependency name="__PLAYER_STATE"/>
		</member>
		<member name="M:_@PLAYER_VARTYPE" syntax="_@PLAYER_VARTYPE()">
			<stacksize value="1"/>
			<dependency name="__PLAYER_VARTYPE"/>
		</member>
		<member name="M:_@SELECT_OBJECT" syntax="_@SELECT_OBJECT()">
			<stacksize value="1"/>
			<dependency name="__SELECT_OBJECT"/>
		</member>
		<member name="M:_@SERVER_VARTYPE" syntax="_@SERVER_VARTYPE()">
			<stacksize value="1"/>
			<dependency name="__SERVER_VARTYPE"/>
		</member>
		<member name="M:_@SPECIAL_ACTION" syntax="_@SPECIAL_ACTION()">
			<stacksize value="1"/>
			<dependency name="__SPECIAL_ACTION"/>
		</member>
		<member name="M:_@SPECTATE_MODE" syntax="_@SPECTATE_MODE()">
			<stacksize value="1"/>
			<dependency name="__SPECTATE_MODE"/>
		</member>
		<member name="M:_@TEXT_DRAW_ALIGN" syntax="_@TEXT_DRAW_ALIGN()">
			<stacksize value="1"/>
			<dependency name="__TEXT_DRAW_ALIGN"/>
		</member>
		<member name="M:_@TEXT_DRAW_FONT" syntax="_@TEXT_DRAW_FONT()">
			<stacksize value="1"/>
			<dependency name="__TEXT_DRAW_FONT"/>
		</member>
		<member name="M:_@VEHICLE_MODEL_INFO" syntax="_@VEHICLE_MODEL_INFO()">
			<stacksize value="1"/>
			<dependency name="__VEHICLE_MODEL_INFO"/>
		</member>
		<member name="M:_@VEHICLE_PARAMS" syntax="_@VEHICLE_PARAMS()">
			<stacksize value="1"/>
			<dependency name="__VEHICLE_PARAMS"/>
		</member>
		<member name="M:_@WEAPON" syntax="_@WEAPON()">
			<stacksize value="1"/>
			<dependency name="__WEAPON"/>
		</member>
		<member name="M:_@WEAPONSKILL" syntax="_@WEAPONSKILL()">
			<stacksize value="1"/>
			<dependency name="__WEAPONSKILL"/>
		</member>
		<member name="M:_@WEAPONSTATE" syntax="_@WEAPONSTATE()">
			<stacksize value="1"/>
			<dependency name="__WEAPONSTATE"/>
		</member>
		<member name="M:_@WEAPON_SLOT" syntax="_@WEAPON_SLOT()">
			<stacksize value="1"/>
			<dependency name="__WEAPON_SLOT"/>
		</member>
		<member name="M:_@yHDestroyVehicle@0K" syntax="_@yHDestroyVehicle@0K(vehicleid)">
			<stacksize value="5"/>
			<referrer name="@yH_DestroyVehicle@0K"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="VehiclePrivate"/>
			<dependency name="VehiclePrivateID"/>
			<dependency name="false"/>
			<dependency name="pVeh"/>
			<dependency name="pVehObjectData"/>
			<dependency name="pVehObjectData"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@01" syntax="_@yHOnDialogResponse@01(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="@yH_OnDialogResponse@01"/>
			<dependency name="I@"/>
			<dependency name="Indirect_Call"/>
			<dependency name="Indirect_GetMeta_"/>
			<dependency name="Indirect_Release_"/>
			<dependency name="J@"/>
			<dependency name="NULL"/>
			<dependency name="YSI_g_sPlayerCallback"/>
			<dependency name="YSI_g_sPlayerDialog"/>
			<dependency name="_@Dialog_Set"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@03" syntax="_@yHOnDialogResponse@03(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="@yH_OnDialogResponse@03"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="NDP_P"/>
			<dependency name="NDP_P"/>
			<dependency name="NDP_ProcessDialogResponse"/>
			<dependency name="NDP_ShowDialogPage"/>
			<dependency name="ndp_dialogid"/>
			<dependency name="ndp_dialogitemscount"/>
			<dependency name="ndp_dialogopened"/>
			<dependency name="ndp_endindex"/>
			<dependency name="ndp_isstylepage"/>
			<dependency name="ndp_itemsonpage"/>
			<dependency name="ndp_page"/>
			<dependency name="ndp_style"/>
			<dependency name="ndp_type"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@04" syntax="_@yHOnDialogResponse@04(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="167"/>
			<referrer name="@yH_OnDialogResponse@04"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ClearDialogListitems"/>
			<dependency name="DIALOG_ACHIEVEMENTS"/>
			<dependency name="DIALOG_ACHIEVEMENT_LIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="ShowAchievementList"/>
			<dependency name="achievementData"/>
			<dependency name="achievementData"/>
			<dependency name="achievement_description"/>
			<dependency name="achievement_levelable"/>
			<dependency name="achievement_money"/>
			<dependency name="achievement_name"/>
			<dependency name="achievement_required"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievementData"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="pc_cmd_osiagniecia"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0B" syntax="_@yHOnDialogResponse@0B(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="195"/>
			<referrer name="@yH_OnDialogResponse@0B"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ACH_DEATHS"/>
			<dependency name="ACH_DISKS"/>
			<dependency name="ACH_DUEL"/>
			<dependency name="ACH_FIGURKA"/>
			<dependency name="ACH_KILLS"/>
			<dependency name="ACH_QUEST"/>
			<dependency name="ACH_QUIZ"/>
			<dependency name="DIALOG_RANKING"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_index_int"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="pc_cmd_top"/>
			<dependency name="s"/>
			<dependency name="strdot"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0C" syntax="_@yHOnDialogResponse@0C(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="@yH_OnDialogResponse@0C"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CreateDynamicRaceCP"/>
			<dependency name="DIALOG_DRIVING_EXAM"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="EOS"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetHealth"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="Teleport"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="catstr"/>
			<dependency name="drivingExamData"/>
			<dependency name="drivingExamData"/>
			<dependency name="examPositions"/>
			<dependency name="examPositions"/>
			<dependency name="exam_cost"/>
			<dependency name="exam_name"/>
			<dependency name="false"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random_float"/>
			<dependency name="msg"/>
			<dependency name="pDriveCP"/>
			<dependency name="pDriveExam"/>
			<dependency name="pDriveLicense"/>
			<dependency name="pDriveStatus"/>
			<dependency name="pDriveType"/>
			<dependency name="pDriveVehicle"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="random"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0F" syntax="_@yHOnDialogResponse@0F(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="194"/>
			<referrer name="@yH_OnDialogResponse@0F"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ACH_TRUCK"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_TRUCK_NEWBIE"/>
			<dependency name="DIALOG_TRUCK_PANEL"/>
			<dependency name="DIALOG_TRUCK_TOWAR"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="EOS"/>
			<dependency name="EnterTeleport"/>
			<dependency name="FALSE"/>
			<dependency name="GetDistanceBetweenPoints3D"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleTrailer"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="MAPICON_GLOBAL"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetPVarFloat"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ShowTruckMenu"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_index_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="floatround_round"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="pTruck"/>
			<dependency name="pTruckCheckpoint"/>
			<dependency name="pTruckIcon"/>
			<dependency name="pTruckLabel"/>
			<dependency name="pTruckReward"/>
			<dependency name="pTruckTowar"/>
			<dependency name="pTruckTrailer"/>
			<dependency name="pTruckVehicle"/>
			<dependency name="pc_cmd_truck"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="tdInfo"/>
			<dependency name="towar_money"/>
			<dependency name="towar_name"/>
			<dependency name="towar_premium"/>
			<dependency name="towaryData"/>
			<dependency name="towaryData"/>
			<dependency name="truckData"/>
			<dependency name="truckData"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0I" syntax="_@yHOnDialogResponse@0I(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="165"/>
			<referrer name="@yH_OnDialogResponse@0I"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_TUTORIAL"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="ShowTutorial"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="s"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0O" syntax="_@yHOnDialogResponse@0O(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="355"/>
			<referrer name="@yH_OnDialogResponse@0O"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CheckGangBase"/>
			<dependency name="ConvertTime"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="DIALOG_BASE_BUY"/>
			<dependency name="DIALOG_BASE_COST"/>
			<dependency name="DIALOG_BASE_MENU"/>
			<dependency name="DIALOG_BASE_NAME"/>
			<dependency name="DIALOG_BASE_PANEL"/>
			<dependency name="DIALOG_BASE_SELL"/>
			<dependency name="DIALOG_BASE_SELL_COST"/>
			<dependency name="DIALOG_BASE_SELL_NAME"/>
			<dependency name="DIALOG_BASE_SELL_PANEL"/>
			<dependency name="DIALOG_GANG_HEIST"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GangBaseCost"/>
			<dependency name="GangBaseLabel"/>
			<dependency name="GangBaseName"/>
			<dependency name="GangBaseName"/>
			<dependency name="GangBaseOwner"/>
			<dependency name="GangBaseSell"/>
			<dependency name="GangBaseSellTime"/>
			<dependency name="GangBaseSettings"/>
			<dependency name="GangBaseSettings"/>
			<dependency name="GangBaseZone"/>
			<dependency name="HideZoneForAll"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidGangBuffer"/>
			<dependency name="Iterator@GangBases"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="RunBaseOptions"/>
			<dependency name="ShowBaseObjectShop"/>
			<dependency name="ShowZoneForAll"/>
			<dependency name="UnixTime"/>
			<dependency name="UpdateBaseLabel"/>
			<dependency name="UpdateBaseLabel"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="base_pickup"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="countGangMembers"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budget"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_tag"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="gettime"/>
			<dependency name="giveGangBudget"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGang"/>
			<dependency name="pc_cmd_bazy"/>
			<dependency name="pc_cmd_tspawn"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_gangBases"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0P" syntax="_@yHOnDialogResponse@0P(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="@yH_OnDialogResponse@0P"/>
			<dependency name="DIALOG_BASE_OBJECTS"/>
			<dependency name="DIALOG_BASE_OBJECT_MENU"/>
			<dependency name="DIALOG_BASE_PANEL"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="EditDynamicObject"/>
			<dependency name="GangBaseObjectCount"/>
			<dependency name="GangBaseObjectData"/>
			<dependency name="GangBaseObjectData"/>
			<dependency name="GangBaseObjectID"/>
			<dependency name="GangBaseObjectID"/>
			<dependency name="GangBaseObjectIndex"/>
			<dependency name="GangBaseObjectIndex"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GangBaseObjects"/>
			<dependency name="GetPVarInt"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="RunBaseOptions"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ShowBaseObjectList"/>
			<dependency name="ShowBaseObjectsMenu"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="base_obj_name"/>
			<dependency name="dbconn"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budget"/>
			<dependency name="gang_color"/>
			<dependency name="gang_tag"/>
			<dependency name="giveGangBudget"/>
			<dependency name="msg"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_objectData"/>
			<dependency name="player_saveData"/>
			<dependency name="strdot"/>
			<dependency name="task_await"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0Q" syntax="_@yHOnDialogResponse@0Q(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="@yH_OnDialogResponse@0Q"/>
			<dependency name="DIALOG_GANG_HEIST"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0b" syntax="_@yHOnDialogResponse@0b(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="165"/>
			<referrer name="@yH_OnDialogResponse@0b"/>
			<dependency name="BUSINESS_GUNSHOP"/>
			<dependency name="CreateBusiness"/>
			<dependency name="DIALOG_BUSINESS_CREATOR"/>
			<dependency name="DIALOG_BUSINESS_CREATOR_MONEY"/>
			<dependency name="DIALOG_BUSINESS_CREATOR_NAME"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iterator@Business"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="cache_insert_id"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="pBusinessCreatorCost"/>
			<dependency name="pBusinessCreatorName"/>
			<dependency name="pBusinessCreatorName"/>
			<dependency name="pBusinessCreatorPosition"/>
			<dependency name="pBusinessCreatorPosition"/>
			<dependency name="pBusinessCreatorType"/>
			<dependency name="pc_cmd_bcreator"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0d" syntax="_@yHOnDialogResponse@0d(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="@yH_OnDialogResponse@0d"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="AddBusinessMoney"/>
			<dependency name="DIALOG_CASINO_SHOP"/>
			<dependency name="DIALOG_CASINO_TOKEN_BUY"/>
			<dependency name="DIALOG_CASINO_TOKEN_EXCHANGE"/>
			<dependency name="DIALOG_ROULETTE_NUMBER"/>
			<dependency name="DIALOG_ROULETTE_PANEL"/>
			<dependency name="DIALOG_ROULETTE_TOKEN"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Roulette_Start"/>
			<dependency name="SetPVarInt"/>
			<dependency name="ShowCasinoShop"/>
			<dependency name="ShowRoulettePanel"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_price"/>
			<dependency name="business_reward"/>
			<dependency name="catstr"/>
			<dependency name="floatround"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pRouletteNumber"/>
			<dependency name="pRouletteTokens"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0g" syntax="_@yHOnDialogResponse@0g(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="286"/>
			<referrer name="@yH_OnDialogResponse@0g"/>
			<dependency name="DIALOG_FISH_PANEL"/>
			<dependency name="DIALOG_FISH_ULEPSZENIA"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetFishUlepszenia"/>
			<dependency name="GetFishUlepszenia"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="ShowFishUlepszenia"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="fishUlepszeniaData"/>
			<dependency name="fishUlepszeniaData"/>
			<dependency name="fish_ulep_money"/>
			<dependency name="fish_ulep_name"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0h" syntax="_@yHOnDialogResponse@0h(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="169"/>
			<referrer name="@yH_OnDialogResponse@0h"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="DIALOG_FISH_BAIT"/>
			<dependency name="DIALOG_FISH_BAIT_AMOUNT"/>
			<dependency name="DIALOG_FISH_PANEL"/>
			<dependency name="DIALOG_FISH_RODE"/>
			<dependency name="DIALOG_FISH_SHOP"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetFishBaits"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="ShowFishBaits"/>
			<dependency name="ShowFishRodes"/>
			<dependency name="ShowFishUlepszenia"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="addLevelScore"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="fishBaitData"/>
			<dependency name="fishBaitData"/>
			<dependency name="fishRodeData"/>
			<dependency name="fishRodeData"/>
			<dependency name="fish_bait_money"/>
			<dependency name="fish_bait_name"/>
			<dependency name="fish_rode_money"/>
			<dependency name="fish_rode_name"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishRode"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="pFishZylka"/>
			<dependency name="pc_cmd_rybki"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0l" syntax="_@yHOnDialogResponse@0l(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="167"/>
			<referrer name="@yH_OnDialogResponse@0l"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="DIALOG_GORNICTWO"/>
			<dependency name="DIALOG_GORNICTWO_PLECAK"/>
			<dependency name="DIALOG_PICKAXE_MANAGE"/>
			<dependency name="DIALOG_PICKAXE_NAME"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="EnterTeleport"/>
			<dependency name="GetBagAmount"/>
			<dependency name="GetBagLevel"/>
			<dependency name="GetBagLevel"/>
			<dependency name="GetBagWeight"/>
			<dependency name="GetPickaxeLevel"/>
			<dependency name="GetPickaxeLevel"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidGangBuffer"/>
			<dependency name="MineBag"/>
			<dependency name="MineBagLevel"/>
			<dependency name="MinePickaxe"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeLevel"/>
			<dependency name="MinePickaxeName"/>
			<dependency name="MinePickaxeName"/>
			<dependency name="MinePoints"/>
			<dependency name="MineWeight"/>
			<dependency name="MineWeight"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="mineData"/>
			<dependency name="mineData"/>
			<dependency name="mine_money"/>
			<dependency name="mine_name"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pc_cmd_gornictwo"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="valueError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0o" syntax="_@yHOnDialogResponse@0o(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="100"/>
			<referrer name="@yH_OnDialogResponse@0o"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_WARGAME_CREATOR"/>
			<dependency name="DIALOG_WARGAME_NAME"/>
			<dependency name="DIALOG_WARGAME_WEAPONS"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="cache_insert_id"/>
			<dependency name="dbconn"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="pWarGame"/>
			<dependency name="pWarGameName"/>
			<dependency name="pWarGameName"/>
			<dependency name="pWarGamePosition"/>
			<dependency name="pWarGamePosition"/>
			<dependency name="pWarGameWeapons"/>
			<dependency name="pWarGameWeapons"/>
			<dependency name="pWarGameZone"/>
			<dependency name="pc_cmd_wgc"/>
			<dependency name="showDialog"/>
			<dependency name="showGameDraw"/>
			<dependency name="sscanf"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0y" syntax="_@yHOnDialogResponse@0y(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="104"/>
			<referrer name="@yH_OnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="DIALOG_EVENT_COLOR"/>
			<dependency name="DIALOG_EVENT_CONFIRM"/>
			<dependency name="DIALOG_EVENT_PANEL"/>
			<dependency name="DIALOG_EVENT_PARAMS"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="EVENT_PANEL_ADD"/>
			<dependency name="EVENT_PANEL_ARMOUR"/>
			<dependency name="EVENT_PANEL_COLOR"/>
			<dependency name="EVENT_PANEL_DELETE"/>
			<dependency name="EVENT_PANEL_DELGOD"/>
			<dependency name="EVENT_PANEL_DISARM"/>
			<dependency name="EVENT_PANEL_FREEZE"/>
			<dependency name="EVENT_PANEL_GIFT"/>
			<dependency name="EVENT_PANEL_GOD"/>
			<dependency name="EVENT_PANEL_HEALTH"/>
			<dependency name="EVENT_PANEL_INVISIBLE"/>
			<dependency name="EVENT_PANEL_KICK50"/>
			<dependency name="EVENT_PANEL_STOP"/>
			<dependency name="EVENT_PANEL_TIME"/>
			<dependency name="EVENT_PANEL_TYPE"/>
			<dependency name="EVENT_PANEL_UNFREEZE"/>
			<dependency name="EVENT_PANEL_VEHICLE"/>
			<dependency name="EVENT_PANEL_WEAPON"/>
			<dependency name="EVENT_PANEL_WEATHER"/>
			<dependency name="EventLeader"/>
			<dependency name="FALSE"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetVehicleNameByID"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="pc_cmd_evadd"/>
			<dependency name="pc_cmd_evarmor"/>
			<dependency name="pc_cmd_evcar"/>
			<dependency name="pc_cmd_evcolor"/>
			<dependency name="pc_cmd_evczas"/>
			<dependency name="pc_cmd_evdelete"/>
			<dependency name="pc_cmd_evdelgod"/>
			<dependency name="pc_cmd_evdisarm"/>
			<dependency name="pc_cmd_evend"/>
			<dependency name="pc_cmd_evfreeze"/>
			<dependency name="pc_cmd_evgod"/>
			<dependency name="pc_cmd_evhealth"/>
			<dependency name="pc_cmd_evinvisible"/>
			<dependency name="pc_cmd_evkick50"/>
			<dependency name="pc_cmd_evnagroda"/>
			<dependency name="pc_cmd_evpanel"/>
			<dependency name="pc_cmd_evpogoda"/>
			<dependency name="pc_cmd_evtype"/>
			<dependency name="pc_cmd_evunfreeze"/>
			<dependency name="pc_cmd_evweapon"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_eventData"/>
			<dependency name="player_nickname"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@0z" syntax="_@yHOnDialogResponse@0z(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="165"/>
			<referrer name="@yH_OnDialogResponse@0z"/>
			<dependency name="DIALOG_EVENT_NAME"/>
			<dependency name="DIALOG_EVENT_SETTINGS"/>
			<dependency name="DIALOG_EVENT_VEHICLE"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="EVENT_SETTING_VEHICLE"/>
			<dependency name="EVENT_TYPE_10HP"/>
			<dependency name="EVENT_TYPE_1V1"/>
			<dependency name="EVENT_TYPE_DM"/>
			<dependency name="EVENT_TYPE_NODM"/>
			<dependency name="EVENT_TYPE_TDM"/>
			<dependency name="EventName"/>
			<dependency name="EventSettings"/>
			<dependency name="EventVehicle"/>
			<dependency name="GetEventType"/>
			<dependency name="GetEventType"/>
			<dependency name="GetVehicleNameByID"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iterator@Event"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="cellmax"/>
			<dependency name="eventSettingData"/>
			<dependency name="eventSettingData"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="pc_cmd_evsettings"/>
			<dependency name="pc_cmd_evtype"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnDialogResponse@11" syntax="_@yHOnDialogResponse@11(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="166"/>
			<referrer name="@yH_OnDialogResponse@11"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_BET_MONEY"/>
			<dependency name="DIALOG_BET_NEWBIE"/>
			<dependency name="DIALOG_BET_REWARD"/>
			<dependency name="DIALOG_BET_SELECT"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="Iterator@Player"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="ShowBetPanel"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="betData"/>
			<dependency name="betData"/>
			<dependency name="bet_gang"/>
			<dependency name="bet_name"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="countGangMembers"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_battleZone"/>
			<dependency name="gang_color"/>
			<dependency name="gang_level"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="pBetAccept"/>
			<dependency name="pBetGang"/>
			<dependency name="pBetReward"/>
			<dependency name="pBetTarget"/>
			<dependency name="pBetType"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pc_cmd_bet"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_betdata"/>
			<dependency name="player_level"/>
			<dependency name="player_nickname"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnPlayerClickTextDraw@0d" syntax="_@yHOnPlayerClickTextDraw@0d(playerid, clickedid)">
			<attribute name="public"/>
			<stacksize value="140"/>
			<referrer name="@yH_OnPlayerClickTextDraw@0d"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AddBusinessMoney"/>
			<dependency name="Fortune_Hide"/>
			<dependency name="KillTimer"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SlotsBar"/>
			<dependency name="Slots_Hide"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="businessData"/>
			<dependency name="business_price"/>
			<dependency name="format"/>
			<dependency name="fortuneLabel"/>
			<dependency name="fortuneLabel"/>
			<dependency name="fortunePlayer"/>
			<dependency name="fortunePlayer"/>
			<dependency name="gettime"/>
			<dependency name="msg"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pFortuneBlock"/>
			<dependency name="pFortuneCount"/>
			<dependency name="pFortuneID"/>
			<dependency name="pFortuneTimer"/>
			<dependency name="pSlotsCount"/>
			<dependency name="pSlotsID"/>
			<dependency name="pSlotsSpin"/>
			<dependency name="pSlotsTimer"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_business"/>
			<dependency name="player_nickname"/>
			<dependency name="slotsLabel"/>
			<dependency name="slotsLabel"/>
			<dependency name="slotsPlayer"/>
			<dependency name="slotsPlayer"/>
			<dependency name="tdCasinoButton"/>
			<dependency name="tdCasinoSlot"/>
			<dependency name="tdSlotButton"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnPlayerConnect@02" syntax="_@yHOnPlayerConnect@02(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@yH_OnPlayerConnect@02"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@06" syntax="_@yHOnPlayerDeath@06(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="@yH_OnPlayerDeath@06"/>
			<dependency name="CheckQuest"/>
			<dependency name="UpdateArenaDraw"/>
			<dependency name="pArena"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaKills"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0@" syntax="_@yHOnPlayerDeath@0@(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerDeath@0@"/>
			<dependency name="ACH_PEDOFIL"/>
			<dependency name="achievement"/>
			<dependency name="giveMoney"/>
			<dependency name="msgAll"/>
			<dependency name="pedofilReward"/>
			<dependency name="pedofilSelected"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0C" syntax="_@yHOnPlayerDeath@0C(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="@yH_OnPlayerDeath@0C"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="false"/>
			<dependency name="pDriveExam"/>
			<dependency name="pDriveStatus"/>
			<dependency name="pDriveType"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="showGameDraw"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0F" syntax="_@yHOnPlayerDeath@0F(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="@yH_OnPlayerDeath@0F"/>
			<dependency name="Truck_Stop"/>
			<dependency name="pTruck"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0N" syntax="_@yHOnPlayerDeath@0N(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerDeath@0N"/>
			<dependency name="IsPlayerInDynamicArea"/>
			<dependency name="pGang"/>
			<dependency name="pGangWarAttacker"/>
			<dependency name="pGangWarPoints"/>
			<dependency name="pGangWarTime"/>
			<dependency name="pGangZoneArea"/>
			<dependency name="pGangZoneRectangle"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0S" syntax="_@yHOnPlayerDeath@0S(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="@yH_OnPlayerDeath@0S"/>
			<dependency name="ExitPraca"/>
			<dependency name="pJob"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0m" syntax="_@yHOnPlayerDeath@0m(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerDeath@0m"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="MineSell"/>
			<dependency name="MineSellCP"/>
			<dependency name="MineSellIcon"/>
			<dependency name="MineSellLabel"/>
			<dependency name="MineSellNagroda"/>
			<dependency name="MineSellVehicle"/>
			<dependency name="ShowMissionDraw"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0p" syntax="_@yHOnPlayerDeath@0p(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerDeath@0p"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CheckBet"/>
			<dependency name="ChowanySzukajacy"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_CH"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="ShowNameTagForAll"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="msg"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0r" syntax="_@yHOnPlayerDeath@0r(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerDeath@0r"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_DA"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="da_kills"/>
			<dependency name="deathArenaKills"/>
			<dependency name="pGame"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0t" syntax="_@yHOnPlayerDeath@0t(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerDeath@0t"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CheckBet"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RoyaleKills"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="ShowNameTagForAll"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="msg"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0u" syntax="_@yHOnPlayerDeath@0u(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerDeath@0u"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="ACH_GG"/>
			<dependency name="CheckBet"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_GG"/>
			<dependency name="GG_GetWeapon"/>
			<dependency name="GameStarted"/>
			<dependency name="GunGameLevel"/>
			<dependency name="GunGameStatus"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="StopGG"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="achievement"/>
			<dependency name="addLevelScore"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="giveWeapon"/>
			<dependency name="math_random"/>
			<dependency name="pGame"/>
			<dependency name="showGameDraw"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0v" syntax="_@yHOnPlayerDeath@0v(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="@yH_OnPlayerDeath@0v"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_WP"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msg"/>
			<dependency name="pGame"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0w" syntax="_@yHOnPlayerDeath@0w(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="@yH_OnPlayerDeath@0w"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_WG"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="WarResult"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="player_warTeam"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDeath@0x" syntax="_@yHOnPlayerDeath@0x(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="@yH_OnPlayerDeath@0x"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CheckBet"/>
			<dependency name="EventDuelEnemy"/>
			<dependency name="EventDuelStarted"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@Event"/>
			<dependency name="Iterator@Event"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDisconnect@000" syntax="_@yHOnPlayerDisconnect@000(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="@yH_OnPlayerDisconnect@000"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@pbar_Index"/>
			<dependency name="Iterator@pbar_Index"/>
			<dependency name="Iterator@pbar_Index"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDisconnect@01" syntax="_@yHOnPlayerDisconnect@01(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="@yH_OnPlayerDisconnect@01"/>
			<dependency name="HidePlayerDialog"/>
			<dependency name="Indirect_Release_"/>
			<dependency name="YSI_g_sPlayerCallback"/>
			<dependency name="YSI_g_sPlayerDialog"/>
			<dependency name="cellmin"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDisconnect@02" syntax="_@yHOnPlayerDisconnect@02(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@yH_OnPlayerDisconnect@02"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDisconnect@0A" syntax="_@yHOnPlayerDisconnect@0A(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="@yH_OnPlayerDisconnect@0A"/>
			<dependency name="RaportCount"/>
			<dependency name="false"/>
			<dependency name="raportData"/>
			<dependency name="raportData"/>
			<dependency name="raport_active"/>
			<dependency name="raport_senderid"/>
			<dependency name="raport_targetid"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDisconnect@0F" syntax="_@yHOnPlayerDisconnect@0F(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="@yH_OnPlayerDisconnect@0F"/>
			<dependency name="Truck_Stop"/>
			<dependency name="pTruck"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDisconnect@0o" syntax="_@yHOnPlayerDisconnect@0o(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@yH_OnPlayerDisconnect@0o"/>
			<dependency name="GangZoneDestroy"/>
			<dependency name="pWarGame"/>
			<dependency name="pWarGameZone"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerDisconnect@0x" syntax="_@yHOnPlayerDisconnect@0x(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="@yH_OnPlayerDisconnect@0x"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="EventDuelEnemy"/>
			<dependency name="EventDuelStarted"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEditDynObject@0P" syntax="_@yHOnPlayerEditDynObject@0P(playerid, objectid, response, x, y, z, rx, ry, rz)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="@yH_OnPlayerEditDynObject@0P"/>
			<dependency name="EDIT_RESPONSE_CANCEL"/>
			<dependency name="EDIT_RESPONSE_FINAL"/>
			<dependency name="GangBaseObjectID"/>
			<dependency name="GangBaseObjectID"/>
			<dependency name="GangBaseObjectPosition"/>
			<dependency name="GangBaseObjectPosition"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetDynamicObjectPos"/>
			<dependency name="SetDynamicObjectRot"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGang"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynArea@0O" syntax="_@yHOnPlayerEnterDynArea@0O(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerEnterDynArea@0O"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Iter_Single@GangBases"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_gangbase"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynRaceCP@0C" syntax="_@yHOnPlayerEnterDynRaceCP@0C(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0C"/>
			<dependency name="ACH_SCHOOL"/>
			<dependency name="CreateDynamicRaceCP"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="achievement"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="drivingExamData"/>
			<dependency name="drivingExamData"/>
			<dependency name="examPositions"/>
			<dependency name="examPositions"/>
			<dependency name="exam_name"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pDriveCP"/>
			<dependency name="pDriveExam"/>
			<dependency name="pDriveLicense"/>
			<dependency name="pDriveLicense"/>
			<dependency name="pDriveStatus"/>
			<dependency name="pDriveType"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_god"/>
			<dependency name="player_nickname"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynRaceCP@0V" syntax="_@yHOnPlayerEnterDynRaceCP@0V(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="113"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0V"/>
			<dependency name="ACH_ZRZUT"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicRaceCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="MAPICON_GLOBAL"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SetVehiclePosition"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="ZrzutCP"/>
			<dependency name="ZrzutMapIcon"/>
			<dependency name="ZrzutPaczka"/>
			<dependency name="ZrzutPaczkaCount"/>
			<dependency name="ZrzutPositions"/>
			<dependency name="ZrzutPositions"/>
			<dependency name="ZrzutReward"/>
			<dependency name="ZrzutSwitch"/>
			<dependency name="ZrzutVehicle"/>
			<dependency name="acc_RepairVehicle"/>
			<dependency name="achievement"/>
			<dependency name="addJobScore"/>
			<dependency name="false"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="pJob"/>
			<dependency name="random"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynRaceCP@0s" syntax="_@yHOnPlayerEnterDynRaceCP@0s(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="@yH_OnPlayerEnterDynRaceCP@0s"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="ACH_RC"/>
			<dependency name="CheckBet"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicRaceCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_RC"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="RaceArenaID"/>
			<dependency name="RaceArenaName"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="RaceCountCPs"/>
			<dependency name="RaceMapIcon"/>
			<dependency name="RaceMatchCP"/>
			<dependency name="RaceMatchCP"/>
			<dependency name="RaceMeta"/>
			<dependency name="RaceRecordID"/>
			<dependency name="RaceRecordTime"/>
			<dependency name="RaceStatusData"/>
			<dependency name="RaceTimer"/>
			<dependency name="RaceVehicle"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="VW_RC"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="achievement"/>
			<dependency name="checkTime"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_nickname"/>
			<dependency name="race_status"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@08" syntax="_@yHOnPlayerEnterDynamicCP@08(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@08"/>
			<dependency name="IsPlayerNearBankCP"/>
			<dependency name="ShowBankPanel"/>
			<dependency name="bankCheckpoint"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@09" syntax="_@yHOnPlayerEnterDynamicCP@09(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@09"/>
			<dependency name="ConvertTime"/>
			<dependency name="GetPVarInt"/>
			<dependency name="ShowVaultDialog"/>
			<dependency name="bankHeistCheckpoint"/>
			<dependency name="bankHeistVaultOpen"/>
			<dependency name="dialogBox"/>
			<dependency name="gettime"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@0C" syntax="_@yHOnPlayerEnterDynamicCP@0C(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0C"/>
			<dependency name="RunDriveExams"/>
			<dependency name="WordCP"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@0F" syntax="_@yHOnPlayerEnterDynamicCP@0F(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0F"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsTrailerAttachedToVehicle"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ShowTruckMenu"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="pTruck"/>
			<dependency name="pTruckCheckpoint"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="truckCP"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@0M" syntax="_@yHOnPlayerEnterDynamicCP@0M(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0M"/>
			<dependency name="GieldaSellPanel"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="IsPlayerNearSellPoint"/>
			<dependency name="gieldaSellOwned"/>
			<dependency name="gieldaSellPos"/>
			<dependency name="gieldaSellPos"/>
			<dependency name="pVeh"/>
			<dependency name="pVehID"/>
			<dependency name="pVehOwner"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="setPosition"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@0U" syntax="_@yHOnPlayerEnterDynamicCP@0U(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0U"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="grabarzCP"/>
			<dependency name="grabarzEtap"/>
			<dependency name="grabarzTrumna"/>
			<dependency name="grabarzVehicle"/>
			<dependency name="pJob"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@0W" syntax="_@yHOnPlayerEnterDynamicCP@0W(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="112"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0W"/>
			<dependency name="ACH_TAXI"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicActor"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicActor"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="JobDay"/>
			<dependency name="SetPVarInt"/>
			<dependency name="TaxiActor"/>
			<dependency name="TaxiCP"/>
			<dependency name="TaxiClient"/>
			<dependency name="TaxiLabel"/>
			<dependency name="TaxiReward"/>
			<dependency name="TaxiSwitch"/>
			<dependency name="TaxiVehicle"/>
			<dependency name="Taxi_Random"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="VW_TAXI"/>
			<dependency name="achievement"/>
			<dependency name="addJobScore"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="pJob"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<dependency name="random"/>
			<dependency name="strdot"/>
			<dependency name="taxiPositionData"/>
			<dependency name="taxiPositionData"/>
			<dependency name="taxi_cp"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@0e" syntax="_@yHOnPlayerEnterDynamicCP@0e(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0e"/>
			<dependency name="GunShopCP"/>
			<dependency name="GunShop_Panel"/>
			<dependency name="playerData"/>
			<dependency name="player_business"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@0m" syntax="_@yHOnPlayerEnterDynamicCP@0m(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="265"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0m"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="EOS"/>
			<dependency name="GetBagWeight"/>
			<dependency name="GetMineWeight"/>
			<dependency name="GetMineWeight"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="MineSell"/>
			<dependency name="MineSellCP"/>
			<dependency name="MineSellIcon"/>
			<dependency name="MineSellLabel"/>
			<dependency name="MineSellNagroda"/>
			<dependency name="MineSellTimer"/>
			<dependency name="MineSellVehicle"/>
			<dependency name="MineWeight"/>
			<dependency name="MineWeight"/>
			<dependency name="ShowMissionDraw"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="catstr"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="mysql_pquery"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterDynamicCP@0v" syntax="_@yHOnPlayerEnterDynamicCP@0v(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="101"/>
			<referrer name="@yH_OnPlayerEnterDynamicCP@0v"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ACH_WP"/>
			<dependency name="CheckBet"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_WP"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RaceArenaName"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="StopWP"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="achievement"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="showGameDraw"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="tdInfo"/>
			<dependency name="true"/>
			<dependency name="wpArenaID"/>
			<dependency name="wpMeta"/>
			<dependency name="wpRecordTime"/>
			<dependency name="wpRecordUID"/>
			<dependency name="wpTimer"/>
			<dependency name="wpWinCP"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterVehicle@0F" syntax="_@yHOnPlayerEnterVehicle@0F(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0F"/>
			<dependency name="SetPVarInt"/>
			<dependency name="pTruck"/>
			<dependency name="pTruckVehicle"/>
			<dependency name="showGameDraw"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterVehicle@0U" syntax="_@yHOnPlayerEnterVehicle@0U(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0U"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="grabarzVehicleOwner"/>
			<dependency name="msg"/>
			<dependency name="pJob"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterVehicle@0m" syntax="_@yHOnPlayerEnterVehicle@0m(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0m"/>
			<dependency name="MineSell"/>
			<dependency name="MineSellTimer"/>
			<dependency name="MineSellVehicle"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterVehicle@0q" syntax="_@yHOnPlayerEnterVehicle@0q(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0q"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="VehicleZP"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="pGame"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:_@yHOnPlayerEnterVehicle@0s" syntax="_@yHOnPlayerEnterVehicle@0s(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerEnterVehicle@0s"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_RC"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="RaceVehicle"/>
			<dependency name="RaceVehicleBack"/>
			<dependency name="pGame"/>
			<dependency name="showGameDraw"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:_@yHOnPlayerExitVehicle@0C" syntax="_@yHOnPlayerExitVehicle@0C(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerExitVehicle@0C"/>
			<dependency name="pDriveExam"/>
			<dependency name="pDriveTimer"/>
			<dependency name="pDriveType"/>
			<dependency name="pDriveVehicle"/>
			<dependency name="showGameDraw"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerExitVehicle@0F" syntax="_@yHOnPlayerExitVehicle@0F(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerExitVehicle@0F"/>
			<dependency name="SetPVarInt"/>
			<dependency name="pTruck"/>
			<dependency name="pTruckVehicle"/>
			<dependency name="showGameDraw"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerExitVehicle@0V" syntax="_@yHOnPlayerExitVehicle@0V(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="@yH_OnPlayerExitVehicle@0V"/>
			<dependency name="ExitPraca"/>
			<dependency name="ZrzutVehicle"/>
			<dependency name="pJob"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerExitVehicle@0m" syntax="_@yHOnPlayerExitVehicle@0m(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerExitVehicle@0m"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="MineSell"/>
			<dependency name="MineSellTimer"/>
			<dependency name="MineSellVehicle"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerExitVehicle@0s" syntax="_@yHOnPlayerExitVehicle@0s(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerExitVehicle@0s"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_RC"/>
			<dependency name="GameStarted"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="RaceVehicleBack"/>
			<dependency name="pGame"/>
			<dependency name="showGameDraw"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@07" syntax="_@yHOnPlayerKeyStateChange@07(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="@yH_OnPlayerKeyStateChange@07"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetTickCount"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="giveWeapon"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGlitch"/>
			<dependency name="pGlitch"/>
			<dependency name="pGlitchArena"/>
			<dependency name="pGlitchRecord"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@09" syntax="_@yHOnPlayerKeyStateChange@09(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="@yH_OnPlayerKeyStateChange@09"/>
			<dependency name="CheckVaultNear"/>
			<dependency name="KEY_CTRL_BACK"/>
			<dependency name="SetTimerEx"/>
			<dependency name="VW_HEIST"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="bankHeistEnabled"/>
			<dependency name="bankHeistVaultOpen"/>
			<dependency name="false"/>
			<dependency name="math_random"/>
			<dependency name="true"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vaultHeistData"/>
			<dependency name="vault_reward"/>
			<dependency name="vault_robbed"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0D" syntax="_@yHOnPlayerKeyStateChange@0D(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0D"/>
			<dependency name="KEY_SPRINT"/>
			<dependency name="StopLoopingAnim"/>
			<dependency name="pAnimation"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0J" syntax="_@yHOnPlayerKeyStateChange@0J(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="43"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0J"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,_:)"/>
			<dependency name="FuelBar"/>
			<dependency name="FuelCostMoney"/>
			<dependency name="GetEngineColor"/>
			<dependency name="GetFuelingColor"/>
			<dependency name="GetFuelingColor"/>
			<dependency name="GetFuelingName"/>
			<dependency name="GetFuelingName"/>
			<dependency name="GetNearestStation"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="KEY_ACTION"/>
			<dependency name="KEY_CTRL_BACK"/>
			<dependency name="KEY_NO"/>
			<dependency name="KEY_YES"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PlayerFueling"/>
			<dependency name="PlayerFuelingAmount"/>
			<dependency name="PlayerFuelingCost"/>
			<dependency name="PlayerFuelingType"/>
			<dependency name="SetPlayerProgressBarColour"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="ShowPlayerProgressBar"/>
			<dependency name="StopFueling"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="pVeh"/>
			<dependency name="pVehEngine"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuel"/>
			<dependency name="pVehFuelAmount"/>
			<dependency name="pVehGas"/>
			<dependency name="pVehGasEnabled"/>
			<dependency name="pVehID"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="strdot"/>
			<dependency name="tdFuel"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0O" syntax="_@yHOnPlayerKeyStateChange@0O(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0O"/>
			<dependency name="GetNearestBase"/>
			<dependency name="KEY_NO"/>
			<dependency name="KEY_SPRINT"/>
			<dependency name="RunBaseOptions"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0S" syntax="_@yHOnPlayerKeyStateChange@0S(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0S"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="KEY_SPRINT"/>
			<dependency name="KEY_YES"/>
			<dependency name="RunJobPanel"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0U" syntax="_@yHOnPlayerKeyStateChange@0U(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0U"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="KEY_CTRL_BACK"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="grabarzTrumna"/>
			<dependency name="grabarzVehicle"/>
			<dependency name="pJob"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0Y" syntax="_@yHOnPlayerKeyStateChange@0Y(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Y"/>
			<dependency name="DrwalTree"/>
			<dependency name="GetNearestTree"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="pJob"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_holding"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0Z" syntax="_@yHOnPlayerKeyStateChange@0Z(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0Z"/>
			<dependency name="GetNearestGrzyb"/>
			<dependency name="GrzybiarzZbiera"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="KEY_SECONDARY_ATTACK"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="pJob"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0c" syntax="_@yHOnPlayerKeyStateChange@0c(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0c"/>
			<dependency name="GetNearestBusiness"/>
			<dependency name="KEY_CTRL_BACK"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="ShowBusinessPanel"/>
			<dependency name="WC_GetPlayerState"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0d" syntax="_@yHOnPlayerKeyStateChange@0d(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0d"/>
			<dependency name="Fortune_Start"/>
			<dependency name="GetNearestFortune"/>
			<dependency name="GetNearestRoulette"/>
			<dependency name="GetNearestSlots"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="KEY_YES"/>
			<dependency name="ShowCasinoShop"/>
			<dependency name="ShowRoulettePanel"/>
			<dependency name="Slots_Start"/>
			<dependency name="playerData"/>
			<dependency name="player_business"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0i" syntax="_@yHOnPlayerKeyStateChange@0i(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="38"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0i"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="ACH_RYBAK"/>
			<dependency name="CA_IsPlayerNearWater"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DeletePolish"/>
			<dependency name="EOS"/>
			<dependency name="FishBar"/>
			<dependency name="GetAchievement"/>
			<dependency name="GetFishClass"/>
			<dependency name="GetFishClass"/>
			<dependency name="GetPVarFloat"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="KEY_YES"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="WC_ApplyAnimation"/>
			<dependency name="WC_ClearAnimations"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="achievement"/>
			<dependency name="addLevelScore"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="fishData"/>
			<dependency name="fishData"/>
			<dependency name="fishEvent"/>
			<dependency name="fishRodeData"/>
			<dependency name="fish_money"/>
			<dependency name="fish_name"/>
			<dependency name="fish_rode_amount"/>
			<dependency name="fish_weight"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="math_random_float"/>
			<dependency name="pFishBaitUsed"/>
			<dependency name="pFishRode"/>
			<dependency name="pFishStatus"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="pFishZylka"/>
			<dependency name="pFishing"/>
			<dependency name="pc_cmd_low"/>
			<dependency name="percent_float"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="tdFishing"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0k" syntax="_@yHOnPlayerKeyStateChange@0k(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0k"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetBagAmount"/>
			<dependency name="GetBagWeight"/>
			<dependency name="GetNearestOre"/>
			<dependency name="KEY_SPRINT"/>
			<dependency name="KEY_YES"/>
			<dependency name="MineBag"/>
			<dependency name="MineBagLevel"/>
			<dependency name="MineCounter"/>
			<dependency name="MineMiners"/>
			<dependency name="MinePickaxe"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MineStarted"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WEAPON_SHOVEL"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0m" syntax="_@yHOnPlayerKeyStateChange@0m(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="518"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0m"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetBagWeight"/>
			<dependency name="GetOreCost"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="KEY_YES"/>
			<dependency name="MAPICON_GLOBAL"/>
			<dependency name="MineSell"/>
			<dependency name="MineSellCP"/>
			<dependency name="MineSellIcon"/>
			<dependency name="MineSellLabel"/>
			<dependency name="MineSellNagroda"/>
			<dependency name="MineSellTimer"/>
			<dependency name="MineSellVehicle"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetHealth"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dialogBox"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="oreEvent"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0n" syntax="_@yHOnPlayerKeyStateChange@0n(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0n"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="KEY_NO"/>
			<dependency name="KEY_YES"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pRaceCreatorCP"/>
			<dependency name="pRaceCreatorCP"/>
			<dependency name="pRaceCreatorCPs"/>
			<dependency name="pRaceCreatorModel"/>
			<dependency name="pRaceCreatorName"/>
			<dependency name="pRaceCreatorName"/>
			<dependency name="pRaceCreatorPoints"/>
			<dependency name="pRaceCreatorSpawn"/>
			<dependency name="pRaceCreatorSpawn"/>
			<dependency name="sendError"/>
			<dependency name="showGameDraw"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerKeyStateChange@0o" syntax="_@yHOnPlayerKeyStateChange@0o(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="165"/>
			<referrer name="@yH_OnPlayerKeyStateChange@0o"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="GangZoneDestroy"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="KEY_SECONDARY_ATTACK"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="pWarGame"/>
			<dependency name="pWarGameZone"/>
			<dependency name="pc_cmd_wgc"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:_@yHOnPlayerLeaveDynArea@0O" syntax="_@yHOnPlayerLeaveDynArea@0O(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="@yH_OnPlayerLeaveDynArea@0O"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_gangbase"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerPickUpDynPickup@05" syntax="_@yHOnPlayerPickUpDynPickup@05(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="165"/>
			<referrer name="@yH_OnPlayerPickUpDynPickup@05"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_TextDrawHideForAll"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="addLevelScore"/>
			<dependency name="bombaOwner"/>
			<dependency name="bombaPickup"/>
			<dependency name="bombaTimer"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="random"/>
			<dependency name="s"/>
			<dependency name="strdot"/>
			<dependency name="tdBomba"/>
			<dependency name="tdWalizka"/>
			<dependency name="walizkaOwner"/>
			<dependency name="walizkaPickup"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerPickUpPickup@0c" syntax="_@yHOnPlayerPickUpPickup@0c(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="@yH_OnPlayerPickUpPickup@0c"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadWeaponData"/>
			<dependency name="Teleport"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_pickupExit"/>
			<dependency name="business_position"/>
			<dependency name="false"/>
			<dependency name="pBusinessTimer"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_business"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerShootDynObject@0H" syntax="_@yHOnPlayerShootDynObject@0H(playerid, weaponid, objectid, x, y, z)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="@yH_OnPlayerShootDynObject@0H"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ACH_KURCZAK"/>
			<dependency name="DestroyKurczak"/>
			<dependency name="KurczakDamage"/>
			<dependency name="KurczakEnabled"/>
			<dependency name="KurczakHealth"/>
			<dependency name="KurczakObject"/>
			<dependency name="KurczakReward"/>
			<dependency name="achievement"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random_float"/>
			<dependency name="msg"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnPlayerShootDynObject@0X" syntax="_@yHOnPlayerShootDynObject@0X(playerid, weaponid, objectid, x, y, z)">
			<attribute name="public"/>
			<stacksize value="137"/>
			<referrer name="@yH_OnPlayerShootDynObject@0X"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ACH_MYSLIWY"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="HuntingAlive"/>
			<dependency name="HuntingAlive"/>
			<dependency name="HuntingCount"/>
			<dependency name="HuntingCountAlive"/>
			<dependency name="HuntingHealth"/>
			<dependency name="HuntingHealth"/>
			<dependency name="HuntingLabel"/>
			<dependency name="HuntingLabel"/>
			<dependency name="HuntingObject"/>
			<dependency name="HuntingObject"/>
			<dependency name="HuntingReward"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="Mysliwy_Random"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="UpdateJobDraw"/>
			<dependency name="achievement"/>
			<dependency name="addJobScore"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="math_random_float"/>
			<dependency name="msg"/>
			<dependency name="pJob"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnPlayerUpdate@0G" syntax="_@yHOnPlayerUpdate@0G(playerid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerUpdate@0G"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="pAFK"/>
			<dependency name="pAFKPosition"/>
			<dependency name="pAFKTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerUpdate@0J" syntax="_@yHOnPlayerUpdate@0J(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="@yH_OnPlayerUpdate@0J"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PlayerFueling"/>
			<dependency name="acc_RepairVehicle"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerUpdate@0o" syntax="_@yHOnPlayerUpdate@0o(playerid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerUpdate@0o"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="GangZoneDestroy"/>
			<dependency name="GangZoneShowForPlayer"/>
			<dependency name="GetPlayerKeys"/>
			<dependency name="KEY_DOWN"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="KEY_LEFT"/>
			<dependency name="KEY_RIGHT"/>
			<dependency name="KEY_UP"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="pWarGame"/>
			<dependency name="pWarGamePosition"/>
			<dependency name="pWarGamePosition"/>
			<dependency name="pWarGameZone"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHOnPlayerWeaponShot@10" syntax="_@yHOnPlayerWeaponShot@10(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerWeaponShot@10"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="BULLET_HIT_TYPE_NONE"/>
			<dependency name="KickPlayer"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="hittype">
			</param>
			<param name="hitid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:_@yHOnScriptExit@000" syntax="_@yHOnScriptExit@000()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="@yH_OnScriptExit@000"/>
			<dependency name="DestroyAllPlayerProgressBars"/>
			<dependency name="IsPlayerConnected"/>
		</member>
		<member name="M:_@yHOnScriptInit@000" syntax="_@yHOnScriptInit@000()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="@yH_OnScriptInit@000"/>
			<dependency name="I@"/>
		</member>
		<member name="M:_@yHOnVehicleMod@0L" syntax="_@yHOnVehicleMod@0L(playerid, vehicleid, componentid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="@yH_OnVehicleMod@0L"/>
			<dependency name="SavePrivCar"/>
			<dependency name="VehiclePrivate"/>
			<dependency name="VehiclePrivateID"/>
			<dependency name="pVehSpawned"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:_@yHOnVehiclePaintjob@0L" syntax="_@yHOnVehiclePaintjob@0L(playerid, vehicleid, paintjobid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="@yH_OnVehiclePaintjob@0L"/>
			<dependency name="SavePrivCar"/>
			<dependency name="VehiclePrivate"/>
			<dependency name="VehiclePrivateID"/>
			<dependency name="pVehPaintJob"/>
			<dependency name="pVehSpawned"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@04" syntax="_@yHResetPlayerData@04(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@04"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievementData"/>
			<dependency name="pAchievementData"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementStatus"/>
			<dependency name="pAchievementStatus"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@07" syntax="_@yHResetPlayerData@07(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@07"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pGlitch"/>
			<dependency name="pGlitch"/>
			<dependency name="pGlitchArena"/>
			<dependency name="pGlitchRecord"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@08" syntax="_@yHResetPlayerData@08(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@08"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="pBank"/>
			<dependency name="pBankAmount"/>
			<dependency name="pBankTarget"/>
			<dependency name="pCredit"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0@" syntax="_@yHResetPlayerData@0@(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0@"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="pSpectate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0C" syntax="_@yHResetPlayerData@0C(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0C"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pDriveExam"/>
			<dependency name="pDriveLicense"/>
			<dependency name="pDriveLicense"/>
			<dependency name="pDriveStatus"/>
			<dependency name="pDriveType"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0D" syntax="_@yHResetPlayerData@0D(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0D"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pAnimation"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0E" syntax="_@yHResetPlayerData@0E(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0E"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pNoDM"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0F" syntax="_@yHResetPlayerData@0F(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0F"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pTruck"/>
			<dependency name="pTruckCheckpoint"/>
			<dependency name="pTruckData"/>
			<dependency name="pTruckData"/>
			<dependency name="pTruckDist"/>
			<dependency name="pTruckIcon"/>
			<dependency name="pTruckLabel"/>
			<dependency name="pTruckReward"/>
			<dependency name="pTruckTowar"/>
			<dependency name="pTruckTrailer"/>
			<dependency name="pTruckVehicle"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0G" syntax="_@yHResetPlayerData@0G(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0G"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pAFK"/>
			<dependency name="pAFKHealth"/>
			<dependency name="pAFKHealth"/>
			<dependency name="pAFKPosition"/>
			<dependency name="pAFKPosition"/>
			<dependency name="pAFKTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0H" syntax="_@yHResetPlayerData@0H(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0H"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="KurczakDamage"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0J" syntax="_@yHResetPlayerData@0J(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0J"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="PlayerFueling"/>
			<dependency name="PlayerFuelingAmount"/>
			<dependency name="PlayerFuelingCost"/>
			<dependency name="PlayerFuelingType"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0R" syntax="_@yHResetPlayerData@0R(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0R"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="pGangMarket"/>
			<dependency name="pGangMarket"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0S" syntax="_@yHResetPlayerData@0S(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0S"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pJob"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobReward"/>
			<dependency name="pJobReward"/>
			<dependency name="pJobScore"/>
			<dependency name="pJobScore"/>
			<dependency name="pJobUlepszenia"/>
			<dependency name="pJobUlepszenia"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0T" syntax="_@yHResetPlayerData@0T(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0T"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="magazynCP"/>
			<dependency name="magazynLabel"/>
			<dependency name="magazynPaczkaSize"/>
			<dependency name="magazynPaczkaType"/>
			<dependency name="magazynPlacement"/>
			<dependency name="magazynReward"/>
			<dependency name="magazynTowar"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0U" syntax="_@yHResetPlayerData@0U(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0U"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="grabarzCP"/>
			<dependency name="grabarzCorps"/>
			<dependency name="grabarzCount"/>
			<dependency name="grabarzEtap"/>
			<dependency name="grabarzLabel"/>
			<dependency name="grabarzMapIcon"/>
			<dependency name="grabarzReward"/>
			<dependency name="grabarzTrumna"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0V" syntax="_@yHResetPlayerData@0V(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0V"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="ZrzutPaczka"/>
			<dependency name="ZrzutPaczkaCount"/>
			<dependency name="ZrzutPaczkaID"/>
			<dependency name="ZrzutReward"/>
			<dependency name="ZrzutSwitch"/>
			<dependency name="ZrzutVehicle"/>
			<dependency name="ZrzutWaga"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0W" syntax="_@yHResetPlayerData@0W(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0W"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="TaxiActor"/>
			<dependency name="TaxiCP"/>
			<dependency name="TaxiClient"/>
			<dependency name="TaxiLabel"/>
			<dependency name="TaxiReward"/>
			<dependency name="TaxiSwitch"/>
			<dependency name="TaxiVehicle"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0X" syntax="_@yHResetPlayerData@0X(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0X"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="HuntingCount"/>
			<dependency name="HuntingCountAlive"/>
			<dependency name="HuntingReward"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0Y" syntax="_@yHResetPlayerData@0Y(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0Y"/>
			<dependency name="DrwalCount"/>
			<dependency name="DrwalReward"/>
			<dependency name="DrwalTreeCount"/>
			<dependency name="Hooks_Continue_"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0Z" syntax="_@yHResetPlayerData@0Z(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0Z"/>
			<dependency name="GrzybCount"/>
			<dependency name="GrzybCountAlive"/>
			<dependency name="GrzybReward"/>
			<dependency name="GrzybiarzZbiera"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0b" syntax="_@yHResetPlayerData@0b(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0b"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="pBusinessCreatorCost"/>
			<dependency name="pBusinessCreatorName"/>
			<dependency name="pBusinessCreatorName"/>
			<dependency name="pBusinessCreatorPosition"/>
			<dependency name="pBusinessCreatorPosition"/>
			<dependency name="pBusinessCreatorType"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0d" syntax="_@yHResetPlayerData@0d(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0d"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="pCasinoTokens"/>
			<dependency name="pFortuneBlock"/>
			<dependency name="pFortuneCount"/>
			<dependency name="pFortuneID"/>
			<dependency name="pFortuneTimer"/>
			<dependency name="pRouletteColor"/>
			<dependency name="pRouletteCount"/>
			<dependency name="pRouletteNumber"/>
			<dependency name="pRouletteTimer"/>
			<dependency name="pRouletteTokens"/>
			<dependency name="pSlotsCount"/>
			<dependency name="pSlotsID"/>
			<dependency name="pSlotsNumber"/>
			<dependency name="pSlotsNumber"/>
			<dependency name="pSlotsSpin"/>
			<dependency name="pSlotsTimer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0f" syntax="_@yHResetPlayerData@0f(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0f"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishBaitUsed"/>
			<dependency name="pFishRode"/>
			<dependency name="pFishStatus"/>
			<dependency name="pFishZylka"/>
			<dependency name="pFishing"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0g" syntax="_@yHResetPlayerData@0g(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0g"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pFishUlepszenia"/>
			<dependency name="pFishUlepszenia"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0j" syntax="_@yHResetPlayerData@0j(playerid)">
			<stacksize value="5"/>
			<referrer name="@yH_ResetPlayerData@0j"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="MineBag"/>
			<dependency name="MineBagLevel"/>
			<dependency name="MinePickaxe"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeHealth"/>
			<dependency name="MinePickaxeName"/>
			<dependency name="MinePickaxeName"/>
			<dependency name="MinePoints"/>
			<dependency name="MineSell"/>
			<dependency name="MineSellNagroda"/>
			<dependency name="MineSellTimer"/>
			<dependency name="MineStarted"/>
			<dependency name="MineWeight"/>
			<dependency name="MineWeight"/>
			<dependency name="false"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0o" syntax="_@yHResetPlayerData@0o(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0o"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pWarGame"/>
			<dependency name="pWarGamePosition"/>
			<dependency name="pWarGamePosition"/>
			<dependency name="pWarGameWeapons"/>
			<dependency name="pWarGameWeapons"/>
			<dependency name="pWarGameZone"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@0x" syntax="_@yHResetPlayerData@0x(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@0x"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pEventZone"/>
			<dependency name="pEventZoneCreator"/>
			<dependency name="pEventZonePos"/>
			<dependency name="pEventZonePos"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@11" syntax="_@yHResetPlayerData@11(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@11"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="false"/>
			<dependency name="pBetAccept"/>
			<dependency name="pBetGang"/>
			<dependency name="pBetReward"/>
			<dependency name="pBetTarget"/>
			<dependency name="pBetType"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHResetPlayerData@12" syntax="_@yHResetPlayerData@12(playerid)">
			<stacksize value="4"/>
			<referrer name="@yH_ResetPlayerData@12"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="IsKicked"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_@yHSetPlayerColor@13" syntax="_@yHSetPlayerColor@13(playerid, color)">
			<stacksize value="6"/>
			<referrer name="@yH_SetPlayerColor@13"/>
			<dependency name="Hooks_Continue_"/>
			<dependency name="IsPlayerSpawned"/>
			<dependency name="WC_PlayerTextDrawColor"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="playerData"/>
			<dependency name="player_logged"/>
			<dependency name="tdPosition"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:_FIXES_OnClientCheckResponse" syntax="_FIXES_OnClientCheckResponse()">
			<stacksize value="1"/>
			<automaton name="OnClientCheckResponse"/>
		</member>
		<member name="M:_Hooks_AddReplacement" syntax="_Hooks_AddReplacement(longName[], shortName[])">
			<stacksize value="5"/>
			<referrer name="@_yHCheckpoint"/>
			<referrer name="@_yHCollisions"/>
			<referrer name="@_yHContainer"/>
			<referrer name="@_yHInventory"/>
			<referrer name="@_yHTextDraw"/>
			<referrer name="@_yHCommand"/>
			<referrer name="@_yHDynamic"/>
			<referrer name="@_yHAction"/>
			<referrer name="@_yHObject"/>
			<referrer name="@_yHUpdate"/>
			<referrer name="@_yHDynamicCP"/>
			<dependency name="Debug_Print0"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_LONG"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MAX"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MIN"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_SHORT"/>
			<dependency name="YSI_g_sReplacePtr"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacementsLongOrder"/>
			<dependency name="YSI_g_sReplacementsShortOrder"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<param name="longName">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="shortName">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  Call the main hook run code, then advance the ALS chain.  </remarks> 
		</member>
		<member name="M:_Hooks_RepairStub" syntax="_Hooks_RepairStub()">
			<stacksize value="4"/>
			<referrer name="_Hooks_RepairStubFS"/>
			<referrer name="_Hooks_RepairStubGM"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="YSI_gAMXAddress_"/>
			<dependency name="YSI_g_sInitFSIdx"/>
			<dependency name="YSI_g_sInitFSRep"/>
			<dependency name="YSI_g_sInitGMIdx"/>
			<dependency name="YSI_g_sInitGMRep"/>
			<dependency name="YSI_g_sInitPublicDiff"/>
			<dependency name="YSI_g_sSortedOnce"/>
			<dependency name="true"/>
		</member>
		<member name="M:_Hooks_RepairStubFS" syntax="_Hooks_RepairStubFS()">
			<stacksize value="3"/>
			<referrer name="Hooks_RepairJITInit"/>
			<dependency name="YSI_g_sInitFSPtr"/>
			<dependency name="_Hooks_RepairStub"/>
		</member>
		<member name="M:_Hooks_RepairStubGM" syntax="_Hooks_RepairStubGM()">
			<stacksize value="3"/>
			<referrer name="Hooks_RepairJITInit"/>
			<dependency name="YSI_g_sInitGMPtr"/>
			<dependency name="_Hooks_RepairStub"/>
		</member>
		<member name="M:_NDP_ShowPlayerDialog_" syntax="_NDP_ShowPlayerDialog_(playerid, dialogid, style, caption[], info[], button1[], button2[], items_per_page, nextbutton[], backbutton[])">
			<stacksize value="14"/>
			<referrer name="showDialog"/>
			<dependency name="Dialog_ShowPlayerDialog"/>
			<dependency name="NDP_DIALOG_TYPE_LEGACY"/>
			<dependency name="NDP_DialogInvoke"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="style">
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="info">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="items_per_page">
			</param>
			<param name="nextbutton">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="backbutton">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_PreHook_IncludeStates" syntax="_PreHook_IncludeStates()">
			<stacksize value="1"/>
			<automaton name="_ALS"/>
		</member>
		<member name="M:_PrintBufferAmxBacktrace" syntax="_PrintBufferAmxBacktrace(crash)">
			<stacksize value="8"/>
			<referrer name="Logger_Err"/>
			<referrer name="Logger_Fatal"/>
			<dependency name="EventBuffer"/>
			<dependency name="PrintBacktrace"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="fread"/>
			<dependency name="io_read"/>
			<dependency name="print"/>
			<param name="crash">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:_ScriptInit_FixState" syntax="_ScriptInit_FixState()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_script_init_fix_state"/>
		</member>
		<member name="M:_SortDeepArray" syntax="_SortDeepArray(array[][], left, right)">
			<stacksize value="11"/>
			<referrer name="SortDeepArray_Entry"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ExchangeArraySlots"/>
			<dependency name="SORT_ASC"/>
			<dependency name="g_sort_cmp_offset"/>
			<dependency name="g_sort_cmp_type"/>
			<dependency name="g_sort_ignorecase"/>
			<dependency name="g_sort_order"/>
			<dependency name="g_sort_stack"/>
			<dependency name="strcmp"/>
			<param name="array">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="left">
			</param>
			<param name="right">
			</param>
		</member>
		<member name="M:_Timer_A" syntax="_Timer_A(str[], len)">
			<stacksize value="8"/>
			<dependency name="Malloc_SetA"/>
			<dependency name="Timer_GetSingleSlot"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:_Timer_B" syntax="_Timer_B(repeatCount)">
			<stacksize value="4"/>
			<referrer name="_yT@SecondTimer"/>
			<referrer name="_yT@MinuteTimer"/>
			<dependency name="Timer_GetSingleSlot"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFirstSlot"/>
			<param name="repeatCount">
			</param>
		</member>
		<member name="M:_Timer_C" syntax="_Timer_C(timerID)">
			<tagname value="Timer"/>
			<stacksize value="1"/>
			<referrer name="_yT@SecondTimer"/>
			<referrer name="_yT@MinuteTimer"/>
			<dependency name="I@"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFirstSlot"/>
			<dependency name="YSI_g_sLastSlot"/>
			<dependency name="YSI_g_sTimerList"/>
			<dependency name="YSI_g_sUserId"/>
			<param name="timerID">
			</param>
		</member>
		<member name="M:_Timer_D" syntax="_Timer_D(func[], interval, action, who, results[], a[])">
			<stacksize value="7"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="YSI_SetTimerEx__"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<dependency name="true"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="action">
			</param>
			<param name="who">
			</param>
			<param name="results">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="a">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:_Timer_F" syntax="_Timer_F(slot, force)">
			<stacksize value="6"/>
			<referrer name="@_yTSecondTimer"/>
			<referrer name="@_yTMinuteTimer"/>
			<dependency name="KillTimer"/>
			<dependency name="Malloc_Free"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sTimerList"/>
			<dependency name="_Timer_Get"/>
			<dependency name="_YSI_g_sCurrentTimer"/>
			<param name="slot">
				<paraminfo>Timer </paraminfo>
			</param>
			<param name="force">
			</param>
		</member>
		<member name="M:_Timer_Get" syntax="_Timer_Get(slot)">
			<tagname value="Alloc"/>
			<stacksize value="2"/>
			<referrer name="Timer_GetCallCount"/>
			<referrer name="Timer_IsRunning"/>
			<referrer name="_Timer_F"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sTimerList"/>
			<param name="slot">
				<paraminfo>Timer </paraminfo>
			</param>
		</member>
		<member name="M:_Timer_I" syntax="_Timer_I(func[], interval, action, &amp;result)">
			<stacksize value="5"/>
			<dependency name="KillTimer"/>
			<dependency name="YSI_SetTimer__"/>
			<dependency name="true"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="action">
			</param>
			<param name="result">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:_Timer_S" syntax="_Timer_S(str[])">
			<stacksize value="9"/>
			<dependency name="Malloc_SetS"/>
			<dependency name="Timer_GetSingleSlot"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_WC_IncludeStates" syntax="_WC_IncludeStates()">
			<stacksize value="1"/>
			<automaton name="_ALS"/>
		</member>
		<member name="M:_YSI_ConstCpy__" syntax="_YSI_ConstCpy__(dst[], src[], index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="Hooks_WriteFunction"/>
			<param name="dst">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:_YSI_ConstMod" syntax="_YSI_ConstMod(&amp;var, val)">
			<stacksize value="1"/>
			<param name="var">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="val">
			</param>
		</member>
		<member name="M:_YSI_FGetChar__" syntax="_YSI_FGetChar__(handle, value, utf8)">
			<attribute name="native"/>
			<referrer name="Files_CopyRange"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="utf8">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:__CodeParse_FirstPass" syntax="__CodeParse_FirstPass()">
			<stacksize value="1"/>
			<p/>
		</member>
		<member name="M:__CompilerFirstPass" syntax="__CompilerFirstPass()">
			<stacksize value="1"/>
		</member>
		<member name="M:__MACRO__ceildiv" syntax="__MACRO__ceildiv()">
			<stacksize value="1"/>
			<referrer name="Base64Encode"/>
		</member>
		<member name="M:__pragma_align" syntax="__pragma_align()">
			<stacksize value="1"/>
		</member>
		<member name="M:__pragma_amxlimit" syntax="__pragma_amxlimit(limit)">
			<stacksize value="1"/>
			<param name="limit">
			</param>
		</member>
		<member name="M:__pragma_amxram" syntax="__pragma_amxram(ram)">
			<stacksize value="1"/>
			<param name="ram">
			</param>
		</member>
		<member name="M:__pragma_codepage" syntax="__pragma_codepage(codepage[])">
			<stacksize value="1"/>
			<param name="codepage">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:__pragma_compat" syntax="__pragma_compat(compatibility)">
			<stacksize value="1"/>
			<param name="compatibility">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:__pragma_compress" syntax="__pragma_compress(compress)">
			<stacksize value="1"/>
			<param name="compress">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:__pragma_ctrlchar" syntax="__pragma_ctrlchar(character)">
			<stacksize value="1"/>
			<param name="character">
			</param>
		</member>
		<member name="M:__pragma_deprecated" syntax="__pragma_deprecated(symbol[])">
			<stacksize value="1"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:__pragma_dynamic" syntax="__pragma_dynamic(ram)">
			<stacksize value="1"/>
			<param name="ram">
			</param>
		</member>
		<member name="M:__pragma_library" syntax="__pragma_library(library[])">
			<stacksize value="1"/>
			<param name="library">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:__pragma_option" syntax="__pragma_option()">
			<stacksize value="1"/>
		</member>
		<member name="M:__pragma_overlay" syntax="__pragma_overlay(size)">
			<stacksize value="1"/>
			<param name="size">
			</param>
		</member>
		<member name="M:__pragma_pack" syntax="__pragma_pack(pack)">
			<stacksize value="1"/>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:__pragma_rational" syntax="__pragma_rational(tagname[], bits)">
			<stacksize value="1"/>
			<param name="tagname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="bits">
			</param>
		</member>
		<member name="M:__pragma_semicolon" syntax="__pragma_semicolon(use)">
			<stacksize value="1"/>
			<param name="use">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:__pragma_tabsize" syntax="__pragma_tabsize(tabsize)">
			<stacksize value="1"/>
			<param name="tabsize">
			</param>
		</member>
		<member name="M:__pragma_warning" syntax="__pragma_warning(type, warning)">
			<stacksize value="1"/>
			<param name="type">
				<paraminfo>__PRAGMA_WARNING </paraminfo>
			</param>
			<param name="warning">
			</param>
		</member>
		<member name="M:_bar_percent" syntax="_bar_percent(x, widthorheight, max, value, direction)">
			<tagname value="Float"/>
			<stacksize value="2"/>
			<referrer name="SetPlayerProgressBarValue"/>
			<referrer name="_progress2_renderBar"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="BAR_DIRECTION_DOWN"/>
			<dependency name="BAR_DIRECTION_LEFT"/>
			<dependency name="BAR_DIRECTION_RIGHT"/>
			<dependency name="BAR_DIRECTION_UP"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="widthorheight">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="direction">
			</param>
		</member>
		<member name="M:_catstr" syntax="_catstr(variable[], color, secondcolor, text[], lenght)">
			<stacksize value="4126"/>
			<referrer name="catstr"/>
			<dependency name="format"/>
			<dependency name="strcat"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<param name="variable">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="secondcolor">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lenght">
			</param>
		</member>
		<member name="M:_isEveen" syntax="_isEveen(value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				Value to check if is even.
			</param>
			 
		</member>
		<member name="M:_progress2_renderBar" syntax="_progress2_renderBar(playerid, barid)">
			<stacksize value="11"/>
			<referrer name="CreatePlayerProgressBar"/>
			<referrer name="SetPlayerProgressBarPos"/>
			<referrer name="SetPlayerProgressBarWidth"/>
			<referrer name="SetPlayerProgressBarHeight"/>
			<referrer name="SetPlayerProgressBarDirection"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="BAR_DIRECTION_DOWN"/>
			<dependency name="BAR_DIRECTION_LEFT"/>
			<dependency name="BAR_DIRECTION_RIGHT"/>
			<dependency name="BAR_DIRECTION_UP"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidPlayerProgressBar"/>
			<dependency name="PlayerTextDrawBoxColor"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="ShowPlayerProgressBar"/>
			<dependency name="_bar_percent"/>
			<dependency name="false"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_Data"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_TextDraw"/>
			<dependency name="pbar_back"/>
			<dependency name="pbar_colour"/>
			<dependency name="pbar_direction"/>
			<dependency name="pbar_fill"/>
			<dependency name="pbar_height"/>
			<dependency name="pbar_main"/>
			<dependency name="pbar_maxValue"/>
			<dependency name="pbar_posX"/>
			<dependency name="pbar_posY"/>
			<dependency name="pbar_progressValue"/>
			<dependency name="pbar_show"/>
			<dependency name="pbar_width"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="barid">
			</param>
		</member>
		<member name="M:_updateGangBarEx" syntax="_updateGangBarEx(playerid, gangid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GangBar"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="SetPlayerProgressBarColour"/>
			<dependency name="SetPlayerProgressBarMaxValue"/>
			<dependency name="SetPlayerProgressBarValue"/>
			<dependency name="ShowPlayerProgressBar"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_respect"/>
			<dependency name="gang_respect_needed"/>
			<param name="playerid">
			</param>
			<param name="gangid">
			</param>
		</member>
		<member name="M:_yH@" syntax="_yH@(compressedFormat, address, order, &amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f, &amp;g)">
			<stacksize value="7"/>
			<automaton name="y_hooks_scan"/>
			<referrer name="@yH_ResetPlayerData@04"/>
			<referrer name="@yH_ResetPlayerData@07"/>
			<referrer name="@yH_ResetPlayerData@08"/>
			<referrer name="@yH_ResetPlayerData@0@"/>
			<referrer name="@yH_ResetPlayerData@0C"/>
			<referrer name="@yH_ResetPlayerData@0D"/>
			<referrer name="@yH_ResetPlayerData@0E"/>
			<referrer name="@yH_ResetPlayerData@0F"/>
			<referrer name="@yH_ResetPlayerData@0G"/>
			<referrer name="@yH_ResetPlayerData@0H"/>
			<referrer name="@yH_ResetPlayerData@0J"/>
			<referrer name="@yH_DestroyVehicle@0K"/>
			<referrer name="@yH_ResetPlayerData@0R"/>
			<referrer name="@yH_ResetPlayerData@0S"/>
			<referrer name="@yH_ResetPlayerData@0T"/>
			<referrer name="@yH_ResetPlayerData@0U"/>
			<referrer name="@yH_ResetPlayerData@0V"/>
			<referrer name="@yH_ResetPlayerData@0W"/>
			<referrer name="@yH_ResetPlayerData@0X"/>
			<referrer name="@yH_ResetPlayerData@0Y"/>
			<referrer name="@yH_ResetPlayerData@0Z"/>
			<referrer name="@yH_ResetPlayerData@0b"/>
			<referrer name="@yH_ResetPlayerData@0d"/>
			<referrer name="@yH_ResetPlayerData@0f"/>
			<referrer name="@yH_ResetPlayerData@0g"/>
			<referrer name="@yH_ResetPlayerData@0j"/>
			<referrer name="@yH_ResetPlayerData@0o"/>
			<referrer name="@yH_ResetPlayerData@0x"/>
			<referrer name="@yH_ResetPlayerData@11"/>
			<referrer name="@yH_ResetPlayerData@12"/>
			<referrer name="@yH_SetPlayerColor@13"/>
			<dependency name="Hooks_RegisterNPSHook"/>
			<param name="compressedFormat">
			</param>
			<param name="address">
			</param>
			<param name="order">
			</param>
			<param name="a">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="b">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="c">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="d">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="e">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="f">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="g">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:_yT@MinuteTimer" syntax="_yT@MinuteTimer()">
			<tagname value="Timer"/>
			<stacksize value="8"/>
			<referrer name="Init_Map"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_B"/>
			<dependency name="_Timer_C"/>
			<dependency name="true"/>
		</member>
		<member name="M:_yT@SecondTimer" syntax="_yT@SecondTimer()">
			<tagname value="Timer"/>
			<stacksize value="8"/>
			<referrer name="Init_Map"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_B"/>
			<dependency name="_Timer_C"/>
			<dependency name="true"/>
		</member>
		<member name="M:_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz" syntax="_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz()">
			<stacksize value="1"/>
			<hidden />  <remarks>  This function only exists to hide other functions.  It end a massive  comment block in the pawndoc XML output that hides all internal  functions - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal functions appear in the  generated documentation always.  This is the best way to hide them.  You  still see one function (<c>ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ</c>), but at  least the documentation for that can explain why it exists.  <p />  This is <c>_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz</c> and ends the internal  functions block.  This is the last possible name before the first  character is no longer <c>_</c> when the functions are sorted  lexicographically (alphabetically).  There's also  <c>_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzy</c> that ends the variables block;  they could have the same name if they were not declared in the same  scope, but they might not always be separately defined.  <p />  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="M:ac_AddPlayerClass" syntax="ac_AddPlayerClass(classid, spawn_x, spawn_y, spawn_z, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="acc_AddPlayerClass"/>
			<referrer name="acc_AddPlayerClassEx"/>
			<dependency name="ac_ClassAmmo"/>
			<dependency name="ac_ClassAmmo"/>
			<dependency name="ac_ClassPos"/>
			<dependency name="ac_ClassPos"/>
			<dependency name="ac_ClassWeapon"/>
			<dependency name="ac_ClassWeapon"/>
			<param name="classid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:ac_AddStaticVehicle" syntax="ac_AddStaticVehicle(vehicleid, spawn_x, spawn_y, spawn_z, z_angle)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="acc_AddStaticVehicle"/>
			<referrer name="acc_AddStaticVehicleEx"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="acDoors"/>
			<dependency name="acDriver"/>
			<dependency name="acHealth"/>
			<dependency name="acInt"/>
			<dependency name="acLastSpeed"/>
			<dependency name="acPaintJob"/>
			<dependency name="acPanels"/>
			<dependency name="acPosDiff"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<dependency name="acSpawnZAngle"/>
			<dependency name="acSpawned"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeedDiff"/>
			<dependency name="acTires"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="acZAngle"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_AntiCheatGetAmmoInSlot" syntax="ac_AntiCheatGetAmmoInSlot(playerid, slot)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetAmmoInSlot"/>
			<dependency name="ACInfo"/>
			<dependency name="acAmmo"/>
			<param name="playerid">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetAnimationIndex" syntax="ac_AntiCheatGetAnimationIndex(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetAnimationIndex"/>
			<dependency name="ACInfo"/>
			<dependency name="acAnim"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetDialog" syntax="ac_AntiCheatGetDialog(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetDialog"/>
			<dependency name="ACInfo"/>
			<dependency name="acDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetEnterVehicle" syntax="ac_AntiCheatGetEnterVehicle(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetEnterVehicle"/>
			<dependency name="ACInfo"/>
			<dependency name="acEnterVeh"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetEnterVehicleSeat" syntax="ac_AntiCheatGetEnterVehicleSeat(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetEnterVehicleSeat"/>
			<dependency name="ACInfo"/>
			<dependency name="acEnterSeat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetInterior" syntax="ac_AntiCheatGetInterior(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetInterior"/>
			<dependency name="ACInfo"/>
			<dependency name="acInt"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetLastEnteredVehTi" syntax="ac_AntiCheatGetLastEnteredVehTi(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetLastEnteredVehTime"/>
			<dependency name="ACInfo"/>
			<dependency name="acEnterVehTick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetLastPickup" syntax="ac_AntiCheatGetLastPickup(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetLastPickup"/>
			<dependency name="ACInfo"/>
			<dependency name="acLastPickup"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetLastReloadTime" syntax="ac_AntiCheatGetLastReloadTime(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetLastReloadTime"/>
			<dependency name="ACInfo"/>
			<dependency name="acReloadTick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetLastShotTime" syntax="ac_AntiCheatGetLastShotTime(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetLastShotTime"/>
			<dependency name="ACInfo"/>
			<dependency name="acShotTick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetLastShotWeapon" syntax="ac_AntiCheatGetLastShotWeapon(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetLastShotWeapon"/>
			<dependency name="ACInfo"/>
			<dependency name="acShotWeapon"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetLastSpawnTime" syntax="ac_AntiCheatGetLastSpawnTime(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetLastSpawnTime"/>
			<dependency name="ACInfo"/>
			<dependency name="acSpawnTick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetLastSpecialActio" syntax="ac_AntiCheatGetLastSpecialActio(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetLastSpecialAction"/>
			<dependency name="ACInfo"/>
			<dependency name="acLastSpecAct"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetLastUpdateTime" syntax="ac_AntiCheatGetLastUpdateTime(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetLastUpdateTime"/>
			<dependency name="ACInfo"/>
			<dependency name="acUpdateTick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetNextDialog" syntax="ac_AntiCheatGetNextDialog(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="ACInfo"/>
			<dependency name="acNextDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetSpecialAction" syntax="ac_AntiCheatGetSpecialAction(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetSpecialAction"/>
			<dependency name="ACInfo"/>
			<dependency name="acSpecAct"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetSpeed" syntax="ac_AntiCheatGetSpeed(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetSpeed"/>
			<dependency name="ACInfo"/>
			<dependency name="acSpeed"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetVehicleDriver" syntax="ac_AntiCheatGetVehicleDriver(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetVehicleDriver"/>
			<dependency name="ACVehInfo"/>
			<dependency name="acDriver"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetVehicleID" syntax="ac_AntiCheatGetVehicleID(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetVehicleID"/>
			<dependency name="ACInfo"/>
			<dependency name="acVeh"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetVehicleInterior" syntax="ac_AntiCheatGetVehicleInterior(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetVehicleInterior"/>
			<dependency name="ACVehInfo"/>
			<dependency name="acInt"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetVehiclePaintjob" syntax="ac_AntiCheatGetVehiclePaintjob(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetVehiclePaintjob"/>
			<dependency name="ACVehInfo"/>
			<dependency name="acPaintJob"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetVehicleSeat" syntax="ac_AntiCheatGetVehicleSeat(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetVehicleSeat"/>
			<dependency name="ACInfo"/>
			<dependency name="acSeat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetVehicleSpeed" syntax="ac_AntiCheatGetVehicleSpeed(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetVehicleSpeed"/>
			<dependency name="ACVehInfo"/>
			<dependency name="acSpeed"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetWeapon" syntax="ac_AntiCheatGetWeapon(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetWeapon"/>
			<dependency name="ACInfo"/>
			<dependency name="acHoldWeapon"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatGetWeaponInSlot" syntax="ac_AntiCheatGetWeaponInSlot(playerid, slot)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatGetWeaponInSlot"/>
			<dependency name="ACInfo"/>
			<dependency name="acWeapon"/>
			<param name="playerid">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:ac_AntiCheatIntEnterExitsIsEnab" syntax="ac_AntiCheatIntEnterExitsIsEnab(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatIntEnterExitsIsEnabled"/>
			<dependency name="ACInfo"/>
			<dependency name="acIntEnterExits"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatIsConnected" syntax="ac_AntiCheatIsConnected(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatIsConnected"/>
			<dependency name="ACInfo"/>
			<dependency name="acOnline"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatIsDead" syntax="ac_AntiCheatIsDead(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatIsDead"/>
			<dependency name="ACInfo"/>
			<dependency name="acDead"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatIsFrozen" syntax="ac_AntiCheatIsFrozen(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatIsFrozen"/>
			<dependency name="ACInfo"/>
			<dependency name="acUnFrozen"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatIsInModShop" syntax="ac_AntiCheatIsInModShop(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatIsInModShop"/>
			<dependency name="ACInfo"/>
			<dependency name="acModShop"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatIsInSpectate" syntax="ac_AntiCheatIsInSpectate(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatIsInSpectate"/>
			<dependency name="ACInfo"/>
			<dependency name="acSpec"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatIsKickedWithDesync" syntax="ac_AntiCheatIsKickedWithDesync(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatIsKickedWithDesync"/>
			<dependency name="ACInfo"/>
			<dependency name="acKicked"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_AntiCheatIsVehicleSpawned" syntax="ac_AntiCheatIsVehicleSpawned(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatIsVehicleSpawned"/>
			<dependency name="ACVehInfo"/>
			<dependency name="acSpawned"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_AntiCheatKickWithDesync" syntax="ac_AntiCheatKickWithDesync(playerid, code)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="AntiCheatKickWithDesync"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SetTimerEx"/>
			<dependency name="acKickTimerID"/>
			<dependency name="acKickVeh"/>
			<dependency name="acKicked"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="code">
			</param>
		</member>
		<member name="M:ac_AntiCheatStuntBonusIsEnabled" syntax="ac_AntiCheatStuntBonusIsEnabled(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="AntiCheatStuntBonusIsEnabled"/>
			<dependency name="ACInfo"/>
			<dependency name="acStuntBonus"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_ChangeVehiclePaintjob" syntax="ac_ChangeVehiclePaintjob(vehicleid, paintjobid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_ChangeVehiclePaintjob"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="acPaintJob"/>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:ac_CreateDynamicPickup" syntax="ac_CreateDynamicPickup(pickupid, modelid, type)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="acc_CreateDynamicPickup"/>
			<referrer name="acc_CreateDynamicPickupEx"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="ac_wModel"/>
			<param name="pickupid">
			</param>
			<param name="modelid">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:ac_CreatePickup" syntax="ac_CreatePickup(pickupid, modelid, type, ac_X, ac_Y, ac_Z)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="acc_AddStaticPickup"/>
			<referrer name="acc_CreatePickup"/>
			<dependency name="ACPickInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acType"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_wModel"/>
			<dependency name="true"/>
			<param name="pickupid">
			</param>
			<param name="modelid">
			</param>
			<param name="type">
			</param>
			<param name="ac_X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_CreateVehicle" syntax="ac_CreateVehicle(vehicleid, modelid, ac_x, ac_y, ac_z, ac_rotation)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_CreateVehicle"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="acDoors"/>
			<dependency name="acDriver"/>
			<dependency name="acHealth"/>
			<dependency name="acInt"/>
			<dependency name="acLastSpeed"/>
			<dependency name="acPaintJob"/>
			<dependency name="acPanels"/>
			<dependency name="acPosDiff"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<dependency name="acSpawnZAngle"/>
			<dependency name="acSpawned"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeedDiff"/>
			<dependency name="acTires"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="acZAngle"/>
			<dependency name="ac_IsATrainCarriageEx"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
			<param name="modelid">
			</param>
			<param name="ac_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_rotation">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_DestroyDynamicPickup" syntax="ac_DestroyDynamicPickup(pickupid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="acc_DestroyDynamicPickup"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="Iterator@Player"/>
			<dependency name="acLastPickup"/>
			<dependency name="true"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:ac_DestroyPickup" syntax="ac_DestroyPickup(pickupid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="acc_DestroyPickup"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="DestroyPickup"/>
			<dependency name="Iterator@Player"/>
			<dependency name="acLastPickup"/>
			<dependency name="acType"/>
			<dependency name="acWeapon"/>
			<dependency name="true"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:ac_DestroyVehicle" syntax="ac_DestroyVehicle(vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_DestroyVehicle"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iterator@Player"/>
			<dependency name="acGtc"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acSpawned"/>
			<dependency name="acVeh"/>
			<dependency name="false"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_DisableInteriorEnterExits" syntax="ac_DisableInteriorEnterExits()">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="acc_DisableInteriorEnterExits"/>
			<dependency name="DisableInteriorEnterExits"/>
			<dependency name="ac_IntEnterExits"/>
			<dependency name="false"/>
		</member>
		<member name="M:ac_EnableAntiCheat" syntax="ac_EnableAntiCheat(code, enable)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="EnableAntiCheat"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetConsoleVarAsBool"/>
			<dependency name="Iterator@Player"/>
			<dependency name="SendRconCommand"/>
			<dependency name="acACAllow"/>
			<dependency name="acCheatCount"/>
			<dependency name="ac_ACAllow"/>
			<dependency name="ac_RconEnable"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="true"/>
			<param name="code">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:ac_EnableAntiCheatForPlayer" syntax="ac_EnableAntiCheatForPlayer(playerid, code, enable)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="EnableAntiCheatForPlayer"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="acACAllow"/>
			<dependency name="acCheatCount"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="code">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:ac_EnableAntiNOP" syntax="ac_EnableAntiNOP(nopcode, enable)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="EnableAntiNOP"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="Iterator@Player"/>
			<dependency name="acNOPAllow"/>
			<dependency name="ac_NOPAllow"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="nopcode">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:ac_EnableAntiNOPForPlayer" syntax="ac_EnableAntiNOPForPlayer(playerid, nopcode, enable)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="EnableAntiNOPForPlayer"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="acNOPAllow"/>
			<param name="playerid">
			</param>
			<param name="nopcode">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:ac_EnableStuntBonusForAll" syntax="ac_EnableStuntBonusForAll(enable)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="acc_EnableStuntBonusForAll"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="EnableStuntBonusForAll"/>
			<dependency name="Iterator@Player"/>
			<dependency name="acStuntBonus"/>
			<dependency name="ac_StuntBonus"/>
			<dependency name="false"/>
			<param name="enable">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:ac_EnableStuntBonusForPlayer" syntax="ac_EnableStuntBonusForPlayer(playerid, enable)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_EnableStuntBonusForPlayer"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="EnableStuntBonusForPlayer"/>
			<dependency name="acStuntBonus"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="enable">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:ac_EnableVehicleFriendlyFire" syntax="ac_EnableVehicleFriendlyFire()">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="acc_EnableVehicleFriendlyFire"/>
			<dependency name="EnableVehicleFriendlyFire"/>
			<dependency name="ac_VehFriendlyFire"/>
			<dependency name="true"/>
		</member>
		<member name="M:ac_FloodDetect" syntax="ac_FloodDetect(playerid, publicid)">
			<stacksize value="8"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnPlayerClickMap"/>
			<referrer name="OnPlayerClickPlayer"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSelectedMenuRow"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerExitedMenu"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnVehicleDamageStatusUpdate"/>
			<referrer name="OnVehicleSirenStateChange"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<dependency name="ACInfo"/>
			<dependency name="DEBUG_CODE_1"/>
			<dependency name="acFloodCount"/>
			<dependency name="acKicked"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="ac_Mtfc"/>
			<dependency name="printf"/>
			<param name="playerid">
			</param>
			<param name="publicid">
			</param>
		</member>
		<member name="M:ac_GetMaxPassengers" syntax="ac_GetMaxPassengers(modelid)">
			<stacksize value="4"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_MaxPassengers"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_GetPlayerFacingAngle" syntax="ac_GetPlayerFacingAngle(playerid, &amp;ang)">
			<stacksize value="4"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="SpawnPlayerInPlace"/>
			<referrer name="SaveSyncData"/>
			<referrer name="IsPlayerBehindPlayer"/>
			<referrer name="getPosition"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="floatfract"/>
			<dependency name="floatround"/>
			<dependency name="floatround_floor"/>
			<param name="playerid">
			</param>
			<param name="ang">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:ac_GetPlayerMoney" syntax="ac_GetPlayerMoney(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="acc_GetPlayerMoney"/>
			<dependency name="ACInfo"/>
			<dependency name="acMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_GetPlayerVersion" syntax="ac_GetPlayerVersion(playerid, version[], len)">
			<stacksize value="7"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<dependency name="GetPlayerVersion"/>
			<dependency name="strdel"/>
			<param name="playerid">
			</param>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:ac_GetSpeed" syntax="ac_GetSpeed(ac_x, ac_y, ac_z)">
			<stacksize value="5"/>
			<referrer name="ac_SetPlayerVelocity"/>
			<referrer name="ac_SetVehicleVelocity"/>
			<referrer name="ac_SetVehicleAngularVelocity"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="ac_Timer"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="VectorSize"/>
			<dependency name="floatround"/>
			<param name="ac_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_GetVehicleZAngle" syntax="ac_GetVehicleZAngle(vehicleid, &amp;z_angle)">
			<stacksize value="4"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="getPosition"/>
			<referrer name="GetVehiclePosition"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="floatfract"/>
			<dependency name="floatround"/>
			<dependency name="floatround_floor"/>
			<param name="vehicleid">
			</param>
			<param name="z_angle">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:ac_GivePlayerMoney" syntax="ac_GivePlayerMoney(playerid, ac_money)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_GivePlayerMoney"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="acMoney"/>
			<dependency name="acNOPCount"/>
			<param name="playerid">
			</param>
			<param name="ac_money">
			</param>
		</member>
		<member name="M:ac_GivePlayerWeapon" syntax="ac_GivePlayerWeapon(playerid, weaponid, ac_ammo)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="acc_GivePlayerWeapon"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="acAmmo"/>
			<dependency name="acCheatCount"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtcGiveAmmo"/>
			<dependency name="acGtcSetWeapon"/>
			<dependency name="acNOPCount"/>
			<dependency name="acReloadTick"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_IsValidWeapon"/>
			<dependency name="ac_wSlot"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ac_ammo">
			</param>
		</member>
		<member name="M:ac_InAmmuNation" syntax="ac_InAmmuNation(playerid, interiorid)">
			<stacksize value="7"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="ac_AmmuNations"/>
			<dependency name="ac_AmmuNations"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:ac_InCasino" syntax="ac_InCasino(playerid, interiorid)">
			<stacksize value="8"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="ac_Casinos"/>
			<dependency name="ac_Casinos"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:ac_InPayNSpray" syntax="ac_InPayNSpray(playerid, interiorid)">
			<stacksize value="8"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="ac_PayNSpray"/>
			<dependency name="ac_PayNSpray"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:ac_InRestaurant" syntax="ac_InRestaurant(playerid, interiorid)">
			<stacksize value="7"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerWeaponShot"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="ac_Restaurants"/>
			<dependency name="ac_Restaurants"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:ac_IpToInt" syntax="ac_IpToInt(ip[])">
			<stacksize value="12"/>
			<referrer name="OnRconLoginAttempt"/>
			<dependency name="sscanf"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ac_IsABikeEx" syntax="ac_IsABikeEx(modelid)">
			<stacksize value="4"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsABmx" syntax="ac_IsABmx(modelid)">
			<stacksize value="1"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsABmxEx" syntax="ac_IsABmxEx(modelid)">
			<stacksize value="4"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsABoatEx" syntax="ac_IsABoatEx(modelid)">
			<stacksize value="4"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsABusEx" syntax="ac_IsABusEx(modelid)">
			<stacksize value="4"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsATrainCarriageEx" syntax="ac_IsATrainCarriageEx(modelid)">
			<stacksize value="4"/>
			<referrer name="ac_CreateVehicle"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsATrainLoco" syntax="ac_IsATrainLoco(modelid)">
			<stacksize value="1"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_Timer"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsATrainPartEx" syntax="ac_IsATrainPartEx(modelid)">
			<stacksize value="4"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsAnAircraftEx" syntax="ac_IsAnAircraftEx(modelid)">
			<stacksize value="4"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsAnAirplane" syntax="ac_IsAnAirplane(modelid)">
			<stacksize value="1"/>
			<referrer name="ac_Timer"/>
			<dependency name="ac_vType"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsAntiCheatEnabled" syntax="ac_IsAntiCheatEnabled(code)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="IsAntiCheatEnabled"/>
			<dependency name="ac_ACAllow"/>
			<param name="code">
			</param>
		</member>
		<member name="M:ac_IsAntiCheatEnabledForPlayer" syntax="ac_IsAntiCheatEnabledForPlayer(playerid, code)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="IsAntiCheatEnabledForPlayer"/>
			<dependency name="ACInfo"/>
			<dependency name="acACAllow"/>
			<param name="playerid">
			</param>
			<param name="code">
			</param>
		</member>
		<member name="M:ac_IsAntiNOPEnabled" syntax="ac_IsAntiNOPEnabled(nopcode)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="IsAntiNOPEnabled"/>
			<dependency name="ac_NOPAllow"/>
			<param name="nopcode">
			</param>
		</member>
		<member name="M:ac_IsAntiNOPEnabledForPlayer" syntax="ac_IsAntiNOPEnabledForPlayer(playerid, nopcode)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="IsAntiNOPEnabledForPlayer"/>
			<dependency name="ACInfo"/>
			<dependency name="acNOPAllow"/>
			<param name="playerid">
			</param>
			<param name="nopcode">
			</param>
		</member>
		<member name="M:ac_IsBulletWeapon" syntax="ac_IsBulletWeapon(weaponid)">
			<stacksize value="1"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="ac_Timer"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:ac_IsCompatible" syntax="ac_IsCompatible(modelid, componentid)">
			<stacksize value="4"/>
			<referrer name="OnVehicleMod"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_vMods"/>
			<param name="modelid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:ac_IsValidDamageReason" syntax="ac_IsValidDamageReason(weaponid)">
			<stacksize value="1"/>
			<referrer name="OnPlayerTakeDamage"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:ac_IsValidVehicleModel" syntax="ac_IsValidVehicleModel(modelid)">
			<stacksize value="1"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_IsAnAircraftEx"/>
			<referrer name="ac_IsABoatEx"/>
			<referrer name="ac_IsABmxEx"/>
			<referrer name="ac_IsABikeEx"/>
			<referrer name="ac_IsABusEx"/>
			<referrer name="ac_IsATrainCarriageEx"/>
			<referrer name="ac_IsATrainPartEx"/>
			<referrer name="ac_IsCompatible"/>
			<referrer name="ac_GetMaxPassengers"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:ac_IsValidWeapon" syntax="ac_IsValidWeapon(weaponid)">
			<stacksize value="1"/>
			<referrer name="ac_GivePlayerWeapon"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerGiveDamage"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:ac_IsVehicleSeatOccupied" syntax="ac_IsVehicleSeatOccupied(vehicleid, seat)">
			<stacksize value="2"/>
			<referrer name="ac_PutPlayerInVehicle"/>
			<dependency name="ACInfo"/>
			<dependency name="Iterator@Player"/>
			<dependency name="acSeat"/>
			<dependency name="acVeh"/>
			<param name="vehicleid">
			</param>
			<param name="seat">
			</param>
		</member>
		<member name="M:ac_KickTimer" syntax="ac_KickTimer(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Kick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_KickWithCode" syntax="ac_KickWithCode(playerid, ip_address[], type, code, code2)">
			<stacksize value="13"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnEnterExitModShop"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_FloodDetect"/>
			<dependency name="ACInfo"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SUSPICION_1"/>
			<dependency name="SUSPICION_2"/>
			<dependency name="acKicked"/>
			<dependency name="ac_OnCheatDetected"/>
			<dependency name="ac_sInfo"/>
			<dependency name="format"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="type">
			</param>
			<param name="code">
			</param>
			<param name="code2">
			</param>
		</member>
		<member name="M:ac_LinkVehicleToInterior" syntax="ac_LinkVehicleToInterior(vehicleid, interiorid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_LinkVehicleToInterior"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="acInt"/>
			<param name="vehicleid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:ac_LoadCfg" syntax="ac_LoadCfg()">
			<stacksize value="424"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<dependency name="ac_ACAllow"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="format"/>
			<dependency name="fread"/>
			<dependency name="fwrite"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="sscanf"/>
			<dependency name="strcat"/>
		</member>
		<member name="M:ac_LoadNOPCfg" syntax="ac_LoadNOPCfg()">
			<stacksize value="96"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<dependency name="ac_NOPAllow"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="format"/>
			<dependency name="fread"/>
			<dependency name="fwrite"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="sscanf"/>
			<dependency name="strcat"/>
		</member>
		<member name="M:ac_NearVendingMachine" syntax="ac_NearVendingMachine(playerid, interiorid)">
			<stacksize value="8"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="ac_vMachines"/>
			<dependency name="ac_vMachines"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:ac_OnCheatDetected" syntax="ac_OnCheatDetected(playerid, ip_address[], type, code)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="ac_KickWithCode"/>
			<dependency name="AntiCheatKickWithDesync"/>
			<dependency name="BlockIpAddress"/>
			<dependency name="KICK_MSG"/>
			<dependency name="MAX_CONNECTS_MSG"/>
			<dependency name="SendClientMessage"/>
			<dependency name="UNKNOWN_CLIENT_MSG"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="type">
			</param>
			<param name="code">
			</param>
		</member>
		<member name="M:ac_OnDialogResponse" syntax="ac_OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="OnBankDialog"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="AddModelMenuItem"/>
			<dependency name="DIALOG_INTERIORY"/>
			<dependency name="DIALOG_KOLORY"/>
			<dependency name="DIALOG_LAKIER_COLOR_A"/>
			<dependency name="DIALOG_LAKIER_COLOR_B"/>
			<dependency name="DIALOG_POJAZDY"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_MODELID"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="GetPVarInt"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="OnBankDialog"/>
			<dependency name="OnBusinessResponse"/>
			<dependency name="OnDialogAccount"/>
			<dependency name="OnDialogAdminDuty"/>
			<dependency name="OnDialogAdminPanel"/>
			<dependency name="OnDialogBanList"/>
			<dependency name="OnDialogGangs"/>
			<dependency name="OnDialogHeist"/>
			<dependency name="OnDialogHelp"/>
			<dependency name="OnDialogHud"/>
			<dependency name="OnDialogJob"/>
			<dependency name="OnDialogOwnRank"/>
			<dependency name="OnDialogPrivCars"/>
			<dependency name="OnDialogQuest"/>
			<dependency name="OnDialogRaceCreator"/>
			<dependency name="OnDialogRaport"/>
			<dependency name="OnDialogSettings"/>
			<dependency name="OnDialogTeleport"/>
			<dependency name="OnDialogUlepszenia"/>
			<dependency name="OnFishDialog"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SQLInjection"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="ShowAsyncModelSelectionMenu"/>
			<dependency name="Teleport"/>
			<dependency name="VehicleColoursTableRGBA"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="checkIP"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="guiVehicleModels"/>
			<dependency name="int_interior"/>
			<dependency name="int_name"/>
			<dependency name="int_pos"/>
			<dependency name="interiorDataList"/>
			<dependency name="interiorDataList"/>
			<dependency name="list_new"/>
			<dependency name="msg"/>
			<dependency name="pc_cmd_lakier"/>
			<dependency name="pc_cmd_v"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strx"/>
			<dependency name="task_await_arr"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ac_OnGameModeExit" syntax="ac_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CA_DestroyAllObjects_DC"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:ac_OnGameModeInit" syntax="ac_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="false"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zExists"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZonesCreated"/>
			<dependency name="zIsUsingBorders"/>
			<dependency name="zIsUsingNumbers"/>
		</member>
		<member name="M:ac_OnPlayerClickPlayer" syntax="ac_OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="RunPlayerStats"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:ac_OnPlayerClickPlayerTextDraw" syntax="ac_OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="E_MODEL_SELECTION_INDEX"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_MODELID"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="GetTickCount"/>
			<dependency name="HideModelSelectionMenu"/>
			<dependency name="ModelSelectionTask"/>
			<dependency name="PAWN_PLUS_EXTRA_ID"/>
			<dependency name="g_MenuCooldownTick"/>
			<dependency name="g_MenuCurrentPage"/>
			<dependency name="g_MenuExtraID"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuModels"/>
			<dependency name="g_MenuShown"/>
			<dependency name="list_get"/>
			<dependency name="task_set_result_arr"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:ac_OnPlayerClickTextDraw" syntax="ac_OnPlayerClickTextDraw(playerid, clickedid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="E_MODEL_SELECTION_INDEX"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_MODELID"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="HideModelSelectionMenu"/>
			<dependency name="ModelSelectionTask"/>
			<dependency name="PAWN_PLUS_EXTRA_ID"/>
			<dependency name="SetModelSelectionMenuPage"/>
			<dependency name="false"/>
			<dependency name="g_MenuCloseButton"/>
			<dependency name="g_MenuCurrentPage"/>
			<dependency name="g_MenuExtraID"/>
			<dependency name="g_MenuLeftArrow"/>
			<dependency name="g_MenuPageCount"/>
			<dependency name="g_MenuRightArrow"/>
			<dependency name="g_MenuShown"/>
			<dependency name="task_set_result_arr"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:ac_OnPlayerConnect" syntax="ac_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="DamageFeedUpdate"/>
			<dependency name="FreezeSyncPacket"/>
			<dependency name="GetTickCount"/>
			<dependency name="RemoveDefaultVendingMachines"/>
			<dependency name="SetFakeFacingAngle"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="WC_OnPlayerConnect"/>
			<dependency name="e_Skin"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Time"/>
			<dependency name="false"/>
			<dependency name="s_AlreadyConnected"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="s_CbugAllowed"/>
			<dependency name="s_CbugFroze"/>
			<dependency name="s_CbugGlobal"/>
			<dependency name="s_DamageFeedGiven"/>
			<dependency name="s_DamageFeedHitsGiven"/>
			<dependency name="s_DamageFeedHitsGiven"/>
			<dependency name="s_DamageFeedHitsTaken"/>
			<dependency name="s_DamageFeedHitsTaken"/>
			<dependency name="s_DamageFeedLastUpdate"/>
			<dependency name="s_DamageFeedPlayer"/>
			<dependency name="s_DamageFeedTaken"/>
			<dependency name="s_DamageFeedTimer"/>
			<dependency name="s_DeathSkip"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_DelayedDeathTimer"/>
			<dependency name="s_EnableHealthBar"/>
			<dependency name="s_FakeArmour"/>
			<dependency name="s_FakeHealth"/>
			<dependency name="s_FakeQuat"/>
			<dependency name="s_FakeQuat"/>
			<dependency name="s_FirstSpawn"/>
			<dependency name="s_ForceClassSelection"/>
			<dependency name="s_HealthBarForeground"/>
			<dependency name="s_HealthBarVisible"/>
			<dependency name="s_HitsIssued"/>
			<dependency name="s_InClassSelection"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_InternalPlayerTextDraw"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastAnim"/>
			<dependency name="s_LastExplosive"/>
			<dependency name="s_LastHitIdx"/>
			<dependency name="s_LastSentArmour"/>
			<dependency name="s_LastSentHealth"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_LastShotIdx"/>
			<dependency name="s_LastStop"/>
			<dependency name="s_LastUpdate"/>
			<dependency name="s_LastVehicleEnterTime"/>
			<dependency name="s_LastVehicleTick"/>
			<dependency name="s_LastZ"/>
			<dependency name="s_LastZVelo"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerClass"/>
			<dependency name="s_PlayerFallbackSpawnInfo"/>
			<dependency name="s_PlayerFallbackSpawnInfo"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxArmour"/>
			<dependency name="s_PlayerMaxHealth"/>
			<dependency name="s_PlayerTeam"/>
			<dependency name="s_PreviousHitI"/>
			<dependency name="s_PreviousHits"/>
			<dependency name="s_PreviousHits"/>
			<dependency name="s_RejectedHits"/>
			<dependency name="s_RejectedHits"/>
			<dependency name="s_RejectedHitsIdx"/>
			<dependency name="s_ShotsFired"/>
			<dependency name="s_SpawnForStreamedIn"/>
			<dependency name="s_SpawnInfoModified"/>
			<dependency name="s_Spectating"/>
			<dependency name="s_SyncDataFrozen"/>
			<dependency name="s_TrueDeath"/>
			<dependency name="s_World"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_OnPlayerDeath" syntax="ac_OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="77"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ForceClassSelection"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetTickCount"/>
			<dependency name="HasSameTeam"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="KillTimer"/>
			<dependency name="OnPlayerDamage"/>
			<dependency name="OnPlayerDamageDone"/>
			<dependency name="OnPlayerDeathFinished"/>
			<dependency name="OnPlayerPrepareDeath"/>
			<dependency name="SaveSyncData"/>
			<dependency name="SpawnPlayerInPlace"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="WC_IsValidVehicle"/>
			<dependency name="WC_OnPlayerDeath"/>
			<dependency name="WEAPON_COLLISION"/>
			<dependency name="WEAPON_DROWN"/>
			<dependency name="WEAPON_PARACHUTE"/>
			<dependency name="WasPlayerInVehicle"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="ac_GetVehicleZAngle"/>
			<dependency name="acc_GivePlayerWeapon"/>
			<dependency name="acc_SetPlayerPos"/>
			<dependency name="acc_SetSpawnInfo"/>
			<dependency name="acc_TogglePlayerControllable"/>
			<dependency name="acc_TogglePlayerSpectating"/>
			<dependency name="false"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="s_DamageDoneArmour"/>
			<dependency name="s_DamageDoneHealth"/>
			<dependency name="s_DeathSkip"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_ForceClassSelection"/>
			<dependency name="s_InClassSelection"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastDeathTick"/>
			<dependency name="s_LastVehicleShooter"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerTeam"/>
			<dependency name="s_TrueDeath"/>
			<dependency name="s_VendingUseTimer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:ac_OnPlayerDisconnect" syntax="ac_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<dependency name="g_MenuHeaderText"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItemText"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuItems"/>
			<dependency name="g_MenuPageNumber"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:ac_OnPlayerEnterCheckpoint" syntax="ac_OnPlayerEnterCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<dependency name="WC_OnPlayerEnterCheckpoint"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_OnPlayerEnterDynamicArea" syntax="ac_OnPlayerEnterDynamicArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Iter_Single@GangZones"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="pGang"/>
			<dependency name="pGangWarAttacker"/>
			<dependency name="pGangWarDefender"/>
			<dependency name="pGangWarTime"/>
			<dependency name="pGangZoneArea"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pNoDM"/>
			<dependency name="tdNoDM"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:ac_OnPlayerEnterRaceCheckpoint" syntax="ac_OnPlayerEnterRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<dependency name="WC_OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_OnPlayerEnterVehicle" syntax="ac_OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="GetTickCount"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_OnPlayerEnterVehicle"/>
			<dependency name="acc_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="gettime"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastVehicleEnterTime"/>
			<dependency name="s_LastVehicleTick"/>
			<dependency name="s_VendingUseTimer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:ac_OnPlayerExitVehicle" syntax="ac_OnPlayerExitVehicle(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="GetTickCount"/>
			<dependency name="WC_OnPlayerExitVehicle"/>
			<dependency name="s_LastVehicleTick"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_OnPlayerGiveDamage" syntax="ac_OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="80"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="AddRejectedHit"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="AverageHitRate"/>
			<dependency name="ClearAnimations"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerSurfingObjectID"/>
			<dependency name="GetPlayerSurfingVehicleID"/>
			<dependency name="GetTickCount"/>
			<dependency name="HIT_DYING_PLAYER"/>
			<dependency name="HIT_INVALID_DAMAGE"/>
			<dependency name="HIT_INVALID_WEAPON"/>
			<dependency name="HIT_MULTIPLE_PLAYERS"/>
			<dependency name="HIT_MULTIPLE_PLAYERS_SHOTGUN"/>
			<dependency name="HIT_NOT_SPAWNED"/>
			<dependency name="HIT_NO_DAMAGEDID"/>
			<dependency name="HIT_RATE_TOO_FAST"/>
			<dependency name="HIT_RATE_TOO_FAST_MULTIPLE"/>
			<dependency name="HIT_SAME_TEAM"/>
			<dependency name="HIT_TOO_FAR_FROM_SHOT"/>
			<dependency name="HIT_UNSTREAMED"/>
			<dependency name="HasSameTeam"/>
			<dependency name="InflictDamage"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="IsHighRateWeapon"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="KillTimer"/>
			<dependency name="OnInvalidWeaponDamage"/>
			<dependency name="OnPlayerDamage"/>
			<dependency name="OnPlayerDamageDone"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PlayerDeath"/>
			<dependency name="ProcessDamage"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_INVALID_DAMAGE"/>
			<dependency name="WC_INVALID_DISTANCE"/>
			<dependency name="WC_IsPlayerPaused"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<dependency name="WC_NO_DAMAGED"/>
			<dependency name="WC_OnPlayerDeath"/>
			<dependency name="WEAPON_FLAMETHROWER"/>
			<dependency name="WEAPON_KNIFE"/>
			<dependency name="WEAPON_SHOTGSPA"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="WEAPON_VEHICLE"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="acc_SetPlayerVelocity"/>
			<dependency name="e_HX"/>
			<dependency name="e_HY"/>
			<dependency name="e_HZ"/>
			<dependency name="e_Hits"/>
			<dependency name="e_Valid"/>
			<dependency name="false"/>
			<dependency name="s_DamageDoneArmour"/>
			<dependency name="s_DamageDoneHealth"/>
			<dependency name="s_HitsIssued"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_KnifeTimeout"/>
			<dependency name="s_LagCompMode"/>
			<dependency name="s_LastDeathTick"/>
			<dependency name="s_LastHitIdx"/>
			<dependency name="s_LastHitTicks"/>
			<dependency name="s_LastHitTicks"/>
			<dependency name="s_LastHitWeapons"/>
			<dependency name="s_LastHitWeapons"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_MaxHitRateSamples"/>
			<dependency name="s_MaxWeaponShootRate"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_ValidDamageGiven"/>
			<dependency name="s_WeaponRange"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:ac_OnPlayerKeyStateChange" syntax="ac_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="80"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="AngleBetweenPoints"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="ClearAnimations"/>
			<dependency name="FreezeSyncPacket"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerDying"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KEY_CROUCH"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="KEY_SECONDARY_ATTACK"/>
			<dependency name="KillTimer"/>
			<dependency name="OnPlayerUseVendingMachine"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetFakeFacingAngle"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_GetPlayerArmour"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_OnPlayerKeyStateChange"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WEAPON_BOMB"/>
			<dependency name="WEAPON_GRENADE"/>
			<dependency name="WEAPON_HEATSEEKER"/>
			<dependency name="WEAPON_ROCKETLAUNCHER"/>
			<dependency name="WEAPON_SATCHEL"/>
			<dependency name="acc_GetPlayerMoney"/>
			<dependency name="acc_SetPlayerPos"/>
			<dependency name="e_Armour"/>
			<dependency name="e_FrontX"/>
			<dependency name="e_FrontY"/>
			<dependency name="e_HX"/>
			<dependency name="e_HY"/>
			<dependency name="e_Health"/>
			<dependency name="e_Issuer"/>
			<dependency name="e_OX"/>
			<dependency name="e_OY"/>
			<dependency name="e_PosZ"/>
			<dependency name="e_RotZ"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Valid"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="s_CbugAllowed"/>
			<dependency name="s_CbugFroze"/>
			<dependency name="s_CustomVendingMachines"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_DelayedDeathTimer"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastExplosive"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxHealth"/>
			<dependency name="s_PreviousHits"/>
			<dependency name="s_PreviousHits"/>
			<dependency name="s_VendingUseTimer"/>
			<dependency name="sc_VendingMachines"/>
			<dependency name="sc_VendingMachines"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:ac_OnPlayerLeaveCheckpoint" syntax="ac_OnPlayerLeaveCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="WC_OnPlayerLeaveCheckpoint"/>
			<dependency name="s_IsDying"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_OnPlayerLeaveDynamicArea" syntax="ac_OnPlayerLeaveDynamicArea(playerid, areaid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="false"/>
			<dependency name="pGangZoneArea"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pGangZoneDraw"/>
			<dependency name="pNoDM"/>
			<dependency name="tdNoDM"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:ac_OnPlayerLeaveRaceCheckpoint" syntax="ac_OnPlayerLeaveRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="WC_OnPlayerLeaveRaceCheckpoint"/>
			<dependency name="s_IsDying"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_OnPlayerPickUpDynamicPickup" syntax="ac_OnPlayerPickUpDynamicPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Bank_Pickup"/>
			<dependency name="CollectDisk"/>
			<dependency name="CollectFigure"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GameStarted"/>
			<dependency name="Magazynier_Pickup"/>
			<dependency name="RoyalePickup"/>
			<dependency name="WordPickup"/>
			<dependency name="pGame"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_pickupTimer"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:ac_OnPlayerPickUpPickup" syntax="ac_OnPlayerPickUpPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<dependency name="WC_OnPlayerPickUpPickup"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:ac_OnPlayerRequestClass" syntax="ac_OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="FreezeSyncPacket"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="KillTimer"/>
			<dependency name="OnPlayerDeathFinished"/>
			<dependency name="RemoveBuildingForPlayer"/>
			<dependency name="SpawnPlayerInPlace"/>
			<dependency name="UpdatePlayerVirtualWorld"/>
			<dependency name="WC_OnPlayerRequestClass"/>
			<dependency name="acc_SpawnPlayer"/>
			<dependency name="false"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="s_DeathSkip"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_ForceClassSelection"/>
			<dependency name="s_InClassSelection"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_PlayerClass"/>
			<dependency name="s_TrueDeath"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:ac_OnPlayerRequestSpawn" syntax="ac_OnPlayerRequestSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="40"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="GangBaseOwner"/>
			<dependency name="GangBaseZone"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Iterator@GangBases"/>
			<dependency name="Iterator@GangZones"/>
			<dependency name="KickEx"/>
			<dependency name="KurczakEnabled"/>
			<dependency name="KurczakHealth"/>
			<dependency name="KurczakReward"/>
			<dependency name="SetPlayerDraw"/>
			<dependency name="ShowZoneForPlayer"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="msg"/>
			<dependency name="noDMZone"/>
			<dependency name="pDrawVisible"/>
			<dependency name="pGangZone"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_label"/>
			<dependency name="player_logged"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<dependency name="tdLoginTime"/>
			<dependency name="tdWelcome"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_OnPlayerSpawn" syntax="ac_OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="77"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="ClearAnimations"/>
			<dependency name="DamageFeedUpdate"/>
			<dependency name="E_SPAWN_INFO"/>
			<dependency name="ForceClassSelection"/>
			<dependency name="FreezeSyncPacket"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="GetTickCount"/>
			<dependency name="KillTimer"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="SetFakeFacingAngle"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="UpdatePlayerVirtualWorld"/>
			<dependency name="WC_OnPlayerSpawn"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="acc_GivePlayerWeapon"/>
			<dependency name="acc_SetPlayerHealth"/>
			<dependency name="acc_SetPlayerPos"/>
			<dependency name="acc_SetPlayerSpecialAction"/>
			<dependency name="acc_SetSpawnInfo"/>
			<dependency name="e_Ammo1"/>
			<dependency name="e_Ammo2"/>
			<dependency name="e_Ammo3"/>
			<dependency name="e_PosA"/>
			<dependency name="e_PosX"/>
			<dependency name="e_PosX"/>
			<dependency name="e_PosY"/>
			<dependency name="e_PosY"/>
			<dependency name="e_PosZ"/>
			<dependency name="e_PosZ"/>
			<dependency name="e_Rot"/>
			<dependency name="e_Skin"/>
			<dependency name="e_Skin"/>
			<dependency name="e_Team"/>
			<dependency name="e_Team"/>
			<dependency name="e_Weapon"/>
			<dependency name="e_Weapon1"/>
			<dependency name="e_Weapon2"/>
			<dependency name="e_Weapon3"/>
			<dependency name="e_WeaponAmmo"/>
			<dependency name="e_WeaponId"/>
			<dependency name="false"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="s_ClassSpawnInfo"/>
			<dependency name="s_CustomVendingMachines"/>
			<dependency name="s_DeathSkip"/>
			<dependency name="s_DeathSkipTick"/>
			<dependency name="s_DeathTimer"/>
			<dependency name="s_FirstSpawn"/>
			<dependency name="s_ForceClassSelection"/>
			<dependency name="s_InClassSelection"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastStop"/>
			<dependency name="s_LastUpdate"/>
			<dependency name="s_PlayerClass"/>
			<dependency name="s_PlayerFallbackSpawnInfo"/>
			<dependency name="s_PlayerFallbackSpawnInfo"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_PlayerMaxHealth"/>
			<dependency name="s_PlayerSpawnInfo"/>
			<dependency name="s_PlayerTeam"/>
			<dependency name="s_SpawnInfoModified"/>
			<dependency name="s_SyncData"/>
			<dependency name="s_SyncData"/>
			<dependency name="s_TrueDeath"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_OnPlayerStateChange" syntax="ac_OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ClearAnimationsForPlayer"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="PLAYER_STATE_SPECTATING"/>
			<dependency name="SendLastSyncPacket"/>
			<dependency name="SetHealthBarVisible"/>
			<dependency name="WC_OnPlayerStateChange"/>
			<dependency name="__gOnce"/>
			<dependency name="acc_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastVehicleTick"/>
			<dependency name="s_Spectating"/>
			<dependency name="s_VendingUseTimer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:ac_OnPlayerTakeDamage" syntax="ac_OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="78"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="AddRejectedHit"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetTickCount"/>
			<dependency name="HIT_INVALID_DAMAGE"/>
			<dependency name="HIT_OUT_OF_RANGE"/>
			<dependency name="HasSameTeam"/>
			<dependency name="InflictDamage"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="IsHighRateWeapon"/>
			<dependency name="IsMeleeWeapon"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="KillTimer"/>
			<dependency name="OnInvalidWeaponDamage"/>
			<dependency name="OnPlayerDamage"/>
			<dependency name="OnPlayerDamageDone"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PlayerDeath"/>
			<dependency name="ProcessDamage"/>
			<dependency name="ResyncPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="UpdateHealthBar"/>
			<dependency name="WC_INVALID_DAMAGE"/>
			<dependency name="WC_INVALID_DISTANCE"/>
			<dependency name="WC_IsPlayerPaused"/>
			<dependency name="WC_OnPlayerDeath"/>
			<dependency name="WEAPON_COLLISION"/>
			<dependency name="WEAPON_DROWN"/>
			<dependency name="WEAPON_KNIFE"/>
			<dependency name="WEAPON_M4"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="WEAPON_VEHICLE"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="acc_SetPlayerHealth"/>
			<dependency name="acc_SetPlayerVelocity"/>
			<dependency name="false"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="s_CustomFallDamage"/>
			<dependency name="s_DamageDoneArmour"/>
			<dependency name="s_DamageDoneHealth"/>
			<dependency name="s_ForceClassSelection"/>
			<dependency name="s_InClassSelection"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_KnifeTimeout"/>
			<dependency name="s_LagCompMode"/>
			<dependency name="s_LastDeathTick"/>
			<dependency name="s_PlayerArmour"/>
			<dependency name="s_PlayerHealth"/>
			<dependency name="s_ValidDamageTaken"/>
			<dependency name="s_WeaponRange"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:ac_OnPlayerText" syntax="ac_OnPlayerText(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="287"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="ACH_QUIZ"/>
			<dependency name="ACH_ZP"/>
			<dependency name="CheckBet"/>
			<dependency name="CheckPlayerMuted"/>
			<dependency name="CheckQuest"/>
			<dependency name="CompareEx"/>
			<dependency name="ConvertTime"/>
			<dependency name="ConvertTime"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_ZP"/>
			<dependency name="GameCountDown"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="LOG_CHAT"/>
			<dependency name="Log"/>
			<dependency name="MaxVehicleZP"/>
			<dependency name="MutePlayer"/>
			<dependency name="Przegral"/>
			<dependency name="SendGlobalMessage"/>
			<dependency name="SendLocalMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="StatusZP"/>
			<dependency name="StopQuiz"/>
			<dependency name="StopZP"/>
			<dependency name="SwitchZP"/>
			<dependency name="UpdateZP"/>
			<dependency name="VehicleModelZP"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleZP"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="achievement"/>
			<dependency name="addLevelScore"/>
			<dependency name="checkTime"/>
			<dependency name="checkTime"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_tag"/>
			<dependency name="getMentioned"/>
			<dependency name="getPodiumText"/>
			<dependency name="getPodiumText"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="giveMoney"/>
			<dependency name="givePremium"/>
			<dependency name="math_random"/>
			<dependency name="messages"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="pAFK"/>
			<dependency name="pGame"/>
			<dependency name="pGang"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRankColor"/>
			<dependency name="pOwnRankHave"/>
			<dependency name="papieskaCount"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_antySpam"/>
			<dependency name="player_chatID"/>
			<dependency name="player_checkMuted"/>
			<dependency name="player_lastmessage"/>
			<dependency name="player_logged"/>
			<dependency name="player_mutetime"/>
			<dependency name="player_nickname"/>
			<dependency name="player_quizDone"/>
			<dependency name="quizData"/>
			<dependency name="quiz_active"/>
			<dependency name="quiz_buffer"/>
			<dependency name="quiz_count"/>
			<dependency name="quiz_tick"/>
			<dependency name="quiz_type"/>
			<dependency name="random"/>
			<dependency name="showGameDraw"/>
			<dependency name="strcopy"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strmatch"/>
			<dependency name="strmid"/>
			<dependency name="strx"/>
			<dependency name="tolower"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ac_OnPlayerUpdate" syntax="ac_OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="33"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="GetPlayerSurfingObjectID"/>
			<dependency name="GetPlayerSurfingVehicleID"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetTickCount"/>
			<dependency name="InflictDamage"/>
			<dependency name="WC_DeathSkipEnd"/>
			<dependency name="WC_OnPlayerUpdate"/>
			<dependency name="WC_SpawnForStreamedIn"/>
			<dependency name="WEAPON_COLLISION"/>
			<dependency name="WEAPON_PARACHUTE"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="acc_SetSpawnInfo"/>
			<dependency name="false"/>
			<dependency name="s_CustomFallDamage"/>
			<dependency name="s_DeathSkip"/>
			<dependency name="s_DeathSkipTick"/>
			<dependency name="s_FallDeathVelocity"/>
			<dependency name="s_IsDying"/>
			<dependency name="s_LastAnim"/>
			<dependency name="s_LastStop"/>
			<dependency name="s_LastUpdate"/>
			<dependency name="s_LastZ"/>
			<dependency name="s_LastZVelo"/>
			<dependency name="s_PlayerTeam"/>
			<dependency name="s_SpawnForStreamedIn"/>
			<dependency name="s_WeaponDamage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_OnPlayerWeaponShot" syntax="ac_OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="27"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="AddRejectedHit"/>
			<dependency name="AverageShootRate"/>
			<dependency name="BULLET_HIT_TYPE_NONE"/>
			<dependency name="BULLET_HIT_TYPE_PLAYER"/>
			<dependency name="BULLET_HIT_TYPE_PLAYER_OBJECT"/>
			<dependency name="BULLET_HIT_TYPE_VEHICLE"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerLastShotVectors"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerSurfingObjectID"/>
			<dependency name="GetPlayerSurfingVehicleID"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVehicleSeat"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="HIT_BEING_RESYNCED"/>
			<dependency name="HIT_DISCONNECTED"/>
			<dependency name="HIT_INVALID_HITTYPE"/>
			<dependency name="HIT_INVALID_VEHICLE"/>
			<dependency name="HIT_INVALID_WEAPON"/>
			<dependency name="HIT_NOT_SPAWNED"/>
			<dependency name="HIT_OUT_OF_RANGE"/>
			<dependency name="HIT_OWN_VEHICLE"/>
			<dependency name="HIT_SAME_VEHICLE"/>
			<dependency name="HIT_TOO_FAR_FROM_ORIGIN"/>
			<dependency name="HIT_TOO_FAR_FROM_SHOT"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="SHOOTING_RATE_TOO_FAST"/>
			<dependency name="SHOOTING_RATE_TOO_FAST_MULTIPLE"/>
			<dependency name="SetTimerEx"/>
			<dependency name="VectorSize"/>
			<dependency name="WC_IsPlayerSpawned"/>
			<dependency name="WC_IsValidVehicle"/>
			<dependency name="WC_OnPlayerWeaponShot"/>
			<dependency name="WEAPON_SHOTGSPA"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="acc_SetVehicleHealth"/>
			<dependency name="e_HX"/>
			<dependency name="e_HY"/>
			<dependency name="e_HZ"/>
			<dependency name="e_HitId"/>
			<dependency name="e_HitType"/>
			<dependency name="e_Hits"/>
			<dependency name="e_Length"/>
			<dependency name="e_OX"/>
			<dependency name="e_OY"/>
			<dependency name="e_OZ"/>
			<dependency name="e_Tick"/>
			<dependency name="e_Valid"/>
			<dependency name="e_Weapon"/>
			<dependency name="e_X"/>
			<dependency name="e_Y"/>
			<dependency name="e_Z"/>
			<dependency name="false"/>
			<dependency name="s_BeingResynced"/>
			<dependency name="s_CbugFroze"/>
			<dependency name="s_LastDeathTick"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_LastShot"/>
			<dependency name="s_LastShotIdx"/>
			<dependency name="s_LastShotTicks"/>
			<dependency name="s_LastShotTicks"/>
			<dependency name="s_LastShotWeapons"/>
			<dependency name="s_LastShotWeapons"/>
			<dependency name="s_LastVehicleShooter"/>
			<dependency name="s_MaxShootRateSamples"/>
			<dependency name="s_MaxWeaponShootRate"/>
			<dependency name="s_ShotsFired"/>
			<dependency name="s_VehiclePassengerDamage"/>
			<dependency name="s_VehicleRespawnTimer"/>
			<dependency name="s_VehicleUnoccupiedDamage"/>
			<dependency name="s_VendingUseTimer"/>
			<dependency name="s_WeaponDamage"/>
			<dependency name="s_WeaponRange"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="hittype">
			</param>
			<param name="hitid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_OnVehicleDeath" syntax="ac_OnVehicleDeath(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="WC_KillVehicle"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_OnVehicleDeath"/>
			<dependency name="false"/>
			<dependency name="s_VehicleAlive"/>
			<dependency name="s_VehicleRespawnTimer"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:ac_OnVehicleSpawn" syntax="ac_OnVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_OnVehicleSpawn"/>
			<dependency name="s_LastVehicleShooter"/>
			<dependency name="s_VehicleAlive"/>
			<dependency name="s_VehicleRespawnTimer"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_PutPlayerInVehicle" syntax="ac_PutPlayerInVehicle(playerid, vehicleid, ac_seatid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="acc_PutPlayerInVehicle"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleVirtualWorld"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SPECIAL_ACTION_DANCE1"/>
			<dependency name="SPECIAL_ACTION_DANCE4"/>
			<dependency name="SPECIAL_ACTION_DRINK_BEER"/>
			<dependency name="SPECIAL_ACTION_DRINK_SPRUNK"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSet"/>
			<dependency name="acSpecAct"/>
			<dependency name="ac_GetMaxPassengers"/>
			<dependency name="ac_IsABusEx"/>
			<dependency name="ac_IsVehicleSeatOccupied"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ac_seatid">
			</param>
		</member>
		<member name="M:ac_RemovePlayerFromVehicle" syntax="ac_RemovePlayerFromVehicle(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="acc_RemovePlayerFromVehicle"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="RemovePlayerFromVehicle"/>
			<dependency name="acGtc"/>
			<dependency name="acSet"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_RepairVehicle" syntax="ac_RepairVehicle(vehicleid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="acc_RepairVehicle"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="RepairVehicle"/>
			<dependency name="acDoors"/>
			<dependency name="acDriver"/>
			<dependency name="acGtc"/>
			<dependency name="acHealth"/>
			<dependency name="acNOPCount"/>
			<dependency name="acPanels"/>
			<dependency name="acSetVehHealth"/>
			<dependency name="acTires"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_ResetPlayerMoney" syntax="ac_ResetPlayerMoney(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="acc_ResetPlayerMoney"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ResetPlayerMoney"/>
			<dependency name="acMoney"/>
			<dependency name="acNOPCount"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_ResetPlayerWeapons" syntax="ac_ResetPlayerWeapons(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="acc_ResetPlayerWeapons"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="acAmmo"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtc"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acWeapon"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_SetPlayerAmmo" syntax="ac_SetPlayerAmmo(playerid, weaponid, ac_ammo)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="acc_SetPlayerAmmo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetPlayerAmmo"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtcGiveAmmo"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_wSlot"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ac_ammo">
			</param>
		</member>
		<member name="M:ac_SetPlayerArmour" syntax="ac_SetPlayerArmour(playerid, ac_armour)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_SetPlayerArmour"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSet"/>
			<dependency name="floatround"/>
			<dependency name="floatround_tozero"/>
			<param name="playerid">
			</param>
			<param name="ac_armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SetPlayerHealth" syntax="ac_SetPlayerHealth(playerid, ac_health)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_SetPlayerHealth"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSet"/>
			<dependency name="floatround"/>
			<dependency name="floatround_tozero"/>
			<param name="playerid">
			</param>
			<param name="ac_health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SetPlayerInterior" syntax="ac_SetPlayerInterior(playerid, interiorid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_SetPlayerInterior"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSet"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:ac_SetPlayerPos" syntax="ac_SetPlayerPos(playerid, ac_x, ac_y, ac_z)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="acc_SetPlayerPos"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acSetPosX"/>
			<dependency name="acSetPosY"/>
			<dependency name="acSetPosZ"/>
			<dependency name="acTpToZ"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="ac_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SetPlayerPosFindZ" syntax="ac_SetPlayerPosFindZ(playerid, ac_x, ac_y, ac_z)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="acc_SetPlayerPosFindZ"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetPlayerPosFindZ"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acSetPosX"/>
			<dependency name="acSetPosY"/>
			<dependency name="acTpToZ"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="ac_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SetPlayerSpecialAction" syntax="ac_SetPlayerSpecialAction(playerid, ac_actionid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_SetPlayerSpecialAction"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SPECIAL_ACTION_DANCE1"/>
			<dependency name="SPECIAL_ACTION_DANCE4"/>
			<dependency name="SPECIAL_ACTION_DRINK_BEER"/>
			<dependency name="SPECIAL_ACTION_DRINK_SPRUNK"/>
			<dependency name="SPECIAL_ACTION_DUCK"/>
			<dependency name="SPECIAL_ACTION_ENTER_VEHICLE"/>
			<dependency name="SPECIAL_ACTION_HANDSUP"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="SPECIAL_ACTION_STOPUSECELLPHONE"/>
			<dependency name="SPECIAL_ACTION_USECELLPHONE"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acNextSpecAct"/>
			<dependency name="acSet"/>
			<dependency name="acSpecAct"/>
			<dependency name="acVeh"/>
			<param name="playerid">
			</param>
			<param name="ac_actionid">
			</param>
		</member>
		<member name="M:ac_SetPlayerVelocity" syntax="ac_SetPlayerVelocity(playerid, ac_X, ac_Y, ac_Z)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="acc_SetPlayerVelocity"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetPlayerVelocity"/>
			<dependency name="acGtc"/>
			<dependency name="acSpeed"/>
			<dependency name="ac_GetSpeed"/>
			<param name="playerid">
			</param>
			<param name="ac_X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SetSpawnInfo" syntax="ac_SetSpawnInfo(playerid, ac_team, ac_skin, ac_x, ac_y, ac_z, ac_rotation, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="acc_SetSpawnInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="SetSpawnInfo"/>
			<dependency name="acSpawnAmmo1"/>
			<dependency name="acSpawnAmmo2"/>
			<dependency name="acSpawnAmmo3"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<dependency name="acSpawnWeapon1"/>
			<dependency name="acSpawnWeapon2"/>
			<dependency name="acSpawnWeapon3"/>
			<param name="playerid">
			</param>
			<param name="ac_team">
			</param>
			<param name="ac_skin">
			</param>
			<param name="ac_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:ac_SetVehicleAngularVelocity" syntax="ac_SetVehicleAngularVelocity(vehicleid, ac_X, ac_Y, ac_Z)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="acc_SetVehicleAngularVelocity"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetVehicleAngularVelocity"/>
			<dependency name="acDriver"/>
			<dependency name="acGtc"/>
			<dependency name="acSpeed"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="ac_GetSpeed"/>
			<param name="vehicleid">
			</param>
			<param name="ac_X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SetVehicleHealth" syntax="ac_SetVehicleHealth(vehicleid, ac_health)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_SetVehicleHealth"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="acDriver"/>
			<dependency name="acGtc"/>
			<dependency name="acHealth"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSetVehHealth"/>
			<param name="vehicleid">
			</param>
			<param name="ac_health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SetVehiclePos" syntax="ac_SetVehiclePos(vehicleid, ac_x, ac_y, ac_z)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="acc_SetVehiclePos"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="acDriver"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acSetPosX"/>
			<dependency name="acSetPosY"/>
			<dependency name="acSetPosZ"/>
			<dependency name="acTpToZ"/>
			<dependency name="false"/>
			<param name="vehicleid">
			</param>
			<param name="ac_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SetVehicleToRespawn" syntax="ac_SetVehicleToRespawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_SetVehicleToRespawn"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetVehicleToRespawn"/>
			<dependency name="acDoors"/>
			<dependency name="acDriver"/>
			<dependency name="acGtc"/>
			<dependency name="acHealth"/>
			<dependency name="acLastSpeed"/>
			<dependency name="acPaintJob"/>
			<dependency name="acPanels"/>
			<dependency name="acPosDiff"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acSpawnPosX"/>
			<dependency name="acSpawnPosY"/>
			<dependency name="acSpawnPosZ"/>
			<dependency name="acSpawnZAngle"/>
			<dependency name="acSpawned"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeedDiff"/>
			<dependency name="acTires"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="acZAngle"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ac_SetVehicleVelocity" syntax="ac_SetVehicleVelocity(vehicleid, ac_X, ac_Y, ac_Z)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="acc_SetVehicleVelocity"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SetVehicleVelocity"/>
			<dependency name="acDriver"/>
			<dependency name="acGtc"/>
			<dependency name="acSpeed"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acVelZ"/>
			<dependency name="ac_GetSpeed"/>
			<param name="vehicleid">
			</param>
			<param name="ac_X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ac_Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ac_SpawnPlayer" syntax="ac_SpawnPlayer(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="acc_SpawnPlayer"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="acDead"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acNextSpecAct"/>
			<dependency name="acSet"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acSpawnRes"/>
			<dependency name="acSpawnTick"/>
			<dependency name="acUnFrozen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_Streamer_UpdateEx" syntax="ac_Streamer_UpdateEx(playerid, x, y, z, worldid, interiorid, type, compensatedtime, freezeplayer)">
			<stacksize value="11"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosTick"/>
			<dependency name="acSetPosX"/>
			<dependency name="acSetPosY"/>
			<dependency name="acSetPosZ"/>
			<dependency name="acTpToZ"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="type">
			</param>
			<param name="compensatedtime">
			</param>
			<param name="freezeplayer">
			</param>
		</member>
		<member name="M:ac_Timer" syntax="ac_Timer(playerid)">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="ACPickInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="DEBUG_CODE_5"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerCameraMode"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerSurfingObjectID"/>
			<dependency name="GetPlayerSurfingVehicleID"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="NetStats_MessagesRecvPerSecond"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Streamer_GetDistanceToItem"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="acACAllow"/>
			<dependency name="acAmmo"/>
			<dependency name="acCheatCount"/>
			<dependency name="acDead"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtc"/>
			<dependency name="acGtcGiveAmmo"/>
			<dependency name="acGtcSetWeapon"/>
			<dependency name="acInt"/>
			<dependency name="acKicked"/>
			<dependency name="acLastPickup"/>
			<dependency name="acLastPosX"/>
			<dependency name="acLastPosY"/>
			<dependency name="acLastSpeed"/>
			<dependency name="acMoney"/>
			<dependency name="acNOPAllow"/>
			<dependency name="acNOPCount"/>
			<dependency name="acParachute"/>
			<dependency name="acPosX"/>
			<dependency name="acPosX"/>
			<dependency name="acPosY"/>
			<dependency name="acPosY"/>
			<dependency name="acPosZ"/>
			<dependency name="acPosZ"/>
			<dependency name="acSet"/>
			<dependency name="acSetPosX"/>
			<dependency name="acSetPosY"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acShotTick"/>
			<dependency name="acSpeed"/>
			<dependency name="acSpeed"/>
			<dependency name="acStuntBonus"/>
			<dependency name="acTimerID"/>
			<dependency name="acTimerTick"/>
			<dependency name="acUpdateTick"/>
			<dependency name="acVeh"/>
			<dependency name="acVelX"/>
			<dependency name="acVelY"/>
			<dependency name="acWeapon"/>
			<dependency name="acWeapon"/>
			<dependency name="ac_AmmuNationInfo"/>
			<dependency name="ac_GetSpeed"/>
			<dependency name="ac_InAmmuNation"/>
			<dependency name="ac_InCasino"/>
			<dependency name="ac_IsATrainLoco"/>
			<dependency name="ac_IsAnAirplane"/>
			<dependency name="ac_IsBulletWeapon"/>
			<dependency name="ac_IsValidVehicleModel"/>
			<dependency name="ac_KickWithCode"/>
			<dependency name="ac_LagCompMode"/>
			<dependency name="ac_pAmmo"/>
			<dependency name="ac_wSlot"/>
			<dependency name="acc_GivePlayerMoney"/>
			<dependency name="acc_ResetPlayerMoney"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="orig_GetPlayerMoney"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ac_TogglePlayerControllable" syntax="ac_TogglePlayerControllable(playerid, toggle)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_TogglePlayerControllable"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="acUnFrozen"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:ac_TogglePlayerSpectating" syntax="ac_TogglePlayerSpectating(playerid, toggle)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="acc_TogglePlayerSpectating"/>
			<dependency name="ACInfo"/>
			<dependency name="ACInfo"/>
			<dependency name="GetTickCount"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="acDead"/>
			<dependency name="acForceClass"/>
			<dependency name="acGiveAmmo"/>
			<dependency name="acGtc"/>
			<dependency name="acNOPCount"/>
			<dependency name="acNextSpecAct"/>
			<dependency name="acSet"/>
			<dependency name="acSetWeapon"/>
			<dependency name="acSpawnRes"/>
			<dependency name="acSpawnTick"/>
			<dependency name="acSpec"/>
			<dependency name="acUnFrozen"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:ac_UpdateVehicleDamageStatus" syntax="ac_UpdateVehicleDamageStatus(vehicleid, ac_panels, ac_doors, ac_lights, ac_tires)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="acc_UpdateVehicleDamageStatus"/>
			<dependency name="ACVehInfo"/>
			<dependency name="ACVehInfo"/>
			<dependency name="UpdateVehicleDamageStatus"/>
			<dependency name="acDoors"/>
			<dependency name="acPanels"/>
			<dependency name="acTires"/>
			<param name="vehicleid">
			</param>
			<param name="ac_panels">
			</param>
			<param name="ac_doors">
			</param>
			<param name="ac_lights">
			</param>
			<param name="ac_tires">
			</param>
		</member>
		<member name="M:ac_UsePlayerPedAnims" syntax="ac_UsePlayerPedAnims()">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="acc_UsePlayerPedAnims"/>
			<dependency name="UsePlayerPedAnims"/>
			<dependency name="ac_PedAnims"/>
			<dependency name="true"/>
		</member>
		<member name="M:acc_AddPlayerClass" syntax="acc_AddPlayerClass(modelid, spawn_x, spawn_y, spawn_z, z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<stacksize value="14"/>
			<referrer name="WC_AddPlayerClass"/>
			<dependency name="AddPlayerClass"/>
			<dependency name="ac_AddPlayerClass"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:acc_AddPlayerClassEx" syntax="acc_AddPlayerClassEx(teamid, modelid, spawn_x, spawn_y, spawn_z, z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<stacksize value="15"/>
			<referrer name="WC_AddPlayerClassEx"/>
			<dependency name="AddPlayerClassEx"/>
			<dependency name="ac_AddPlayerClass"/>
			<param name="teamid">
			</param>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:acc_AddStaticPickup" syntax="acc_AddStaticPickup(model, type, X, Y, Z, virtualworld)">
			<stacksize value="10"/>
			<dependency name="CreatePickup"/>
			<dependency name="ac_CreatePickup"/>
			<param name="model">
			</param>
			<param name="type">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="virtualworld">
			</param>
		</member>
		<member name="M:acc_AddStaticVehicle" syntax="acc_AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2)">
			<stacksize value="11"/>
			<referrer name="WC_AddStaticVehicle"/>
			<dependency name="Iter_AddStaticVehicle"/>
			<dependency name="ac_AddStaticVehicle"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:acc_AddStaticVehicleEx" syntax="acc_AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2, respawn_delay, addsiren)">
			<stacksize value="13"/>
			<referrer name="WC_AddStaticVehicleEx"/>
			<dependency name="Iter_AddStaticVehicleEx"/>
			<dependency name="ac_AddStaticVehicle"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
			</param>
		</member>
		<member name="M:acc_ChangeVehiclePaintjob" syntax="acc_ChangeVehiclePaintjob(vehicleid, paintjobid)">
			<stacksize value="5"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="CreatePrivCar"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="ac_ChangeVehiclePaintjob"/>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:acc_CreateDynamicPickup" syntax="acc_CreateDynamicPickup(modelid, type, x, y, z, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<stacksize value="14"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="Init_Bank"/>
			<referrer name="Heist_Init"/>
			<referrer name="Init_Driving"/>
			<referrer name="Init_Teleports"/>
			<referrer name="Init_Stations"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Init_Jobs"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="ac_CreateDynamicPickup"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:acc_CreateDynamicPickupEx" syntax="acc_CreateDynamicPickupEx(modelid, type, x, y, z, streamdistance, worlds[], interiors[], players[], areas[], priority, maxworlds, maxinteriors, maxplayers, maxareas)">
			<stacksize value="18"/>
			<dependency name="CreateDynamicPickupEx"/>
			<dependency name="ac_CreateDynamicPickup"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worlds">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interiors">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="players">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="areas">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="priority">
			</param>
			<param name="maxworlds">
			</param>
			<param name="maxinteriors">
			</param>
			<param name="maxplayers">
			</param>
			<param name="maxareas">
			</param>
		</member>
		<member name="M:acc_CreatePickup" syntax="acc_CreatePickup(model, type, X, Y, Z, virtualworld)">
			<stacksize value="10"/>
			<referrer name="FetchCasino"/>
			<referrer name="FetchGunShop"/>
			<dependency name="CreatePickup"/>
			<dependency name="ac_CreatePickup"/>
			<param name="model">
			</param>
			<param name="type">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="virtualworld">
			</param>
		</member>
		<member name="M:acc_CreateVehicle" syntax="acc_CreateVehicle(vehicletype, x, y, z, rotation, color1, color2, respawn_delay, addsiren)">
			<stacksize value="13"/>
			<referrer name="WC_CreateVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="ac_CreateVehicle"/>
			<param name="vehicletype">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:acc_DestroyDynamicPickup" syntax="acc_DestroyDynamicPickup(pickupid)">
			<stacksize value="4"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="BombaExplode"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="Init_GangBases"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="RoyalePickup"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<dependency name="ac_DestroyDynamicPickup"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:acc_DestroyPickup" syntax="acc_DestroyPickup(pickup)">
			<stacksize value="4"/>
			<dependency name="ac_DestroyPickup"/>
			<param name="pickup">
			</param>
		</member>
		<member name="M:acc_DestroyVehicle" syntax="acc_DestroyVehicle(vehicleid)">
			<stacksize value="4"/>
			<referrer name="WC_DestroyVehicle"/>
			<dependency name="ac_DestroyVehicle"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:acc_DisableInteriorEnterExits" syntax="acc_DisableInteriorEnterExits()">
			<stacksize value="3"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="ac_DisableInteriorEnterExits"/>
		</member>
		<member name="M:acc_EnableStuntBonusForAll" syntax="acc_EnableStuntBonusForAll(enable)">
			<stacksize value="4"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="ac_EnableStuntBonusForAll"/>
			<param name="enable">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:acc_EnableStuntBonusForPlayer" syntax="acc_EnableStuntBonusForPlayer(playerid, enable)">
			<stacksize value="5"/>
			<dependency name="ac_EnableStuntBonusForPlayer"/>
			<param name="playerid">
			</param>
			<param name="enable">
			</param>
		</member>
		<member name="M:acc_EnableVehicleFriendlyFire" syntax="acc_EnableVehicleFriendlyFire()">
			<stacksize value="3"/>
			<dependency name="ac_EnableVehicleFriendlyFire"/>
		</member>
		<member name="M:acc_GetPlayerMoney" syntax="acc_GetPlayerMoney(playerid)">
			<stacksize value="4"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ac_GetPlayerMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:acc_GivePlayerMoney" syntax="acc_GivePlayerMoney(playerid, money)">
			<stacksize value="5"/>
			<referrer name="ac_Timer"/>
			<dependency name="ac_GivePlayerMoney"/>
			<param name="playerid">
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:acc_GivePlayerWeapon" syntax="acc_GivePlayerWeapon(playerid, weaponid, ammo)">
			<stacksize value="6"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="WC_DeathSkipEnd"/>
			<referrer name="giveWeapon"/>
			<dependency name="ac_GivePlayerWeapon"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:acc_LinkVehicleToInterior" syntax="acc_LinkVehicleToInterior(vehicleid, interiorid)">
			<stacksize value="5"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_v"/>
			<dependency name="ac_LinkVehicleToInterior"/>
			<param name="vehicleid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:acc_PutPlayerInVehicle" syntax="acc_PutPlayerInVehicle(playerid, vehicleid, seatid)">
			<stacksize value="6"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="DelayedPrivCarPut"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Zrzut_Start"/>
			<referrer name="Taxi_Start"/>
			<referrer name="Drwal_Start"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="StartRC"/>
			<referrer name="StartSM"/>
			<referrer name="PutPlayerSumo"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_v"/>
			<dependency name="ac_PutPlayerInVehicle"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="seatid">
			</param>
		</member>
		<member name="M:acc_RemovePlayerFromVehicle" syntax="acc_RemovePlayerFromVehicle(playerid)">
			<stacksize value="4"/>
			<referrer name="Truck_Stop"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="LoadPlayerPosition"/>
			<dependency name="ac_RemovePlayerFromVehicle"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:acc_RepairVehicle" syntax="acc_RepairVehicle(vehicleid)">
			<stacksize value="4"/>
			<referrer name="_@yHOnPlayerUpdate@0J"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<dependency name="ac_RepairVehicle"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:acc_ResetPlayerMoney" syntax="acc_ResetPlayerMoney(playerid)">
			<stacksize value="4"/>
			<referrer name="ac_Timer"/>
			<dependency name="ac_ResetPlayerMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:acc_ResetPlayerWeapons" syntax="acc_ResetPlayerWeapons(playerid)">
			<stacksize value="4"/>
			<referrer name="WC_DeathSkipEnd"/>
			<referrer name="OnPlayerDeathFinished"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="GiveSparingZestaw"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingRespawn"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="OnDialogJob"/>
			<referrer name="EnterBusiness"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="StartChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="StartRC"/>
			<referrer name="StartBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StartGG"/>
			<referrer name="RespawnGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="StartWP"/>
			<referrer name="StartSK"/>
			<referrer name="UpdateSK"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="LoadPlayerPosition"/>
			<dependency name="ac_ResetPlayerWeapons"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:acc_SetPlayerAmmo" syntax="acc_SetPlayerAmmo(playerid, weaponslot, ammo)">
			<stacksize value="6"/>
			<referrer name="GunShop_Panel"/>
			<dependency name="ac_SetPlayerAmmo"/>
			<param name="playerid">
			</param>
			<param name="weaponslot">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:acc_SetPlayerArmour" syntax="acc_SetPlayerArmour(playerid, armour)">
			<stacksize value="5"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<dependency name="ac_SetPlayerArmour"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SetPlayerHealth" syntax="acc_SetPlayerHealth(playerid, health)">
			<stacksize value="5"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="ScriptExit"/>
			<referrer name="UpdateHealthBar"/>
			<dependency name="ac_SetPlayerHealth"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SetPlayerInterior" syntax="acc_SetPlayerInterior(playerid, interiorid)">
			<stacksize value="5"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="SpecToggle"/>
			<referrer name="RefreshSpec"/>
			<referrer name="Teleport"/>
			<dependency name="ac_SetPlayerInterior"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:acc_SetPlayerPos" syntax="acc_SetPlayerPos(playerid, x, y, z)">
			<stacksize value="7"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="WC_SetPlayerPos"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<dependency name="ac_SetPlayerPos"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SetPlayerPosFindZ" syntax="acc_SetPlayerPosFindZ(playerid, x, y, z)">
			<stacksize value="7"/>
			<referrer name="WC_SetPlayerPosFindZ"/>
			<dependency name="ac_SetPlayerPosFindZ"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SetPlayerSpecialAction" syntax="acc_SetPlayerSpecialAction(playerid, actionid)">
			<stacksize value="5"/>
			<referrer name="WC_SetPlayerSpecialAction"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="WC_DeathSkipEnd"/>
			<referrer name="PlayerDeath"/>
			<dependency name="ac_SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
		</member>
		<member name="M:acc_SetPlayerVelocity" syntax="acc_SetPlayerVelocity(playerid, X, Y, Z)">
			<stacksize value="7"/>
			<referrer name="WC_SetPlayerVelocity"/>
			<referrer name="ac_OnPlayerGiveDamage"/>
			<referrer name="ac_OnPlayerTakeDamage"/>
			<referrer name="PlayerDeath"/>
			<dependency name="ac_SetPlayerVelocity"/>
			<param name="playerid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SetSpawnInfo" syntax="acc_SetSpawnInfo(playerid, team, skin, x, y, z, rotation, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<stacksize value="16"/>
			<referrer name="WC_SetSpawnInfo"/>
			<referrer name="ac_OnPlayerSpawn"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerUpdate"/>
			<referrer name="SpawnPlayerInPlace"/>
			<dependency name="ac_SetSpawnInfo"/>
			<param name="playerid">
			</param>
			<param name="team">
			</param>
			<param name="skin">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:acc_SetVehicleAngularVelocity" syntax="acc_SetVehicleAngularVelocity(vehicleid, X, Y, Z)">
			<stacksize value="7"/>
			<dependency name="ac_SetVehicleAngularVelocity"/>
			<param name="vehicleid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SetVehicleHealth" syntax="acc_SetVehicleHealth(vehicleid, health)">
			<stacksize value="5"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_OnPlayerWeaponShot"/>
			<referrer name="StartSM"/>
			<referrer name="PutPlayerSumo"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="ac_SetVehicleHealth"/>
			<param name="vehicleid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SetVehiclePos" syntax="acc_SetVehiclePos(vehicleid, x, y, z)">
			<stacksize value="7"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="setPosition"/>
			<referrer name="SetVehiclePosition"/>
			<dependency name="ac_SetVehiclePos"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SetVehicleToRespawn" syntax="acc_SetVehicleToRespawn(vehicleid)">
			<stacksize value="4"/>
			<referrer name="WC_OnDeadVehicleSpawn"/>
			<referrer name="Truck_Stop"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="CreateSumoObjects"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="ac_SetVehicleToRespawn"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:acc_SetVehicleVelocity" syntax="acc_SetVehicleVelocity(vehicleid, X, Y, Z)">
			<stacksize value="7"/>
			<dependency name="ac_SetVehicleVelocity"/>
			<param name="vehicleid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:acc_SpawnPlayer" syntax="acc_SpawnPlayer(playerid)">
			<stacksize value="4"/>
			<referrer name="WC_SpawnPlayer"/>
			<referrer name="ac_OnPlayerRequestClass"/>
			<referrer name="SpawnPlayerInPlace"/>
			<dependency name="ac_SpawnPlayer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:acc_TogglePlayerControllable" syntax="acc_TogglePlayerControllable(playerid, toggle)">
			<stacksize value="5"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="WC_TogglePlayerControllable"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="ac_OnPlayerStateChange"/>
			<referrer name="WC_DeathSkipEnd"/>
			<referrer name="InflictDamage"/>
			<dependency name="ac_TogglePlayerControllable"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:acc_TogglePlayerSpectating" syntax="acc_TogglePlayerSpectating(playerid, toggle)">
			<stacksize value="5"/>
			<referrer name="WC_TogglePlayerSpectating"/>
			<referrer name="ac_OnPlayerDeath"/>
			<referrer name="WC_PlayerDeathRespawn"/>
			<dependency name="ac_TogglePlayerSpectating"/>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:acc_UpdateVehicleDamageStatus" syntax="acc_UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires)">
			<stacksize value="8"/>
			<dependency name="ac_UpdateVehicleDamageStatus"/>
			<param name="vehicleid">
			</param>
			<param name="panels">
			</param>
			<param name="doors">
			</param>
			<param name="lights">
			</param>
			<param name="tires">
			</param>
		</member>
		<member name="M:acc_UsePlayerPedAnims" syntax="acc_UsePlayerPedAnims()">
			<stacksize value="3"/>
			<referrer name="WC_OnGameModeInit"/>
			<dependency name="ac_UsePlayerPedAnims"/>
		</member>
		<member name="M:achievement" syntax="achievement(playerid, achievementid)">
			<stacksize value="10"/>
			<referrer name="CheckDuel"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="_@yHOnPlayerDeath@0@"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="StopChowany"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="JailPlayer"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="SecondTimer"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="achievementData"/>
			<dependency name="achievementData"/>
			<dependency name="achievement_display"/>
			<dependency name="achievement_levelable"/>
			<dependency name="achievement_levels"/>
			<dependency name="achievement_money"/>
			<dependency name="achievement_name"/>
			<dependency name="achievement_required"/>
			<dependency name="addLevelScore"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="pAchievement"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementStatus"/>
			<dependency name="pAchievementStatus"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="strdot"/>
			<dependency name="tdAchievement"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="achievementid">
			</param>
		</member>
		<member name="M:acos" syntax="acos(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_GetRotationFor2Point3D"/>
			<referrer name="T3_ShiftVectorToRotation"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="GetRotationFor2Point3D"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The cosine for which to find the angle for
			</param>
			<library>a_samp</library>  <summary>Get the inversed value of a cosine in degrees.</summary>    <seealso name="floatcos" />  <returns>The angle in degrees.</returns> 
		</member>
		<member name="M:addGangScore" syntax="addGangScore(gangid, amount)">
			<stacksize value="11"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="CheckGangWar"/>
			<referrer name="ZonesReward"/>
			<referrer name="WC_OnPlayerDeath"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="UpdateGangBar"/>
			<dependency name="UpdateGangBox"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_level"/>
			<dependency name="gang_respect"/>
			<dependency name="gang_respect_needed"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGang"/>
			<dependency name="strdot"/>
			<param name="gangid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:addJobScore" syntax="addJobScore(playerid, amount)">
			<stacksize value="12"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getJobLevel"/>
			<dependency name="getJobScore"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pJob"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobScore"/>
			<dependency name="pJobScore"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_job_points"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:addLevelScore" syntax="addLevelScore(playerid, amount)">
			<stacksize value="10"/>
			<referrer name="achievement"/>
			<referrer name="CheckQuest"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="CheckBet"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="giveMoney"/>
			<dependency name="LevelBar"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="ShowPlayerProgressBar"/>
			<dependency name="UpdateLevelBar"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_level"/>
			<dependency name="player_levelPoints"/>
			<dependency name="player_score"/>
			<dependency name="player_score_needed"/>
			<dependency name="strdot"/>
			<dependency name="tdLevel"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:addVehicleComponent" syntax="addVehicleComponent(vehicleid, ...)">
			<stacksize value="7"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="TuneVehicle"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="getarg"/>
			<param name="vehicleid">
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:agz_GangZoneCreateFirstNumber" syntax="agz_GangZoneCreateFirstNumber(gzid, gznum, centposx, centposy, numsize)">
			<stacksize value="9"/>
			<referrer name="CreateZoneNumber"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="npart"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<param name="gzid">
			</param>
			<param name="gznum">
			</param>
			<param name="centposx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="centposy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="numsize">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:agz_GangZoneCreateSecondNumber" syntax="agz_GangZoneCreateSecondNumber(gzid, gznum, centposx, centposy, numsize)">
			<stacksize value="9"/>
			<referrer name="CreateZoneNumber"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="npart2"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<param name="gzid">
			</param>
			<param name="gznum">
			</param>
			<param name="centposx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="centposy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="numsize">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:amx_yield" syntax="amx_yield(val)">
			<stacksize value="1"/>
			<param name="val">
			</param>
		</member>
		<member name="M:argderef" syntax="argderef(n)">
			<stacksize value="1"/>
			<dependency name="argderef"/>
			<param name="n">
			</param>
			<library>amx_assembly amx_memory</library> <summary> Returns an array from a variable parameter. </summary>
		</member>
		<member name="M:argref" syntax="argref(n)">
			<stacksize value="1"/>
			<param name="n">
			</param>
			<library>amx_assembly amx_memory</library> <summary> Returns the address of a variable parameter. </summary>
		</member>
		<member name="M:asin" syntax="asin(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="PHY_asin_limit"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The sine for which to find the angle for
			</param>
			<library>a_samp</library>  <summary>Get the inversed value of a sine in degrees.</summary>    <seealso name="floatsin" />  <returns>The angle in degrees.</returns> 
		</member>
		<member name="M:atan" syntax="atan(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_GetEllipseRadius"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The tangent for which to find the angle for
			</param>
			<library>a_samp</library>  <summary>Get the inversed value of a tangent in degrees.</summary>    <seealso name="atan2" />  <seealso name="floattan" />  <returns>The angle in degrees.</returns> 
		</member>
		<member name="M:atan2" syntax="atan2(y, x)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_GetRotationFor2Point2D"/>
			<referrer name="T3_GetRotationFor2Point3D"/>
			<referrer name="T3_ShiftVectorToRotation"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_GetObjectMoveAngle"/>
			<referrer name="PHY_CreateWall"/>
			<referrer name="PHY_atan2_limit"/>
			<referrer name="AngleBetweenPoints"/>
			<referrer name="GetRotationFor2Point3D"/>
			<referrer name="GetAngleToPool"/>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y size
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x size
			</param>
			<library>a_samp</library>  <summary>Get the multi-valued inversed value of a tangent in degrees.</summary>      <seealso name="atan" />  <seealso name="floattan" />  <returns>The angle in degrees.</returns> 
		</member>
		<member name="M:bcrypt_get_hash" syntax="bcrypt_get_hash(hash[], size)">
			<attribute name="native"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnPasswordHash"/>
			<param name="hash">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:bcrypt_hash" syntax="bcrypt_hash(playerid, callback[], input[], cost, args[], ...)">
			<attribute name="native"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="OnDialogAccount"/>
			<param name="playerid">
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="input">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="cost">
			</param>
			<param name="args">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:bcrypt_verify" syntax="bcrypt_verify(playerid, callback[], input[], hash[])">
			<attribute name="native"/>
			<referrer name="OnDialogAccount"/>
			<param name="playerid">
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="input">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="hash">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:bernstein" syntax="bernstein(str[])">
			<stacksize value="4"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:binstr" syntax="binstr(str[])">
			<stacksize value="4"/>
			<dependency name="BinStr"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:boolstr" syntax="boolstr(str[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="BoolStr"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cache_delete" syntax="cache_delete(cache_id)">
			<attribute name="native"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="CountVehicleSellPlayer"/>
			<referrer name="CountGangMembers"/>
			<referrer name="FetchGang"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="CreateBusiness"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="CountAdminList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_offban"/>
			<param name="cache_id">
				<paraminfo>Cache </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_field_count" syntax="cache_get_field_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_fields"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_result_count" syntax="cache_get_result_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_results"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_row_count" syntax="cache_get_row_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_rows"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_index" syntax="cache_get_value_index(row_idx, column_idx, destination[], max_len)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="OnFishDialog"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="pc_cmd_offban"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
		</member>
		<member name="M:cache_get_value_index_bool" syntax="cache_get_value_index_bool(row_idx, column_idx, &amp;destination)">
			<stacksize value="5"/>
			<dependency name="cache_get_value_index_int"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_index_int" syntax="cache_get_value_index_int(row_idx, column_idx, &amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_get_value_index_bool"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="OnFishDialog"/>
			<referrer name="ShowAdminRanking"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name" syntax="cache_get_value_name(row_idx, column_name[], destination[], max_len)">
			<attribute name="native"/>
			<referrer name="Init_Records"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="OnGlitchRecord"/>
			<referrer name="Init_Teleports"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="CreateBusiness"/>
			<referrer name="StartRC"/>
			<referrer name="StartWG"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="Init_Map"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
		</member>
		<member name="M:cache_get_value_name_bool" syntax="cache_get_value_name_bool(row_idx, column_name[], &amp;destination)">
			<stacksize value="5"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="Init_GangBases"/>
			<referrer name="CreateBusiness"/>
			<referrer name="LoadPlayerStats"/>
			<dependency name="cache_get_value_name_int"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name_float" syntax="cache_get_value_name_float(row_idx, column_name[], &amp;destination)">
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="FetchBaseObjects"/>
			<referrer name="StartRC"/>
			<referrer name="LoadPlayerStats"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name_int" syntax="cache_get_value_name_int(row_idx, column_name[], &amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_get_value_name_bool"/>
			<referrer name="Init_Records"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="FetchBaseObjects"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Init_Business"/>
			<referrer name="CreateBusiness"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="StartWG"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="Init_Map"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_insert_id" syntax="cache_insert_id()">
			<attribute name="native"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="AddTeleport"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="OnPlayerBuyPrivCar"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="AddRaceArena"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="OnPlayerRegistered"/>
		</member>
		<member name="M:cache_num_fields" syntax="cache_num_fields()">
			<stacksize value="4"/>
			<dependency name="cache_get_field_count"/>
		</member>
		<member name="M:cache_num_results" syntax="cache_num_results()">
			<stacksize value="4"/>
			<dependency name="cache_get_result_count"/>
		</member>
		<member name="M:cache_num_rows" syntax="cache_num_rows()">
			<stacksize value="4"/>
			<referrer name="Init_Records"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="OnGlitchRecord"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="LoadPrivCarAttachments"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="CountVehicleSellPlayer"/>
			<referrer name="CountGangMembers"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="FetchBaseObjects"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Init_Business"/>
			<referrer name="FetchBusinessName"/>
			<referrer name="OnFishDialog"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="StartWG"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="FindAccount"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="CountAdminList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="Init_Map"/>
			<dependency name="cache_get_row_count"/>
		</member>
		<member name="M:calloc" syntax="calloc(size)">
			<tagname value="Alloc"/>
			<stacksize value="6"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="true"/>
			<param name="size">
				Size of memory to allocate.
			</param>
			  <returns>  0 on fail or a data handle on sucess.  </returns>  <remarks>  Displays errors in secure mode.  Blanks allocated mmeory.  </remarks> 
		</member>
		<member name="M:catstr" syntax="catstr(variable[], color, secondcolor, text[], ...)">
			<stacksize value="2063"/>
			<referrer name="ulepszenieError"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="pc_cmd_ulepszenia"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="ShowBankPanel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="RunRaportManage"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="pc_cmd_truck"/>
			<referrer name="ShowTutorial"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="ShowEngineSelect"/>
			<referrer name="Init_Gielda"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="ShowGieldaPanel"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="gangRankError"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="RunJobPanel"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="pc_cmd_rybki"/>
			<referrer name="pc_cmd_fishevent"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="pc_cmd_oreevent"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="CheckAdminList"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="SecondTimer"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="_catstr"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="va_format"/>
			<param name="variable">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="secondcolor">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:ceildiv" syntax="ceildiv(numerator, denominator)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="numerator">
				The top of the division.
			</param>
			<param name="denominator">
				The bottom of the division.
			</param>
			    <returns>  (numerator / denominator) rounded up.  </returns>  <remarks>  Normal integer division ALWAYS rounds down - this always rounds up.  </remarks> 
		</member>
		<member name="M:changeBarColor" syntax="changeBarColor(playerid, bar, colour)">
			<stacksize value="7"/>
			<referrer name="UpdateHud"/>
			<dependency name="HidePlayerProgressBar"/>
			<dependency name="IsPlayerProgressBarVisible"/>
			<dependency name="SetPlayerProgressBarColour"/>
			<dependency name="ShowPlayerProgressBar"/>
			<param name="playerid">
			</param>
			<param name="bar">
				<paraminfo>PlayerBar </paraminfo>
			</param>
			<param name="colour">
			</param>
		</member>
		<member name="M:changeHudColor" syntax="changeHudColor(playerid, draw, colour, box, alpha)">
			<stacksize value="7"/>
			<referrer name="UpdateHud"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="IsTextDrawVisibleForPlayer"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="setTextDrawColor"/>
			<dependency name="toggleTextDraw"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="draw">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="colour">
			</param>
			<param name="box">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="alpha">
			</param>
		</member>
		<member name="M:changePlayerHudColor" syntax="changePlayerHudColor(playerid, draw, colour, box, alpha)">
			<stacksize value="8"/>
			<referrer name="UpdateHud"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="IsPlayerTextDrawVisible"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="setPlayerTextDrawColor"/>
			<dependency name="togglePlayerTextDraw"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="draw">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="colour">
			</param>
			<param name="box">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="alpha">
			</param>
		</member>
		<member name="M:checkAdminLevel" syntax="checkAdminLevel(playerid, level)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="pc_cmd_interiory"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_specoff"/>
			<referrer name="pc_cmd_raporty"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="pc_cmd_tplist"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_cls"/>
			<referrer name="pc_cmd_jetpack"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_tpxyz"/>
			<referrer name="pc_cmd_csound"/>
			<referrer name="pc_cmd_acmd"/>
			<dependency name="false"/>
			<dependency name="playerData"/>
			<dependency name="player_adminLevel"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
		</member>
		<member name="M:checkIP" syntax="checkIP(string[])">
			<stacksize value="5"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="Regex_Check"/>
			<dependency name="Regex_New"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:checkRankPermission" syntax="checkRankPermission(playerid, permID)">
			<stacksize value="1"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<dependency name="false"/>
			<dependency name="pGangRankPerm"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="permID">
			</param>
		</member>
		<member name="M:checkRecord" syntax="checkRecord(typeid, amount)">
			<stacksize value="37"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="GetRecords"/>
			<dependency name="RECORD_BTR"/>
			<dependency name="RECORD_CH"/>
			<dependency name="RECORD_DA"/>
			<dependency name="RECORD_GG"/>
			<dependency name="RECORD_MINI"/>
			<dependency name="RECORD_ONEDE"/>
			<dependency name="RECORD_PLAYERS"/>
			<dependency name="RECORD_POMPA"/>
			<dependency name="RECORD_RC"/>
			<dependency name="RECORD_SK"/>
			<dependency name="RECORD_SM"/>
			<dependency name="RECORD_SNIPER"/>
			<dependency name="RECORD_TODAY"/>
			<dependency name="RECORD_WG"/>
			<dependency name="RECORD_WP"/>
			<dependency name="RECORD_ZP"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="recordAmount"/>
			<dependency name="recordNames"/>
			<dependency name="recordNames"/>
			<dependency name="toLowerCase"/>
			<param name="typeid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:checkTime" syntax="checkTime(time)">
			<stacksize value="59"/>
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="checkTime"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<param name="time">
			</param>
		</member>
		<member name="M:check_segment_intersection" syntax="check_segment_intersection(x1, y1, x2, y2, xc, yc, r, &amp;x, &amp;y)">
			<stacksize value="15"/>
			<referrer name="PHY_CoreTimer"/>
			<dependency name="operator-(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="floatsqroot"/>
			<dependency name="vectordotp"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="xc">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="yc">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="r">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:chrfind" syntax="chrfind(needle, haystack[], start)">
			<stacksize value="6"/>
			<dependency name="ChrFind"/>
			<param name="needle">
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:chrfindp" syntax="chrfindp(needle, haystack[], start)">
			<stacksize value="6"/>
			<dependency name="ChrFind"/>
			<param name="needle">
				The character to find.
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
				The string to find it in.
			</param>
			<param name="start">
				The offset to start from.
			</param>
			      <returns>  Fail - -1, Success - pos  </returns>  <remarks>  Like <symbolref name="ChrFind" />, but with no upper-bounds check on  <paramref name="start" />.  Now it has them anyway...  </remarks> 
		</member>
		<member name="M:containsIP" syntax="containsIP(string[])">
			<stacksize value="5"/>
			<referrer name="pc_cmd_pm"/>
			<dependency name="Regex_Check"/>
			<dependency name="Regex_New"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:copy_1" syntax="copy_1(&amp;dest, source[], start)">
			<stacksize value="1"/>
			<referrer name="GetAmxHeaderNow"/>
			<param name="dest">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:copy_2" syntax="copy_2(&amp;dest, source[], start)">
			<stacksize value="1"/>
			<referrer name="GetAmxHeaderNow"/>
			<param name="dest">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:copy_4" syntax="copy_4(&amp;dest, source[], start)">
			<stacksize value="1"/>
			<referrer name="GetAmxHeaderNow"/>
			<param name="dest">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<library>amx_assembly amx_header</library>
		</member>
		<member name="M:correctNick" syntax="correctNick(string[])">
			<stacksize value="5"/>
			<dependency name="Regex_Check"/>
			<dependency name="Regex_New"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:countGangMembers" syntax="countGangMembers(gangid)">
			<stacksize value="3"/>
			<referrer name="ZonesReward"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="pGang"/>
			<param name="gangid">
			</param>
		</member>
		<member name="M:deref" syntax="deref(v)">
			<stacksize value="1"/>
			<dependency name="deref"/>
			<param name="v">
			</param>
			<library>amx_assembly amx_memory</library> <summary> Returns an array from an address. </summary>
		</member>
		<member name="M:dialogBox" syntax="dialogBox(playerid, colour, text[], ...)">
			<stacksize value="1039"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="PremiumError"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@09"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="pc_cmd_raporty"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="CheckPlayerAFK"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_brama"/>
			<referrer name="pc_cmd_tspawn"/>
			<referrer name="pc_cmd_baza"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Magazynier_CP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0U"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0U"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="pc_cmd_wolnybiznes"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="FishTimer"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="rankError"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="catstr"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="colour">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:endofline" syntax="endofline(line[], pos)">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<dependency name="EndOfLine"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:existproperty" syntax="existproperty(id, name[], value)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:expr_const" syntax="expr_const(value, tag_id)">
			<tagname value="Expression"/>
			<attribute name="native"/>
			<referrer name="Expression:operator=(_:)"/>
			<referrer name="Expression:operator=(Float:)"/>
			<referrer name="Expression:operator=(bool:)"/>
			<param name="value">
				<paraminfo> {_,bool,Float,Variant,String,List,LinkedList,Map,Pool,Iter,Handle,Task,Expression} </paraminfo>
			</param>
			<param name="tag_id">
				<paraminfo> {_,tag_uid} </paraminfo>
			</param>
		</member>
		<member name="M:fautocleanup" syntax="fautocleanup(name[], maxAge)">
			<tagname value="bool"/>
			<stacksize value="77"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ftemporary"/>
			<dependency name="YSI_TEMP_FILE_NAME"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="format"/>
			<dependency name="fwrite"/>
			<dependency name="gettime"/>
			<dependency name="io_append"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				File to clean up.
			</param>
			<param name="maxAge">
				Maximum temporary file age.
			</param>
			    <remarks>  Add a file to the temporary cleanup list.  </remarks> 
		</member>
		<member name="M:fblockread" syntax="fblockread(handle, buffer[], size)">
			<attribute name="native"/>
			<referrer name="Files_CopyRange"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:fblockwrite" syntax="fblockwrite(handle, buffer[], size)">
			<attribute name="native"/>
			<referrer name="y_rconfix_Load"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="DumpAMX_WriteAMXHeader"/>
			<referrer name="DumpAMX_WriteEncoded"/>
			<referrer name="DumpAMX_Write"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:fclose" syntax="fclose(handle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<referrer name="y_rconfix_Load"/>
			<referrer name="DumpProfilingTime"/>
			<referrer name="ftouch"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="Files_DoCopy"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="_PrintBufferAmxBacktrace"/>
			<referrer name="DisasmWrite"/>
			<referrer name="DumpAMX_Write"/>
			<referrer name="ac_LoadCfg"/>
			<referrer name="ac_LoadNOPCfg"/>
			<referrer name="WriteToLog"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:fexist" syntax="fexist(pattern[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="y_rconfix_Load"/>
			<referrer name="DumpProfilingTime"/>
			<referrer name="ftouch"/>
			<referrer name="ftemporary_"/>
			<referrer name="fautocleanup"/>
			<referrer name="ac_LoadCfg"/>
			<referrer name="ac_LoadNOPCfg"/>
			<referrer name="geolite_open_dbs"/>
			<referrer name="WriteToLog"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:flength" syntax="flength(handle)">
			<attribute name="native"/>
			<referrer name="Files_DoCopy"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="DumpAMX_Write"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="BeautifyProfilingTime"/>
			<referrer name="RandomFloat"/>
			<referrer name="BS_UnpackAspectRatio"/>
			<referrer name="BS_UnpackCameraZoom"/>
			<referrer name="BS_ReadInCarSync"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="getRatio"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="changePlayerHudColor"/>
			<referrer name="changeHudColor"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Fortune_Start"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_invisible"/>
			<referrer name="randomPositionArea"/>
			<referrer name="percent_float"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="SecondTimer"/>
			<referrer name="pc_cmd_exit"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatabs" syntax="floatabs(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_GetLineCosTheta2D"/>
			<referrer name="T3_GetLineCosTheta3D"/>
			<referrer name="T3_ShiftRadianToDegreeEx"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="T3_IsPointInSphericalSector"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="SetCustomFallDamage"/>
			<referrer name="ac_OnPlayerKeyStateChange"/>
			<referrer name="IsPlayerBehindPlayer"/>
			<referrer name="IsObjectInSphere"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="GetAngleToPool"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcos" syntax="floatcos(value, mode)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_EulerToQuat"/>
			<referrer name="T3_GetRotationMatrixEuler"/>
			<referrer name="T3_GetRotationMatrixEulerEx"/>
			<referrer name="T3_GetQuatFromEuler"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetPointInFront2D"/>
			<referrer name="T3_GetPointInFront3D"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<referrer name="PHY_QuatFromAxisAngle"/>
			<referrer name="PHY_GetRotationQuaternion"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_IsPlayerNearWater"/>
			<referrer name="CA_IsVehicleNearWater"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="GetRotationQuaternion"/>
			<referrer name="IsPosInWater"/>
			<referrer name="GetPointInFront2D"/>
			<referrer name="GetPointInFront3D"/>
			<referrer name="Get2DInFrontOfPos"/>
			<referrer name="Get2DBehindObjectInAngle"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>anglemode </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="InterpolateColor"/>
			<referrer name="InterpolateColour"/>
			<referrer name="BiGramSimilarity"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatfract" syntax="floatfract(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="ac_GetPlayerFacingAngle"/>
			<referrer name="ac_GetVehicleZAngle"/>
			<referrer name="ProcessDamage"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatpower" syntax="floatpower(value, exponent)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_GetDistance1D"/>
			<referrer name="T3_GetDistance2D"/>
			<referrer name="T3_GetDistance3D"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetPointInCylinder2D"/>
			<referrer name="T3_GetPointInRectangle"/>
			<referrer name="T3_GetPointInCube"/>
			<referrer name="T3_GetPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointOnCylinder2D"/>
			<referrer name="T3_GetPointOnRectangle"/>
			<referrer name="T3_GetPointOnCube"/>
			<referrer name="T3_GetPointOnEllipticalCyl2D"/>
			<referrer name="RandomFloat"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="gSpeed"/>
			<referrer name="GetDistance3D"/>
			<referrer name="randomPositionArea"/>
			<referrer name="IsObjectInSphere"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="exponent">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatround" syntax="floatround(value, method)">
			<attribute name="native"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_CompressRotation"/>
			<referrer name="T3_EulerToQuat"/>
			<referrer name="T3_QuatToEuler"/>
			<referrer name="T3_ShiftSpeedToMoveTime"/>
			<referrer name="T3_IsPointInCircularSector"/>
			<referrer name="RandomFloat"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="BS_PackAspectRatio"/>
			<referrer name="BS_PackCameraZoom"/>
			<referrer name="BS_WriteInCarSync"/>
			<referrer name="ac_GetPlayerFacingAngle"/>
			<referrer name="ac_GetVehicleZAngle"/>
			<referrer name="ac_SetPlayerHealth"/>
			<referrer name="ac_SetPlayerArmour"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_GetSpeed"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="CompressRotation"/>
			<referrer name="achievement"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="changePlayerHudColor"/>
			<referrer name="changeHudColor"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="GetPlayerBudget"/>
			<referrer name="UpdateGangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="SparingTimer"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Fortune_Start"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_RandomGun"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerUpdate@0o"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="UpdateSM"/>
			<referrer name="StopSM"/>
			<referrer name="StopGG"/>
			<referrer name="StartWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="pc_cmd_invisible"/>
			<referrer name="randomPositionArea"/>
			<referrer name="Przegral"/>
			<referrer name="checkTime"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="SecondTimer"/>
			<referrer name="giveMoney"/>
			<referrer name="pc_cmd_exit"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="method">
				<paraminfo>floatround_method </paraminfo>
			</param>
		</member>
		<member name="M:floatsin" syntax="floatsin(value, mode)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_EulerToQuat"/>
			<referrer name="T3_GetRotationMatrixEuler"/>
			<referrer name="T3_GetRotationMatrixEulerEx"/>
			<referrer name="T3_GetQuatFromEuler"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetPointInFront2D"/>
			<referrer name="T3_GetPointInFront3D"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_ApplyQuaternionsRotation"/>
			<referrer name="PHY_QuatFromAxisAngle"/>
			<referrer name="PHY_GetRotationQuaternion"/>
			<referrer name="CA_RayCastExplode"/>
			<referrer name="CA_IsPlayerNearWater"/>
			<referrer name="CA_IsVehicleNearWater"/>
			<referrer name="CA_IsPlayerFacingWater"/>
			<referrer name="CA_IsVehicleFacingWater"/>
			<referrer name="CA_IsPlayerBlocked"/>
			<referrer name="CA_IsVehicleBlocked"/>
			<referrer name="CA_GetRoomCenter"/>
			<referrer name="GetRotationQuaternion"/>
			<referrer name="IsPosInWater"/>
			<referrer name="GetPointInFront2D"/>
			<referrer name="GetPointInFront3D"/>
			<referrer name="Get2DInFrontOfPos"/>
			<referrer name="Get2DBehindObjectInAngle"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>anglemode </paraminfo>
			</param>
		</member>
		<member name="M:floatsqroot" syntax="floatsqroot(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_GetDistance1D"/>
			<referrer name="T3_GetDistance2D"/>
			<referrer name="T3_GetDistance3D"/>
			<referrer name="T3_GetEllipseRadius"/>
			<referrer name="T3_GetDistancePointToLineEx"/>
			<referrer name="T3_GetPointInCylinder2D"/>
			<referrer name="T3_GetPointInRectangle"/>
			<referrer name="T3_GetPointInCube"/>
			<referrer name="T3_GetPointInEllipticalCylinder"/>
			<referrer name="T3_GetPointOnCylinder2D"/>
			<referrer name="T3_GetPointOnRectangle"/>
			<referrer name="T3_GetPointOnCube"/>
			<referrer name="T3_GetPointOnEllipticalCyl2D"/>
			<referrer name="PHY_CoreTimer"/>
			<referrer name="PHY_GetObjectSpeed"/>
			<referrer name="check_segment_intersection"/>
			<referrer name="PHY_QuatFromAxisAngle"/>
			<referrer name="PHY_QuatNormalize"/>
			<referrer name="CA_GetRoomHeight"/>
			<referrer name="gSpeed"/>
			<referrer name="GetDistance3D"/>
			<referrer name="GetPointsDistanceToPoint"/>
			<referrer name="IsObjectInSphere"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatstr" syntax="floatstr(string[])">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="getLost"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="IsObjectInSphere"/>
			<referrer name="GetAngleToPool"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floattan" syntax="floattan(value, mode)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="T3_GetEllipseRadius"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>anglemode </paraminfo>
			</param>
		</member>
		<member name="M:floordiv" syntax="floordiv(numerator, denominator)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="numerator">
				The top of the division.
			</param>
			<param name="denominator">
				The bottom of the division.
			</param>
			<summary>  floordiv(numerator, denominator);  </summary>      <returns>  (numerator / denominator) rounded down.  </returns>  <remarks>  Normal integer division ALWAYS rounds down - this also always rounds down,  making it a little pointless, but also more explicit in function.  </remarks> 
		</member>
		<member name="M:fopen" syntax="fopen(name[], mode)">
			<tagname value="File"/>
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="y_rconfix_Load"/>
			<referrer name="DumpProfilingTime"/>
			<referrer name="ftouch"/>
			<referrer name="ftemporary_"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="_PrintBufferAmxBacktrace"/>
			<referrer name="DisasmWrite"/>
			<referrer name="DumpAMX_Write"/>
			<referrer name="ac_LoadCfg"/>
			<referrer name="ac_LoadNOPCfg"/>
			<referrer name="WriteToLog"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>filemode </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="T3_GetOrientationName"/>
			<referrer name="T3_Init"/>
			<referrer name="T3_Exit"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Script_GetCompilerString"/>
			<referrer name="Script_GetIncludesString"/>
			<referrer name="Script_GetStartString"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="YVers_Callback"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<referrer name="BeautifyProfilingTime"/>
			<referrer name="va_return"/>
			<referrer name="fautocleanup"/>
			<referrer name="Logger_Log"/>
			<referrer name="Logger_Dbg"/>
			<referrer name="Logger_Err"/>
			<referrer name="Logger_Fatal"/>
			<referrer name="Logger_I"/>
			<referrer name="Logger_B"/>
			<referrer name="Logger_X"/>
			<referrer name="Logger_F"/>
			<referrer name="Logger_S"/>
			<referrer name="Logger_A"/>
			<referrer name="Logger_P"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_TextDrawSetString"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_fprintf"/>
			<referrer name="va_SendRconCommand"/>
			<referrer name="va_SetGameModeText"/>
			<referrer name="va_DBQuery"/>
			<referrer name="va_ShowPlayerDialog"/>
			<referrer name="va_CreateMenu"/>
			<referrer name="va_AddMenuItem"/>
			<referrer name="va_SetMenuColumnHeader"/>
			<referrer name="va_SetObjectMaterialText"/>
			<referrer name="va_SetPlayerObjectMaterialText"/>
			<referrer name="va_Create3DTextLabel"/>
			<referrer name="va_Update3DTextLabelText"/>
			<referrer name="va_CreatePlayer3DTextLabel"/>
			<referrer name="va_UpdatePlayer3DTextLabelText"/>
			<referrer name="va_SetSVarString"/>
			<referrer name="va_SetPVarString"/>
			<referrer name="va_AddServerRule"/>
			<referrer name="va_SetServerRule"/>
			<referrer name="Bit_Display"/>
			<referrer name="ac_EnableAntiCheat"/>
			<referrer name="ac_OnCheatDetected"/>
			<referrer name="ac_KickWithCode"/>
			<referrer name="ac_LoadCfg"/>
			<referrer name="ac_LoadNOPCfg"/>
			<referrer name="AddDialogListitem"/>
			<referrer name="NDP_DialogInvoke"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="AddModelMenuItem"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<referrer name="GetIpAutonomousSystem"/>
			<referrer name="GetIpCountry"/>
			<referrer name="GetIpCity"/>
			<referrer name="GetIpProvince"/>
			<referrer name="GetIpUTC"/>
			<referrer name="GetRejectedHit"/>
			<referrer name="WC_GetWeaponName"/>
			<referrer name="DamageFeedUpdateText"/>
			<referrer name="getCityName"/>
			<referrer name="getZoneName"/>
			<referrer name="Init_Records"/>
			<referrer name="checkRecord"/>
			<referrer name="GetRecords"/>
			<referrer name="pc_cmd_rekordy"/>
			<referrer name="WriteToLog"/>
			<referrer name="addLevelScore"/>
			<referrer name="getUlepszeniaData"/>
			<referrer name="getUlepszeniaLevelData"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="GetAchievementCount"/>
			<referrer name="GetAchievementStatus"/>
			<referrer name="GetAchievementLevel"/>
			<referrer name="GetAchievementDone"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="GetQuestName"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="Init_Quiz"/>
			<referrer name="UpdateQuizDraw"/>
			<referrer name="StartQuiz"/>
			<referrer name="getHud"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="OnDialogHud"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="getMentioned"/>
			<referrer name="UpdateAreny"/>
			<referrer name="getArenaKills"/>
			<referrer name="getArenaDeaths"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="OnGlitchRecord"/>
			<referrer name="Init_Bank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="RandomVaultCode"/>
			<referrer name="ShowVaultDialog"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="RunRaportManage"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="SendGlobalMessage"/>
			<referrer name="SendLocalMessage"/>
			<referrer name="pc_cmd_local"/>
			<referrer name="RunDriveExams"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="CreateKurczak"/>
			<referrer name="Init_Teleports"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="AddTeleport"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="ShowTeleportManage"/>
			<referrer name="GetEtykietaColor"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="getPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="UpdatePrivCarLabel"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="SetVehicleToSell"/>
			<referrer name="CountVehicleSellPlayer"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="UpdateGangBox"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="SaveGang"/>
			<referrer name="CountGangMembers"/>
			<referrer name="GetPlayerGangPerms"/>
			<referrer name="giveGangBudget"/>
			<referrer name="GetGangUlepszenia"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="GetGangAchievements"/>
			<referrer name="GetGangAchievementStatus"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_GangZones"/>
			<referrer name="UpdateGangZoneLabel"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="addGangScore"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingCountDown"/>
			<referrer name="SparingTimer"/>
			<referrer name="CheckSparing"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="LeaveGang"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="GetJobUlepszenia"/>
			<referrer name="addJobScore"/>
			<referrer name="getJobLevel"/>
			<referrer name="getJobScore"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="Taxi_Random"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="ExitPraca"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="OnDialogJob"/>
			<referrer name="UpdateBusinessLabel"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="FetchCasino"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Roulette_Start"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="Roulette_Refresh"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="CreateBusiness"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="Init_Fishing"/>
			<referrer name="OnFishDialog"/>
			<referrer name="GetFishUlepszenia"/>
			<referrer name="ShowFishUlepszenia"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="ShowFishBaits"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="GetFishBaits"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="UpdateMineLabel"/>
			<referrer name="GetMineWeight"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="RefreshGameList"/>
			<referrer name="UpdateGameDraw"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="AddRaceArena"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="UpdateZP"/>
			<referrer name="StopZP"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="StartWP"/>
			<referrer name="UpdateWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_evpanel"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickPlayer"/>
			<referrer name="WarnPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="CheckPlayerMuted"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="getAccountSettings"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="ShowLoginPanel"/>
			<referrer name="ShowQuestionPanel"/>
			<referrer name="ShowPinCodePanel"/>
			<referrer name="ShowRegisterPanel"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="ShowAdminLogin"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_autor"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="pc_cmd_kill"/>
			<referrer name="CheckAdminList"/>
			<referrer name="pc_cmd_re"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="showPlayerCMD"/>
			<referrer name="showDialog"/>
			<referrer name="GetColorRGBA"/>
			<referrer name="syntaxError"/>
			<referrer name="_catstr"/>
			<referrer name="newMessage"/>
			<referrer name="ConvertTime"/>
			<referrer name="IsBlockCommand"/>
			<referrer name="DeletePolish"/>
			<referrer name="valueError"/>
			<referrer name="toUpperCase"/>
			<referrer name="toLowerCase"/>
			<referrer name="mix_string"/>
			<referrer name="getLocalDate"/>
			<referrer name="showGameDraw"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="checkTime"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="WC_OnPlayerUpdate"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="SecondTimer"/>
			<referrer name="MinuteTimer"/>
			<referrer name="Init_Map"/>
			<referrer name="giveMoney"/>
			<referrer name="PP_main"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
				The string to output the result to
			</param>
			<param name="len">
				The maximum length output can contain
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format string
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
				Indefinite number of arguments of any tag
			</param>
			<library>a_samp</library>  <summary>Formats a string to include variables and other strings inside it.</summary>          <seealso name="print" />  <seealso name="printf" />  <remarks>This function doesn't support <a href="#strpack">packed strings</a>.</remarks>  <remarks>  <b>Format Specifiers:</b><br />  <ul>  <li><b><c>%i</c></b> - integer (whole number)</li>  <li><b><c>%d</c></b> - integer (whole number).</li>  <li><b><c>%s</c></b> - string</li>  <li><b><c>%f</c></b> - floating-point number (Float: tag)</li>  <li><b><c>%c</c></b> - ASCII character</li>  <li><b><c>%x</c></b> - hexadecimal number</li>  <li><b><c>%b</c></b> - binary number</li>  <li><b><c>%%</c></b> - literal <b><c>%</c></b></li>  <li><b><c>%q</c></b> - escape a text for SQLite. (Added in <b>0.3.7 R2</b>)</li>  </ul>  </remarks>  <remarks>The values for the placeholders follow in the exact same order as parameters in the call.  For example, <b><c>"I am %i years old"</c></b> - the <b><c>%i</c></b> will be replaced with an Integer  variable, which is the person's age.</remarks>  <remarks>You may optionally put a number between the <b><c>%</c></b> and the letter of the placeholder  code.  This number indicates the field width; if the size of the parameter to print at the position  of the placeholder is smaller than the field width, the field is expanded with spaces.  To cut the  number of decimal places beeing shown of a float, you can add <b><c>.&lt;max number&gt;</c></b> between  the <b><c>%</c></b> and the <b><c>f</c></b>. (example: <b><c>%.2f</c></b>)</remarks> 
		</member>
		<member name="M:foundPlayer" syntax="foundPlayer(playerName[])">
			<stacksize value="8"/>
			<referrer name="getMentioned"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="foundString"/>
			<dependency name="isNumeric"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="strval"/>
			<param name="playerName">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:foundString" syntax="foundString(string1[], string2[], &amp;start, &amp;end)">
			<stacksize value="7"/>
			<referrer name="foundPlayer"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:fputchar" syntax="fputchar(handle, value, utf8)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Files_CopyRange"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="utf8">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:fread" syntax="fread(handle, string[], size, pack)">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="_PrintBufferAmxBacktrace"/>
			<referrer name="ac_LoadCfg"/>
			<referrer name="ac_LoadNOPCfg"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:free" syntax="free(slot)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Slot of memory to free up.
			</param>
			  <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:fremove" syntax="fremove(name[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Files_Move"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fseek" syntax="fseek(handle, position, whence)">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Files_DoCopy"/>
			<referrer name="DumpAMX_Write"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="position">
			</param>
			<param name="whence">
				<paraminfo>seek_whence </paraminfo>
			</param>
		</member>
		<member name="M:ftemporary" syntax="ftemporary(ret[], ext[], len, maxAge)">
			<tagname value="File"/>
			<stacksize value="40"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<dependency name="E_YSI_DIR_TEMP"/>
			<dependency name="GetYSIScriptfilesDir"/>
			<dependency name="fautocleanup"/>
			<dependency name="ftemporary_"/>
			<dependency name="strcat"/>
			<param name="ret">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ext">
				<paraminfo> [] </paraminfo>
				Extension.
			</param>
			<param name="len">
				Maximum string length.
			</param>
			<param name="maxAge">
				Maximum temporary file age.
			</param>
			<param name="name">Storage.</param>        <remarks>  Generate a random temporary filename and open it.  Also redefines  <c>ftemp</c> to call this function instead if called with extra parameters.  </remarks> 
		</member>
		<member name="M:ftemporary_" syntax="ftemporary_(name[], ext[], path[], len)">
			<tagname value="File"/>
			<stacksize value="6"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="ftemporary"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="io_readwrite"/>
			<dependency name="random"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ext">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="path">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:ftouch" syntax="ftouch(filename[])">
			<stacksize value="5"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="io_write"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
				The file to "touch".
			</param>
			<summary>  ftouch(filename);  </summary>    <returns>  0 - File already exists.  1 - File was created.  -1 - File was not created.  </returns>  <remarks>  This "touches" a file in the Unix sense of creating it but not opening or  editing it in any way.  </remarks> 
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="OnScriptInit@E"/>
			<referrer name="Indirect_Call"/>
			<referrer name="Indirect_Callstring"/>
			<referrer name="Indirect_Callvoid"/>
			<referrer name="Indirect_Array"/>
			<referrer name="CGen_GetAddr"/>
			<referrer name="CGen_OnCodeInit"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="Callback_Find_"/>
			<referrer name="GetFunctionAddress"/>
			<referrer name="ScriptInit_OnFilterScriptExit"/>
			<referrer name="ac_OnGameModeExit"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fwrite" syntax="fwrite(handle, string[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<referrer name="DumpProfilingTime"/>
			<referrer name="fautocleanup"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteDataRowChar"/>
			<referrer name="DisasmWriteDataRowHex"/>
			<referrer name="DisasmWriteData"/>
			<referrer name="va_fprintf"/>
			<referrer name="ac_LoadCfg"/>
			<referrer name="ac_LoadNOPCfg"/>
			<referrer name="WriteToLog"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:gSpeed" syntax="gSpeed(vel_x, vel_y, vel_z)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="GetVehSpeed"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<param name="vel_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:gangRankError" syntax="gangRankError(playerid, i)">
			<stacksize value="10"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="gangRankPermissions"/>
			<dependency name="gangRankPermissions"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:geolite_close_dbs" syntax="geolite_close_dbs()">
			<stacksize value="3"/>
			<referrer name="CA_OnFilterScriptExit"/>
			<referrer name="CA_OnGameModeExit"/>
			<dependency name="DB_Close"/>
			<dependency name="GEOLITE_asn_db"/>
			<dependency name="GEOLITE_city_db"/>
			<dependency name="GEOLITE_country_db"/>
			<dependency name="GEOLITE_province_db"/>
		</member>
		<member name="M:geolite_open_dbs" syntax="geolite_open_dbs()">
			<stacksize value="4"/>
			<referrer name="Indirection_OnFilterScriptInit"/>
			<referrer name="MS_OnGameModeInit"/>
			<dependency name="DB_FreeResult"/>
			<dependency name="DB_Open"/>
			<dependency name="DB_Query"/>
			<dependency name="GEOLITE_asn_db"/>
			<dependency name="GEOLITE_city_db"/>
			<dependency name="GEOLITE_country_db"/>
			<dependency name="GEOLITE_province_db"/>
			<dependency name="fexist"/>
		</member>
		<member name="M:getAccountSettings" syntax="getAccountSettings(playerid)">
			<stacksize value="265"/>
			<referrer name="OnDialogSettings"/>
			<dependency name="format"/>
			<dependency name="getAccountSettings"/>
			<dependency name="pAccountSettings"/>
			<dependency name="pAccountSettings"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getArenaDeaths" syntax="getArenaDeaths(playerid)">
			<stacksize value="137"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="format"/>
			<dependency name="getArenaDeaths"/>
			<dependency name="pArenaDeaths"/>
			<dependency name="pArenaDeaths"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getArenaKills" syntax="getArenaKills(playerid)">
			<stacksize value="137"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="format"/>
			<dependency name="getArenaKills"/>
			<dependency name="pArenaKills"/>
			<dependency name="pArenaKills"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getChatType" syntax="getChatType(typeid)">
			<stacksize value="26"/>
			<referrer name="pc_cmd_konto"/>
			<dependency name="getChatType"/>
			<param name="typeid">
			</param>
		</member>
		<member name="M:getCityName" syntax="getCityName(x, y, z)">
			<stacksize value="57"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Init_GangZones"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="cityNameData"/>
			<dependency name="cityNameData"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="zone_maxx"/>
			<dependency name="zone_maxy"/>
			<dependency name="zone_minx"/>
			<dependency name="zone_miny"/>
			<dependency name="zone_name"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:getDay" syntax="getDay(day, month, year)">
			<stacksize value="1"/>
			<referrer name="MinuteTimer"/>
			<param name="day">
			</param>
			<param name="month">
			</param>
			<param name="year">
			</param>
		</member>
		<member name="M:getDayName" syntax="getDayName(day)">
			<stacksize value="21"/>
			<referrer name="MinuteTimer"/>
			<dependency name="getDayName"/>
			<param name="day">
			</param>
		</member>
		<member name="M:getDuelName" syntax="getDuelName(rankid)">
			<stacksize value="26"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="RunPlayerStats"/>
			<dependency name="DUEL_RANK_BRONZE"/>
			<dependency name="DUEL_RANK_CHAMPION"/>
			<dependency name="DUEL_RANK_DIAMOND"/>
			<dependency name="DUEL_RANK_GOLD"/>
			<dependency name="DUEL_RANK_SILVER"/>
			<dependency name="getDuelName"/>
			<param name="rankid">
			</param>
		</member>
		<member name="M:getDuelPoints" syntax="getDuelPoints(rankid)">
			<stacksize value="2"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="RunPlayerStats"/>
			<dependency name="DUEL_RANK_BRONZE"/>
			<dependency name="DUEL_RANK_CHAMPION"/>
			<dependency name="DUEL_RANK_DIAMOND"/>
			<dependency name="DUEL_RANK_GOLD"/>
			<dependency name="DUEL_RANK_SILVER"/>
			<param name="rankid">
			</param>
		</member>
		<member name="M:getHud" syntax="getHud(playerid)">
			<stacksize value="521"/>
			<referrer name="OnDialogHud"/>
			<referrer name="SavePlayerStats"/>
			<dependency name="format"/>
			<dependency name="getHud"/>
			<dependency name="pHud"/>
			<dependency name="pHud"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getJobLevel" syntax="getJobLevel(playerid)">
			<stacksize value="99"/>
			<referrer name="addJobScore"/>
			<referrer name="ExitPraca"/>
			<dependency name="format"/>
			<dependency name="getJobLevel"/>
			<dependency name="pJobLevel"/>
			<dependency name="pJobLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getJobName" syntax="getJobName(jobid)">
			<stacksize value="26"/>
			<referrer name="Init_Jobs"/>
			<referrer name="RunJobPanel"/>
			<referrer name="ExitPraca"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="OnDialogJob"/>
			<dependency name="getJobName"/>
			<param name="jobid">
			</param>
		</member>
		<member name="M:getJobScore" syntax="getJobScore(playerid)">
			<stacksize value="99"/>
			<referrer name="addJobScore"/>
			<referrer name="ExitPraca"/>
			<dependency name="format"/>
			<dependency name="getJobScore"/>
			<dependency name="pJobScore"/>
			<dependency name="pJobScore"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getLocalDate" syntax="getLocalDate()">
			<stacksize value="143"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="KickPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_help"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
		</member>
		<member name="M:getLost" syntax="getLost(playerid, &amp;loss)">
			<stacksize value="541"/>
			<dependency name="GetPlayerNetworkStats"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="floatstr"/>
			<dependency name="strfind"/>
			<dependency name="strmid"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="loss">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:getMentioned" syntax="getMentioned(playerid, text[], max_len)">
			<stacksize value="136"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="GetPlayerName"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="foundPlayer"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="strreplace"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
		</member>
		<member name="M:getMoney" syntax="getMoney(playerid)">
			<stacksize value="1"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="valueError"/>
			<dependency name="playerData"/>
			<dependency name="player_money"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getPodiumText" syntax="getPodiumText(variable, one[], two[], three[])">
			<stacksize value="38"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="getPodiumText"/>
			<dependency name="strcopy"/>
			<param name="variable">
			</param>
			<param name="one">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="two">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="three">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:getPosition" syntax="getPosition(playerid, inVeh, &amp;x, &amp;y, &amp;z, &amp;a)">
			<stacksize value="7"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evtdmspawn"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="SavePlayerPosition"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="ac_GetPlayerFacingAngle"/>
			<dependency name="ac_GetVehicleZAngle"/>
			<param name="playerid">
			</param>
			<param name="inVeh">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="a">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:getPrivCarUlepszenia" syntax="getPrivCarUlepszenia(privcarid)">
			<stacksize value="137"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<dependency name="format"/>
			<dependency name="getPrivCarUlepszenia"/>
			<dependency name="pVehUlepszenie"/>
			<dependency name="pVehUlepszenie"/>
			<param name="privcarid">
			</param>
		</member>
		<member name="M:getRankColor" syntax="getRankColor(rankid)">
			<stacksize value="2"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="ShowAdminLogin"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="CheckAdminList"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_acmd"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="Init_Map"/>
			<param name="rankid">
			</param>
		</member>
		<member name="M:getRankName" syntax="getRankName(rankid)">
			<stacksize value="16"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="ShowAdminLogin"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="CheckAdminList"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_cls"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="Init_Map"/>
			<dependency name="getRankName"/>
			<param name="rankid">
			</param>
		</member>
		<member name="M:getRankingName" syntax="getRankingName(rankid)">
			<stacksize value="26"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="pc_cmd_team"/>
			<dependency name="SPARING_RANK_BRONZE"/>
			<dependency name="SPARING_RANK_CHAMPION"/>
			<dependency name="SPARING_RANK_DIAMOND"/>
			<dependency name="SPARING_RANK_GOLD"/>
			<dependency name="SPARING_RANK_PLATINUM"/>
			<dependency name="SPARING_RANK_SILVER"/>
			<dependency name="getRankingName"/>
			<param name="rankid">
			</param>
		</member>
		<member name="M:getRankingPoints" syntax="getRankingPoints(rankid)">
			<stacksize value="2"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="pc_cmd_team"/>
			<dependency name="SPARING_RANK_BRONZE"/>
			<dependency name="SPARING_RANK_CHAMPION"/>
			<dependency name="SPARING_RANK_DIAMOND"/>
			<dependency name="SPARING_RANK_GOLD"/>
			<dependency name="SPARING_RANK_PLATINUM"/>
			<dependency name="SPARING_RANK_SILVER"/>
			<param name="rankid">
			</param>
		</member>
		<member name="M:getRatio" syntax="getRatio(kills, deaths)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunPlayerStats"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="float"/>
			<param name="kills">
			</param>
			<param name="deaths">
			</param>
		</member>
		<member name="M:getReasonName" syntax="getReasonName(reasonid)">
			<stacksize value="16"/>
			<dependency name="getReasonName"/>
			<param name="reasonid">
			</param>
		</member>
		<member name="M:getSpawnName" syntax="getSpawnName(typeid)">
			<stacksize value="26"/>
			<referrer name="pc_cmd_konto"/>
			<dependency name="getSpawnName"/>
			<param name="typeid">
			</param>
		</member>
		<member name="M:getUlepszeniaData" syntax="getUlepszeniaData(playerid)">
			<stacksize value="137"/>
			<referrer name="OnDialogUlepszenia"/>
			<dependency name="format"/>
			<dependency name="getUlepszeniaData"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pUlepszenia"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getUlepszeniaLevelData" syntax="getUlepszeniaLevelData(playerid)">
			<stacksize value="137"/>
			<referrer name="OnDialogUlepszenia"/>
			<dependency name="format"/>
			<dependency name="getUlepszeniaLevelData"/>
			<dependency name="pUlepszeniaLevel"/>
			<dependency name="pUlepszeniaLevel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getZoneName" syntax="getZoneName(x, y, z)">
			<stacksize value="57"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="Init_GangZones"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="format"/>
			<dependency name="getZoneName"/>
			<dependency name="zoneNameData"/>
			<dependency name="zoneNameData"/>
			<dependency name="zone_maxx"/>
			<dependency name="zone_maxy"/>
			<dependency name="zone_minx"/>
			<dependency name="zone_miny"/>
			<dependency name="zone_name"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:getarg" syntax="getarg(arg, index)">
			<attribute name="native"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<referrer name="L@"/>
			<referrer name="T@"/>
			<referrer name="RandomMinMaxExceptMany"/>
			<referrer name="Logger_Log"/>
			<referrer name="Logger_Dbg"/>
			<referrer name="Logger_Err"/>
			<referrer name="Logger_Fatal"/>
			<referrer name="AsmEmitInstruction"/>
			<referrer name="CodeScanMatcherPattern_"/>
			<referrer name="Callback_Get"/>
			<referrer name="Callback_Restore_"/>
			<referrer name="ShuffleDeepArray_Entry"/>
			<referrer name="ResetDeepArray_Entry"/>
			<referrer name="SortArrayUsingCompInto_Entry"/>
			<referrer name="SetWeaponDamage"/>
			<referrer name="addVehicleComponent"/>
			<param name="arg">
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:getdate" syntax="getdate(&amp;year, &amp;month, &amp;day)">
			<attribute name="native"/>
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="WriteToLog"/>
			<referrer name="getLocalDate"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="MinuteTimer"/>
			<referrer name="PP_main"/>
			<param name="year">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="month">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="day">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:getproperty" syntax="getproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="y_rconfix_Load"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:gettime" syntax="gettime(&amp;hour, &amp;minute, &amp;second)">
			<attribute name="native"/>
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="DumpProfilingTime"/>
			<referrer name="fautocleanup"/>
			<referrer name="ac_OnPlayerEnterVehicle"/>
			<referrer name="InflictDamage"/>
			<referrer name="AddRejectedHit"/>
			<referrer name="WriteToLog"/>
			<referrer name="StartQuiz"/>
			<referrer name="givePremium"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@09"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="Fortune_Start"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="ConvertTime"/>
			<referrer name="IsBlockCommand"/>
			<referrer name="getLocalDate"/>
			<referrer name="CheckPlayerBattle"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="WC_OnPlayerDamage"/>
			<referrer name="MinuteTimer"/>
			<referrer name="PP_main"/>
			<param name="hour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="minute">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="second">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:giveGangBudget" syntax="giveGangBudget(gangid, amount)">
			<stacksize value="7"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="CheckGangWar"/>
			<referrer name="ZonesReward"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="CheckSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="WC_OnPlayerDeath"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budget"/>
			<dependency name="gang_budgetDraw"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pGangBudgetTimer"/>
			<dependency name="strdot"/>
			<dependency name="textDrawSetString"/>
			<param name="gangid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:giveMoney" syntax="giveMoney(playerid, amount, updateTD)">
			<stacksize value="42"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="achievement"/>
			<referrer name="CheckQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="CheckDuel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="_@yHOnPlayerDeath@0@"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="StopChowany"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="CheckBet"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="CollectFigure"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="pc_cmd_naj"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="addLevelScore"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="math_random"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pCredit"/>
			<dependency name="pMoneyTimer"/>
			<dependency name="percent"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_accountID"/>
			<dependency name="player_money"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<dependency name="tdMoney"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
			<param name="updateTD">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:givePremium" syntax="givePremium(playerid, days)">
			<stacksize value="8"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="CollectFigure"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Premium"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="LOG_DEBUG"/>
			<dependency name="Log"/>
			<dependency name="UnixTime"/>
			<dependency name="gettime"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_logged"/>
			<dependency name="player_nickname"/>
			<dependency name="player_premiumTime"/>
			<param name="playerid">
			</param>
			<param name="days">
			</param>
		</member>
		<member name="M:giveWeapon" syntax="giveWeapon(playerid, weaponid, ammo)">
			<stacksize value="7"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="JoinGlitchArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="GiveSparingZestaw"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="Drwal_Start"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="CancelMining"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="DeleteGodDA"/>
			<referrer name="StartBTR"/>
			<referrer name="RoyalePickup"/>
			<referrer name="StartGG"/>
			<referrer name="RespawnGG"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="UpdateSK"/>
			<referrer name="StartWG"/>
			<referrer name="RespawnWG"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="LoadWeaponData"/>
			<referrer name="SecondTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="acc_GivePlayerWeapon"/>
			<dependency name="false"/>
			<dependency name="pCheatDetected"/>
			<dependency name="pCheatTemp"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:handle_alive" syntax="handle_alive(handle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="operator!(Handle:)"/>
			<param name="handle">
				<paraminfo>Handle </paraminfo>
			</param>
		</member>
		<member name="M:hexstr" syntax="hexstr(str[])">
			<stacksize value="4"/>
			<dependency name="HexStr"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:hideGameDraw" syntax="hideGameDraw(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="KillTimer"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="pGameDrawTimer"/>
			<dependency name="tdGameDraw"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isNumeric" syntax="isNumeric(string[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="OnBankDialog"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="foundPlayer"/>
			<dependency name="sscanf"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:isValidPassword" syntax="isValidPassword(string[])">
			<stacksize value="5"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnDialogAdminDuty"/>
			<dependency name="Regex_Check"/>
			<dependency name="Regex_New"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ishex" syntax="ishex(str[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="IsHex"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:isnumeric" syntax="isnumeric(str[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="IsNumeric"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ispacked" syntax="ispacked(string[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="strreplace"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:iter_get_arr" syntax="iter_get_arr(iter, value[], size)">
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<param name="iter">
				<paraminfo>Iter </paraminfo>
			</param>
			<param name="value">
				<paraminfo> {_,bool,Float,Variant,String,List,LinkedList,Map,Pool,Iter,Handle,Task,Expression} [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:iter_inside" syntax="iter_inside(iter)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<param name="iter">
				<paraminfo>Iter </paraminfo>
			</param>
		</member>
		<member name="M:iter_move_next" syntax="iter_move_next(iter, steps)">
			<tagname value="Iter"/>
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<param name="iter">
				<paraminfo>Iter </paraminfo>
			</param>
			<param name="steps">
			</param>
		</member>
		<member name="M:iterfunc" syntax="iterfunc(params)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="params">
				The iterator function's parameters.
			</param>
			  <remarks>  Used to declare a special iterator function.  Examples:  <code>  iterfunc stock OnlyZero(cur)                                                    <br />  {                                                                               <br /><indent />  if (cur == -1)                                                              <br /><indent /><indent />  return 0;                                                               <br /><indent />  return -1;                                                                  <br />  }                                                                               <br />  </code>  <code>  iterfunc stock AlsoOnlyZero[cellmin](cur)                                       <br />  {                                                                               <br /><indent />  if (cur == cellmin)                                                         <br /><indent /><indent />  return 0;                                                               <br /><indent />  return cellmin;                                                             <br />  }                                                                               <br />  </code>  <code>  iterfunc stock OneToTen[cellmin](cur)                                           <br />  {                                                                               <br /><indent />  if (cur == cellmin)                                                         <br /><indent /><indent />  return 1;                                                               <br /><indent />  if (cur == 10)                                                              <br /><indent /><indent />  return cellmin;                                                         <br /><indent />  return cur + 1;                                                             <br />  }                                                                               <br />  </code>  <code>  iterfunc stock OneToN(cur, n)                                                   <br />  {                                                                               <br /><indent />  if (n &lt; 1)                                                               <br /><indent /><indent />  return -1;                                                              <br /><indent />  if (cur == -1)                                                              <br /><indent /><indent />  return 1;                                                               <br /><indent />  if (cur == n)                                                               <br /><indent /><indent />  return -1;                                                              <br /><indent />  return cur + 1;                                                             <br />  }                                                                               <br />  </code>  </remarks> 
		</member>
		<member name="M:list_add_arr" syntax="list_add_arr(list, value[], index, size, tag_id)">
			<attribute name="native"/>
			<referrer name="AddModelMenuItem"/>
			<param name="list">
				<paraminfo>List </paraminfo>
			</param>
			<param name="value">
				<paraminfo> {_,bool,Float,Variant,String,List,LinkedList,Map,Pool,Iter,Handle,Task,Expression} [] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="size">
			</param>
			<param name="tag_id">
				<paraminfo> {_,tag_uid} </paraminfo>
			</param>
		</member>
		<member name="M:list_delete" syntax="list_delete(list)">
			<attribute name="native"/>
			<referrer name="HideModelSelectionMenu"/>
			<param name="list">
				<paraminfo>List </paraminfo>
			</param>
		</member>
		<member name="M:list_get" syntax="list_get(list, index, offset)">
			<attribute name="native"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
			<param name="list">
				<paraminfo>List </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:list_iter" syntax="list_iter(list, index)">
			<tagname value="Iter"/>
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<referrer name="SetModelSelectionMenuPage"/>
			<param name="list">
				<paraminfo>List </paraminfo>
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:list_new" syntax="list_new()">
			<tagname value="List"/>
			<attribute name="native"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="ac_OnDialogResponse"/>
		</member>
		<member name="M:list_size" syntax="list_size(list)">
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuTextDraws"/>
			<param name="list">
				<paraminfo>List </paraminfo>
			</param>
		</member>
		<member name="M:list_valid" syntax="list_valid(list)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="HideModelSelectionMenu"/>
			<param name="list">
				<paraminfo>List </paraminfo>
			</param>
		</member>
		<member name="M:main" syntax="main()">
			<attribute name="entry"/>
			<stacksize value="1"/>
		</member>
		<member name="M:malloc" syntax="malloc(size)">
			<tagname value="Alloc"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="size">
				Size of memory to allocate.
			</param>
			  <returns>  0 on fail or a data handle on sucess.  </returns>  <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:math_random" syntax="math_random(min, max)">
			<attribute name="native"/>
			<referrer name="achievement"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="StartQuiz"/>
			<referrer name="StopQuiz"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="DuelRespawn"/>
			<referrer name="CheckDuel"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="_@yHOnPlayerKeyStateChange@09"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Init_Stations"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="RandomGangReward"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="CheckGangWar"/>
			<referrer name="ZonesReward"/>
			<referrer name="ConquestGangReward"/>
			<referrer name="SparingCountDown"/>
			<referrer name="CheckSparing"/>
			<referrer name="MagazynPacked"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="Mysliwy_Start"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Drwal_Start"/>
			<referrer name="DrwalTree"/>
			<referrer name="Grzybiarz_Start"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="OnDialogJob"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="Init_Mining"/>
			<referrer name="PrepareMining"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="StopChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StopDA"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="CheckBet"/>
			<referrer name="KickPlayer"/>
			<referrer name="WarnPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="Init_Disks"/>
			<referrer name="CollectFigure"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<referrer name="SecondTimer"/>
			<referrer name="MinuteTimer"/>
			<referrer name="giveMoney"/>
			<param name="min">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:math_random_float" syntax="math_random_float(min, max)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="DrwalTree"/>
			<referrer name="GunShop_RandomGun"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="StartBTR"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_tpaccept"/>
			<param name="min">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:max" syntax="max(value1, value2)">
			<attribute name="native"/>
			<referrer name="YHNPS_Push"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="SetRespawnTime"/>
			<param name="value1">
			</param>
			<param name="value2">
			</param>
		</member>
		<member name="M:memcmp" syntax="memcmp(arr1[], arr2[], count)">
			<stacksize value="6"/>
			<dependency name="MemCmp"/>
			<param name="arr1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="arr2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="count">
			</param>
		</member>
		<member name="M:memcpy" syntax="memcpy(dest[], source[], index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="Iter_Init_Internal"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="Indirect_Array"/>
			<referrer name="YVA2_DoPush"/>
			<referrer name="Malloc_GetA"/>
			<referrer name="Malloc_SetA"/>
			<referrer name="Malloc_SetVAA"/>
			<referrer name="realloc"/>
			<referrer name="Callback_CallHandler_"/>
			<referrer name="Callback_RemoteHandler_"/>
			<referrer name="Callback_LocalHandler_"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:memset" syntax="memset(arr[], val, size)">
			<stacksize value="7"/>
			<dependency name="RawMemSet"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="val">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:mget" syntax="mget(slot, index)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to get data from.
			</param>
			<param name="index">
				The location in the unit to get.
			</param>
			    <returns>  The data  </returns>  <remarks>  Shorthand for <symbolref name="Malloc_Get" />.  </remarks> 
		</member>
		<member name="M:mgeta" syntax="mgeta(target[], length, array, index)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
				Target for the string.
			</param>
			<param name="length">
				Length of the target.
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			        <returns>  The data  </returns>  <remarks>  Displays errors in secure mode.  Gets an array.  Shorthand for <symbolref name="Malloc_GetA" />.  </remarks> 
		</member>
		<member name="M:mgetf" syntax="mgetf(slot, index)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to get float data from.
			</param>
			<param name="index">
				The location in the unit to get.
			</param>
			    <returns>  The data  </returns>  <remarks>  Shorthand for <symbolref name="Malloc_GetFloat" />.  </remarks> 
		</member>
		<member name="M:mgets" syntax="mgets(target[], length, array, index, pack)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
				Target for the string.
			</param>
			<param name="length">
				Length of the target.
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Return the string packed?
			</param>
			          <returns>  The data  </returns>  <remarks>  Displays errors in secure mode.  Gets a string.  Shorthand for <symbolref name="Malloc_GetS" />.  </remarks> 
		</member>
		<member name="M:min" syntax="min(value1, value2)">
			<attribute name="native"/>
			<referrer name="Base64Decode"/>
			<referrer name="DoLevenshteinDistance"/>
			<referrer name="DoLevenshteinDistancePackA"/>
			<referrer name="DoLevenshteinDistancePackB"/>
			<referrer name="DoLevenshteinDistancePackAB"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="DisasmWriteData"/>
			<referrer name="CodeScanAddJumpTarget"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="Malloc_GetA"/>
			<referrer name="Malloc_SetA"/>
			<param name="value1">
			</param>
			<param name="value2">
			</param>
		</member>
		<member name="M:mix_string" syntax="mix_string(string[], Return[], max_swap, dest_size)">
			<stacksize value="208"/>
			<referrer name="StartQuiz"/>
			<dependency name="format"/>
			<dependency name="random"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="Return">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_swap">
			</param>
			<param name="dest_size">
			</param>
		</member>
		<member name="M:mset" syntax="mset(slot, index, value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to set in.
			</param>
			<param name="index">
				Where in the unit to set.
			</param>
			<param name="value">
				The value to save.
			</param>
			      <remarks>  Shorthand for <symbolref name="Malloc_Set" />.  </remarks> 
		</member>
		<member name="M:mseta" syntax="mseta(array, index, str[], len)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Array to insert.
			</param>
			<param name="len">
				Length of the array.
			</param>
			        <remarks>  Displays errors in secure mode.  Inserts an array.  Shorthand for <symbolref name="Malloc_SetA" />.  </remarks> 
		</member>
		<member name="M:msetf" syntax="msetf(slot, index, value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to set in.
			</param>
			<param name="index">
				Where in the unit to set.
			</param>
			<param name="value">
				The float value to save.
			</param>
			      <remarks>  Shorthand for <symbolref name="Malloc_SetFloat" />.  </remarks> 
		</member>
		<member name="M:msets" syntax="msets(array, index, str[], pack)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to insert
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Should the string be packed in?
			</param>
			        <remarks>  Displays errors in secure mode.  Inserts a string.  Shorthand for <symbolref name="Malloc_SetS" />.  </remarks> 
		</member>
		<member name="M:msg" syntax="msg(playerid, colour, text[], ...)">
			<stacksize value="1039"/>
			<referrer name="addLevelScore"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="RejectDuelTimer"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="pc_cmd_vpozostalo"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="ExitGlitchArena"/>
			<referrer name="OnBankDialog"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_specoff"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="LoopingAnim"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="AddTeleport"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ChangePrivCarModel"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="OnPrivCarAttachmentBuy"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SetVehicleToSell"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="DelayedGangInvite"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="ZonesReward"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="TransferResetGang"/>
			<referrer name="addGangScore"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="StopSparing"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="addJobScore"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0U"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TakeTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="pc_cmd_wolnybiznes"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="AddRaceArena"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="_@yHOnPlayerDeath@0p"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="UpdateBTR"/>
			<referrer name="_@yHOnPlayerDeath@0t"/>
			<referrer name="StartWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="_@yHOnPlayerDeath@0v"/>
			<referrer name="StartWG"/>
			<referrer name="_@yHOnPlayerDeath@0w"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="_@yHOnPlayerDisconnect@0x"/>
			<referrer name="_@yHOnPlayerDeath@0x"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evtdmspawn"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evczas"/>
			<referrer name="pc_cmd_evpogoda"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="OnCheatDetected"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="pc_cmd_betspec"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="FindAccount"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="pc_cmd_obiekty"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="sendError"/>
			<referrer name="msgAdmins"/>
			<referrer name="IsBlockCommand"/>
			<referrer name="CheckPlayerBattle"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="SecondTimer"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="newMessage"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="colour">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:msgAdmins" syntax="msgAdmins(colour, text[], ...)">
			<stacksize value="1039"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="va_format"/>
			<param name="colour">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:msgAll" syntax="msgAll(colour, text[], ...)">
			<stacksize value="1039"/>
			<referrer name="checkRecord"/>
			<referrer name="StartQuiz"/>
			<referrer name="StopQuiz"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="BombaExplode"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="RunDuelMatch"/>
			<referrer name="CheckDuel"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="OnGlitchRecord"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="_@yHOnPlayerDeath@0@"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_zw"/>
			<referrer name="pc_cmd_jj"/>
			<referrer name="CreateKurczak"/>
			<referrer name="StartGangWar"/>
			<referrer name="CheckGangWar"/>
			<referrer name="CancelGangWar"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="CheckSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="Init_Mining"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="StartChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="StartZP"/>
			<referrer name="StopZP"/>
			<referrer name="StartDA"/>
			<referrer name="StopDA"/>
			<referrer name="StartRC"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="StopRC"/>
			<referrer name="StartBTR"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopBTR"/>
			<referrer name="StartSM"/>
			<referrer name="StopSM"/>
			<referrer name="StartGG"/>
			<referrer name="StopGG"/>
			<referrer name="StartWP"/>
			<referrer name="StopWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="StopSK"/>
			<referrer name="StartWG"/>
			<referrer name="StopWG"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evkick50"/>
			<referrer name="KickPlayer"/>
			<referrer name="WarnPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_naj"/>
			<referrer name="pc_cmd_kill"/>
			<referrer name="pc_cmd_siema"/>
			<referrer name="pc_cmd_nara"/>
			<referrer name="pc_cmd_jebac"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_cls"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="RespawnVehicles"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="MinuteTimer"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="newMessage"/>
			<dependency name="va_format"/>
			<param name="colour">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:mysql_close" syntax="mysql_close(handle)">
			<attribute name="native"/>
			<referrer name="WC_OnGameModeExit"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_connect" syntax="mysql_connect(host[], user[], password[], database[], option_id)">
			<tagname value="MySQL"/>
			<attribute name="native"/>
			<referrer name="Init_MySQL"/>
			<param name="host">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="user">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="database">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="option_id">
				<paraminfo>MySQLOpt </paraminfo>
			</param>
		</member>
		<member name="M:mysql_errno" syntax="mysql_errno(handle)">
			<attribute name="native"/>
			<referrer name="Init_MySQL"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_escape_string" syntax="mysql_escape_string(source[], destination[], max_len, handle)">
			<attribute name="native"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogBanList"/>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_format" syntax="mysql_format(handle, output[], max_len, format[], ...)">
			<attribute name="native"/>
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="MySQL_TQueryInline"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:mysql_init_options" syntax="mysql_init_options()">
			<tagname value="MySQLOpt"/>
			<attribute name="native"/>
			<referrer name="Init_MySQL"/>
		</member>
		<member name="M:mysql_pquery" syntax="mysql_pquery(handle, query[], callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="MySQL_PQueryInline"/>
			<referrer name="checkRecord"/>
			<referrer name="addLevelScore"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="Init_Quiz"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="OnDialogHud"/>
			<referrer name="CheckDuelRank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0C"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="SavePrivCar"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="SetVehicleToSell"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="LoadPlayerGang"/>
			<referrer name="SaveGang"/>
			<referrer name="giveGangBudget"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="Init_GangZones"/>
			<referrer name="CheckGangWar"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="_@yHOnPlayerEditDynObject@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="addGangScore"/>
			<referrer name="CheckRankedLevel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="LeaveGang"/>
			<referrer name="addJobScore"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="CreateBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="AddRaceArena"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0s"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="WarnPlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="MinuteTimer"/>
			<referrer name="Init_Map"/>
			<referrer name="giveMoney"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:mysql_query" syntax="mysql_query(handle, query[], use_cache)">
			<tagname value="Cache"/>
			<attribute name="native"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="CountVehicleSellPlayer"/>
			<referrer name="CountGangMembers"/>
			<referrer name="FetchGang"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="CreateBusiness"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="FindAccount"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="CountAdminList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_offban"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="use_cache">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:mysql_set_option" syntax="mysql_set_option(option_id, type, ...)">
			<attribute name="native"/>
			<referrer name="Init_MySQL"/>
			<param name="option_id">
				<paraminfo>MySQLOpt </paraminfo>
			</param>
			<param name="type">
				<paraminfo>E_MYSQL_OPTION </paraminfo>
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:mysql_tquery" syntax="mysql_tquery(handle, query[], callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="MySQL_TQueryInline"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:newMessage" syntax="newMessage(playerid, color, text[])">
			<stacksize value="2076"/>
			<referrer name="msg"/>
			<referrer name="msgAll"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="format"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:numargs" syntax="numargs()">
			<attribute name="native"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="L@"/>
			<referrer name="T@"/>
			<referrer name="RandomMinMaxExceptMany"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<referrer name="Logger_Log"/>
			<referrer name="Logger_Dbg"/>
			<referrer name="Logger_Err"/>
			<referrer name="Logger_Fatal"/>
			<referrer name="ref"/>
			<referrer name="AsmEmitInstruction"/>
			<referrer name="CodeScanMatcherPattern_"/>
			<referrer name="refabs"/>
			<referrer name="Indirect_Ref_"/>
			<referrer name="Indirect_Ptr_"/>
			<referrer name="Indirect_DeRef_"/>
			<referrer name="Indirect_DePtr_"/>
		</member>
		<member name="M:orig_ChangeVehiclePaintjob" syntax="orig_ChangeVehiclePaintjob(vehicleid, paintjobid)">
			<stacksize value="4"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:orig_GetPlayerMoney" syntax="orig_GetPlayerMoney(playerid)">
			<stacksize value="3"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="ac_Timer"/>
			<dependency name="GetPlayerMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:orig_GivePlayerMoney" syntax="orig_GivePlayerMoney(playerid, money)">
			<stacksize value="4"/>
			<dependency name="GivePlayerMoney"/>
			<param name="playerid">
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:orig_GivePlayerWeapon" syntax="orig_GivePlayerWeapon(playerid, weaponid, ammo)">
			<stacksize value="5"/>
			<dependency name="GivePlayerWeapon"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:orig_LinkVehicleToInterior" syntax="orig_LinkVehicleToInterior(vehicleid, interiorid)">
			<stacksize value="4"/>
			<dependency name="LinkVehicleToInterior"/>
			<param name="vehicleid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:orig_PutPlayerInVehicle" syntax="orig_PutPlayerInVehicle(playerid, vehicleid, seatid)">
			<stacksize value="5"/>
			<dependency name="PutPlayerInVehicle"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="seatid">
			</param>
		</member>
		<member name="M:orig_RemovePlayerFromVehicle" syntax="orig_RemovePlayerFromVehicle(playerid)">
			<stacksize value="3"/>
			<dependency name="RemovePlayerFromVehicle"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:orig_RepairVehicle" syntax="orig_RepairVehicle(vehicleid)">
			<stacksize value="3"/>
			<dependency name="RepairVehicle"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:orig_ResetPlayerMoney" syntax="orig_ResetPlayerMoney(playerid)">
			<stacksize value="3"/>
			<dependency name="ResetPlayerMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:orig_ResetPlayerWeapons" syntax="orig_ResetPlayerWeapons(playerid)">
			<stacksize value="3"/>
			<dependency name="ResetPlayerWeapons"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:orig_SetPlayerAmmo" syntax="orig_SetPlayerAmmo(playerid, weaponslot, ammo)">
			<stacksize value="5"/>
			<dependency name="SetPlayerAmmo"/>
			<param name="playerid">
			</param>
			<param name="weaponslot">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:orig_SetPlayerArmour" syntax="orig_SetPlayerArmour(playerid, armour)">
			<stacksize value="4"/>
			<dependency name="SetPlayerArmour"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SetPlayerHealth" syntax="orig_SetPlayerHealth(playerid, health)">
			<stacksize value="4"/>
			<dependency name="SetPlayerHealth"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SetPlayerInterior" syntax="orig_SetPlayerInterior(playerid, interiorid)">
			<stacksize value="4"/>
			<dependency name="SetPlayerInterior"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:orig_SetPlayerPos" syntax="orig_SetPlayerPos(playerid, x, y, z)">
			<stacksize value="6"/>
			<dependency name="SetPlayerPos"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SetPlayerPosFindZ" syntax="orig_SetPlayerPosFindZ(playerid, x, y, z)">
			<stacksize value="6"/>
			<dependency name="SetPlayerPosFindZ"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SetPlayerSpecialAction" syntax="orig_SetPlayerSpecialAction(playerid, actionid)">
			<stacksize value="4"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
		</member>
		<member name="M:orig_SetPlayerVelocity" syntax="orig_SetPlayerVelocity(playerid, X, Y, Z)">
			<stacksize value="6"/>
			<dependency name="SetPlayerVelocity"/>
			<param name="playerid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SetSpawnInfo" syntax="orig_SetSpawnInfo(playerid, team, skin, x, y, z, rotation, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<stacksize value="15"/>
			<dependency name="SetSpawnInfo"/>
			<param name="playerid">
			</param>
			<param name="team">
			</param>
			<param name="skin">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:orig_SetVehicleAngularVelocity" syntax="orig_SetVehicleAngularVelocity(vehicleid, X, Y, Z)">
			<stacksize value="6"/>
			<dependency name="SetVehicleAngularVelocity"/>
			<param name="vehicleid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SetVehicleHealth" syntax="orig_SetVehicleHealth(vehicleid, health)">
			<stacksize value="4"/>
			<dependency name="SetVehicleHealth"/>
			<param name="vehicleid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SetVehiclePos" syntax="orig_SetVehiclePos(vehicleid, x, y, z)">
			<stacksize value="6"/>
			<dependency name="SetVehiclePos"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SetVehicleToRespawn" syntax="orig_SetVehicleToRespawn(vehicleid)">
			<stacksize value="3"/>
			<dependency name="SetVehicleToRespawn"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:orig_SetVehicleVelocity" syntax="orig_SetVehicleVelocity(vehicleid, X, Y, Z)">
			<stacksize value="6"/>
			<dependency name="SetVehicleVelocity"/>
			<param name="vehicleid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:orig_SpawnPlayer" syntax="orig_SpawnPlayer(playerid)">
			<stacksize value="3"/>
			<dependency name="SpawnPlayer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:orig_TogglePlayerControllable" syntax="orig_TogglePlayerControllable(playerid, toggle)">
			<stacksize value="4"/>
			<dependency name="TogglePlayerControllable"/>
			<param name="playerid">
			</param>
			<param name="toggle">
			</param>
		</member>
		<member name="M:orig_TogglePlayerSpectating" syntax="orig_TogglePlayerSpectating(playerid, toggle)">
			<stacksize value="4"/>
			<dependency name="TogglePlayerSpectating"/>
			<param name="playerid">
			</param>
			<param name="toggle">
			</param>
		</member>
		<member name="M:orig_UpdateVehicleDamageStatus" syntax="orig_UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires)">
			<stacksize value="7"/>
			<dependency name="UpdateVehicleDamageStatus"/>
			<param name="vehicleid">
			</param>
			<param name="panels">
			</param>
			<param name="doors">
			</param>
			<param name="lights">
			</param>
			<param name="tires">
			</param>
		</member>
		<member name="M:orm_delete" syntax="orm_delete(id, callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ORM_DeleteInline"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:orm_insert" syntax="orm_insert(id, callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ORM_InsertInline"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:orm_load" syntax="orm_load(id, callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ORM_LoadInline"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:orm_save" syntax="orm_save(id, callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ORM_SaveInline"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:orm_select" syntax="orm_select(id, callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ORM_SelectInline"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:orm_update" syntax="orm_update(id, callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ORM_UpdateInline"/>
			<param name="id">
				<paraminfo>ORM </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:pc_alias_addvehicle" syntax="pc_alias_addvehicle()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_admins" syntax="pc_alias_admins()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_aduel" syntax="pc_alias_aduel()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_aduty" syntax="pc_alias_aduty()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_anims" syntax="pc_alias_anims()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_apanel" syntax="pc_alias_apanel()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_astop" syntax="pc_alias_astop()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_autor" syntax="pc_alias_autor()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_baza" syntax="pc_alias_baza()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_bet" syntax="pc_alias_bet()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_bj" syntax="pc_alias_bj()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_bronie" syntax="pc_alias_bronie()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_calus" syntax="pc_alias_calus()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_ch" syntax="pc_alias_ch()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_checkban" syntax="pc_alias_checkban()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_cls" syntax="pc_alias_cls()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_dajmoney" syntax="pc_alias_dajmoney()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_duel" syntax="pc_alias_duel()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_ev" syntax="pc_alias_ev()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evadd" syntax="pc_alias_evadd()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evarmor" syntax="pc_alias_evarmor()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evcar" syntax="pc_alias_evcar()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evcreate" syntax="pc_alias_evcreate()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evczas" syntax="pc_alias_evczas()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evdelete" syntax="pc_alias_evdelete()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evdelgod" syntax="pc_alias_evdelgod()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evend" syntax="pc_alias_evend()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evhealth" syntax="pc_alias_evhealth()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evnagroda" syntax="pc_alias_evnagroda()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evpogoda" syntax="pc_alias_evpogoda()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evtph" syntax="pc_alias_evtph()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evtpt" syntax="pc_alias_evtpt()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evtype" syntax="pc_alias_evtype()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_evweapon" syntax="pc_alias_evweapon()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_exit" syntax="pc_alias_exit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_fake" syntax="pc_alias_fake()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_flo" syntax="pc_alias_flo()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_getuid" syntax="pc_alias_getuid()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_glitch" syntax="pc_alias_glitch()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_gornictwo" syntax="pc_alias_gornictwo()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_help" syntax="pc_alias_help()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_hud" syntax="pc_alias_hud()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_idzdo" syntax="pc_alias_idzdo()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_interiory" syntax="pc_alias_interiory()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_invisible" syntax="pc_alias_invisible()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_kamizelka" syntax="pc_alias_kamizelka()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_kick" syntax="pc_alias_kick()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_kill" syntax="pc_alias_kill()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_kolory" syntax="pc_alias_kolory()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_konto" syntax="pc_alias_konto()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_lakier" syntax="pc_alias_lakier()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_local" syntax="pc_alias_local()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_low" syntax="pc_alias_low()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_naj" syntax="pc_alias_naj()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_napraw" syntax="pc_alias_napraw()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_nowosci" syntax="pc_alias_nowosci()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_obiekty" syntax="pc_alias_obiekty()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_oreevent" syntax="pc_alias_oreevent()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_osiagniecia" syntax="pc_alias_osiagniecia()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_ownrank" syntax="pc_alias_ownrank()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_pbuy" syntax="pc_alias_pbuy()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_pijak" syntax="pc_alias_pijak()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_pm" syntax="pc_alias_pm()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_pompa" syntax="pc_alias_pompa()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_pp" syntax="pc_alias_pp()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_pth" syntax="pc_alias_pth()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_ptp" syntax="pc_alias_ptp()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_quest" syntax="pc_alias_quest()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_raport" syntax="pc_alias_raport()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_raporty" syntax="pc_alias_raporty()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_rc" syntax="pc_alias_rc()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_rccreator" syntax="pc_alias_rccreator()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_regulamin" syntax="pc_alias_regulamin()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_rekordy" syntax="pc_alias_rekordy()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_rybki" syntax="pc_alias_rybki()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_serverstats" syntax="pc_alias_serverstats()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_setrank" syntax="pc_alias_setrank()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_setvip" syntax="pc_alias_setvip()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_skin" syntax="pc_alias_skin()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_sniper" syntax="pc_alias_sniper()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_spadam" syntax="pc_alias_spadam()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_stats" syntax="pc_alias_stats()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_style" syntax="pc_alias_style()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tancz" syntax="pc_alias_tancz()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_taryfikator" syntax="pc_alias_taryfikator()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_td" syntax="pc_alias_td()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_team" syntax="pc_alias_team()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_teles" syntax="pc_alias_teles()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_th" syntax="pc_alias_th()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_time" syntax="pc_alias_time()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tkolor" syntax="pc_alias_tkolor()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_top" syntax="pc_alias_top()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_topusc" syntax="pc_alias_topusc()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tpaccept" syntax="pc_alias_tpaccept()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tpadd" syntax="pc_alias_tpadd()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tplist" syntax="pc_alias_tplist()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tt" syntax="pc_alias_tt()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tune" syntax="pc_alias_tune()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tutorial" syntax="pc_alias_tutorial()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_tzaproszenia" syntax="pc_alias_tzaproszenia()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_ulecz" syntax="pc_alias_ulecz()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_ulepszenia" syntax="pc_alias_ulepszenia()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_unjail" syntax="pc_alias_unjail()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_unmute" syntax="pc_alias_unmute()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_unwarn" syntax="pc_alias_unwarn()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_v" syntax="pc_alias_v()">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_wal" syntax="pc_alias_wal()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_weather" syntax="pc_alias_weather()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_wgc" syntax="pc_alias_wgc()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_wolnybiznes" syntax="pc_alias_wolnybiznes()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_zw" syntax="pc_alias_zw()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_cmd_acmd" syntax="pc_cmd_acmd(playerid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_HELP_CMDLIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="cmd_admin"/>
			<dependency name="cmd_description"/>
			<dependency name="cmd_level"/>
			<dependency name="cmd_name"/>
			<dependency name="getRankColor"/>
			<dependency name="helpAdminCMD"/>
			<dependency name="helpAdminCMD"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_adminLevel"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_addvehicle" syntax="pc_cmd_addvehicle(playerid)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="cache_insert_id"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dbconn"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="serverVehicle"/>
			<dependency name="serverVehicleCount"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_adhd" syntax="pc_cmd_adhd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_admins" syntax="pc_cmd_admins(playerid)">
			<attribute name="public"/>
			<stacksize value="271"/>
			<dependency name="CheckAdminList"/>
			<dependency name="CheckAdminList"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Single@Permission"/>
			<dependency name="catstr"/>
			<dependency name="dialogBox"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_aduel" syntax="pc_cmd_aduel(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="pc_cmd_duel"/>
			<dependency name="RunDuelMatch"/>
			<dependency name="pAccountSettings"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pDuelInvite"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_aduty" syntax="pc_cmd_aduty(playerid)">
			<attribute name="public"/>
			<stacksize value="27"/>
			<referrer name="OnDialogAdminDuty"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DIALOG_ADMIN_DUTY"/>
			<dependency name="DIALOG_ADMIN_PASSWORD"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="ShowAdminLogin"/>
			<dependency name="dialogBox"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_adminLevel"/>
			<dependency name="player_adminLoad"/>
			<dependency name="player_adminPass"/>
			<dependency name="player_adminTime"/>
			<dependency name="player_checkCMD"/>
			<dependency name="player_checkMuted"/>
			<dependency name="player_checkPM"/>
			<dependency name="player_online"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_aim" syntax="pc_cmd_aim(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_anims" syntax="pc_cmd_anims(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_ann" syntax="pc_cmd_ann(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="158"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Timer_CreateCallback"/>
			<dependency name="Timer_KillCallback"/>
			<dependency name="WC_TextDrawHideForAll"/>
			<dependency name="WC_TextDrawShowForAll"/>
			<dependency name="annTime"/>
			<dependency name="annTimer"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<dependency name="tdAnnounce"/>
			<dependency name="textDrawSetString"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_apanel" syntax="pc_cmd_apanel(playerid)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="OnDialogAdminPanel"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="CountAdminList"/>
			<dependency name="DIALOG_ADMIN_PANEL"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="bankHeistEnabled"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="fishEvent"/>
			<dependency name="format"/>
			<dependency name="oreEvent"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_aresztuj" syntax="pc_cmd_aresztuj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_astop" syntax="pc_cmd_astop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="StopLoopingAnim"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_atakuj" syntax="pc_cmd_atakuj(playerid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<dependency name="gangData"/>
			<dependency name="gang_battleZone"/>
			<dependency name="pGang"/>
			<dependency name="pGangWarTime"/>
			<dependency name="pGangZoneArea"/>
			<dependency name="pGangZoneOwner"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_autor" syntax="pc_cmd_autor(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_bacznosc" syntax="pc_cmd_bacznosc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bagaznik" syntax="pc_cmd_bagaznik(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ban" syntax="pc_cmd_ban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="59"/>
			<dependency name="BanPlayer"/>
			<dependency name="BlockAdminTroll"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_banlist" syntax="pc_cmd_banlist(playerid)">
			<attribute name="public"/>
			<stacksize value="296"/>
			<referrer name="OnDialogBanList"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_BANLIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dbconn"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_banData"/>
			<dependency name="rankError"/>
			<dependency name="showDialog"/>
			<dependency name="strx"/>
			<dependency name="timediff"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_barman" syntax="pc_cmd_barman(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_barman2" syntax="pc_cmd_barman2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_basket" syntax="pc_cmd_basket(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bat" syntax="pc_cmd_bat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_baza" syntax="pc_cmd_baza(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CheckGangBase"/>
			<dependency name="RunBaseOptions"/>
			<dependency name="dialogBox"/>
			<dependency name="gangData"/>
			<dependency name="gang_ownerid"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_bazy" syntax="pc_cmd_bazy(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="CheckGangBase"/>
			<dependency name="DIALOG_BASE_MENU"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Single@GangBases"/>
			<dependency name="catstr"/>
			<dependency name="gangData"/>
			<dependency name="gang_ownerid"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_bcreator" syntax="pc_cmd_bcreator(playerid)">
			<attribute name="public"/>
			<stacksize value="39"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="DIALOG_BUSINESS_CREATOR"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessType"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iterator@Business"/>
			<dependency name="catstr"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="pBusinessCreatorCost"/>
			<dependency name="pBusinessCreatorName"/>
			<dependency name="pBusinessCreatorName"/>
			<dependency name="pBusinessCreatorPosition"/>
			<dependency name="pBusinessCreatorType"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strlen"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_beach" syntax="pc_cmd_beach(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bet" syntax="pc_cmd_bet(playerid)">
			<attribute name="public"/>
			<stacksize value="165"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<dependency name="DIALOG_BET_NEWBIE"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="betData"/>
			<dependency name="betData"/>
			<dependency name="bet_name"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_name"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="pBetAccept"/>
			<dependency name="pBetGang"/>
			<dependency name="pBetReward"/>
			<dependency name="pBetTarget"/>
			<dependency name="pBetType"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_betspec" syntax="pc_cmd_betspec(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SpecToggle"/>
			<dependency name="msg"/>
			<dependency name="pBetAccept"/>
			<dependency name="pBetTarget"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_biznesy" syntax="pc_cmd_biznesy(playerid)">
			<attribute name="public"/>
			<stacksize value="190"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessType"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="Iterator@Business"/>
			<dependency name="Teleport"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_name"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_position"/>
			<dependency name="business_type"/>
			<dependency name="cellmax"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getCityName"/>
			<dependency name="getCityName"/>
			<dependency name="getZoneName"/>
			<dependency name="getZoneName"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_businessData"/>
			<dependency name="s"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_bj" syntax="pc_cmd_bj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bomba" syntax="pc_cmd_bomba(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="165"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimer"/>
			<dependency name="WC_TextDrawHideForAll"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="bombaOwner"/>
			<dependency name="bombaPickup"/>
			<dependency name="bombaTimer"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="false"/>
			<dependency name="getRankName"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<dependency name="tdBomba"/>
			<dependency name="textDrawSetString"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_boxanim" syntax="pc_cmd_boxanim(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_brama" syntax="pc_cmd_brama(playerid)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="CheckGangBase"/>
			<dependency name="GangBaseDoor"/>
			<dependency name="GangBaseDoorStatus"/>
			<dependency name="GangBaseDoorZ"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetNearestBase"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="dialogBox"/>
			<dependency name="pGang"/>
			<dependency name="showGameDraw"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_bronie" syntax="pc_cmd_bronie(playerid)">
			<attribute name="public"/>
			<stacksize value="165"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="cellmax"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="giveWeapon"/>
			<dependency name="msg"/>
			<dependency name="s"/>
			<dependency name="strdot"/>
			<dependency name="valueError"/>
			<dependency name="weaponShopData"/>
			<dependency name="weaponShopData"/>
			<dependency name="weapon_bonus"/>
			<dependency name="weapon_id"/>
			<dependency name="weapon_money"/>
			<dependency name="weapon_name"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_btr" syntax="pc_cmd_btr(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_BTR"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_call" syntax="pc_cmd_call(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SPECIAL_ACTION_STOPUSECELLPHONE"/>
			<dependency name="SPECIAL_ACTION_USECELLPHONE"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_calus" syntax="pc_cmd_calus(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_carchat" syntax="pc_cmd_carchat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ch" syntax="pc_cmd_ch(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_CH"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_chant" syntax="pc_cmd_chant(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_chat" syntax="pc_cmd_chat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_chatauto" syntax="pc_cmd_chatauto(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_chatauto2" syntax="pc_cmd_chatauto2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_checkban" syntax="pc_cmd_checkban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CheckPlayerOnline"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="ShowBanManage"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dbconn"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="task_await"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_circle" syntax="pc_cmd_circle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_cls" syntax="pc_cmd_cls(playerid)">
			<attribute name="public"/>
			<stacksize value="23"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_cop" syntax="pc_cmd_cop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_cpun" syntax="pc_cmd_cpun(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_csound" syntax="pc_cmd_csound(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_da" syntax="pc_cmd_da(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_DA"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_daj" syntax="pc_cmd_daj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_dajmoney" syntax="pc_cmd_dajmoney(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="59"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_deal" syntax="pc_cmd_deal(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_do" syntax="pc_cmd_do(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="140"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iterator@Player"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_down" syntax="pc_cmd_down(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_dowody" syntax="pc_cmd_dowody(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_drunk" syntax="pc_cmd_drunk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_duel" syntax="pc_cmd_duel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="170"/>
			<dependency name="CheckPlayerGame"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="Polaczenie"/>
			<dependency name="RejectDuelTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="pAccountSettings"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pDuelInvite"/>
			<dependency name="pDuelRounds"/>
			<dependency name="pDuelSync"/>
			<dependency name="pDuelTimer"/>
			<dependency name="pDuelWeapon"/>
			<dependency name="pDuelWeapon"/>
			<dependency name="pc_cmd_aduel"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_dzien" syntax="pc_cmd_dzien(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="pc_cmd_time"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_ev" syntax="pc_cmd_ev(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckPlayerGame"/>
			<dependency name="EventCountDown"/>
			<dependency name="EventLeader"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Event"/>
			<dependency name="Iterator@Event"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_evadd" syntax="pc_cmd_evadd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="166"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="EventError"/>
			<dependency name="EventInterior"/>
			<dependency name="EventName"/>
			<dependency name="EventPosition"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Event"/>
			<dependency name="Iterator@Event"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="Polaczenie"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="SetHealth"/>
			<dependency name="Teleport"/>
			<dependency name="VW_EVENT"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evarmor" syntax="pc_cmd_evarmor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evcar" syntax="pc_cmd_evcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="48"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetVehicleNameByID"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="acc_LinkVehicleToInterior"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="false"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="pEventVehicle"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evcolor" syntax="pc_cmd_evcolor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="CheckEvent"/>
			<dependency name="DIALOG_EVENT_COLOR"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="Polaczenie"/>
			<dependency name="SetPVarInt"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evcreate" syntax="pc_cmd_evcreate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="53"/>
			<dependency name="EVENT_TYPE_NONE"/>
			<dependency name="EventCountDown"/>
			<dependency name="EventDuelCount"/>
			<dependency name="EventDuelEnemy"/>
			<dependency name="EventDuelStarted"/>
			<dependency name="EventInterior"/>
			<dependency name="EventLeader"/>
			<dependency name="EventName"/>
			<dependency name="EventPosition"/>
			<dependency name="EventRectangle"/>
			<dependency name="EventSettings"/>
			<dependency name="EventSpawnDuel"/>
			<dependency name="EventSpawnDuel"/>
			<dependency name="EventSpawnTDM"/>
			<dependency name="EventSpawnTDM"/>
			<dependency name="EventStarted"/>
			<dependency name="EventTimer"/>
			<dependency name="EventType"/>
			<dependency name="EventVehicle"/>
			<dependency name="EventZone"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="SetTimer"/>
			<dependency name="WC_TextDrawShowForAll"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPosition"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<dependency name="tdEvent"/>
			<dependency name="textDrawSetString"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evczas" syntax="pc_cmd_evczas(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="Iterator@Event"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evdelete" syntax="pc_cmd_evdelete(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Event"/>
			<dependency name="Iterator@Event"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="Polaczenie"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evdelgod" syntax="pc_cmd_evdelgod(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evdisarm" syntax="pc_cmd_evdisarm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evduel" syntax="pc_cmd_evduel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EVENT_TYPE_1V1"/>
			<dependency name="EventDuelCount"/>
			<dependency name="EventDuelEnemy"/>
			<dependency name="EventDuelStarted"/>
			<dependency name="EventError"/>
			<dependency name="EventSpawnDuel"/>
			<dependency name="EventSpawnDuel"/>
			<dependency name="EventType"/>
			<dependency name="FALSE"/>
			<dependency name="FreezePlayer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="SetHealth"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_countdown"/>
			<dependency name="player_god"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="setPosition"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evduelpos" syntax="pc_cmd_evduelpos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="EventSpawnDuel"/>
			<dependency name="EventSpawnDuel"/>
			<dependency name="false"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evend" syntax="pc_cmd_evend(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckBet"/>
			<dependency name="CheckEvent"/>
			<dependency name="DestroyDynamicArea"/>
			<dependency name="EVENT_TYPE_NONE"/>
			<dependency name="EventError"/>
			<dependency name="EventLeader"/>
			<dependency name="EventPosition"/>
			<dependency name="EventRectangle"/>
			<dependency name="EventStarted"/>
			<dependency name="EventType"/>
			<dependency name="EventZone"/>
			<dependency name="FALSE"/>
			<dependency name="GangZoneDestroy"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicArea"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Event"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Iterator@Player"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="Polaczenie"/>
			<dependency name="SpecToggle"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="pSpectate"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="strval"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evfreeze" syntax="pc_cmd_evfreeze(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evgod" syntax="pc_cmd_evgod(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_god"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evhealth" syntax="pc_cmd_evhealth(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evinvisible" syntax="pc_cmd_evinvisible(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evkick50" syntax="pc_cmd_evkick50(playerid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CheckBet"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@Event"/>
			<dependency name="Iterator@Event"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_evnagroda" syntax="pc_cmd_evnagroda(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="giveMoney"/>
			<dependency name="math_random"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evpanel" syntax="pc_cmd_evpanel(playerid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="CheckEvent"/>
			<dependency name="DIALOG_EVENT_PANEL"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="EventError"/>
			<dependency name="eventPanelData"/>
			<dependency name="eventPanelData"/>
			<dependency name="event_cmd"/>
			<dependency name="event_description"/>
			<dependency name="event_id"/>
			<dependency name="format"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_eventData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_evpogoda" syntax="pc_cmd_evpogoda(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="Iterator@Event"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evsettings" syntax="pc_cmd_evsettings(playerid)">
			<attribute name="public"/>
			<stacksize value="19"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<dependency name="CheckEvent"/>
			<dependency name="DIALOG_EVENT_SETTINGS"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="EVENT_SETTING_VEHICLE"/>
			<dependency name="EventError"/>
			<dependency name="EventName"/>
			<dependency name="EventSettings"/>
			<dependency name="EventType"/>
			<dependency name="EventVehicle"/>
			<dependency name="GetEventType"/>
			<dependency name="GetEventType"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="catstr"/>
			<dependency name="eventSettingData"/>
			<dependency name="eventSettingData"/>
			<dependency name="format"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_evspawn" syntax="pc_cmd_evspawn(playerid)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="EventLeader"/>
			<dependency name="EventStarted"/>
			<dependency name="EventVehicle"/>
			<dependency name="FALSE"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="acc_LinkVehicleToInterior"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="pEventVehicle"/>
			<dependency name="sendError"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_evspec" syntax="pc_cmd_evspec(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="EventLeader"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="SpecToggle"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_evtdmspawn" syntax="pc_cmd_evtdmspawn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="EventSpawnTDM"/>
			<dependency name="EventSpawnTDM"/>
			<dependency name="false"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evtph" syntax="pc_cmd_evtph(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="44"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="WC_SetPlayerPos"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evtpt" syntax="pc_cmd_evtpt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="WC_SetPlayerPos"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evtype" syntax="pc_cmd_evtype(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="32"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EVENT_TYPE_10HP"/>
			<dependency name="EVENT_TYPE_1V1"/>
			<dependency name="EVENT_TYPE_DM"/>
			<dependency name="EVENT_TYPE_NODM"/>
			<dependency name="EVENT_TYPE_TDM"/>
			<dependency name="EventError"/>
			<dependency name="EventInterior"/>
			<dependency name="EventSpawnDuel"/>
			<dependency name="EventSpawnTDM"/>
			<dependency name="EventSpawnTDM"/>
			<dependency name="EventType"/>
			<dependency name="GetEventType"/>
			<dependency name="GetEventType"/>
			<dependency name="Iterator@Event"/>
			<dependency name="SetHealth"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="Teleport"/>
			<dependency name="VW_EVENT"/>
			<dependency name="WC_SetPlayerTeam"/>
			<dependency name="WEAPON_CAMERA"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evunfreeze" syntax="pc_cmd_evunfreeze(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evweapon" syntax="pc_cmd_evweapon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="103"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Polaczenie"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="giveWeapon"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_evzone" syntax="pc_cmd_evzone(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CheckEvent"/>
			<dependency name="EventError"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="pEventZone"/>
			<dependency name="pEventZonePos"/>
			<dependency name="pEventZonePos"/>
			<dependency name="showGameDraw"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_exit" syntax="pc_cmd_exit(playerid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="CheckBet"/>
			<dependency name="CheckDuel"/>
			<dependency name="ChowanySzukajacy"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicRaceCP"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="EventStarted"/>
			<dependency name="ExitGlitchArena"/>
			<dependency name="ExitPlayerArena"/>
			<dependency name="ExitPraca"/>
			<dependency name="FALSE"/>
			<dependency name="GAME_BTR"/>
			<dependency name="GAME_CH"/>
			<dependency name="GAME_RC"/>
			<dependency name="GAME_SM"/>
			<dependency name="GameStarted"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="IsValidDynamicRaceCP"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Event"/>
			<dependency name="Iter_Single@Game"/>
			<dependency name="Iter_Single@Sparing"/>
			<dependency name="Iterator@Event"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Game"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="RaceMapIcon"/>
			<dependency name="RaceVehicle"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="ShowNameTagForAll"/>
			<dependency name="Truck_Stop"/>
			<dependency name="UpdateGameDraw"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="gameCMD"/>
			<dependency name="gameCMD"/>
			<dependency name="gameName"/>
			<dependency name="gameName"/>
			<dependency name="msg"/>
			<dependency name="pArena"/>
			<dependency name="pDuel"/>
			<dependency name="pDuelEnemy"/>
			<dependency name="pGame"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGlitchArena"/>
			<dependency name="pJob"/>
			<dependency name="pTruck"/>
			<dependency name="sendError"/>
			<dependency name="sumoVehicle"/>
			<dependency name="tdInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_face" syntax="pc_cmd_face(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fake" syntax="pc_cmd_fake(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="34"/>
			<referrer name="OnDialogAdminDuty"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsValidNickName"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Permission"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="Iterator@Player"/>
			<dependency name="SetPlayerName"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getRankColor"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_adminLoad"/>
			<dependency name="player_fakeNick"/>
			<dependency name="player_isFake"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fall" syntax="pc_cmd_fall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fallback" syntax="pc_cmd_fallback(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_finger" syntax="pc_cmd_finger(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fishevent" syntax="pc_cmd_fishevent(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="fishEvent"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_flip" syntax="pc_cmd_flip(playerid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="EVENT_SETTING_FLIP"/>
			<dependency name="EventSettings"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="getPosition"/>
			<dependency name="sendError"/>
			<dependency name="setPosition"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_flo" syntax="pc_cmd_flo(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="WC_SpawnPlayer"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="giveWeapon"/>
			<dependency name="msg"/>
			<dependency name="pWeapons"/>
			<dependency name="pWeapons"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_respawn"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_fotel" syntax="pc_cmd_fotel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fucku" syntax="pc_cmd_fucku(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_getin" syntax="pc_cmd_getin(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_getuid" syntax="pc_cmd_getuid(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="36"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dbconn"/>
			<dependency name="msg"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="syntaxError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gg" syntax="pc_cmd_gg(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_GG"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_glitch" syntax="pc_cmd_glitch(playerid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CheckPlayerGame"/>
			<dependency name="SavePlayerPosition"/>
			<dependency name="Teleport"/>
			<dependency name="VW_ARENA"/>
			<dependency name="acc_ResetPlayerWeapons"/>
			<dependency name="false"/>
			<dependency name="giveWeapon"/>
			<dependency name="pGlitch"/>
			<dependency name="pGlitch"/>
			<dependency name="pGlitchArena"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_god" syntax="pc_cmd_god(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="26"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="isNumeric"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_god"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="strval"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gornictwo" syntax="pc_cmd_gornictwo(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<dependency name="DIALOG_GORNICTWO"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="MineBag"/>
			<dependency name="MinePickaxe"/>
			<dependency name="OreDay"/>
			<dependency name="catstr"/>
			<dependency name="mineData"/>
			<dependency name="mineData"/>
			<dependency name="mine_name"/>
			<dependency name="oreEvent"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_gryps" syntax="pc_cmd_gryps(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_headbutt" syntax="pc_cmd_headbutt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_help" syntax="pc_cmd_help(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="DIALOG_HELP"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Single@Permission"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@Premium"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_hide" syntax="pc_cmd_hide(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_hike" syntax="pc_cmd_hike(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_hud" syntax="pc_cmd_hud(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="OnDialogHud"/>
			<dependency name="DIALOG_HUD"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="hudOptions"/>
			<dependency name="hudOptions"/>
			<dependency name="pHud"/>
			<dependency name="pHud"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_idzdo" syntax="pc_cmd_idzdo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="166"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Polaczenie"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="msg"/>
			<dependency name="pAccountSettings"/>
			<dependency name="pc_cmd_tpaccept"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="player_teleportRequest"/>
			<dependency name="player_teleportTimer"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_inbedleft" syntax="pc_cmd_inbedleft(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_inbedright" syntax="pc_cmd_inbedright(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_interiory" syntax="pc_cmd_interiory(playerid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_INTERIORY"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="int_interior"/>
			<dependency name="int_name"/>
			<dependency name="interiorDataList"/>
			<dependency name="interiorDataList"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_invisible" syntax="pc_cmd_invisible(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="pUlepszenia"/>
			<dependency name="ulepszenieError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_ip" syntax="pc_cmd_ip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_ipaddress"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jail" syntax="pc_cmd_jail(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="99"/>
			<dependency name="BlockAdminTroll"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="JailPlayer"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="playerData"/>
			<dependency name="player_jailtime"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jebac" syntax="pc_cmd_jebac(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jedz" syntax="pc_cmd_jedz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jem" syntax="pc_cmd_jem(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jetpack" syntax="pc_cmd_jetpack(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="rankError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_jj" syntax="pc_cmd_jj(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="msgAll"/>
			<dependency name="pAFK"/>
			<dependency name="pAFKHealth"/>
			<dependency name="pAFKHealth"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_kamizelka" syntax="pc_cmd_kamizelka(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="WC_GetPlayerArmour"/>
			<dependency name="WC_SetPlayerArmour"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="pUlepszenia"/>
			<dependency name="sendError"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_kick" syntax="pc_cmd_kick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="57"/>
			<dependency name="BlockAdminTroll"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="KickPlayer"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_kill" syntax="pc_cmd_kill(playerid)">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_klepnij" syntax="pc_cmd_klepnij(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_kolory" syntax="pc_cmd_kolory(playerid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_KOLORY"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="KoloryGraczy"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_konto" syntax="pc_cmd_konto(playerid)">
			<attribute name="public"/>
			<stacksize value="34"/>
			<referrer name="OnDialogSettings"/>
			<dependency name="AccountDataSettings"/>
			<dependency name="AccountDataSettings"/>
			<dependency name="DIALOG_SETTINGS"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="getChatType"/>
			<dependency name="getChatType"/>
			<dependency name="getSpawnName"/>
			<dependency name="pAccountSettings"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_chatID"/>
			<dependency name="player_nickname"/>
			<dependency name="player_spawnData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_krzeslo" syntax="pc_cmd_krzeslo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_krzeslokomp" syntax="pc_cmd_krzeslokomp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_krzeslorozm1" syntax="pc_cmd_krzeslorozm1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_krzeslorozm2" syntax="pc_cmd_krzeslorozm2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_krzeslouderz" syntax="pc_cmd_krzeslouderz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_krzeslowypij" syntax="pc_cmd_krzeslowypij(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_krzeslozegarek" syntax="pc_cmd_krzeslozegarek(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_krzycz" syntax="pc_cmd_krzycz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_kurczaktp" syntax="pc_cmd_kurczaktp(playerid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="KurczakEnabled"/>
			<dependency name="KurczakPositionType"/>
			<dependency name="KurczakPositions"/>
			<dependency name="KurczakPositions"/>
			<dependency name="Teleport"/>
			<dependency name="chicken_spawn"/>
			<dependency name="false"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_lakier" syntax="pc_cmd_lakier(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="ChangeVehicleColor"/>
			<dependency name="DIALOG_LAKIER_COLOR_A"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="VehicleColoursTableRGBA"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="pVeh"/>
			<dependency name="pVehColor"/>
			<dependency name="pVehColor"/>
			<dependency name="pVehID"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lay" syntax="pc_cmd_lay(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lean" syntax="pc_cmd_lean(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lez" syntax="pc_cmd_lez(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lightcig" syntax="pc_cmd_lightcig(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_local" syntax="pc_cmd_local(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="263"/>
			<dependency name="SendLocalMessage"/>
			<dependency name="format"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_look" syntax="pc_cmd_look(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lookout" syntax="pc_cmd_lookout(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_low" syntax="pc_cmd_low(playerid)">
			<attribute name="public"/>
			<stacksize value="166"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CA_IsPlayerNearWater"/>
			<dependency name="CountPlayerBaits"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsPlayerSwimming"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="fishBaitData"/>
			<dependency name="fishBaitData"/>
			<dependency name="fish_bait_name"/>
			<dependency name="format"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishBait"/>
			<dependency name="pFishBaitUsed"/>
			<dependency name="pFishRode"/>
			<dependency name="pFishZylka"/>
			<dependency name="pFishing"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_saveData"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_lowbodypush" syntax="pc_cmd_lowbodypush(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lowisko" syntax="pc_cmd_lowisko(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="OnFishDialog"/>
			<dependency name="EnterTeleport"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_machaj" syntax="pc_cmd_machaj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_me" syntax="pc_cmd_me(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="140"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iterator@Player"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_medyk" syntax="pc_cmd_medyk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_mini" syntax="pc_cmd_mini(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="JoinPlayerArena"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_mute" syntax="pc_cmd_mute(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="59"/>
			<dependency name="BlockAdminTroll"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="MutePlayer"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="playerData"/>
			<dependency name="player_mutetime"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_myjrece" syntax="pc_cmd_myjrece(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_naj" syntax="pc_cmd_naj(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="giveMoney"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_nalej" syntax="pc_cmd_nalej(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_napad" syntax="pc_cmd_napad(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_napraw" syntax="pc_cmd_napraw(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="WC_OnPlayerKeyStateChange"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="EVENT_SETTING_REPAIR"/>
			<dependency name="EventSettings"/>
			<dependency name="EventStarted"/>
			<dependency name="FALSE"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Event"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="acc_RepairVehicle"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="sendError"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_naprawia" syntax="pc_cmd_naprawia(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_naprawil" syntax="pc_cmd_naprawil(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_nara" syntax="pc_cmd_nara(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_no" syntax="pc_cmd_no(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_noc" syntax="pc_cmd_noc(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="pc_cmd_time"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_nowosci" syntax="pc_cmd_nowosci(playerid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_nrg" syntax="pc_cmd_nrg(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="pc_cmd_v"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_obiekty" syntax="pc_cmd_obiekty(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetPVarInt"/>
			<dependency name="Streamer_DestroyAllVisibleItems"/>
			<dependency name="Streamer_ToggleIdleUpdate"/>
			<dependency name="Streamer_ToggleItemUpdate"/>
			<dependency name="msg"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_offban" syntax="pc_cmd_offban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="181"/>
			<dependency name="CheckPlayerOnline"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_TQueryInline"/>
			<dependency name="UnixTime"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_index"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="gettime"/>
			<dependency name="msgAll"/>
			<dependency name="mysql_pquery"/>
			<dependency name="mysql_query"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="strx"/>
			<dependency name="syntaxError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_oh" syntax="pc_cmd_oh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_onede" syntax="pc_cmd_onede(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="JoinPlayerArena"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_opieraj" syntax="pc_cmd_opieraj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_oreevent" syntax="pc_cmd_oreevent(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="oreEvent"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_osiagniecia" syntax="pc_cmd_osiagniecia(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<dependency name="ClearDialogListitems"/>
			<dependency name="DIALOG_ACHIEVEMENTS"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_ownrank" syntax="pc_cmd_ownrank(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogOwnRank"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="DIALOG_OWNRANK_NAME"/>
			<dependency name="DIALOG_OWNRANK_PANEL"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="PremiumError"/>
			<dependency name="format"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRank"/>
			<dependency name="pOwnRankColor"/>
			<dependency name="pOwnRankHave"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_papa" syntax="pc_cmd_papa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_patrz" syntax="pc_cmd_patrz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pbuy" syntax="pc_cmd_pbuy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="DIALOG_GIELDA_BUY"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="EOS"/>
			<dependency name="GetEngineName"/>
			<dependency name="GetEngineName"/>
			<dependency name="IsPlayerInGielda"/>
			<dependency name="SetPVarInt"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="catstr"/>
			<dependency name="gieldaSellOwned"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehDist"/>
			<dependency name="pVehEngine"/>
			<dependency name="pVehFuelAmount"/>
			<dependency name="pVehModel"/>
			<dependency name="pVehOwner"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehOwnerName"/>
			<dependency name="pVehSellCost"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pedofil" syntax="pc_cmd_pedofil(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="24"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="WEAPON_DILDO"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="giveWeapon"/>
			<dependency name="msgAll"/>
			<dependency name="pedofilReward"/>
			<dependency name="pedofilSelected"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="random"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strdot"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pij" syntax="pc_cmd_pij(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pijak" syntax="pc_cmd_pijak(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pkeys" syntax="pc_cmd_pkeys(playerid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_PRIVCAR_MANAGE"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="ac_OnDialogResponse"/>
			<dependency name="pVeh"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehID"/>
			<dependency name="pVehManage"/>
			<dependency name="pVehOwner"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_plantuj" syntax="pc_cmd_plantuj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pm" syntax="pc_cmd_pm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="268"/>
			<referrer name="pc_cmd_re"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="LOG_CHAT"/>
			<dependency name="Log"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Polaczenie"/>
			<dependency name="containsIP"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_checkPM"/>
			<dependency name="player_lastPM"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pmanage" syntax="pc_cmd_pmanage(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="RunPrivCarManage"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehSell"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_polchodz" syntax="pc_cmd_polchodz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_polodejdz" syntax="pc_cmd_polodejdz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_polstop" syntax="pc_cmd_polstop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pompa" syntax="pc_cmd_pompa(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="JoinPlayerArena"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_pp" syntax="pc_cmd_pp(playerid)">
			<attribute name="public"/>
			<stacksize value="35"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="OnDialogGielda"/>
			<dependency name="DIALOG_PRIVCAR_NEWBIE"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="GetEngineColor"/>
			<dependency name="GetEngineName"/>
			<dependency name="GetEngineName"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="MySQL_PQueryInline"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dbconn"/>
			<dependency name="format"/>
			<dependency name="pUlepszenia"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehFetch"/>
			<dependency name="pVehFetch"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_pth" syntax="pc_cmd_pth(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="CreatePrivCar"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="RunPrivCarList"/>
			<dependency name="SetVehiclePosition"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="false"/>
			<dependency name="getPosition"/>
			<dependency name="pVeh"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehSell"/>
			<dependency name="pVehSpawned"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="task_await"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ptp" syntax="pc_cmd_ptp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCars"/>
			<dependency name="CreatePrivCar"/>
			<dependency name="RunPrivCarList"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="false"/>
			<dependency name="pVeh"/>
			<dependency name="pVehCount"/>
			<dependency name="pVehHave"/>
			<dependency name="pVehSell"/>
			<dependency name="pVehSpawned"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_push" syntax="pc_cmd_push(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_quest" syntax="pc_cmd_quest(playerid)">
			<attribute name="public"/>
			<stacksize value="139"/>
			<referrer name="OnDialogQuest"/>
			<dependency name="ACH_QUEST"/>
			<dependency name="DIALOG_QUEST"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="GetQuestName"/>
			<dependency name="GetQuestName"/>
			<dependency name="achievementData"/>
			<dependency name="achievementData"/>
			<dependency name="achievement_required"/>
			<dependency name="daily_required"/>
			<dependency name="format"/>
			<dependency name="pAchievementDone"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementLevel"/>
			<dependency name="pAchievementStatus"/>
			<dependency name="pAchievementStatus"/>
			<dependency name="pDailyDone"/>
			<dependency name="pDailyMoney"/>
			<dependency name="pDailyQuest"/>
			<dependency name="pDailyStatus"/>
			<dependency name="questListData"/>
			<dependency name="questListData"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_raczkuj" syntax="pc_cmd_raczkuj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_radio" syntax="pc_cmd_radio(playerid)">
			<attribute name="public"/>
			<stacksize value="165"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="PlayAudioStreamForPlayer"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="cellmax"/>
			<dependency name="format"/>
			<dependency name="radioData"/>
			<dependency name="radioData"/>
			<dependency name="radio_name"/>
			<dependency name="radio_url"/>
			<dependency name="s"/>
			<dependency name="strcat"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_ramiona" syntax="pc_cmd_ramiona(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ranny" syntax="pc_cmd_ranny(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rap" syntax="pc_cmd_rap(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_raport" syntax="pc_cmd_raport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="103"/>
			<dependency name="CheckPlayerRaported"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Polaczenie"/>
			<dependency name="RaportCount"/>
			<dependency name="format"/>
			<dependency name="getLocalDate"/>
			<dependency name="msg"/>
			<dependency name="msgAdmins"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="raportData"/>
			<dependency name="raportData"/>
			<dependency name="raport_active"/>
			<dependency name="raport_date"/>
			<dependency name="raport_reason"/>
			<dependency name="raport_senderid"/>
			<dependency name="raport_targetid"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_raporty" syntax="pc_cmd_raporty(playerid)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="OnDialogRaport"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_RAPORTY"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="RaportCount"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dialogBox"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="player_raportData"/>
			<dependency name="rankError"/>
			<dependency name="raportData"/>
			<dependency name="raportData"/>
			<dependency name="raport_active"/>
			<dependency name="raport_reason"/>
			<dependency name="raport_senderid"/>
			<dependency name="raport_targetid"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_ratunku" syntax="pc_cmd_ratunku(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rc" syntax="pc_cmd_rc(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_RC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_rccreator" syntax="pc_cmd_rccreator(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogRaceCreator"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="DIALOG_RACE_CREATOR"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="VehicleNames"/>
			<dependency name="catstr"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="pRaceCreatorCPs"/>
			<dependency name="pRaceCreatorModel"/>
			<dependency name="pRaceCreatorName"/>
			<dependency name="pRaceCreatorName"/>
			<dependency name="pRaceCreatorSpawn"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_re" syntax="pc_cmd_re(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Polaczenie"/>
			<dependency name="format"/>
			<dependency name="pc_cmd_pm"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_lastPM"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rece" syntax="pc_cmd_rece(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_regulamin" syntax="pc_cmd_regulamin(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="ShowRegulamin"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_rekordy" syntax="pc_cmd_rekordy(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="recordAmount"/>
			<dependency name="recordNames"/>
			<dependency name="recordNames"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_robman" syntax="pc_cmd_robman(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rofl" syntax="pc_cmd_rofl(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rollfall" syntax="pc_cmd_rollfall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rozgladaj" syntax="pc_cmd_rozgladaj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_run" syntax="pc_cmd_run(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rybki" syntax="pc_cmd_rybki(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<dependency name="DIALOG_FISH_PANEL"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="FishDay"/>
			<dependency name="catstr"/>
			<dependency name="fishData"/>
			<dependency name="fishData"/>
			<dependency name="fishEvent"/>
			<dependency name="fish_name"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_rzygaj" syntax="pc_cmd_rzygaj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_schowaj" syntax="pc_cmd_schowaj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_scratch" syntax="pc_cmd_scratch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_serverstats" syntax="pc_cmd_serverstats(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CountServerPrivCars"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Single@Gangs"/>
			<dependency name="bans"/>
			<dependency name="catstr"/>
			<dependency name="connects"/>
			<dependency name="kicks"/>
			<dependency name="messages"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_setrank" syntax="pc_cmd_setrank(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="44"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="BlockAdminTroll"/>
			<dependency name="DIALOG_ADMIN_PASSWORD"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Permission"/>
			<dependency name="Iterator@Permission"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_admin"/>
			<dependency name="player_adminLevel"/>
			<dependency name="player_adminLoad"/>
			<dependency name="player_adminPass"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="strcat"/>
			<dependency name="strmatch"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_setvip" syntax="pc_cmd_setvip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="64"/>
			<dependency name="ConvertTimeFormat"/>
			<dependency name="Iterator@Player"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="givePremium"/>
			<dependency name="msg"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strmatch"/>
			<dependency name="strval"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_shout" syntax="pc_cmd_shout(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_shouting" syntax="pc_cmd_shouting(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_siad" syntax="pc_cmd_siad(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_siadaj" syntax="pc_cmd_siadaj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_siema" syntax="pc_cmd_siema(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_sikaj" syntax="pc_cmd_sikaj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sk" syntax="pc_cmd_sk(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_SK"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_skin" syntax="pc_cmd_skin(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="16"/>
			<referrer name="pc_cmd_skin"/>
			<dependency name="AddModelMenuItem"/>
			<dependency name="E_MODEL_SELECTION_INFO"/>
			<dependency name="E_MODEL_SELECTION_MODELID"/>
			<dependency name="E_MODEL_SELECTION_RESPONSE"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="ShowAsyncModelSelectionMenu"/>
			<dependency name="format"/>
			<dependency name="list_new"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_skin"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strx"/>
			<dependency name="task_await_arr"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sm" syntax="pc_cmd_sm(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_SM"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_smiech" syntax="pc_cmd_smiech(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_smoke" syntax="pc_cmd_smoke(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sniper" syntax="pc_cmd_sniper(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="JoinPlayerArena"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_spadam" syntax="pc_cmd_spadam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_spar" syntax="pc_cmd_spar(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CheckPlayerGame"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Sparing"/>
			<dependency name="Iterator@Sparing"/>
			<dependency name="msg"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGangSparAccepted"/>
			<dependency name="pGangSparInitiator"/>
			<dependency name="pGangSparLimit"/>
			<dependency name="pGangSparMembers"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_sparaccept" syntax="pc_cmd_sparaccept(playerid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Iterator@GangMember"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_tag"/>
			<dependency name="msg"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="pGangSparAccepted"/>
			<dependency name="pGangSparCountDown"/>
			<dependency name="pGangSparCountDown"/>
			<dependency name="pGangSparInitiator"/>
			<dependency name="pGangSparMembers"/>
			<dependency name="pGangSparOdliczanie"/>
			<dependency name="pGangSparOdliczanie"/>
			<dependency name="pGangSparRanked"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="pGangSparTimer"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_sparspec" syntax="pc_cmd_sparspec(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CheckPlayerGame"/>
			<dependency name="ShowSparingPanel"/>
			<dependency name="pGang"/>
			<dependency name="pGangSpar"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_spec" syntax="pc_cmd_spec(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="OnDialogRaport"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerSpawned"/>
			<dependency name="Polaczenie"/>
			<dependency name="SpecToggle"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_logged"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_specoff" syntax="pc_cmd_specoff(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SpecToggle"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="false"/>
			<dependency name="msg"/>
			<dependency name="pSpectate"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_spij" syntax="pc_cmd_spij(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sprayuj" syntax="pc_cmd_sprayuj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_stalypos" syntax="pc_cmd_stalypos(playerid)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pStalyInterior"/>
			<dependency name="pStalyPos"/>
			<dependency name="pStalyPos"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_spawnData"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_stance" syntax="pc_cmd_stance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_start" syntax="pc_cmd_start(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_stats" syntax="pc_cmd_stats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="RunPlayerStats"/>
			<dependency name="sscanf"/>
			<dependency name="task_await"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_style" syntax="pc_cmd_style(playerid)">
			<attribute name="public"/>
			<stacksize value="165"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="FIGHT_STYLE_BOXING"/>
			<dependency name="FIGHT_STYLE_KNEEHEAD"/>
			<dependency name="FIGHT_STYLE_KUNGFU"/>
			<dependency name="FIGHT_STYLE_NORMAL"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="SetPlayerFightingStyle"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pUlepszenia"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_fightstyle"/>
			<dependency name="ulepszenieError"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_swat" syntax="pc_cmd_swat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_taichi" syntax="pc_cmd_taichi(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_tancz" syntax="pc_cmd_tancz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SPECIAL_ACTION_DANCE1"/>
			<dependency name="SPECIAL_ACTION_DANCE2"/>
			<dependency name="SPECIAL_ACTION_DANCE3"/>
			<dependency name="SPECIAL_ACTION_DANCE4"/>
			<dependency name="WC_SetPlayerSpecialAction"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_tapcig" syntax="pc_cmd_tapcig(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_taryfikator" syntax="pc_cmd_taryfikator(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_taxi" syntax="pc_cmd_taxi(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_td" syntax="pc_cmd_td(playerid)">
			<attribute name="public"/>
			<stacksize value="165"/>
			<referrer name="pc_cmd_td"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="SetPlayerDraw"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pDrawVisible"/>
			<dependency name="pc_cmd_hud"/>
			<dependency name="s"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_team" syntax="pc_cmd_team(playerid)">
			<attribute name="public"/>
			<stacksize value="38"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_GANG"/>
			<dependency name="DIALOG_GANG_NEWBIE"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="SPARING_RANK_CHAMPION"/>
			<dependency name="checkRankPermission"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_budget"/>
			<dependency name="gang_color"/>
			<dependency name="gang_level"/>
			<dependency name="gang_name"/>
			<dependency name="gang_ownerid"/>
			<dependency name="gang_place"/>
			<dependency name="gang_respect"/>
			<dependency name="gang_respect_needed"/>
			<dependency name="gang_tag"/>
			<dependency name="getRankingName"/>
			<dependency name="getRankingName"/>
			<dependency name="getRankingPoints"/>
			<dependency name="pGang"/>
			<dependency name="pGangSparRank"/>
			<dependency name="pGangSparRankedScore"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_teles" syntax="pc_cmd_teles(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogTeleport"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_TELEPORT_CATEGORY"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_th" syntax="pc_cmd_th(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="Polaczenie"/>
			<dependency name="Teleport"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="false"/>
			<dependency name="getPosition"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_time" syntax="pc_cmd_time(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="pc_cmd_dzien"/>
			<referrer name="pc_cmd_noc"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_tkolor" syntax="pc_cmd_tkolor(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="pGang"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_top" syntax="pc_cmd_top(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<dependency name="DIALOG_RANKING"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_topusc" syntax="pc_cmd_topusc(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="LeaveGang"/>
			<dependency name="gangData"/>
			<dependency name="gang_ownerid"/>
			<dependency name="pGang"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_tpaccept" syntax="pc_cmd_tpaccept(playerid)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="pc_cmd_idzdo"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Polaczenie"/>
			<dependency name="Teleport"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="math_random_float"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_teleportRequest"/>
			<dependency name="player_teleportTimer"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_tpadd" syntax="pc_cmd_tpadd(playerid)">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="OnDialogTeleportCreator"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_TELEPORT_CREATOR"/>
			<dependency name="EOS"/>
			<dependency name="GetTeleportType"/>
			<dependency name="GetTeleportType"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iterator@Teleports"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dialogBox"/>
			<dependency name="format"/>
			<dependency name="pTeleportCreatorCMD"/>
			<dependency name="pTeleportCreatorCMD"/>
			<dependency name="pTeleportCreatorName"/>
			<dependency name="pTeleportCreatorName"/>
			<dependency name="pTeleportCreatorPos"/>
			<dependency name="pTeleportCreatorPos"/>
			<dependency name="pTeleportCreatorSpawn"/>
			<dependency name="pTeleportCreatorType"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_tplist" syntax="pc_cmd_tplist(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogTeleportManage"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_TELEPORT_LIST"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="rankError"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_tpxyz" syntax="pc_cmd_tpxyz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="WC_SetPlayerPos"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="rankError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_truck" syntax="pc_cmd_truck(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<dependency name="DIALOG_STYLE_TABLIST"/>
			<dependency name="DIALOG_TRUCK_NEWBIE"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="pTruckDist"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="towar_name"/>
			<dependency name="towaryData"/>
			<dependency name="towaryData"/>
			<dependency name="truckDay"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_trup" syntax="pc_cmd_trup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_tspawn" syntax="pc_cmd_tspawn(playerid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<dependency name="CheckGangBase"/>
			<dependency name="Teleport"/>
			<dependency name="base_spawn"/>
			<dependency name="dialogBox"/>
			<dependency name="false"/>
			<dependency name="gangBasesData"/>
			<dependency name="gangBasesData"/>
			<dependency name="pGang"/>
			<dependency name="sendError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_tt" syntax="pc_cmd_tt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="NieMozeTeraz"/>
			<dependency name="Polaczenie"/>
			<dependency name="Teleport"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="false"/>
			<dependency name="getPosition"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ttp" syntax="pc_cmd_ttp(playerid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="CA_FindZ_For2DCoord"/>
			<dependency name="Teleport"/>
			<dependency name="false"/>
			<dependency name="gangData"/>
			<dependency name="gang_battleZone"/>
			<dependency name="pGang"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePoint"/>
			<dependency name="pGangZonePosition"/>
			<dependency name="pGangZonePosition"/>
			<dependency name="randomPositionArea"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_tune" syntax="pc_cmd_tune(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="TuneVehicle"/>
			<dependency name="WC_GetPlayerState"/>
			<dependency name="sendError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_tutorial" syntax="pc_cmd_tutorial(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ShowTutorial"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_tzaproszenia" syntax="pc_cmd_tzaproszenia(playerid)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<referrer name="OnDialogGangs"/>
			<dependency name="DIALOG_GANG_INVITE_LIST"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="gangData"/>
			<dependency name="gangData"/>
			<dependency name="gang_color"/>
			<dependency name="gang_name"/>
			<dependency name="gang_place"/>
			<dependency name="gang_tag"/>
			<dependency name="pGang"/>
			<dependency name="pGangInvites"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_ulecz" syntax="pc_cmd_ulecz(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_SetPlayerHealth"/>
			<dependency name="getMoney"/>
			<dependency name="giveMoney"/>
			<dependency name="msg"/>
			<dependency name="pUlepszenia"/>
			<dependency name="sendError"/>
			<dependency name="valueError"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_ulepszenia" syntax="pc_cmd_ulepszenia(playerid)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogUlepszenia"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_ULEPSZENIA"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_levelPoints"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_unjail" syntax="pc_cmd_unjail(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="25"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="LoadPlayerPosition"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_jailtime"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unmute" syntax="pc_cmd_unmute(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="25"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_mutetime"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unwarn" syntax="pc_cmd_unwarn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="26"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Polaczenie"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="dbconn"/>
			<dependency name="dbstr"/>
			<dependency name="format"/>
			<dependency name="getRankName"/>
			<dependency name="getRankName"/>
			<dependency name="msg"/>
			<dependency name="mysql_pquery"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_accountID"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="player_warns"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_usiadz" syntax="pc_cmd_usiadz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_v" syntax="pc_cmd_v(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="48"/>
			<referrer name="pc_cmd_nrg"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="DIALOG_POJAZDY"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DeniedVehicle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetVehicleNameByID"/>
			<dependency name="IsBlockCommand"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="WC_CreateVehicle"/>
			<dependency name="WC_DestroyVehicle"/>
			<dependency name="WC_GetPlayerVirtualWorld"/>
			<dependency name="acc_LinkVehicleToInterior"/>
			<dependency name="acc_PutPlayerInVehicle"/>
			<dependency name="acc_SetVehicleToRespawn"/>
			<dependency name="false"/>
			<dependency name="getPosition"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_createdVehicle"/>
			<dependency name="player_nickname"/>
			<dependency name="printf"/>
			<dependency name="sendError"/>
			<dependency name="showDialog"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_vpozostalo" syntax="pc_cmd_vpozostalo(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="ConvertTime"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="PremiumError"/>
			<dependency name="msg"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_premiumTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_vsay" syntax="pc_cmd_vsay(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="137"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Premium"/>
			<dependency name="PremiumError"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wal" syntax="pc_cmd_wal(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_walizka" syntax="pc_cmd_walizka(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="165"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Dialog_ShowCallback"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="I@F"/>
			<dependency name="I@K"/>
			<dependency name="I@L"/>
			<dependency name="I@T"/>
			<dependency name="Inline_UI_"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="WC_TextDrawHideForAll"/>
			<dependency name="acc_CreateDynamicPickup"/>
			<dependency name="acc_DestroyDynamicPickup"/>
			<dependency name="catstr"/>
			<dependency name="cellmax"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="getRankName"/>
			<dependency name="msgAll"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_admin"/>
			<dependency name="player_nickname"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<dependency name="tdWalizka"/>
			<dependency name="textDrawSetString"/>
			<dependency name="walizkaOwner"/>
			<dependency name="walizkaPickup"/>
			<dependency name="operator~(I@T:)"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_walk" syntax="pc_cmd_walk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_warn" syntax="pc_cmd_warn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="97"/>
			<dependency name="BlockAdminTroll"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Polaczenie"/>
			<dependency name="WarnPlayer"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="rankError"/>
			<dependency name="sendError"/>
			<dependency name="sscanf"/>
			<dependency name="strlen"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wave" syntax="pc_cmd_wave(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_weather" syntax="pc_cmd_weather(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wg" syntax="pc_cmd_wg(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_WG"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_wgc" syntax="pc_cmd_wgc(playerid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="DIALOG_WARGAME_CREATOR"/>
			<dependency name="EOS"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="catstr"/>
			<dependency name="checkAdminLevel"/>
			<dependency name="format"/>
			<dependency name="pWarGameName"/>
			<dependency name="pWarGameName"/>
			<dependency name="pWarGamePosition"/>
			<dependency name="pWarGameWeapons"/>
			<dependency name="rankError"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<dependency name="strx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_wniebo" syntax="pc_cmd_wniebo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wolnybiznes" syntax="pc_cmd_wolnybiznes(playerid)">
			<attribute name="public"/>
			<stacksize value="39"/>
			<dependency name="CountFreeBusiness"/>
			<dependency name="GetBusinessType"/>
			<dependency name="GetBusinessType"/>
			<dependency name="Iter_Random_Internal"/>
			<dependency name="Iter_Single@Business"/>
			<dependency name="Iterator@Business"/>
			<dependency name="businessData"/>
			<dependency name="businessData"/>
			<dependency name="business_name"/>
			<dependency name="business_ownerid"/>
			<dependency name="business_type"/>
			<dependency name="dialogBox"/>
			<dependency name="msg"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_wp" syntax="pc_cmd_wp(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_WP"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_wtf" syntax="pc_cmd_wtf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wyjmijbutelke" syntax="pc_cmd_wyjmijbutelke(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wymiotuj" syntax="pc_cmd_wymiotuj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wypij" syntax="pc_cmd_wypij(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wytrysk" syntax="pc_cmd_wytrysk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_yes" syntax="pc_cmd_yes(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_yo" syntax="pc_cmd_yo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="syntaxError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_zolwik" syntax="pc_cmd_zolwik(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="LoopingAnim"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_zp" syntax="pc_cmd_zp(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddPlayerGame"/>
			<dependency name="GAME_ZP"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:pc_cmd_zw" syntax="pc_cmd_zw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="CheckPlayerAFK"/>
			<dependency name="WC_GetPlayerArmour"/>
			<dependency name="WC_GetPlayerHealth"/>
			<dependency name="WC_TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="msgAll"/>
			<dependency name="pAFK"/>
			<dependency name="pAFKHealth"/>
			<dependency name="pAFKHealth"/>
			<dependency name="pAFKTime"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="player_nickname"/>
			<dependency name="strx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_flags_acmd" syntax="pc_flags_acmd()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_addvehicle" syntax="pc_flags_addvehicle()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_ann" syntax="pc_flags_ann()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_apanel" syntax="pc_flags_apanel()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_ban" syntax="pc_flags_ban()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_banlist" syntax="pc_flags_banlist()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_bcreator" syntax="pc_flags_bcreator()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_bomba" syntax="pc_flags_bomba()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_checkban" syntax="pc_flags_checkban()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_cls" syntax="pc_flags_cls()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_csound" syntax="pc_flags_csound()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_dajmoney" syntax="pc_flags_dajmoney()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_evcreate" syntax="pc_flags_evcreate()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_getuid" syntax="pc_flags_getuid()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_god" syntax="pc_flags_god()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_interiory" syntax="pc_flags_interiory()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_ip" syntax="pc_flags_ip()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_jail" syntax="pc_flags_jail()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_jetpack" syntax="pc_flags_jetpack()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_kick" syntax="pc_flags_kick()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_mute" syntax="pc_flags_mute()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_offban" syntax="pc_flags_offban()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_pedofil" syntax="pc_flags_pedofil()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_raporty" syntax="pc_flags_raporty()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_rccreator" syntax="pc_flags_rccreator()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_setrank" syntax="pc_flags_setrank()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_setvip" syntax="pc_flags_setvip()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_spec" syntax="pc_flags_spec()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_th" syntax="pc_flags_th()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_tpadd" syntax="pc_flags_tpadd()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_tplist" syntax="pc_flags_tplist()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_tpxyz" syntax="pc_flags_tpxyz()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_tt" syntax="pc_flags_tt()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_unjail" syntax="pc_flags_unjail()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_unmute" syntax="pc_flags_unmute()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_unwarn" syntax="pc_flags_unwarn()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_walizka" syntax="pc_flags_walizka()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_warn" syntax="pc_flags_warn()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:pc_flags_wgc" syntax="pc_flags_wgc()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_SetFlags"/>
		</member>
		<member name="M:percent" syntax="percent(r)">
			<stacksize value="3"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="CollectFigure"/>
			<referrer name="giveMoney"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="r">
			</param>
		</member>
		<member name="M:percent_float" syntax="percent_float(r)">
			<stacksize value="3"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<dependency name="operator&lt;=(_:,Float:)"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="r">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:playerTextDrawSetString" syntax="playerTextDrawSetString(playerid, draw, text[], ...)">
			<stacksize value="1039"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="achievement"/>
			<referrer name="UpdateDuelBox"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="Slots_Start"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Fortune_Start"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="_@yHOnPlayerClickTextDraw@0d"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="UpdateGameStatus"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="SecondTimer"/>
			<referrer name="giveMoney"/>
			<referrer name="resetMoney"/>
			<referrer name="setMoney"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="draw">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:pp_on_error" syntax="pp_on_error(source[], message[], level, &amp;retval)">
			<stacksize value="1"/>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="level">
				<paraminfo>error_level </paraminfo>
			</param>
			<param name="retval">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:pr_ip_209" syntax="pr_ip_209(playerid, bs)">
			<attribute name="public"/>
			<stacksize value="23"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="BS_IgnoreBits"/>
			<dependency name="BS_ReadUnoccupiedSync"/>
			<dependency name="PR_UnoccupiedSync"/>
			<dependency name="PR_roll"/>
			<param name="playerid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:pr_ip_211" syntax="pr_ip_211(playerid, bs)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="GetPlayerVehicleSeat"/>
			<param name="playerid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:pr_ip_WC_AIM_SYNC" syntax="pr_ip_WC_AIM_SYNC(playerid, bs)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="BS_IgnoreBits"/>
			<dependency name="BS_ReadAimSync"/>
			<dependency name="BS_SetWriteOffset"/>
			<dependency name="BS_WriteAimSync"/>
			<dependency name="PR_AimSync"/>
			<dependency name="PR_aimZ"/>
			<dependency name="PR_camFrontVec"/>
			<dependency name="PR_weaponId"/>
			<dependency name="WEAPON_CAMERA"/>
			<dependency name="WEAPON_HEATSEEKER"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="s_LastSyncData"/>
			<param name="playerid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:pr_ip_WC_PASSENGER_SYNC" syntax="pr_ip_WC_PASSENGER_SYNC(playerid, bs)">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="BS_IgnoreBits"/>
			<dependency name="BS_ReadPassengerSync"/>
			<dependency name="BS_SetWriteOffset"/>
			<dependency name="BS_WritePassengerSync"/>
			<dependency name="PR_PassengerSync"/>
			<dependency name="PR_playerArmour"/>
			<dependency name="PR_playerHealth"/>
			<dependency name="s_FakeArmour"/>
			<dependency name="s_FakeHealth"/>
			<param name="playerid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:pr_ip_WC_PLAYER_SYNC" syntax="pr_ip_WC_PLAYER_SYNC(playerid, bs)">
			<attribute name="public"/>
			<stacksize value="30"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="BS_IgnoreBits"/>
			<dependency name="BS_ReadOnFootSync"/>
			<dependency name="BS_SetWriteOffset"/>
			<dependency name="BS_WriteOnFootSync"/>
			<dependency name="IsBulletWeapon"/>
			<dependency name="KEY_ACTION"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="KEY_HANDBRAKE"/>
			<dependency name="PR_OnFootSync"/>
			<dependency name="PR_animationId"/>
			<dependency name="PR_armour"/>
			<dependency name="PR_health"/>
			<dependency name="PR_keys"/>
			<dependency name="PR_quaternion"/>
			<dependency name="PR_weaponId"/>
			<dependency name="WEAPON_BOMB"/>
			<dependency name="WEAPON_FIREEXTINGUISHER"/>
			<dependency name="WEAPON_FLAMETHROWER"/>
			<dependency name="WEAPON_GRENADE"/>
			<dependency name="WEAPON_KNIFE"/>
			<dependency name="WEAPON_SPRAYCAN"/>
			<dependency name="s_DisableSyncBugs"/>
			<dependency name="s_FakeArmour"/>
			<dependency name="s_FakeHealth"/>
			<dependency name="s_FakeQuat"/>
			<dependency name="s_KnifeSync"/>
			<dependency name="s_LastSyncData"/>
			<dependency name="s_LastSyncData"/>
			<dependency name="s_SyncDataFrozen"/>
			<param name="playerid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:pr_ip_WC_VEHICLE_SYNC" syntax="pr_ip_WC_VEHICLE_SYNC(playerid, bs)">
			<attribute name="public"/>
			<stacksize value="29"/>
			<dependency name="BS_IgnoreBits"/>
			<dependency name="BS_ReadInCarSync"/>
			<dependency name="BS_SetWriteOffset"/>
			<dependency name="BS_WriteInCarSync"/>
			<dependency name="PR_InCarSync"/>
			<dependency name="PR_armour"/>
			<dependency name="PR_playerHealth"/>
			<dependency name="s_FakeArmour"/>
			<dependency name="s_FakeHealth"/>
			<param name="playerid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:pr_ir_103" syntax="pr_ir_103(playerid, bs)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="BS_ReadValue"/>
			<dependency name="PR_INT32"/>
			<dependency name="PR_UINT8"/>
			<param name="playerid">
			</param>
			<param name="bs">
				<paraminfo>BitStream </paraminfo>
			</param>
		</member>
		<member name="M:pr_rip_209" syntax="pr_rip_209()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PR_INCOMING_PACKET"/>
			<dependency name="PR_RegHandler"/>
		</member>
		<member name="M:pr_rip_211" syntax="pr_rip_211()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PR_INCOMING_PACKET"/>
			<dependency name="PR_RegHandler"/>
		</member>
		<member name="M:pr_rip_WC_AIM_SYNC" syntax="pr_rip_WC_AIM_SYNC()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PR_INCOMING_PACKET"/>
			<dependency name="PR_RegHandler"/>
			<dependency name="WC_AIM_SYNC"/>
		</member>
		<member name="M:pr_rip_WC_PASSENGER_SYNC" syntax="pr_rip_WC_PASSENGER_SYNC()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PR_INCOMING_PACKET"/>
			<dependency name="PR_RegHandler"/>
			<dependency name="WC_PASSENGER_SYNC"/>
		</member>
		<member name="M:pr_rip_WC_PLAYER_SYNC" syntax="pr_rip_WC_PLAYER_SYNC()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PR_INCOMING_PACKET"/>
			<dependency name="PR_RegHandler"/>
			<dependency name="WC_PLAYER_SYNC"/>
		</member>
		<member name="M:pr_rip_WC_VEHICLE_SYNC" syntax="pr_rip_WC_VEHICLE_SYNC()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PR_INCOMING_PACKET"/>
			<dependency name="PR_RegHandler"/>
			<dependency name="WC_VEHICLE_SYNC"/>
		</member>
		<member name="M:pr_rir_103" syntax="pr_rir_103()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PR_INCOMING_RPC"/>
			<dependency name="PR_RegHandler"/>
		</member>
		<member name="M:print" syntax="print(string[])">
			<attribute name="native"/>
			<referrer name="T3_Init"/>
			<referrer name="AMX_DumpHeader"/>
			<referrer name="PrintArg"/>
			<referrer name="Logger_Log"/>
			<referrer name="Logger_Dbg"/>
			<referrer name="_PrintBufferAmxBacktrace"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="CodeScanRunFast"/>
			<referrer name="OnRuntimeError"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SortArrayUsingComparator_Entry"/>
			<referrer name="SortArrayUsingCompInto_Entry"/>
			<referrer name="Init_MySQL"/>
			<referrer name="PP_main"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The string to print
			</param>
			<library>a_samp</library>  <summary>Prints a string to the server console (not in-game chat) and logs (server_log.txt).</summary>    <seealso name="printf" /> 
		</member>
		<member name="M:printf" syntax="printf(format[], ...)">
			<attribute name="native"/>
			<referrer name="T3_GetPointInPolygon"/>
			<referrer name="T3_Init"/>
			<referrer name="T3_Exit"/>
			<referrer name="Debug_Print0"/>
			<referrer name="AMX_DumpHeader"/>
			<referrer name="PrintAmxNameTable"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="OnRuntimeError"/>
			<referrer name="Inline_Debug"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerGiveDamage"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnUnoccupiedVehicleUpdate"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="OnIncomingPacket"/>
			<referrer name="ac_Timer"/>
			<referrer name="ac_FloodDetect"/>
			<referrer name="ac_KickWithCode"/>
			<referrer name="ScriptInit"/>
			<referrer name="UpdateHealthBar"/>
			<referrer name="DamageFeedUpdate"/>
			<referrer name="DamageFeedUpdateText"/>
			<referrer name="Init_Records"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="ExitPlayerArena"/>
			<referrer name="RandomVaultCode"/>
			<referrer name="Init_NoDM"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="Init_Truck"/>
			<referrer name="Init_Teleports"/>
			<referrer name="AddTeleport"/>
			<referrer name="Init_Stations"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<referrer name="Init_Jobs"/>
			<referrer name="Init_Business"/>
			<referrer name="Init_Fishing"/>
			<referrer name="Init_Mining"/>
			<referrer name="StartRC"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="Init_Disks"/>
			<referrer name="Init_Figure"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="PP_main"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format string
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
				Indefinite number of arguments of any tag
			</param>
			<library>a_samp</library>  <summary>Outputs a formatted string on the console (the server window, not the in-game chat).</summary>      <seealso name="print" />  <seealso name="format" />  <remarks>The format string or its output should not exceed 1024 characters.  Anything beyond that  length can lead to a server to crash.</remarks>  <remarks>This function doesn't support <a href="#strpack">packed</a> strings.</remarks>  <remarks>  <b>Format Specifiers:</b><br />  <ul>  <li><b><c>%i</c></b> - integer (whole number)</li>  <li><b><c>%d</c></b> - integer (whole number).</li>  <li><b><c>%s</c></b> - string</li>  <li><b><c>%f</c></b> - floating-point number (Float: tag)</li>  <li><b><c>%c</c></b> - ASCII character</li>  <li><b><c>%x</c></b> - hexadecimal number</li>  <li><b><c>%b</c></b> - binary number</li>  <li><b><c>%%</c></b> - literal <b><c>%</c></b></li>  <li><b><c>%q</c></b> - escape a text for SQLite. (Added in <b>0.3.7 R2</b>)</li>  </ul>  </remarks>  <remarks>The values for the placeholders follow in the exact same order as parameters in the call.  For example, <b><c>"I am %i years old"</c></b> - the <b><c>%i</c></b> will be replaced with an Integer  variable, which is the person's age.</remarks>  <remarks>You may optionally put a number between the <b><c>%</c></b> and the letter of the placeholder  code.  This number indicates the field width; if the size of the parameter to print at the position  of the placeholder is smaller than the field width, the field is expanded with spaces.  To cut the  number of decimal places beeing shown of a float, you can add <b><c>.&lt;max number&gt;</c></b> between  the <b><c>%</c></b> and the <b><c>f</c></b>. (example: <b><c>%.2f</c></b>)</remarks> 
		</member>
		<member name="M:projectVonU" syntax="projectVonU(vx, vy, vz, ux, uy, uz, &amp;x, &amp;y, &amp;z)">
			<stacksize value="10"/>
			<referrer name="PHY_CoreTimer"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="vectordotp"/>
			<param name="vx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ux">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="uy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="uz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:random" syntax="random(max)">
			<attribute name="native"/>
			<referrer name="T3_RandomFloat"/>
			<referrer name="T3_RandomInteger"/>
			<referrer name="T3_GetRandomHit"/>
			<referrer name="T3_GetPointInCircle"/>
			<referrer name="T3_GetPointOnSphere"/>
			<referrer name="T3_GetPointOnRectangle"/>
			<referrer name="T3_GetPointOnCube"/>
			<referrer name="RandomFloat"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ftemporary_"/>
			<referrer name="TryPercentage"/>
			<referrer name="TryPermille"/>
			<referrer name="TryPPM"/>
			<referrer name="Iter_Random_Impl"/>
			<referrer name="Iter_RandomFree_Impl"/>
			<referrer name="Iter_Func@Random"/>
			<referrer name="ShuffleDeepArray_Entry"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="StartQuiz"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="RandomVaultCode"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="Init_Truck"/>
			<referrer name="CreateKurczak"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="SparingCountDown"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="Init_Jobs"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="Grabarz_RandomPosition"/>
			<referrer name="Grabarz_PochowajTrumna"/>
			<referrer name="Grabarz_TravelDone"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="Taxi_Start"/>
			<referrer name="Taxi_Random"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="Drwal_Spawn"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="Slots_Start"/>
			<referrer name="Slots_Timer"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="GunShop_RandomGun"/>
			<referrer name="Init_Fishing"/>
			<referrer name="OnPlayerFishing"/>
			<referrer name="Init_Mining"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="StartChowany"/>
			<referrer name="CreateVehicleZP"/>
			<referrer name="StartDA"/>
			<referrer name="RespawnDA"/>
			<referrer name="StartBTR"/>
			<referrer name="CreateRoyaleWeapons"/>
			<referrer name="StartGG"/>
			<referrer name="RespawnGG"/>
			<referrer name="StartWP"/>
			<referrer name="StartSK"/>
			<referrer name="CollectFigure"/>
			<referrer name="OnPasswordHash"/>
			<referrer name="pc_cmd_kill"/>
			<referrer name="randomPositionArea"/>
			<referrer name="percent"/>
			<referrer name="percent_float"/>
			<referrer name="mix_string"/>
			<referrer name="GetRandomCoord"/>
			<referrer name="WC_OnPlayerConnect"/>
			<referrer name="WC_OnPlayerRequestClass"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="SecondTimer"/>
			<referrer name="MinuteTimer"/>
			<param name="max">
			</param>
		</member>
		<member name="M:randomPositionArea" syntax="randomPositionArea(minx, miny, maxx, maxy, &amp;fDestX, &amp;fDestY)">
			<stacksize value="7"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="Mysliwy_Random"/>
			<referrer name="Grzybiarz_Random"/>
			<referrer name="CreateRoyaleWeapons"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="float"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<dependency name="random"/>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fDestX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fDestY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:rankError" syntax="rankError(playerid, level)">
			<stacksize value="7"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="pc_cmd_interiory"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_specoff"/>
			<referrer name="pc_cmd_raporty"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="pc_cmd_tplist"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_cls"/>
			<referrer name="pc_cmd_jetpack"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_tpxyz"/>
			<referrer name="pc_cmd_csound"/>
			<referrer name="pc_cmd_acmd"/>
			<dependency name="dialogBox"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
		</member>
		<member name="M:rawMemcpy" syntax="rawMemcpy(dest, src, numbytes)">
			<stacksize value="7"/>
			<dependency name="RawMemCpy_"/>
			<dependency name="cellmax"/>
			<param name="dest">
			</param>
			<param name="src">
			</param>
			<param name="numbytes">
			</param>
		</member>
		<member name="M:rawMemset" syntax="rawMemset(address, value, size)">
			<stacksize value="6"/>
			<dependency name="RawMemSet"/>
			<param name="address">
			</param>
			<param name="value">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:realloc" syntax="realloc(slot, size, clear)">
			<tagname value="Alloc"/>
			<stacksize value="8"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="Malloc_Free"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="memcpy"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Slot to resize.
			</param>
			<param name="size">
				New size of the memory.
			</param>
			<param name="clear">
				<paraminfo>bool </paraminfo>
				Should we erase the memory first?
			</param>
			      <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:ref" syntax="ref(...)">
			<stacksize value="2"/>
			<referrer name="AsmRaiseError"/>
			<referrer name="AsmInit"/>
			<referrer name="CodeScanAddMatcher"/>
			<referrer name="AddressofResolve"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
			<library>amx_assembly amx_memory</library> <summary> Returns the address of a variable/array. </summary>
		</member>
		<member name="M:refabs" syntax="refabs(...)">
			<stacksize value="5"/>
			<referrer name="GetAmxAddress"/>
			<dependency name="RelToAbs"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
			<library>amx_assembly phys_memory</library> <summary> Returns the absolute address of a variable/array. </summary>
		</member>
		<member name="M:resetMoney" syntax="resetMoney(playerid)">
			<stacksize value="40"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_money"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<dependency name="tdMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:saveAll" syntax="saveAll()">
			<stacksize value="5"/>
			<referrer name="MinuteTimer"/>
			<dependency name="Iterator@Gangs"/>
			<dependency name="Iterator@Player"/>
			<dependency name="SaveGang"/>
			<dependency name="SavePlayerStats"/>
		</member>
		<member name="M:sendError" syntax="sendError(playerid, text[], ...)">
			<stacksize value="1039"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_aduel"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="JoinPlayerArena"/>
			<referrer name="pc_cmd_glitch"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_specoff"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="pc_cmd_kurczaktp"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="pc_cmd_pmanage"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="pc_cmd_pkeys"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="pc_cmd_atakuj"/>
			<referrer name="pc_cmd_ttp"/>
			<referrer name="pc_cmd_tspawn"/>
			<referrer name="pc_cmd_spar"/>
			<referrer name="pc_cmd_sparaccept"/>
			<referrer name="pc_cmd_sparspec"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_tkolor"/>
			<referrer name="pc_cmd_topusc"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_fishevent"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0k"/>
			<referrer name="pc_cmd_oreevent"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="EventError"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_ev"/>
			<referrer name="pc_cmd_evspec"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evtdmspawn"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_evspawn"/>
			<referrer name="pc_cmd_betspec"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_stalypos"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_tpaccept"/>
			<referrer name="pc_cmd_time"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="pc_cmd_flo"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_napraw"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="pc_cmd_tune"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_csound"/>
			<referrer name="Polaczenie"/>
			<referrer name="pc_cmd_exit"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="catstr"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="msg"/>
			<dependency name="pAccountSettings"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:setMoney" syntax="setMoney(playerid, amount)">
			<stacksize value="40"/>
			<referrer name="OnPlayerLogged"/>
			<dependency name="playerData"/>
			<dependency name="playerData"/>
			<dependency name="playerTextDrawSetString"/>
			<dependency name="player_money"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<dependency name="tdMoney"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:setPlayerTextDrawColor" syntax="setPlayerTextDrawColor(draw, playerid, box, colour)">
			<stacksize value="6"/>
			<referrer name="changePlayerHudColor"/>
			<dependency name="WC_PlayerTextDrawBoxColor"/>
			<dependency name="WC_PlayerTextDrawColor"/>
			<param name="draw">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="box">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="colour">
			</param>
		</member>
		<member name="M:setPosition" syntax="setPosition(playerid, inVeh, x, y, z, a)">
			<stacksize value="8"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_flip"/>
			<referrer name="Teleport"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="WC_SetPlayerPos"/>
			<dependency name="acc_SetVehiclePos"/>
			<param name="playerid">
			</param>
			<param name="inVeh">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="a">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:setTextDrawColor" syntax="setTextDrawColor(draw, box, colour)">
			<stacksize value="5"/>
			<referrer name="changeHudColor"/>
			<dependency name="WC_TextDrawBoxColor"/>
			<dependency name="WC_TextDrawColor"/>
			<param name="draw">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="box">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="colour">
			</param>
		</member>
		<member name="M:setarg" syntax="setarg(arg, index, value)">
			<attribute name="native"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="Iter_Clear_InternalC"/>
			<referrer name="Callback_Get"/>
			<param name="arg">
			</param>
			<param name="index">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:setproperty" syntax="setproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="L@"/>
			<referrer name="T@"/>
			<referrer name="X@"/>
			<referrer name="y_rconfix_Load"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:showDialog" syntax="showDialog(playerid, dialogid, style, caption_string[], info_string[], button1[], button2[], perpage)">
			<stacksize value="2993"/>
			<referrer name="pc_cmd_rekordy"/>
			<referrer name="ulepszenieError"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="pc_cmd_ulepszenia"/>
			<referrer name="pc_cmd_osiagniecia"/>
			<referrer name="ShowAchievementList"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="OnDialogHud"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="pc_cmd_interiory"/>
			<referrer name="ShowBankPanel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="ShowVaultDialog"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="pc_cmd_raporty"/>
			<referrer name="RunRaportManage"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="pc_cmd_top"/>
			<referrer name="RunDriveExams"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="pc_cmd_anims"/>
			<referrer name="ShowTruckMenu"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0F"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="pc_cmd_truck"/>
			<referrer name="ShowTutorial"/>
			<referrer name="pc_cmd_teles"/>
			<referrer name="ShowTeleports"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="pc_cmd_tplist"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="ShowTeleportManage"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="ShowEngineSelect"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="GieldaSellPanel"/>
			<referrer name="ShowGieldaPanel"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="gangRankError"/>
			<referrer name="ShowGangTop"/>
			<referrer name="ShowGangList"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="SparingCountDown"/>
			<referrer name="CheckSparing"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="RunJobPanel"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="ExitPraca"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="pc_cmd_rybki"/>
			<referrer name="pc_cmd_fishevent"/>
			<referrer name="OnFishDialog"/>
			<referrer name="ShowFishUlepszenia"/>
			<referrer name="ShowFishBaits"/>
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="pc_cmd_oreevent"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="StopDA"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evpanel"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="CheckPlayerMuted"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="CollectDisk"/>
			<referrer name="CollectFigure"/>
			<referrer name="ShowLoginPanel"/>
			<referrer name="ShowQuestionPanel"/>
			<referrer name="ShowPinCodePanel"/>
			<referrer name="ShowRegisterPanel"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="ShowAdminLogin"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_autor"/>
			<referrer name="pc_cmd_kolory"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_taryfikator"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="OnDialogHelp"/>
			<referrer name="showPlayerCMD"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="pc_cmd_acmd"/>
			<referrer name="syntaxError"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="valueError"/>
			<referrer name="ShowRegulamin"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="ac_OnDialogResponse"/>
			<referrer name="SecondTimer"/>
			<referrer name="pc_cmd_nowosci"/>
			<dependency name="_NDP_ShowPlayerDialog_"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="style">
			</param>
			<param name="caption_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="info_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="perpage">
			</param>
		</member>
		<member name="M:showGameDraw" syntax="showGameDraw(playerid, string[], time)">
			<stacksize value="8"/>
			<referrer name="_@yHOnPlayerKeyStateChange@07"/>
			<referrer name="OnGlitchRecord"/>
			<referrer name="_@yHOnPlayerExitVehicle@0C"/>
			<referrer name="DriveExamTimer"/>
			<referrer name="_@yHOnPlayerDeath@0C"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0F"/>
			<referrer name="_@yHOnPlayerExitVehicle@0F"/>
			<referrer name="CheckTruckTimer"/>
			<referrer name="UpdateEditorAttachment"/>
			<referrer name="pc_cmd_brama"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0n"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="StartChowany"/>
			<referrer name="UpdateChowany"/>
			<referrer name="StopChowany"/>
			<referrer name="StartZP"/>
			<referrer name="UpdateZP"/>
			<referrer name="UpdateRC"/>
			<referrer name="_@yHOnPlayerEnterVehicle@0s"/>
			<referrer name="_@yHOnPlayerExitVehicle@0s"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="UpdateWP"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="UpdateSK"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="pc_cmd_evzone"/>
			<referrer name="EnableSpawnKill"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="SecondTimer"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="WC_PlayerTextDrawSetString"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="pGameDrawTimer"/>
			<dependency name="strx"/>
			<dependency name="tdGameDraw"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:showPlayerCMD" syntax="showPlayerCMD(playerid, optionid)">
			<stacksize value="139"/>
			<referrer name="OnDialogHelp"/>
			<dependency name="AddDialogListitem"/>
			<dependency name="DIALOG_HELP_CMDLIST"/>
			<dependency name="DIALOG_STYLE_TABLIST_HEADERS"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
			<param name="optionid">
			</param>
		</member>
		<member name="M:sscanf" syntax="sscanf(data[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ac_IpToInt"/>
			<referrer name="ac_LoadCfg"/>
			<referrer name="ac_LoadNOPCfg"/>
			<referrer name="GetIpAutonomousSystem"/>
			<referrer name="GetIpCountry"/>
			<referrer name="GetIpCity"/>
			<referrer name="GetIpProvince"/>
			<referrer name="GetIpUTC"/>
			<referrer name="isNumeric"/>
			<referrer name="Init_Records"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="OnBankDialog"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_smoke"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_run"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_walk"/>
			<referrer name="pc_cmd_look"/>
			<referrer name="pc_cmd_shout"/>
			<referrer name="pc_cmd_bj"/>
			<referrer name="pc_cmd_swat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_stance"/>
			<referrer name="pc_cmd_hike"/>
			<referrer name="pc_cmd_face"/>
			<referrer name="pc_cmd_tancz"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_gryps"/>
			<referrer name="pc_cmd_yo"/>
			<referrer name="pc_cmd_siad"/>
			<referrer name="pc_cmd_jem"/>
			<referrer name="pc_cmd_trup"/>
			<referrer name="pc_cmd_pijak"/>
			<referrer name="pc_cmd_rece"/>
			<referrer name="pc_cmd_spadam"/>
			<referrer name="pc_cmd_call"/>
			<referrer name="pc_cmd_pmanage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="FetchGang"/>
			<referrer name="Init_GangZones"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="CreateBusiness"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="StartRC"/>
			<referrer name="StartWG"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evtdmspawn"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="LoadPlayerStats"/>
			<referrer name="pc_cmd_stats"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_time"/>
			<referrer name="pc_cmd_weather"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_lakier"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_tpxyz"/>
			<referrer name="pc_cmd_csound"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_vehicle" syntax="sscanf_vehicle(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_weapon" syntax="sscanf_weapon(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strcat" syntax="strcat(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="Server_GetJITString"/>
			<referrer name="Script_GetCompilerString"/>
			<referrer name="Script_GetCompilerCodepage"/>
			<referrer name="ReturnStringArg"/>
			<referrer name="ValstrWithOrdinal"/>
			<referrer name="ftemporary_"/>
			<referrer name="ftemporary"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="Logger_Log"/>
			<referrer name="Logger_Dbg"/>
			<referrer name="Logger_Err"/>
			<referrer name="Logger_Fatal"/>
			<referrer name="DisasmGetInsnName"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanGetMatchName"/>
			<referrer name="Indirect_Tag"/>
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<referrer name="va_getstring"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="ac_LoadCfg"/>
			<referrer name="ac_LoadNOPCfg"/>
			<referrer name="NDP_ShowDialogPage"/>
			<referrer name="NDP_ProcessDialogResponse"/>
			<referrer name="CreateDesign"/>
			<referrer name="pc_cmd_ulepszenia"/>
			<referrer name="pc_cmd_osiagniecia"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="ShowBankPanel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="RunRaportManage"/>
			<referrer name="pc_cmd_top"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="pc_cmd_anims"/>
			<referrer name="pc_cmd_truck"/>
			<referrer name="ShowTutorial"/>
			<referrer name="ResetTeleportData"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowPrivCarObjects"/>
			<referrer name="ShowPlayerObjectMenu"/>
			<referrer name="ShowEngineSelect"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="ResetGangData"/>
			<referrer name="ShowGangTop"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="pc_cmd_bazy"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="ShowBaseObjectsMenu"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="StopSparing"/>
			<referrer name="ShowSparingPanel"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="RunJobPanel"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="pc_cmd_rybki"/>
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHResetPlayerData@0j"/>
			<referrer name="pc_cmd_gornictwo"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="ResetRaceCreatorData"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="pc_cmd_evsettings"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickPlayer"/>
			<referrer name="JailPlayer"/>
			<referrer name="MutePlayer"/>
			<referrer name="BanPlayer"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="ShowPinCodePanel"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="ShowBanManage"/>
			<referrer name="pc_cmd_apanel"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_autor"/>
			<referrer name="pc_cmd_taryfikator"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="OnDialogHelp"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="_catstr"/>
			<referrer name="toUpperCase"/>
			<referrer name="toLowerCase"/>
			<referrer name="mix_string"/>
			<referrer name="UpdatePlayerLabel"/>
			<referrer name="ShowRegulamin"/>
			<referrer name="ResetPlayerData"/>
			<referrer name="pc_cmd_nowosci"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="YVers_Callback"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="BoolStr"/>
			<referrer name="LevenshteinDistance"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="_@Hy"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="HTTPCallback"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="_SortDeepArray"/>
			<referrer name="IsIpProxy"/>
			<referrer name="OnGlitchRecord"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="strmatch"/>
			<referrer name="MinuteTimer"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strcopy" syntax="strcopy(variable[], data[], length)">
			<stacksize value="6"/>
			<referrer name="ConvertTimeFormat"/>
			<referrer name="getPodiumText"/>
			<referrer name="ac_OnPlayerText"/>
			<dependency name="EOS"/>
			<dependency name="strins"/>
			<param name="variable">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strdel" syntax="strdel(string[], start, end)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="ac_GetPlayerVersion"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="strreplace"/>
			<referrer name="_catstr"/>
			<referrer name="newMessage"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
		</member>
		<member name="M:strdot" syntax="strdot(number)">
			<stacksize value="40"/>
			<referrer name="addLevelScore"/>
			<referrer name="UpdateLevelBar"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="pc_cmd_ulepszenia"/>
			<referrer name="achievement"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="SetRandomQuest"/>
			<referrer name="CheckQuest"/>
			<referrer name="pc_cmd_quest"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="UpdateArenaDraw"/>
			<referrer name="ShowBankPanel"/>
			<referrer name="OnBankDialog"/>
			<referrer name="RandomVaultReward"/>
			<referrer name="Heist_Pickup"/>
			<referrer name="OnPlayerHeist"/>
			<referrer name="VaultHeistTimer"/>
			<referrer name="_@yHOnPlayerDeath@0@"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="RunDriveExams"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="Truck_Freeze"/>
			<referrer name="Truck_Rozladuj"/>
			<referrer name="CreateKurczak"/>
			<referrer name="_@yHOnPlayerShootDynObject@0H"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0J"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowPrivCarUlepszenia"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="AddVehicleToGielda"/>
			<referrer name="OnDialogGielda"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="UpdateGangBox"/>
			<referrer name="giveGangBudget"/>
			<referrer name="CheckGangAchievement"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="ZonesReward"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="UpdateBaseLabel"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnBaseObjectBuy"/>
			<referrer name="ShowBaseObjectShop"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="addGangScore"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="pc_cmd_team"/>
			<referrer name="pc_cmd_tzaproszenia"/>
			<referrer name="addJobScore"/>
			<referrer name="Magazynier_Pickup"/>
			<referrer name="MagazynPacked"/>
			<referrer name="ZrzutLoaded"/>
			<referrer name="_@yHOnPlayerEnterDynRaceCP@0V"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0W"/>
			<referrer name="_@yHOnPlayerShootDynObject@0X"/>
			<referrer name="Grzybiarz_Zbierz"/>
			<referrer name="UpdateJobDraw"/>
			<referrer name="OnDialogJob"/>
			<referrer name="UpdateBusinessLabel"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="ShowBusinessPanel"/>
			<referrer name="ShowBusinessManage"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="Fortune_Timer"/>
			<referrer name="ShowRoulettePanel"/>
			<referrer name="Roulette_Timer"/>
			<referrer name="ShowCasinoShop"/>
			<referrer name="_@yHOnDialogResponse@0d"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="EnterBusiness"/>
			<referrer name="AddBusinessMoney"/>
			<referrer name="RefreshInfoTD"/>
			<referrer name="OnFishDialog"/>
			<referrer name="ShowFishUlepszenia"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="ShowFishRodes"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0i"/>
			<referrer name="OnPlayerMining"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0m"/>
			<referrer name="StopChowany"/>
			<referrer name="StopDA"/>
			<referrer name="UpdateBTR"/>
			<referrer name="StopSM"/>
			<referrer name="_@yHOnPlayerDeath@0u"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0v"/>
			<referrer name="StopSK"/>
			<referrer name="StopWG"/>
			<referrer name="pc_cmd_evnagroda"/>
			<referrer name="ShowBetPanel"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="CheckBet"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="pc_cmd_konto"/>
			<referrer name="CollectFigure"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="OnPlayerRegistered"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="pc_cmd_autor"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="pc_cmd_serverstats"/>
			<referrer name="valueError"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="ac_OnPlayerRequestSpawn"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<referrer name="Vacex_Bonus"/>
			<referrer name="SecondTimer"/>
			<referrer name="giveMoney"/>
			<referrer name="resetMoney"/>
			<referrer name="setMoney"/>
			<dependency name="strdot"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<dependency name="valstr"/>
			<param name="number">
			</param>
		</member>
		<member name="M:strfind" syntax="strfind(string[], sub[], ignorecase, pos)">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="YVers_Callback"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="ChrFind"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="PawnRakNet_OnGameModeInit"/>
			<referrer name="PHY_OnPlayerConnect"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="getMentioned"/>
			<referrer name="strreplace"/>
			<referrer name="_catstr"/>
			<referrer name="newMessage"/>
			<referrer name="GetVehicleNameByID"/>
			<referrer name="foundString"/>
			<referrer name="SQLInjection"/>
			<referrer name="getLost"/>
			<referrer name="ac_OnPlayerText"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sub">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:strins" syntax="strins(string[], substr[], pos, maxlength)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="WriteToLog"/>
			<referrer name="strreplace"/>
			<referrer name="strdot"/>
			<referrer name="_catstr"/>
			<referrer name="newMessage"/>
			<referrer name="strcopy"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="substr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="T3_Init"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="StripNL"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="EndOfLine"/>
			<referrer name="Unpack"/>
			<referrer name="unpack"/>
			<referrer name="Base64Decode"/>
			<referrer name="LevenshteinDistance"/>
			<referrer name="ftemporary_"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="va_strlen"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="_Timer_S"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="NDP_CalculateListitemsPerPage"/>
			<referrer name="NDP_ProcessDialogResponse"/>
			<referrer name="WriteToLog"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="getMentioned"/>
			<referrer name="ShowVaultDialog"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="SendGlobalMessage"/>
			<referrer name="SendLocalMessage"/>
			<referrer name="pc_cmd_local"/>
			<referrer name="pc_cmd_tpadd"/>
			<referrer name="OnDialogTeleportCreator"/>
			<referrer name="OnDialogTeleportManage"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="pc_cmd_bcreator"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="pc_cmd_rccreator"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="pc_cmd_wgc"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="ShowLoginPanel"/>
			<referrer name="ShowQuestionPanel"/>
			<referrer name="ShowPinCodePanel"/>
			<referrer name="ShowRegisterPanel"/>
			<referrer name="ShowAdminLogin"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="strmatch"/>
			<referrer name="strreplace"/>
			<referrer name="strdot"/>
			<referrer name="foundString"/>
			<referrer name="IsValidGangBuffer"/>
			<referrer name="DeletePolish"/>
			<referrer name="toUpperCase"/>
			<referrer name="toLowerCase"/>
			<referrer name="mix_string"/>
			<referrer name="CompareEx"/>
			<referrer name="ShowMissionDraw"/>
			<referrer name="ac_OnPlayerText"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strmatch" syntax="strmatch(text[], compare[], truth)">
			<stacksize value="6"/>
			<referrer name="pc_cmd_ownrank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="OnDialogHeist"/>
			<referrer name="CheckPlayerTeleport"/>
			<referrer name="AllowEventCMD"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="OnDialogAccount"/>
			<referrer name="OnPasswordChecked"/>
			<referrer name="OnPlayerLogged"/>
			<referrer name="pc_cmd_aduty"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="ac_OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="compare">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="truth">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:strmid" syntax="strmid(dest[], source[], start, end, maxlength)">
			<attribute name="native"/>
			<referrer name="IPToInt"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="getMentioned"/>
			<referrer name="SendGlobalMessage"/>
			<referrer name="SendLocalMessage"/>
			<referrer name="getLost"/>
			<referrer name="ac_OnPlayerText"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strpack" syntax="strpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_GetS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="NDP_DialogInvoke"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strreplace" syntax="strreplace(string[], search[], replacement[], ignorecase, pos, limit, maxlength)">
			<stacksize value="12"/>
			<referrer name="getMentioned"/>
			<dependency name="ispacked"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="search">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="replacement">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="pos">
			</param>
			<param name="limit">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strunpack" syntax="strunpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="AMX_GetTagByValue"/>
			<referrer name="AMX_DumpHeader"/>
			<referrer name="K@"/>
			<referrer name="Unpack"/>
			<referrer name="unpack"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_GetS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="NDP_ProcessDialogResponse"/>
			<referrer name="SetWeaponName"/>
			<referrer name="WC_GetWeaponName"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="IPToInt"/>
			<referrer name="CreateZoneNumber"/>
			<referrer name="OnBankDialog"/>
			<referrer name="pc_cmd_evend"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evczas"/>
			<referrer name="pc_cmd_evpogoda"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="_@yHOnDialogResponse@0y"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_god"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="foundPlayer"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:swapchars" syntax="swapchars(c)">
			<attribute name="native"/>
			<referrer name="Cell_ReverseBits"/>
			<referrer name="Cell_ReverseNibbles"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<param name="c">
			</param>
		</member>
		<member name="M:syntaxError" syntax="syntaxError(playerid, string[])">
			<stacksize value="11"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="pc_cmd_vsay"/>
			<referrer name="pc_cmd_pedofil"/>
			<referrer name="pc_cmd_spec"/>
			<referrer name="pc_cmd_raport"/>
			<referrer name="pc_cmd_local"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_smoke"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_run"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_walk"/>
			<referrer name="pc_cmd_look"/>
			<referrer name="pc_cmd_shout"/>
			<referrer name="pc_cmd_bj"/>
			<referrer name="pc_cmd_swat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_stance"/>
			<referrer name="pc_cmd_hike"/>
			<referrer name="pc_cmd_face"/>
			<referrer name="pc_cmd_tancz"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_gryps"/>
			<referrer name="pc_cmd_yo"/>
			<referrer name="pc_cmd_siad"/>
			<referrer name="pc_cmd_jem"/>
			<referrer name="pc_cmd_trup"/>
			<referrer name="pc_cmd_pijak"/>
			<referrer name="pc_cmd_rece"/>
			<referrer name="pc_cmd_spadam"/>
			<referrer name="pc_cmd_call"/>
			<referrer name="pc_cmd_pmanage"/>
			<referrer name="pc_cmd_pbuy"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="pc_cmd_evtype"/>
			<referrer name="pc_cmd_evtdmspawn"/>
			<referrer name="pc_cmd_evduelpos"/>
			<referrer name="pc_cmd_evduel"/>
			<referrer name="pc_cmd_evweapon"/>
			<referrer name="pc_cmd_evfreeze"/>
			<referrer name="pc_cmd_evdisarm"/>
			<referrer name="pc_cmd_evunfreeze"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="pc_cmd_evdelete"/>
			<referrer name="pc_cmd_evgod"/>
			<referrer name="pc_cmd_evdelgod"/>
			<referrer name="pc_cmd_evinvisible"/>
			<referrer name="pc_cmd_evczas"/>
			<referrer name="pc_cmd_evpogoda"/>
			<referrer name="pc_cmd_evcolor"/>
			<referrer name="pc_cmd_evhealth"/>
			<referrer name="pc_cmd_evarmor"/>
			<referrer name="pc_cmd_evtph"/>
			<referrer name="pc_cmd_evtpt"/>
			<referrer name="pc_cmd_evcar"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_time"/>
			<referrer name="pc_cmd_weather"/>
			<referrer name="pc_cmd_jebac"/>
			<referrer name="pc_cmd_me"/>
			<referrer name="pc_cmd_do"/>
			<referrer name="pc_cmd_v"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_tt"/>
			<referrer name="pc_cmd_th"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_fake"/>
			<referrer name="pc_cmd_dajmoney"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="pc_cmd_setvip"/>
			<referrer name="pc_cmd_setrank"/>
			<referrer name="pc_cmd_tpxyz"/>
			<referrer name="pc_cmd_csound"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:task_await" syntax="task_await(task)">
			<stacksize value="4"/>
			<referrer name="OnDialogRaport"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0C"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ChangePrivCarModel"/>
			<referrer name="pc_cmd_pmanage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="pc_cmd_pth"/>
			<referrer name="pc_cmd_ptp"/>
			<referrer name="_@yHOnPlayerEnterDynamicCP@0M"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0O"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="pc_cmd_baza"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogSparing"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0S"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_stats"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="ac_OnPlayerClickPlayer"/>
			<dependency name="task_get_result"/>
			<dependency name="task_wait"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
		</member>
		<member name="M:task_await_arr" syntax="task_await_arr(task, result[], size)">
			<stacksize value="5"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnDialogPrivCarBuy"/>
			<referrer name="ShowBaseObjectList"/>
			<referrer name="OnDialogRaceCreator"/>
			<referrer name="pc_cmd_skin"/>
			<referrer name="ac_OnDialogResponse"/>
			<dependency name="task_get_result_arr"/>
			<dependency name="task_wait"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
			<param name="result">
				<paraminfo> {_,bool,Float,Variant,String,List,LinkedList,Map,Pool,Iter,Handle,Task,Expression} [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:task_await_var" syntax="task_await_var(task)">
			<tagname value="Variant"/>
			<stacksize value="3"/>
			<dependency name="task_get_result_var"/>
			<dependency name="task_wait"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
		</member>
		<member name="M:task_delete" syntax="task_delete(task)">
			<attribute name="native"/>
			<referrer name="ShowAsyncModelSelectionMenu"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
		</member>
		<member name="M:task_get_result" syntax="task_get_result(task, offset)">
			<attribute name="native"/>
			<referrer name="task_await"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:task_get_result_arr" syntax="task_get_result_arr(task, result[], size)">
			<attribute name="native"/>
			<referrer name="task_await_arr"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
			<param name="result">
				<paraminfo> {_,bool,Float,Variant,String,List,LinkedList,Map,Pool,Iter,Handle,Task,Expression} [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:task_get_result_var" syntax="task_get_result_var(task)">
			<tagname value="Variant"/>
			<attribute name="native"/>
			<referrer name="task_await_var"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
		</member>
		<member name="M:task_new" syntax="task_new()">
			<tagname value="Task"/>
			<attribute name="native"/>
			<referrer name="ShowAsyncModelSelectionMenu"/>
			<referrer name="RunRaportManage"/>
			<referrer name="RunDriveExams"/>
			<referrer name="RunPrivCarManage"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="GieldaSellPanel"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="RunBaseOptions"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="ShowMarketManage"/>
			<referrer name="RunSparingOptions"/>
			<referrer name="RunJobPanel"/>
			<referrer name="RunPlayerStats"/>
			<referrer name="ShowBanManage"/>
		</member>
		<member name="M:task_set_result_arr" syntax="task_set_result_arr(task, result[], size, tag_id)">
			<attribute name="native"/>
			<referrer name="ac_OnPlayerClickTextDraw"/>
			<referrer name="ac_OnPlayerClickPlayerTextDraw"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
			<param name="result">
				<paraminfo> {_,bool,Float,Variant,String,List,LinkedList,Map,Pool,Iter,Handle,Task,Expression} [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="tag_id">
				<paraminfo> {_,tag_uid} </paraminfo>
			</param>
		</member>
		<member name="M:task_valid" syntax="task_valid(task)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ShowAsyncModelSelectionMenu"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
		</member>
		<member name="M:task_wait" syntax="task_wait(task)">
			<tagname value="task_state"/>
			<attribute name="native"/>
			<referrer name="task_await"/>
			<referrer name="task_await_arr"/>
			<referrer name="task_await_var"/>
			<param name="task">
				<paraminfo>Task </paraminfo>
			</param>
		</member>
		<member name="M:textDrawSetString" syntax="textDrawSetString(draw, text[], ...)">
			<stacksize value="1039"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="giveGangBudget"/>
			<referrer name="GangWarTimer"/>
			<referrer name="CheckRankedMatch"/>
			<referrer name="AddPlayerGame"/>
			<referrer name="ZapisyGameTimer"/>
			<referrer name="pc_cmd_evcreate"/>
			<referrer name="EventStartTimer"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="SecondTimer"/>
			<dependency name="WC_TextDrawSetString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="va_format"/>
			<param name="draw">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:timediff" syntax="timediff(seconds, &amp;dd, &amp;hh, &amp;mm, &amp;ss)">
			<stacksize value="1"/>
			<referrer name="pc_cmd_banlist"/>
			<param name="seconds">
			</param>
			<param name="dd">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="hh">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="mm">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ss">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:toLowerCase" syntax="toLowerCase(string[])">
			<stacksize value="265"/>
			<referrer name="checkRecord"/>
			<referrer name="CompareEx"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="format"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<dependency name="toLowerCase"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:toUpperCase" syntax="toUpperCase(string[])">
			<stacksize value="265"/>
			<referrer name="StartGangWar"/>
			<referrer name="WC_OnPlayerDisconnect"/>
			<dependency name="format"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<dependency name="toUpperCase"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:togglePlayerTextDraw" syntax="togglePlayerTextDraw(draw, playerid, toggle)">
			<stacksize value="5"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="changePlayerHudColor"/>
			<referrer name="WC_OnPlayerDeath"/>
			<referrer name="WC_OnPlayerStateChange"/>
			<dependency name="WC_PlayerTextDrawHide"/>
			<dependency name="WC_PlayerTextDrawShow"/>
			<param name="draw">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:toggleTextDraw" syntax="toggleTextDraw(draw, playerid, toggle)">
			<stacksize value="5"/>
			<referrer name="SetPlayerDraw"/>
			<referrer name="changeHudColor"/>
			<dependency name="WC_TextDrawHideForAll"/>
			<dependency name="WC_TextDrawHideForPlayer"/>
			<dependency name="WC_TextDrawShowForAll"/>
			<dependency name="WC_TextDrawShowForPlayer"/>
			<param name="draw">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:tolower" syntax="tolower(c)">
			<attribute name="native"/>
			<referrer name="StrToLower"/>
			<referrer name="UnixTime"/>
			<referrer name="ac_OnPlayerText"/>
			<param name="c">
			</param>
		</member>
		<member name="M:toupper" syntax="toupper(c)">
			<attribute name="native"/>
			<referrer name="StrToUpper"/>
			<referrer name="StartQuiz"/>
			<param name="c">
			</param>
		</member>
		<member name="M:u@" syntax="u@(u[])">
			<stacksize value="1"/>
			<param name="u">
				<paraminfo> [1] </paraminfo>
			</param>
		</member>
		<member name="M:ulepszenieError" syntax="ulepszenieError(playerid, i)">
			<stacksize value="10"/>
			<referrer name="pc_cmd_invisible"/>
			<referrer name="pc_cmd_style"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="catstr"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="ulep_name"/>
			<dependency name="ulepszeniaData"/>
			<dependency name="ulepszeniaData"/>
			<param name="playerid">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:unpack" syntax="unpack(str[])">
			<stacksize value="149"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<dependency name="unpack"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:va_AddMenuItem" syntax="va_AddMenuItem(menuid, column, fmat[], ...)">
			<stacksize value="15"/>
			<dependency name="AddMenuItem"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="menuid">
				<paraminfo>Menu </paraminfo>
			</param>
			<param name="column">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_AddServerRule" syntax="va_AddServerRule(name[], fmat[], flags, ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="AddServerRule"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="flags">
				<paraminfo>E_SERVER_RULE_FLAGS </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_Create3DTextLabel" syntax="va_Create3DTextLabel(fmat[], colour, x, y, z, drawDistance, virtualWorld, testLOS, ...)">
			<tagname value="Text3D"/>
			<stacksize value="15"/>
			<dependency name="Create3DTextLabel"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="colour">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="virtualWorld">
			</param>
			<param name="testLOS">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_CreateMenu" syntax="va_CreateMenu(fmat[], columns, x, y, col1width, col2width, ...)">
			<tagname value="Menu"/>
			<stacksize value="15"/>
			<dependency name="CreateMenu"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="columns">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="col1width">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="col2width">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_CreatePlayer3DTextLabel" syntax="va_CreatePlayer3DTextLabel(playerid, fmat[], colour, x, y, z, drawDistance, parentPlayerid, parentVehicleid, testLOS, ...)">
			<tagname value="PlayerText3D"/>
			<stacksize value="15"/>
			<dependency name="CreatePlayer3DTextLabel"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="colour">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="parentPlayerid">
			</param>
			<param name="parentVehicleid">
			</param>
			<param name="testLOS">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_CreatePlayerTextDraw" syntax="va_CreatePlayerTextDraw(playerid, x, y, fmat[], ...)">
			<tagname value="PlayerText"/>
			<stacksize value="15"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_DBQuery" syntax="va_DBQuery(db, fmat[], ...)">
			<tagname value="DBResult"/>
			<stacksize value="15"/>
			<dependency name="YSI_DB_Query__"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="db">
				<paraminfo>DB </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_GameTextForAll" syntax="va_GameTextForAll(fmat[], time, style, ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="GameTextForAll"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_GameTextForPlayer" syntax="va_GameTextForPlayer(playerid, fmat[], time, style, ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_PlayerTextDrawSetString" syntax="va_PlayerTextDrawSetString(playerid, text, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendClientMessage" syntax="va_SendClientMessage(playerid, colour, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendClientMessageToAll" syntax="va_SendClientMessageToAll(colour, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendPlayerMessageToAll" syntax="va_SendPlayerMessageToAll(senderid, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SendPlayerMessageToAll"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="senderid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendPlayerMessageToPlayer" syntax="va_SendPlayerMessageToPlayer(playerid, senderid, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SendPlayerMessageToPlayer"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="senderid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendRconCommand" syntax="va_SendRconCommand(fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SendRconCommand"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetGameModeText" syntax="va_SetGameModeText(fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SetGameModeText"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetMenuColumnHeader" syntax="va_SetMenuColumnHeader(menuid, column, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SetMenuColumnHeader"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="menuid">
				<paraminfo>Menu </paraminfo>
			</param>
			<param name="column">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetObjectMaterialText" syntax="va_SetObjectMaterialText(objectid, fmat[], materialIndex, materialSize, fontFace[], fontSize, bold, fontColour, backgroundColour, textalignment, ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SetObjectMaterialText"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="objectid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialIndex">
			</param>
			<param name="materialSize">
			</param>
			<param name="fontFace">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fontSize">
			</param>
			<param name="bold">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="fontColour">
			</param>
			<param name="backgroundColour">
			</param>
			<param name="textalignment">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetPVarString" syntax="va_SetPVarString(playerid, svar[], fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SetPVarString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="svar">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetPlayerObjectMaterialText" syntax="va_SetPlayerObjectMaterialText(playerid, objectid, fmat[], materialIndex, materialSize, fontFace[], fontSize, bold, fontColour, backgroundColour, textalignment, ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SetPlayerObjectMaterialText"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialIndex">
			</param>
			<param name="materialSize">
			</param>
			<param name="fontFace">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fontSize">
			</param>
			<param name="bold">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="fontColour">
			</param>
			<param name="backgroundColour">
			</param>
			<param name="textalignment">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetSVarString" syntax="va_SetSVarString(svar[], fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SetSVarString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="svar">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SetServerRule" syntax="va_SetServerRule(name[], fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="SetServerRule"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_ShowPlayerDialog" syntax="va_ShowPlayerDialog(playerid, dialogid, style, title[], fmat[], button1[], button2[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="Dialog_ShowPlayerNative"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="style">
			</param>
			<param name="title">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_TextDrawCreate" syntax="va_TextDrawCreate(x, y, fmat[], ...)">
			<tagname value="Text"/>
			<stacksize value="15"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_TextDrawSetString" syntax="va_TextDrawSetString(text, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_Update3DTextLabelText" syntax="va_Update3DTextLabelText(textid, colour, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="textid">
				<paraminfo>Text3D </paraminfo>
			</param>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_UpdatePlayer3DTextLabelText" syntax="va_UpdatePlayer3DTextLabelText(playerid, textid, colour, fmat[], ...)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="UpdatePlayer3DTextLabelText"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="textid">
				<paraminfo>PlayerText3D </paraminfo>
			</param>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_format" syntax="va_format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="AddDialogListitem"/>
			<referrer name="Log"/>
			<referrer name="catstr"/>
			<referrer name="msg"/>
			<referrer name="msgAll"/>
			<referrer name="dialogBox"/>
			<referrer name="sendError"/>
			<referrer name="msgAdmins"/>
			<referrer name="textDrawSetString"/>
			<referrer name="playerTextDrawSetString"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_formatex" syntax="va_formatex(output[], size, fmat[], STATIC_ARGS)">
			<stacksize value="1"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_fprintf" syntax="va_fprintf(fhnd, fmat[], ...)">
			<stacksize value="15"/>
			<referrer name="DumpProfilingTime"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="cellbits"/>
			<dependency name="charbits"/>
			<dependency name="format"/>
			<dependency name="fwrite"/>
			<param name="fhnd">
				<paraminfo>File </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_getstring" syntax="va_getstring(dest[], arg, len)">
			<stacksize value="1"/>
			<referrer name="Callback_Get"/>
			<dependency name="strcat"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="arg">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:va_return" syntax="va_return(fmat[], ...)">
			<stacksize value="145"/>
			<dependency name="format"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
				String format.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				Parameters.
			</param>
			    <returns>  Formatted string.  </returns>  <remarks>  Just wraps <c>format</c> and returns a string instead.  Has extra code to  ensure that it works correctly on the old compiler.  </remarks> 
		</member>
		<member name="M:va_strlen" syntax="va_strlen(arg)">
			<stacksize value="1"/>
			<dependency name="strlen"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:valstr" syntax="valstr(dest[], value, pack)">
			<attribute name="native"/>
			<referrer name="ValstrWithOrdinal"/>
			<referrer name="strdot"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:valueError" syntax="valueError(playerid, amount)">
			<stacksize value="40"/>
			<referrer name="OnDialogUlepszenia"/>
			<referrer name="OnDialogQuest"/>
			<referrer name="_@yHOnDialogResponse@0C"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarUlepszenia"/>
			<referrer name="ShowAttachmentList"/>
			<referrer name="OnPrivCarAttachmentDialog"/>
			<referrer name="OnDialogPrivCars"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="ShowGangCreator"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="pc_cmd_ulecz"/>
			<referrer name="pc_cmd_kamizelka"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_napraw"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DIALOG_UNUSED"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="getMoney"/>
			<dependency name="s"/>
			<dependency name="showDialog"/>
			<dependency name="strdot"/>
			<dependency name="strdot"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:vectordotp" syntax="vectordotp(v1x, v1y, v1z, v2x, v2y, v2z)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="projectVonU"/>
			<referrer name="check_segment_intersection"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="v1x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v1y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v1z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="v2z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:y_inline_HTTPCallback" syntax="y_inline_HTTPCallback(cb, responseCode, data[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Indirect_Call"/>
			<dependency name="Indirect_Release_"/>
			<param name="cb">
				<paraminfo>F@_@is </paraminfo>
			</param>
			<param name="responseCode">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:y_rconfix_Load" syntax="y_rconfix_Load()">
			<stacksize value="7"/>
			<referrer name="ScriptInit_OnYSIInit"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_SendRconCommand__"/>
			<dependency name="YSI_gscOnClientCheckResponse"/>
			<dependency name="YSI_gscRconFixFS"/>
			<dependency name="fblockwrite"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="getproperty"/>
			<dependency name="io_write"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:y_rconfix_Unload" syntax="y_rconfix_Unload()">
			<stacksize value="3"/>
			<dependency name="YSI_SendRconCommand__"/>
		</member>
		<member name="M:y_utils_end" syntax="y_utils_end()">
			<stacksize value="1"/>
		</member>
		<member name="M:operator~(I@T:)" syntax="operator~(I@T:)(inlines[], size)">
			<stacksize value="1"/>
			<referrer name="Malloc_OnCodeInit"/>
			<referrer name="Init_Records"/>
			<referrer name="_@yHOnDialogResponse@04"/>
			<referrer name="pc_cmd_walizka"/>
			<referrer name="pc_cmd_bomba"/>
			<referrer name="_@yHOnPlayerPickUpDynPickup@05"/>
			<referrer name="pc_cmd_td"/>
			<referrer name="Init_AdminTop"/>
			<referrer name="pc_cmd_duel"/>
			<referrer name="OnDialogOwnRank"/>
			<referrer name="OnBankDialog"/>
			<referrer name="_@yHOnDialogResponse@0B"/>
			<referrer name="pc_cmd_radio"/>
			<referrer name="Init_Vehicles"/>
			<referrer name="pc_cmd_addvehicle"/>
			<referrer name="_@yHOnDialogResponse@0F"/>
			<referrer name="_@yHOnDialogResponse@0I"/>
			<referrer name="Init_Teleports"/>
			<referrer name="LoadPlayerPrivCars"/>
			<referrer name="CountServerPrivCars"/>
			<referrer name="OnDialogPrivCarManage"/>
			<referrer name="OnDialogPrivCarKeys"/>
			<referrer name="CreatePrivCar"/>
			<referrer name="pc_cmd_pp"/>
			<referrer name="RunPrivCarList"/>
			<referrer name="OnDialogGieldaBuy"/>
			<referrer name="OnDialogGangAchievements"/>
			<referrer name="Init_Gangs"/>
			<referrer name="Init_GangZones"/>
			<referrer name="ShowGangZones"/>
			<referrer name="ShowGangInformation"/>
			<referrer name="ShowPlayerGangMembers"/>
			<referrer name="Init_GangBases"/>
			<referrer name="_@yHOnDialogResponse@0O"/>
			<referrer name="_@yHOnDialogResponse@0P"/>
			<referrer name="OnDialogGangCreator"/>
			<referrer name="GangMemberEdit"/>
			<referrer name="OnDialogGangMember"/>
			<referrer name="OnDialogGangMarket"/>
			<referrer name="OnDialogGangs"/>
			<referrer name="OnDialogJob"/>
			<referrer name="pc_cmd_biznesy"/>
			<referrer name="_@yHOnDialogResponse@0b"/>
			<referrer name="OnBusinessResponse"/>
			<referrer name="GunShop_Panel"/>
			<referrer name="Init_Business"/>
			<referrer name="OnFishDialog"/>
			<referrer name="_@yHOnDialogResponse@0g"/>
			<referrer name="_@yHOnDialogResponse@0h"/>
			<referrer name="pc_cmd_low"/>
			<referrer name="_@yHOnDialogResponse@0l"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0m"/>
			<referrer name="_@yHOnDialogResponse@0o"/>
			<referrer name="_@yHOnPlayerKeyStateChange@0o"/>
			<referrer name="StartRC"/>
			<referrer name="StartWP"/>
			<referrer name="pc_cmd_evadd"/>
			<referrer name="_@yHOnDialogResponse@0z"/>
			<referrer name="_@yHOnDialogResponse@11"/>
			<referrer name="pc_cmd_bet"/>
			<referrer name="KickEx"/>
			<referrer name="CheckPlayerBanned"/>
			<referrer name="OnPlayerChangePassword"/>
			<referrer name="OnDialogSettings"/>
			<referrer name="SavePlayerStats"/>
			<referrer name="OnDialogAdminDuty"/>
			<referrer name="ShowAdminRanking"/>
			<referrer name="pc_cmd_banlist"/>
			<referrer name="ShowBanManage"/>
			<referrer name="OnDialogBanList"/>
			<referrer name="OnDialogAdminPanel"/>
			<referrer name="pc_cmd_idzdo"/>
			<referrer name="pc_cmd_bronie"/>
			<referrer name="pc_cmd_style"/>
			<referrer name="pc_cmd_ann"/>
			<referrer name="pc_cmd_offban"/>
			<referrer name="pc_cmd_checkban"/>
			<referrer name="pc_cmd_getuid"/>
			<referrer name="Init_Map"/>
			<dependency name="YSI_g_sInlineLinkedList"/>
			<dependency name="YSI_g_sJumpOffset"/>
			<param name="inlines">
				<paraminfo>I@T [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>

	</members>
</doc>
